[Header 1 [Str "\1060\1091\1085\1082\1090\1086\1088\1099",Space,Str "\1080",Space,Str "\1084\1086\1085\1072\1076\1099",Str ":",Space,Str "\1087\1088\1080\1084\1077\1088\1099"]
,Para [Str "\1042",Space,Str "\1101\1090\1086\1081",Space,Str "\1075\1083\1072\1074\1077",Space,Str "\1084\1099",Space,Str "\1079\1072\1082\1088\1077\1087\1080\1084",Space,Str "\1085\1072",Space,Str "\1087\1088\1080\1084\1077\1088\1072\1093",Space,Str "\1090\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1099",Space,Str "\1091\1079\1085\1072\1083\1080",Space,Str "\1086",Space,Str "\1084\1086\1085\1072\1076\1072\1093",Space,Str "\1080",Space,Str "\1092\1091\1085\1082\1090\1086\1088\1072\1093",Str ".",Space,Str "\1053\1072\1087\1086\1084\1085\1102",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1084\1086\1085\1072\1076",Space,Str "\1080",Space,Str "\1092\1091\1085\1082\1090\1086\1088\1086\1074",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1082\1086\1084\1073\1080\1085\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1074\1080\1076\1072",Space,RawInline "latex" "\\In{(a -> m b)}",Space,Str "\1089",Space,Str "\1076\1088\1091\1075\1080\1084\1080",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1099\1084\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1103\1084\1080",Str "."]
,Para [Str "\1059",Space,Str "\1085\1072\1089",Space,Str "\1077\1089\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1090\1086\1078\1076\1077\1089\1090\1074\1072",Space,Str "\1080",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1103",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nclass Functor f where\n    fmap :: (a -> b) -> f a -> f b\n\nclass Functor f => Applicative f where\n    pure    :: a -> f a\n    (<*>)   :: f (a -> b) -> f a -> f b\n\nclass Monad m where\n    return  :: a -> m a\n    (>>=)   :: m a -> (a -> m b) -> m b\n\n(=<<) :: (a -> m b) -> m a -> m b\n(=<<) = flip (>>=)\n\\end{code}\n"
,Para [Str "\1042\1089\1087\1086\1084\1085\1080\1084",Space,Str "\1086\1089\1085\1086\1074\1085\1099\1077",Space,Str "\1087\1088\1086\1080\1079\1074\1086\1076\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1076\1083\1103",Space,Str "\1101\1090\1080\1093",Space,Str "\1082\1083\1072\1089\1089\1086\1074",Str ":"]
,Para [Str "\1048\1083\1080",Space,Str "\1074",Space,Str "\1090\1077\1088\1084\1080\1085\1072\1093",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Kleisli}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n-- \1050\1086\1084\1087\1086\1079\1080\1094\1080\1103\n(>=>) :: Monad m => (a -> m b) -> (b -> m c) -> (a -> m c)\n(<=<) :: Monad m => (b -> m c) -> (a -> m b) -> (a -> m c)\n\n-- \1050\1086\1085\1089\1090\1072\1085\1090\1085\1099\1077 \1092\1091\1085\1082\1094\1080\1080\n(*>) :: Applicative f => f a -> f b -> f b\n(<*) :: Applicative f => f a -> f b -> f a\n\n-- \1055\1088\1080\1084\1077\1085\1077\1085\1080\1077 \1086\1073\1099\1095\1085\1099\1093 \1092\1091\1085\1082\1094\1080\1081 \1082 \1089\1087\1077\1094\1080\1072\1083\1100\1085\1099\1084 \1079\1085\1072\1095\1077\1085\1080\1103\1084\n(<$>)  :: Functor f => (a -> b) -> f a -> f b\n\nliftA  :: Applicative f => (a -> b)           -> f a -> f b\nliftA2 :: Applicative f => (a -> b -> c)      -> f a -> f b -> f c\nliftA3 :: Applicative f => (a -> b -> c -> d) -> f a -> f b -> f c -> f d\n\n-- \1055\1088\1077\1086\1073\1088\1072\1079\1086\1074\1072\1085\1080\1077 \1101\1083\1077\1084\1077\1085\1090\1086\1074 \1089\1087\1080\1089\1082\1072 \1089\1087\1077\1094\1080\1072\1083\1100\1085\1086\1081 \1092\1091\1085\1082\1094\1080\1077\1081\nmapM   :: Monad m => (a -> m b) -> [a] -> m [b]\n\\end{code}\n"
,Para [Str "\1053\1072\1084",Space,Str "\1087\1086\1085\1072\1076\1086\1073\1080\1090\1089\1103",Space,Str "\1084\1086\1076\1091\1083\1100",Space,Str "\1089",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1103\1084\1080",Space,Str "\1090\1080\1087\1086\1074",Space,Str "\1080",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1086\1074",Space,Str "\1084\1086\1085\1072\1076",Space,Str "\1076\1083\1103",Space,Str "\1074\1089\1077\1093",Space,Str "\1090\1080\1087\1086\1074",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1084\1099",Space,Str "\1088\1072\1089\1089\1084\1086\1090\1088\1077\1083\1080",Space,Str "\1074",Space,Str "\1087\1088\1077\1076\1099\1076\1091\1097\1077\1081",Space,Str "\1075\1083\1072\1074\1077",Str ".",Space,Str "\1069\1082\1079\1077\1084\1087\1083\1103\1088\1099",Space,Str "\1076\1083\1103",Space,RawInline "latex" "\\In{[]}",Space,Str "\1080",Space,RawInline "latex" "\\In{Maybe}",Space,Str "\1091\1078\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1099",Space,Str "\1074",Space,RawInline "latex" "\\In{Prelude}",Str ",",Space,Str "\1072",Space,Str "\1090\1080\1087\1099",Space,RawInline "latex" "\\In{State}",Str ",",Space,RawInline "latex" "\\In{Reader}",Space,Str "\1080",Space,RawInline "latex" "\\In{Writer}",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1085\1072\1081\1090\1080",Space,Str "\1074",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1072\1093",Space,RawInline "latex" "\\In{mtl}",Space,Str "\1080",Space,RawInline "latex" "\\In{transformers}",Str ".",Space,Str "\1055\1086\1082\1072",Space,Str "\1084\1099",Space,Str "\1085\1077",Space,Str "\1079\1085\1072\1077\1084",Space,Str "\1082\1072\1082",Space,Str "\1091\1089\1090\1072\1085\1072\1074\1083\1080\1074\1072\1090\1100",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1080",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1101\1090\1080",Space,Str "\1090\1080\1087\1099",Space,Str "\1080",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1099",Space,Str "\1076\1083\1103",Space,RawInline "latex" "\\In{Monad}",Space,Str "\1089\1072\1084\1086\1089\1090\1086\1103\1090\1077\1083\1100\1085\1086",Str ".",Space,Str "\1042\1086\1079\1084\1086\1078\1085\1086",Space,Str "\1074\1099",Space,Str "\1091\1078\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1083\1080",Space,Str "\1080\1093",Str ",",Space,Str "\1074\1099\1087\1086\1083\1085\1103\1103",Space,Str "\1086\1076\1085\1086",Space,Str "\1080\1079",Space,Str "\1091\1087\1088\1072\1078\1085\1077\1085\1080\1081",Space,Str "\1087\1088\1077\1076\1099\1076\1091\1097\1077\1081",Space,Str "\1075\1083\1072\1074\1099",Str ",",Space,Str "\1077\1089\1083\1080",Space,Str "\1101\1090\1086",Space,Str "\1090\1072\1082",Space,Str "\1089\1077\1081\1095\1072\1089",Space,Str "\1074\1099",Space,Str "\1084\1086\1078\1077\1090\1077",Space,Str "\1089\1074\1077\1088\1080\1090\1100",Space,Str "\1086\1090\1074\1077\1090\1099",Str ".",Space,Str "\1054\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1084\1086\1076\1091\1083\1100",Space,RawInline "latex" "\\In{Types}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nmodule Types(\n    State(..), Reader(..), Writer(..),\n    runState, runWriter, runReader,\n    module Control.Applicative,\n    module Control.Monad,\n    module Data.Monoid)    \nwhere\n\nimport Data.Monoid\nimport Control.Applicative\nimport Control.Monad\n\n-------------------------------------------------\n-- \1060\1091\1085\1082\1094\1080\1080 \1089 \1089\1086\1089\1090\1086\1103\1085\1080\1077\1084\n--\n--      a -> State s b\n\ndata State s a = State (s -> (a, s))\n\nrunState :: State s a -> s -> (a, s)\nrunState (State f) = f\n\ninstance Monad (State s) where\n    return a  = State $ \\s -> (a, s)\n    ma >>= mf = State $ \\s0 -> \n                    let (b, s1) = runState ma s0\n                    in   runState (mf b) s1\n\n---------------------------------------------------\n-- \1060\1091\1085\1082\1094\1080\1080 \1089 \1086\1082\1088\1091\1078\1077\1085\1080\1077\1084\n--\n--      a -> Reader env b\n\ndata Reader env a = Reader (env -> a)\n\nrunReader :: Reader env a -> env -> a\nrunReader (Reader f) = f\n\ninstance Monad (Reader env) where\n    return a    = Reader $ const a\n    ma >>= mf   = Reader $ \\env -> \n                    let b = runReader ma env\n                    in  runReader (mf b) env \n                    \n---------------------------------------------------\n-- \1060\1091\1085\1082\1094\1080\1080-\1085\1072\1082\1086\1087\1080\1090\1077\1083\1080\n--\n--      Monoid msg => a -> Writer msg b\n\ndata Writer msg a = Writer (a, msg)\n    deriving (Show)\n\nrunWriter :: Writer msg a -> (a, msg)\nrunWriter (Writer f) = f\n\ninstance Monoid msg => Monad (Writer msg) where\n    return a    = Writer (a, mempty)\n    ma >>= mf   = Writer (c, msgA `mappend` msgF)\n        where (b, msgA) = runWriter ma\n              (c, msgF) = runWriter $ mf b\n\\end{code}\n"
,Para [Str "\1071",Space,Str "\1087\1088\1086\1087\1091\1089\1090\1080\1083",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1103",Space,Str "\1076\1083\1103",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1086\1074",Space,Str "\1082\1083\1072\1089\1089\1086\1074",Space,RawInline "latex" "\\In{Functor}",Space,Str "\1080",Space,RawInline "latex" "\\In{Applicative}",Str ",",Space,Str "\1080\1093",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1087\1086\1083\1091\1095\1080\1090\1100",Space,Str "\1080\1079",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1072",Space,Str "\1076\1083\1103",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Monad}",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1089\1090\1072\1085\1076\1072\1088\1090\1085\1099\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,RawInline "latex" "\\In{liftM}",Str ",",Space,RawInline "latex" "\\In{return}",Space,Str "\1080",Space,RawInline "latex" "\\In{ap}",Space,Str "\1080\1079",Space,Str "\1084\1086\1076\1091\1083\1103",Space,RawInline "latex" "\\In{Control.Monad}",Str "."]
,Para [Str "\1053\1072\1084",Space,Str "\1074\1089\1090\1088\1077\1090\1080\1083\1072\1089\1100",Space,Str "\1085\1086\1074\1072\1103",Space,Str "\1079\1072\1087\1080\1089\1100",Space,Str "\1074",Space,Str "\1101\1082\1089\1087\1086\1088\1090\1077",Space,Str "\1084\1086\1076\1091\1083\1103",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1091\1076\1086\1073\1089\1090\1074\1072",Space,Str "\1084\1099",Space,Str "\1101\1082\1089\1087\1086\1088\1090\1080\1088\1091\1077\1084",Space,Str "\1084\1086\1076\1091\1083\1080",Space,RawInline "latex" "\\In{Control.Applicative}",Str ",",Space,RawInline "latex" "\\In{Control.Monad}",Space,Str "\1080",Space,RawInline "latex" "\\In{Data.Monoid}",Space,Str "\1094\1077\1083\1080\1082\1086\1084",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1084\1099",Space,Str "\1085\1072\1087\1080\1089\1072\1083\1080",Space,Str "\1082\1083\1102\1095\1077\1074\1086\1077",Space,Str "\1089\1083\1086\1074\1086",Space,RawInline "latex" "\\In{module}",Space,Str "\1087\1077\1088\1077\1076",Space,Str "\1101\1082\1089\1087\1086\1088\1090\1080\1088\1091\1077\1084\1099\1084",Space,Str "\1084\1086\1076\1091\1083\1077\1084",Str ".",Space,Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1077\1089\1083\1080",Space,Str "\1084\1099",Space,Str "\1074",Space,Str "\1082\1072\1082\1086\1084",Str "-",Str "\1085\1080\1073\1091\1076\1100",Space,Str "\1076\1088\1091\1075\1086\1084",Space,Str "\1084\1086\1076\1091\1083\1077",Space,Str "\1080\1084\1087\1086\1088\1090\1080\1088\1091\1077\1084",Space,Str "\1084\1086\1076\1091\1083\1100",Space,RawInline "latex" "\\In{Types}",Space,Str "\1085\1072\1084",Space,Str "\1089\1090\1072\1085\1091\1090",Space,Str "\1076\1086\1089\1090\1091\1087\1085\1099\1084\1080",Space,Str "\1074\1089\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1080\1079",Space,Str "\1101\1090\1080\1093",Space,Str "\1084\1086\1076\1091\1083\1077\1081",Str "."]
,Para [Str "\1052\1099",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1083\1080",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1099",Space,Str "\1076\1083\1103",Space,RawInline "latex" "\\In{Functor}",Space,Str "\1080",Space,RawInline "latex" "\\In{Applicative}",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1087\1088\1086\1080\1079\1074\1086\1076\1085\1099\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Monad}",Str "."]
,Header 2 [Str "\1057\1083\1091\1095\1072\1081\1085\1099\1077",Space,Str "\1095\1080\1089\1083\1072"]
,Para [Str "\1057",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1084\1086\1085\1072\1076\1099",Space,RawInline "latex" "\\In{State}",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1080\1084\1080\1090\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1089\1083\1091\1095\1072\1081\1085\1099\1077",Space,Str "\1095\1080\1089\1083\1072",Str ".",Space,Str "\1052\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1075\1077\1085\1077\1088\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1089\1083\1091\1095\1072\1081\1085\1099\1077",Space,Str "\1095\1080\1089\1083\1072",Space,Str "\1080\1079",Space,Str "\1080\1085\1090\1077\1088\1074\1072\1083\1072",Space,Str "\1086\1090",Space,Str "0",Space,Str "\1076\1086",Space,Str "1",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084\1072",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nnextRandom :: Double -> Double\nnextRandom = snd . properFraction . (105.947 * )\n\\end{code}\n"
,Para [Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{properFraction}",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1087\1072\1088\1091",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1089\1086\1089\1090\1086\1080\1090",Space,Str "\1080\1079",Space,Str "\1094\1077\1083\1086\1081",Space,Str "\1095\1072\1089\1090\1080",Space,Str "\1080",Space,Str "\1086\1089\1090\1072\1090\1082\1072",Space,Str "\1095\1080\1089\1083\1072",Str ".",Space,Str "\1042\1079\1103\1074",Space,Str "\1074\1090\1086\1088\1086\1081",Space,Str "\1101\1083\1077\1084\1077\1085\1090",Space,Str "\1087\1072\1088\1099",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,RawInline "latex" "\\In{snd}",Str ",",Space,Str "\1084\1099",Space,Str "\1074\1099\1076\1077\1083\1103\1077\1084",Space,Str "\1086\1089\1090\1072\1090\1086\1082",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{nextRandom}",Space,Str "\1087\1088\1077\1076\1089\1090\1072\1074\1083\1103\1077\1090",Space,Str "\1089\1086\1073\1086\1081",Space,Str "\1075\1077\1085\1077\1088\1072\1090\1086\1088",Space,Str "\1089\1083\1091\1095\1072\1081\1085\1099\1093",Space,Str "\1095\1080\1089\1077\1083",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1089",Space,Str "\1087\1088\1077\1076\1099\1076\1091\1097\1077\1075\1086",Space,Str "\1096\1072\1075\1072",Space,Str "\1080",Space,Str "\1089\1090\1088\1086\1080\1090",Space,Str "\1087\1086",Space,Str "\1085\1077\1084\1091",Space,Str "\1089\1083\1077\1076\1091\1102\1097\1077\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Str "."]
,Para [Str "\1055\1086\1089\1090\1088\1086\1080\1084",Space,Str "\1090\1080\1087",Space,Str "\1076\1083\1103",Space,Str "\1089\1083\1091\1095\1072\1081\1085\1099\1093",Space,Str "\1095\1080\1089\1077\1083",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ntype Random a = State Double a\n\nnext :: Random Double\nnext = State $ \\s -> (s, nextRandom s)\n\\end{code}\n"
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1087\1088\1080\1073\1072\1074\1083\1103\1077\1090",Space,Str "\1082",Space,Str "\1076\1072\1085\1085\1086\1084\1091",Space,Str "\1095\1080\1089\1083\1091",Space,Str "\1089\1083\1091\1095\1072\1081\1085\1086\1077",Space,Str "\1095\1080\1089\1083\1086",Space,Str "\1080\1079",Space,Str "\1080\1085\1090\1077\1088\1074\1072\1083\1072",Space,Str "\1086\1090",Space,Str "0",Space,Str "\1076\1086",Space,Str "1",Str ":"]
,RawBlock "latex" "\n\\begin{code}\naddRandom :: Double -> Random Double\naddRandom x = fmap (+x) next \n\\end{code}\n"
,Para [Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1082\1072\1082",Space,Str "\1101\1090\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1088\1072\1073\1086\1090\1072\1077\1090",Space,Str "\1074",Space,Str "\1080\1085\1090\1077\1088\1087\1088\1077\1090\1072\1090\1086\1088\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Random> runState (addRandom 5) 0.5\n(5.5,0.9735000000000014)\n*Random> runState (addRandom 5) 0.7\n(5.7,0.16289999999999338)\n*Random> runState (mapM addRandom [1 .. 5]) 0.5\n([1.5,2.9735000000000014,3.139404500000154,4.769488561516319,\n 5.5250046269694195],0.6226652135290891)\n\\end{code}\n"
,Para [Str "\1042",Space,Str "\1087\1086\1089\1083\1077\1076\1085\1077\1081",Space,Str "\1089\1090\1088\1086\1095\1082\1077",Space,Str "\1084\1099",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{mapM}",Space,Str "\1087\1088\1080\1073\1072\1074\1080\1083\1080",Space,Str "\1082\1086",Space,Str "\1074\1089\1077\1084",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1072\1084",Space,Str "\1089\1087\1080\1089\1082\1072",Space,Str "\1088\1072\1079\1085\1099\1077",Space,Str "\1089\1083\1091\1095\1072\1081\1085\1099\1077",Space,Str "\1095\1080\1089\1083\1072",Str ",",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1077",Space,Str "\1089\1095\1105\1090\1095\1080\1082\1072",Space,Str "\1087\1088\1086\1080\1089\1093\1086\1076\1080\1083\1086",Space,Str "\1079\1072",Space,Str "\1082\1072\1076\1088\1086\1084",Str ",",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{mapM}",Space,Str "\1080",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1072",Space,RawInline "latex" "\\In{Monad}",Space,Str "\1076\1083\1103",Space,RawInline "latex" "\\In{State}",Str "."]
,Para [Str "\1058\1072\1082\1078\1077",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1089\1082\1083\1072\1076\1099\1074\1072\1077\1090",Space,Str "\1076\1074\1072",Space,Str "\1089\1083\1091\1095\1072\1081\1085\1099\1093",Space,Str "\1095\1080\1089\1083\1072",Str ",",Space,Str "\1086\1076\1085\1086",Space,Str "\1080\1079",Space,Str "\1080\1085\1090\1077\1088\1074\1072\1083\1072",Space,RawInline "latex" "\\In{[-1+a, 1+a]}",Str ",",Space,Str "\1072",Space,Str "\1076\1088\1091\1075\1086\1077",Space,Str "\1080\1079",Space,Str "\1080\1085\1090\1077\1088\1074\1072\1083\1072",Space,RawInline "latex" "\\In{[-2+b,2+b]}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\naddRandom2 :: Double -> Double -> Random Double\naddRandom2 a b = liftA2 add next next\n    where add  a b = \\x y -> diap a 1 x + diap b 1 y\n          diap c r = \\x   -> x * 2 * r - r + c\n\\end{code}\n"
,Para [Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{diap}",Space,Str "\1087\1077\1088\1077\1084\1077\1097\1072\1077\1090",Space,Str "\1080\1085\1090\1077\1088\1074\1072\1083",Space,Str "\1086\1090",Space,Str "0",Space,Str "\1076\1086",Space,Str "1",Space,Str "\1074",Space,Str "\1080\1085\1090\1077\1088\1074\1072\1083",Space,Str "\1086\1090",Space,RawInline "latex" "\\In{c-r}",Space,Str "\1076\1086",Space,RawInline "latex" "\\In{c+r}",Str ".",Space,Str "\1054\1073\1088\1072\1090\1080\1090\1077",Space,Str "\1074\1085\1080\1084\1072\1085\1080\1077",Space,Str "\1085\1072",Space,Str "\1090\1086",Space,Str "\1082\1072\1082",Space,Str "\1084\1099",Space,Str "\1089\1085\1072\1095\1072\1083\1072",Space,Str "\1089\1086\1089\1090\1072\1074\1080\1083\1080",Space,Str "\1086\1073\1099\1095\1085\1091\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{add}",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1087\1077\1088\1077\1084\1077\1097\1072\1077\1090",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1080\1079",Space,Str "\1080\1085\1090\1077\1088\1074\1072\1083\1072",Space,Str "\1086\1090",Space,Str "0",Space,Str "\1076\1086",Space,Str "1",Space,Str "\1074",Space,Str "\1085\1091\1078\1085\1099\1081",Space,Str "\1076\1080\1072\1087\1072\1079\1086\1085",Space,Str "\1080",Space,Str "\1089\1082\1083\1072\1076\1099\1074\1072\1077\1090",Str ".",Space,Str "\1048",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1074",Space,Str "\1089\1072\1084\1099\1081",Space,Str "\1087\1086\1089\1083\1077\1076\1085\1080\1081",Space,Str "\1084\1086\1084\1077\1085\1090",Space,Str "\1084\1099",Space,Str "\1087\1088\1080\1084\1077\1085\1080\1083\1080",Space,Str "\1082",Space,Str "\1101\1090\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1089\1083\1091\1095\1072\1081\1085\1099\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str ".",Space,Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1082\1072\1082",Space,Str "\1088\1072\1073\1086\1090\1072\1077\1090",Space,Str "\1101\1090\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Random> runState (addRandom2 0 10) 0.5\n(10.947000000000003,0.13940450000015403)\n*Random> runState (addRandom2 0 10) 0.7\n(9.725799999999987,0.2587662999992979)\n\\end{code}\n"
,Para [Str "\1055\1088\1080\1073\1072\1074\1080\1084",Space,Str "\1076\1074\1072",Space,Str "\1089\1087\1080\1089\1082\1072",Space,Str "\1080",Space,Str "\1087\1086\1083\1091\1095\1080\1084",Space,Str "\1089\1091\1084\1084\1091",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Random> let res = fmap sum $ zipWithM addRandom2 [1..3] [11 .. 13]\n*Random> runState res 0.5\n(43.060125804029965,0.969511377766409)\n*Random> runState res 0.7\n(39.86034841613788,0.26599261421101517)\n\\end{code}\n"
,Para [Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{zipWithM}",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1072\1085\1072\1083\1086\1075\1086\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{zipWith}",Str ".",Space,Str "\1054\1085\1072",Space,Str "\1091\1089\1090\1088\1086\1077\1085\1072",Space,Str "\1090\1072\1082\1078\1077",Space,Str "\1082\1072\1082",Space,Str "\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{mapM}",Str ",",Space,Str "\1089\1085\1072\1095\1072\1083\1072",Space,Str "\1087\1088\1080\1084\1077\1085\1103\1077\1090\1089\1103",Space,Str "\1086\1073\1099\1095\1085\1072\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{zipWith}",Str ",",Space,Str "\1072",Space,Str "\1079\1072\1090\1077\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{sequence}",Str "."]
,Para [Str "\1057",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Random}",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1087\1086\1076\1073\1088\1072\1089\1099\1074\1072\1085\1080\1103",Space,Str "\1084\1086\1085\1077\1090\1082\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndata Coin = Heads | Tails\n    deriving (Show)\n\ndropCoin :: Random Coin\ndropCoin = fmap drop' next\n    where drop' x \n            | x < 0.5   = Heads\n            | otherwise = Tails                    \n\\end{code}\n"
,Para [Str "\1059",Space,Str "\1084\1086\1085\1077\1090\1082\1080",Space,Str "\1076\1074\1077",Space,Str "\1089\1090\1086\1088\1086\1085\1099",Space,Str "\1086\1088\1105\1083",Space,Str "(",RawInline "latex" "\\In{Heads}",Str ")",Space,Str "\1080",Space,Str "\1088\1077\1096\1082\1072",Space,Str "(",RawInline "latex" "\\In{Tails}",Str ")",Str ".",Space,Str "\1055\1086\1089\1082\1086\1083\1100\1082\1091",Space,Str "\1096\1072\1085\1089\1099",Space,Str "\1085\1072",Space,Str "\1074\1099\1087\1072\1076\1072\1085\1080\1077",Space,Str "\1090\1086\1081",Space,Str "\1080\1083\1080",Space,Str "\1080\1085\1086\1081",Space,Str "\1089\1090\1086\1088\1086\1085\1099",Space,Str "\1088\1072\1074\1085\1099",Str ",",Space,Str "\1084\1099",Space,Str "\1076\1083\1103",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1103",Space,Str "\1089\1090\1086\1088\1086\1085\1099",Space,Str "\1088\1072\1079\1076\1077\1083\1103\1077\1084",Space,Str "\1080\1085\1090\1077\1088\1074\1072\1083",Space,Str "\1086\1090",Space,Str "0",Space,Str "\1076\1086",Space,Str "1",Space,Str "\1074",Space,Str "\1088\1072\1074\1085\1099\1093",Space,Str "\1087\1088\1086\1087\1086\1088\1094\1080\1103\1093",Str "."]
,Para [Str "\1055\1086\1076\1073\1088\1086\1089\1080\1084",Space,Str "\1084\1086\1085\1077\1090\1082\1091",Space,Str "\1087\1103\1090\1100",Space,Str "\1088\1072\1079",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Random> let res = sequence $ replicate 5 dropCoin\n\\end{code}\n"
,Para [Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{replicate n a}",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1077\1090",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1080\1079",Space,RawInline "latex" "\\In{n}",Space,Str "\1087\1086\1074\1090\1086\1088\1103\1102\1097\1080\1093\1089\1103",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1086\1074",Space,RawInline "latex" "\\In{a}",Str ".",Space,Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1095\1090\1086",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1087\1086\1083\1091\1095\1080\1083\1086\1089\1100",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Random> runState res 0.4\n([Heads,Heads,Heads,Heads,Tails],0.5184926967068364)\n*Random> runState res 0.5\n([Tails,Tails,Heads,Tails,Tails],0.6226652135290891)\n\\end{code}\n"
,Header 2 [Str "\1050\1086\1085\1077\1095\1085\1099\1077",Space,Str "\1072\1074\1090\1086\1084\1072\1090\1099"]
,Para [Str "\1057",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1084\1086\1085\1072\1076\1099",Space,RawInline "latex" "\\In{State}",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1086\1087\1080\1089\1099\1074\1072\1090\1100",Space,Str "\1082\1086\1085\1077\1095\1085\1099\1077",Space,Str "\1072\1074\1090\1086\1084\1072\1090\1099",Space,Str "(",Str "finite",Str "-",Str "state",Space,Str "machine",Str ")",Str ".",Space,Str "\1050\1086\1085\1077\1095\1085\1099\1081",Space,Str "\1072\1074\1090\1086\1084\1072\1090",Space,Str "\1085\1072\1093\1086\1076\1080\1090\1089\1103",Space,Str "\1074",Space,Str "\1082\1072\1082\1086\1084",Str "-",Str "\1090\1086",Space,Str "\1085\1072\1095\1072\1083\1100\1085\1086\1084",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1080",Str ".",Space,Str "\1054\1085",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1085\1072",Space,Str "\1074\1093\1086\1076",Space,Str "\1083\1077\1085\1090\1091",Space,Str "\1089\1086\1073\1099\1090\1080\1081",Str ".",Space,Str "\1054\1076\1085\1086",Space,Str "\1089\1086\1073\1099\1090\1080\1077",Space,Str "\1087\1088\1086\1080\1089\1093\1086\1076\1080\1090",Space,Str "\1079\1072",Space,Str "\1076\1088\1091\1075\1080\1084",Str ".",Space,Str "\1053\1072",Space,Str "\1082\1072\1078\1076\1086\1077",Space,Str "\1089\1086\1073\1099\1090\1080\1077",Space,Str "\1072\1074\1090\1086\1084\1072\1090",Space,Str "\1088\1077\1072\1075\1080\1088\1091\1077\1090",Space,Str "\1087\1077\1088\1077\1093\1086\1076\1086\1084",Space,Str "\1080\1079",Space,Str "\1086\1076\1085\1086\1075\1086",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1103",Space,Str "\1074",Space,Str "\1076\1088\1091\1075\1086\1077",Str "."]
,RawBlock "latex" "\n\\begin{code}\ntype FSM s = State s s\n\nfsm :: (ev -> s -> s) -> (ev -> FSM s)\nfsm transition = \\e -> State $ \\s -> (s, transition e s)\n\\end{code}\n"
,Para [Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{fsm}",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1087\1077\1088\1077\1093\1086\1076\1086\1074",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1081",Space,RawInline "latex" "\\In{transition}",Space,Str "\1080",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1077",Space,Str "\1080",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1082\1086\1085\1077\1095\1085\1099\1081",Space,Str "\1072\1074\1090\1086\1084\1072\1090",Str ".",Space,Str "\1042",Space,Str "\1082\1072\1095\1077\1089\1090\1074\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1082\1086\1085\1077\1095\1085\1099\1081",Space,Str "\1072\1074\1090\1086\1084\1072\1090",Space,RawInline "latex" "\\In{FSM}",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1090\1100",Space,Str "\1090\1077\1082\1091\1097\1077\1077",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1077",Str "."]
,Para [Str "\1057",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1082\1086\1085\1077\1095\1085\1099\1093",Space,Str "\1072\1074\1090\1086\1084\1072\1090\1086\1074",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1086\1087\1080\1089\1099\1074\1072\1090\1100",Space,Str "\1088\1072\1079\1083\1080\1095\1085\1099\1077",Space,Str "\1091\1089\1090\1088\1086\1081\1089\1090\1074\1072",Str ".",Space,Str "\1051\1077\1085\1090\1086\1081",Space,Str "\1089\1086\1073\1099\1090\1080\1081",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1074\1074\1086\1076",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1077\1083\1103",Space,Str "(",Str "\1085\1072\1078\1072\1090\1080\1077",Space,Str "\1085\1072",Space,Str "\1082\1085\1086\1087\1082\1080",Str ",",Space,Str "\1074\1082\1083\1102\1095\1077\1085\1080\1077",Str "/",Str "\1074\1099\1082\1083\1102\1095\1077\1085\1080\1077",Space,Str "\1087\1080\1090\1072\1085\1080\1103",Str ")",Str "."]
,Para [Str "\1055\1088\1080\1074\1077\1076\1105\1084",Space,Str "\1087\1088\1086\1089\1090\1086\1081",Space,Str "\1087\1088\1080\1084\1077\1088",Str ".",Space,Str "\1056\1072\1089\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1082\1086\1083\1086\1085\1082\1080",Str ",",Space,Str "\1091",Space,Str "\1085\1080\1093",Space,Str "\1077\1089\1090\1100",Space,Str "\1088\1086\1079\1077\1090\1082\1072",Str ",",Space,Str "\1082\1085\1086\1087\1082\1072",Space,Str "\1074\1082\1083",Str "/",Str "\1074\1099\1082\1083",Space,Str "\1080",Space,Str "\1088\1077\1075\1091\1083\1103\1090\1086\1088",Space,Str "\1075\1088\1086\1084\1082\1086\1089\1090\1080",Str ".",Space,Str "\1042\1086\1079\1084\1086\1078\1085\1099\1077",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1103",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ntype Speaker = (SpeakerState, Level)\n\ndata SpeakerState = Sleep | Work\n    deriving (Show)\n\ndata Level  = Level Int\n    deriving (Show)\n\\end{code}\n"
,Para [Str "\1058\1080\1087",Space,Str "\1082\1086\1083\1086\1085\1086\1082",Space,Str "\1089\1082\1083\1072\1076\1099\1074\1072\1077\1090\1089\1103",Space,Str "\1080\1079",Space,Str "\1076\1074\1091\1093",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Str ":",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1103",Space,Str "\1080",Space,Str "\1091\1088\1086\1074\1085\1103",Space,Str "\1075\1088\1086\1084\1082\1086\1089\1090\1080",Str ".",Space,Str "\1050\1086\1083\1086\1085\1082\1080",Space,Str "\1084\1086\1075\1091\1090",Space,Str "\1073\1099\1090\1100",Space,Str "\1074\1099\1082\1083\1102\1095\1077\1085\1085\1099\1084\1080",Space,Str "(",RawInline "latex" "\\In{Sleep}",Str ")",Space,Str "\1080\1083\1080",Space,Str "\1088\1072\1073\1086\1090\1072\1090\1100",Space,Str "\1085\1072",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1105\1085\1085\1086\1081",Space,Str "\1075\1088\1086\1084\1082\1086\1089\1090\1080",Space,Str "(",RawInline "latex" "\\In{Work}",Str ")",Str ".",Space,Str "\1057\1095\1080\1090\1072\1077\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1072\1082\1089\1080\1084\1072\1083\1100\1085\1099\1081",Space,Str "\1091\1088\1086\1074\1077\1085\1100",Space,Str "\1075\1088\1086\1084\1082\1086\1089\1090\1080",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1077\1090",Space,Str "10",Space,Str "\1077\1076\1080\1085\1080\1094",Str ",",Space,Str "\1072",Space,Str "\1084\1080\1085\1080\1084\1072\1083\1100\1085\1099\1081",Space,Str "\1085\1086\1083\1100",Space,Str "\1077\1076\1080\1085\1080\1094",Str ".",Space,Str "\1043\1088\1072\1085\1080\1094\1099",Space,Str "\1076\1080\1072\1087\1072\1079\1086\1085\1072",Space,Str "\1075\1088\1086\1084\1082\1086\1089\1090\1080",Space,Str "\1086\1087\1080\1089\1099\1074\1072\1102\1090\1089\1103",Space,Str "\1090\1072\1082\1080\1084\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1103\1084\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nquieter :: Level -> Level\nquieter (Level n) = Level $ max 0 (n-1)\n\nlouder :: Level -> Level\nlouder (Level n) = Level $ min 10 (n+1)\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1086\1073\1085\1086\1074\1083\1103\1090\1100",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1091\1088\1086\1074\1085\1103",Space,Str "\1075\1088\1086\1084\1082\1086\1089\1090\1080",Space,Str "\1085\1077",Space,Str "\1085\1072\1087\1088\1103\1084\1091\1102",Str ",",Space,Str "\1072",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1074\1089\1087\1086\1084\1086\1075\1072\1090\1077\1083\1100\1085\1099\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,RawInline "latex" "\\In{louder}",Space,Str "\1080",Space,RawInline "latex" "\\In{quieter}",Str ".",Space,Str "\1058\1072\1082",Space,Str "\1084\1099",Space,Str "\1085\1077",Space,Str "\1089\1084\1086\1078\1077\1084",Space,Str "\1074\1099\1081\1090\1080",Space,Str "\1079\1072",Space,Str "\1087\1088\1077\1076\1077\1083\1099",Space,Str "\1079\1072\1076\1072\1085\1085\1086\1075\1086",Space,Str "\1076\1080\1072\1087\1072\1079\1086\1085\1072",Str "."]
,Para [Str "\1042\1086\1079\1084\1086\1078\1085\1099\1077",Space,Str "\1089\1086\1073\1099\1090\1080\1103",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndata User = Button | Quieter | Louder\n    deriving (Show)\n\\end{code}\n"
,Para [Str "\1055\1086\1083\1100\1079\1086\1074\1072\1090\1077\1083\1100",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1083\1080\1073\1086",Space,Str "\1085\1072\1078\1072\1090\1100",Space,Str "\1085\1072",Space,Str "\1082\1085\1086\1087\1082\1091",Space,Str "\1074\1082\1083",Str "/",Str "\1074\1099\1082\1083",Space,Str "\1080\1083\1080",Space,Str "\1087\1086\1074\1077\1088\1085\1091\1090\1100",Space,Str "\1088\1077\1083\1077",Space,Str "\1075\1088\1086\1084\1082\1086\1089\1090\1080",Space,Str "\1074\1083\1077\1074\1086",Str ",",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1087\1088\1080\1075\1083\1091\1096\1080\1090\1100",Space,Str "\1079\1074\1091\1082",Space,Str "(",RawInline "latex" "\\In{Quieter}",Str ")",Space,Str "\1080\1083\1080",Space,Str "\1074\1087\1088\1072\1074\1086",Str ",",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1089\1076\1077\1083\1072\1090\1100",Space,Str "\1087\1086\1075\1088\1086\1084\1095\1077",Space,Str "(",RawInline "latex" "\\In{Louder}",Str ")",Str ".",Space,Str "\1041\1091\1076\1077\1084",Space,Str "\1089\1095\1080\1090\1072\1090\1100",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1082\1086\1083\1086\1085\1082\1080",Space,Str "\1074\1089\1077\1075\1076\1072",Space,Str "\1074\1082\1083\1102\1095\1077\1085\1099",Space,Str "\1074",Space,Str "\1088\1086\1079\1077\1090\1082\1091",Str "."]
,Para [Str "\1057\1086\1089\1090\1072\1074\1080\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1087\1077\1088\1077\1093\1086\1076\1086\1074",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nspeaker :: User -> FSM Speaker\nspeaker = fsm $ trans\n    where trans Button    (Sleep, n) = (Work, n)\n          trans Button    (Work,  n) = (Sleep, n)\n          trans Louder    (s,     n) = (s, louder n)\n          trans Quieter   (s,     n) = (s, quieter n)\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1089\1095\1080\1090\1072\1077\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1087\1088\1080",Space,Str "\1074\1099\1082\1083\1102\1095\1077\1085\1080\1080",Space,Str "\1082\1086\1083\1086\1085\1086\1082",Space,Str "\1088\1077\1083\1077",Space,Str "\1086\1089\1090\1072\1105\1090\1089\1103",Space,Str "\1085\1077\1082\1086\1090\1086\1088\1086\1084",Space,Str "\1087\1086\1083\1086\1078\1077\1085\1080\1080",Str ",",Space,Str "\1090\1072\1082",Space,Str "\1095\1090\1086",Space,Str "\1087\1088\1080",Space,Str "\1089\1083\1077\1076\1091\1102\1097\1077\1084",Space,Str "\1074\1082\1083\1102\1095\1077\1085\1080\1080",Space,Str "\1086\1085\1080",Space,Str "\1073\1091\1076\1091\1090",Space,Str "\1088\1072\1073\1086\1090\1072\1090\1100",Space,Str "\1085\1072",Space,Str "\1090\1086\1081",Space,Str "\1078\1077",Space,Str "\1075\1088\1086\1084\1082\1086\1089\1090\1080",Str ".",Space,Str "\1056\1077\1083\1077",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1082\1088\1091\1090\1080\1090\1100",Space,Str "\1080",Space,Str "\1074",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1080",Space,RawInline "latex" "\\In{Sleep}",Str ".",Space,Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1090\1080\1087\1080\1095\1085\1091\1102",Space,Str "\1089\1077\1089\1089\1080\1102",Space,Str "\1088\1072\1073\1086\1090\1099",Space,Str "\1082\1086\1083\1086\1085\1086\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*FSM> let res = mapM speaker [Button, Louder, Quieter, Quieter, Button] \n\\end{code}\n"
,Para [Str "\1057\1085\1072\1095\1072\1083\1072",Space,Str "\1084\1099",Space,Str "\1074\1082\1083\1102\1095\1072\1077\1084",Space,Str "\1082\1086\1083\1086\1085\1082\1080",Str ",",Space,Str "\1079\1072\1090\1077\1084",Space,Str "\1087\1088\1080\1073\1072\1074\1083\1103\1077\1084",Space,Str "\1075\1088\1086\1084\1082\1086\1089\1090\1100",Str ",",Space,Str "\1079\1072\1090\1077\1084",Space,Str "\1076\1074\1072\1078\1076\1099",Space,Str "\1076\1077\1083\1072\1077\1084",Space,Str "\1090\1080\1096\1077",Space,Str "\1080",Space,Str "\1074",Space,Str "\1082\1086\1085\1094\1077",Space,Str "\1074\1099\1082\1083\1102\1095\1072\1077\1084",Str ".",Space,Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1095\1090\1086",Space,Str "\1087\1086\1083\1091\1095\1080\1083\1086\1089\1100",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*FSM> runState res (Sleep, Level 2)\n([(Sleep,Level 2),(Work,Level 2),(Work,Level 3),(Work,Level 2),\n (Work,Level 1)],(Sleep,Level 1))\n*FSM> runState res (Sleep, Level 0)\n([(Sleep,Level 0),(Work,Level 0),(Work,Level 1),(Work,Level 0),\n (Work,Level 0)],(Sleep,Level 0))\n\\end{code}\n"
,Para [Str "\1057\1084\1086\1090\1088\1080\1090\1077",Str ",",Space,Str "\1080\1079\1084\1077\1085\1080\1074",Space,Str "\1085\1072\1095\1072\1083\1100\1085\1086\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Str ",",Space,Str "\1084\1099",Space,Str "\1080\1079\1084\1077\1085\1080\1083\1080",Space,Str "\1074\1077\1089\1100",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Str ".",Space,Str "\1054\1073\1088\1072\1090\1080\1090\1077",Space,Str "\1074\1085\1080\1084\1072\1085\1080\1077",Space,Str "\1085\1072",Space,Str "\1090\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1074\1086",Space,Str "\1074\1090\1086\1088\1086\1084",Space,Str "\1087\1088\1086\1075\1086\1085\1077",Space,Str "\1084\1099",Space,Str "\1085\1077",Space,Str "\1091\1096\1083\1080",Space,Str "\1074",Space,Str "\1084\1080\1085\1091\1089",Space,Str "\1087\1086",Space,Str "\1075\1088\1086\1084\1082\1086\1089\1090\1080",Str ",",Space,Str "\1085\1077",Space,Str "\1089\1084\1086\1090\1088\1103",Space,Str "\1085\1072",Space,Str "\1090\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1087\1099\1090\1072\1083\1080\1089\1100",Space,Str "\1082\1088\1091\1090\1080\1090\1100",Space,Str "\1088\1077\1083\1077",Space,Str "\1079\1072",Space,Str "\1091\1089\1090\1072\1085\1086\1074\1083\1077\1085\1085\1099\1081",Space,Str "\1087\1088\1077\1076\1077\1083",Str "."]
,Para [Str "\1054\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1082\1086\1083\1086\1085\1082\1080",Space,Str "\1076\1088\1091\1075\1086\1075\1086",Space,Str "\1090\1080\1087\1072",Str ".",Space,Str "\1053\1072\1096\1080",Space,Str "\1085\1086\1074\1099\1077",Space,Str "\1082\1086\1083\1086\1085\1082\1080",Space,Str "\1073\1091\1076\1091\1090",Space,Str "\1073\1077\1079\1086\1087\1072\1089\1085\1077\1077",Space,Str "\1087\1088\1077\1076\1099\1076\1091\1097\1080\1093",Str ".",Space,Str "\1055\1088\1077\1076\1089\1090\1072\1074\1100\1090\1077",Space,Str "\1089\1080\1090\1091\1072\1094\1080\1102",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1099",Space,Str "\1074\1099\1082\1083\1102\1095\1080\1083\1080",Space,Str "\1082\1086\1083\1086\1085\1082\1080",Space,Str "\1085\1072",Space,Str "\1074\1099\1089\1086\1082\1086\1084",Space,Str "\1091\1088\1086\1074\1085\1077",Space,Str "\1075\1088\1086\1084\1082\1086\1089\1090\1080",Str ".",Space,Str "\1052\1099",Space,Str "\1089\1083\1091\1096\1072\1083\1080",Space,Str "\1076\1086\1084\1072\1096\1085\1102\1102",Space,Str "\1079\1072\1087\1080\1089\1100",Space,Str "\1089",Space,Str "\1085\1080\1079\1082\1080\1084",Space,Str "\1091\1088\1086\1074\1085\1077\1084",Space,Str "\1079\1074\1091\1082\1072",Str ".",Space,Str "\1052\1099",Space,Str "\1074\1099\1082\1083\1102\1095\1080\1083\1080",Space,Str "\1080",Space,Str "\1079\1072\1073\1099\1083\1080",Str ".",Space,Str "\1055\1086\1090\1086\1084",Space,Str "\1084\1099",Space,Str "\1088\1077\1096\1080\1083\1080",Space,Str "\1087\1086\1089\1083\1091\1096\1072\1090\1100",Space,Str "\1076\1088\1091\1075\1091\1102",Space,Str "\1084\1077\1083\1086\1076\1080\1102",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1079\1072\1087\1080\1089\1072\1085\1072",Space,Str "\1089",Space,Str "\1085\1086\1088\1084\1072\1083\1100\1085\1099\1084",Space,Str "\1091\1088\1086\1074\1085\1077\1084",Space,Str "\1079\1074\1091\1082\1072",Str ".",Space,Str "\1055\1088\1080",Space,Str "\1074\1082\1083\1102\1095\1077\1085\1080\1080",Space,Str "\1082\1086\1083\1086\1085\1086\1082",Space,Str "\1085\1072\1089",Space,Str "\1086\1075\1083\1091\1096\1080\1083",Space,Str "\1096\1082\1074\1072\1083",Space,Str "\1079\1074\1091\1082\1072",Str ".",Space,Str "\1063\1090\1086\1073\1099",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1080\1079\1073\1077\1078\1072\1090\1100",Space,Str "\1084\1099",Space,Str "\1088\1077\1096\1080\1083\1080",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100\1089\1103",Space,Str "\1076\1088\1091\1075\1080\1084\1080",Space,Str "\1082\1086\1083\1086\1085\1082\1072\1084\1080",Str "."]
,Para [Str "\1050\1086\1083\1086\1085\1082\1080",Space,Str "\1087\1088\1080",Space,Str "\1074\1099\1082\1083\1102\1095\1077\1085\1080\1080",Space,Str "\1073\1091\1076\1091\1090",Space,Str "\1074\1099\1089\1090\1072\1074\1083\1103\1090\1100",Space,Str "\1091\1088\1086\1074\1077\1085\1100",Space,Str "\1075\1088\1086\1084\1082\1086\1089\1090\1080",Space,Str "\1085\1072",Space,Str "\1085\1086\1083\1100",Space,Str "\1080",Space,Str "\1088\1077\1083\1077",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1082\1088\1091\1090\1080\1090\1100",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1077\1089\1083\1080",Space,Str "\1082\1086\1083\1086\1085\1082\1080",Space,Str "\1074\1082\1083\1102\1095\1077\1085\1099",Str "."]
,RawBlock "latex" "\n\\begin{code}\nsafeSpeaker :: User -> FSM Speaker\nsafeSpeaker = fsm $ trans\n    where trans Button  (Sleep, _) = (Work,  Level 0)\n          trans Button  (Work,  _) = (Sleep, Level 0)\n          trans Quieter (Work,  n) = (Work,  quieter n)\n          trans Louder  (Work,  n) = (Work,  louder n)\n          trans _       (Sleep, n) = (Sleep, n)\n\\end{code}\n"
,Para [Str "\1055\1088\1080",Space,Str "\1085\1072\1078\1072\1090\1080\1080",Space,Str "\1085\1072",Space,Str "\1082\1085\1086\1087\1082\1091",Space,Str "\1074\1082\1083",Str "/",Str "\1074\1099\1082\1083",Space,Str "\1091\1088\1086\1074\1077\1085\1100",Space,Str "\1075\1088\1086\1084\1082\1086\1089\1090\1080",Space,Str "\1074\1099\1074\1086\1076\1080\1090\1089\1103",Space,Str "\1074",Space,Str "\1087\1086\1083\1086\1078\1077\1085\1080\1077",Space,Str "0",Str ".",Space,Str "\1050\1086\1083\1086\1085\1082\1080",Space,Str "\1088\1077\1072\1075\1080\1088\1091\1102\1090",Space,Str "\1085\1072",Space,Str "\1079\1072\1087\1088\1086\1089\1099",Space,Str "\1080\1079\1084\1077\1085\1077\1085\1080\1103",Space,Str "\1091\1088\1086\1074\1085\1103",Space,Str "\1075\1088\1086\1084\1082\1086\1089\1090\1080",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1074",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1080",Space,RawInline "latex" "\\In{Work}",Str ".",Space,Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1082\1072\1082",Space,Str "\1088\1072\1073\1086\1090\1072\1102\1090",Space,Str "\1085\1072\1096\1080",Space,Str "\1085\1086\1074\1099\1077",Space,Str "\1082\1086\1083\1086\1085\1082\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*FSM> let res = mapM safeSpeaker [Button, Louder, Quieter, Button, Louder]\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1074\1082\1083\1102\1095\1072\1077\1084",Space,Str "\1082\1086\1083\1086\1085\1082\1080",Str ",",Space,Str "\1076\1077\1083\1072\1077\1084",Space,Str "\1087\1086",Str "-",Str "\1075\1088\1086\1084\1095\1077",Str ",",Space,Str "\1079\1072\1090\1077\1084",Space,Str "\1087\1086",Str "-",Str "\1090\1080\1096\1077",Str ",",Space,Str "\1079\1072\1090\1077\1084",Space,Str "\1074\1099\1082\1083\1102\1095\1072\1077\1084",Space,Str "\1080",Space,Str "\1087\1099\1090\1072\1077\1084\1089\1103",Space,Str "\1080\1079\1084\1077\1085\1080\1090\1100",Space,Str "\1075\1088\1086\1084\1082\1086\1089\1090\1100",Space,Str "\1087\1086\1089\1083\1077",Space,Str "\1074\1099\1082\1083\1102\1095\1077\1085\1080\1103",Str ".",Space,Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1082\1072\1082",Space,Str "\1086\1085\1080",Space,Str "\1089\1088\1072\1073\1086\1090\1072\1102\1090",Str ",",Space,Str "\1087\1088\1077\1076\1089\1090\1072\1074\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1099",Space,Str "\1074\1099\1082\1083\1102\1095\1080\1083\1080",Space,Str "\1082\1086\1083\1086\1085\1082\1080",Space,Str "\1085\1072",Space,Str "\1091\1088\1086\1074\1085\1077",Space,Str "\1075\1088\1086\1084\1082\1086\1089\1090\1080",Space,RawInline "latex" "\\In{10}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*FSM> runState res (Sleep, Level 10)\n([(Sleep,Level 10),(Work,Level 0),(Work,Level 1),(Work,Level 0),\n (Sleep,Level 0)],(Sleep,Level 0))\n\\end{code}\n"
,Para [Str "\1055\1077\1088\1074\1086\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1074",Space,Str "\1089\1087\1080\1089\1082\1077",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1089\1090\1072\1088\1090\1086\1074\1099\1084",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1077\1084",Str ",",Space,Str "\1082\1086\1090\1086\1088\1086\1077",Space,Str "\1084\1099",Space,Str "\1079\1072\1076\1072\1083\1080",Str ".",Space,Str "\1055\1086\1089\1083\1077",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1082\1086\1083\1086\1085\1082\1080",Space,Str "\1074\1082\1083\1102\1095\1072\1102\1090\1089\1103",Space,Str "\1080",Space,Str "\1084\1099",Space,Str "\1074\1080\1076\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1091\1088\1086\1074\1077\1085\1100",Space,Str "\1075\1088\1086\1084\1082\1086\1089\1090\1080",Space,Str "\1087\1077\1088\1077\1082\1083\1102\1095\1080\1083\1089\1103",Space,Str "\1085\1072",Space,Str "\1085\1086\1083\1100",Str ".",Space,Str "\1047\1072\1090\1077\1084",Space,Str "\1084\1099",Space,Str "\1091\1074\1077\1083\1080\1095\1080\1074\1072\1077\1084",Space,Str "\1075\1088\1086\1084\1082\1086\1089\1090\1100",Str ",",Space,Str "\1089\1073\1072\1074\1083\1103\1077\1084",Space,Str "\1077\1105",Space,Str "\1080",Space,Str "\1074\1099\1082\1083\1102\1095\1072\1077\1084",Str ".",Space,Str "\1055\1086\1087\1099\1090\1082\1072",Space,Str "\1080\1079\1084\1077\1085\1080\1090\1100",Space,Str "\1075\1088\1086\1084\1082\1086\1089\1090\1100",Space,Str "\1074\1099\1082\1083\1102\1095\1077\1085\1085\1099\1093",Space,Str "\1082\1086\1083\1086\1085\1086\1082",Space,Str "\1085\1077",Space,Str "\1087\1088\1086\1093\1086\1076\1080\1090",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1074\1080\1076\1085\1086",Space,Str "\1087\1086",Space,Str "\1087\1086\1089\1083\1077\1076\1085\1077\1084\1091",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1091",Space,Str "\1089\1087\1080\1089\1082\1072",Space,Str "\1080",Space,Str "\1080\1090\1086\1075\1086\1074\1086\1084\1091",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1102",Space,Str "\1082\1086\1083\1086\1085\1086\1082",Str ",",Space,Str "\1082\1086\1090\1086\1088\1086\1077",Space,Str "\1085\1072\1093\1086\1076\1080\1090\1089\1103",Space,Str "\1074\1086",Space,Str "\1074\1090\1086\1088\1086\1084",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1077",Space,Str "\1087\1072\1088\1099",Str "."]
,Para [Str "\1055\1088\1077\1076\1087\1086\1083\1086\1078\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1082\1086\1083\1086\1085\1082\1080",Space,Str "\1088\1072\1073\1086\1090\1072\1102\1090",Space,Str "\1089",Space,Str "\1089\1072\1084\1086\1075\1086",Space,Str "\1085\1072\1095\1072\1083\1072",Str ",",Space,Str "\1090\1086\1075\1076\1072",Space,Str "\1087\1077\1088\1074\1099\1084",Space,Str "\1076\1077\1081\1089\1090\1074\1080\1077\1084",Space,Str "\1084\1099",Space,Str "\1074\1099\1082\1083\1102\1095\1072\1077\1084",Space,Str "\1080\1093",Str ".",Space,Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1089\1083\1091\1095\1080\1090\1089\1103",Space,Str "\1076\1072\1083\1100\1096\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*FSM> runState res (Work, Level 10)\n([(Work,Level 10),(Sleep,Level 0),(Sleep,Level 0),(Sleep,Level 0),\n (Work,Level 0)],(Work,Level 1))\n\\end{code}\n"
,Para [Str "\1044\1072\1083\1100\1096\1077",Space,Str "\1084\1099",Space,Str "\1087\1099\1090\1072\1077\1084\1089\1103",Space,Str "\1080\1079\1084\1077\1085\1080\1090\1100",Space,Str "\1075\1088\1086\1084\1082\1086\1089\1090\1100",Space,Str "\1085\1086",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1085\1080\1095\1077\1075\1086",Space,Str "\1085\1077",Space,Str "\1074\1099\1093\1086\1076\1080\1090",Str "."]
,Header 2 [Str "\1054\1090\1083\1086\1078\1077\1085\1085\1086\1077",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1077",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1081"]
,Para [Str "\1042",Space,Str "\1101\1090\1086\1084",Space,Str "\1087\1088\1080\1084\1077\1088\1077",Space,Str "\1084\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1074\1099\1087\1086\1083\1085\1103\1090\1100",Space,Str "\1072\1088\1080\1092\1084\1077\1090\1080\1095\1077\1089\1082\1080\1077",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Space,Str "\1085\1072",Space,Str "\1094\1077\1083\1099\1093",Space,Str "\1095\1080\1089\1083\1072\1093",Str ".",Space,Str "\1052\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1080\1093",Space,Str "\1089\1082\1083\1072\1076\1099\1074\1072\1090\1100",Str ",",Space,Str "\1074\1099\1095\1080\1090\1072\1090\1100",Space,Str "\1080",Space,Str "\1091\1084\1085\1086\1078\1072\1090\1100",Str ".",Space,Str "\1053\1086",Space,Str "\1074\1084\1077\1089\1090\1086",Space,Str "\1090\1086\1075\1086",Str ",",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1089\1088\1072\1079\1091",Space,Str "\1074\1099\1095\1080\1089\1083\1103\1090\1100",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Space,Str "\1084\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1090\1100",Space,Str "\1080\1093",Space,Str "\1086\1087\1080\1089\1072\1085\1080\1077",Str ".",Space,Str "\1052\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1082\1086\1076\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088\1072\1084\1080",Str "."]
,RawBlock "latex" "\n\\begin{code}\ndata Exp    = Var String\n            | Lit Int\n            | Neg Exp\n            | Add Exp Exp\n            | Mul Exp Exp\n            deriving (Show, Eq)\n\\end{code}\n"
,Para [Str "\1059",Space,Str "\1085\1072\1089",Space,Str "\1077\1089\1090\1100",Space,Str "\1090\1080\1087",Space,RawInline "latex" "\\In{Exp}",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1073\1099\1090\1100",Space,Str "\1083\1080\1073\1086",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1086\1081",Space,RawInline "latex" "\\In{Var}",Space,Str "\1089",Space,Str "\1076\1072\1085\1085\1099\1084",Space,Str "\1089\1090\1088\1086\1095\1085\1099\1084",Space,Str "\1080\1084\1077\1085\1077\1084",Str ",",Space,Str "\1083\1080\1073\1086",Space,Str "\1094\1077\1083\1086\1095\1080\1089\1083\1077\1085\1085\1086\1081",Space,Str "\1082\1086\1085\1089\1090\1072\1085\1090\1086\1081",Space,RawInline "latex" "\\In{Lit}",Str ",",Space,Str "\1083\1080\1073\1086",Space,Str "\1086\1076\1085\1086\1081",Space,Str "\1080\1079",Space,Str "\1090\1088\1105\1093",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1081",Str ":",Space,Str "\1074\1099\1095\1080\1090\1072\1085\1080\1077\1084",Space,Str "(",RawInline "latex" "\\In{Neg}",Str ")",Str ",",Space,Str "\1089\1083\1086\1078\1077\1085\1080\1077\1084",Space,Str "(",RawInline "latex" "\\In{Add}",Str ")",Space,Str "\1080\1083\1080",Space,Str "\1091\1084\1085\1086\1078\1077\1085\1080\1077\1084",Space,Str "(",RawInline "latex" "\\In{Mul}",Str ")",Str "."]
,Para [Str "\1058\1072\1082\1080\1077",Space,Str "\1090\1080\1087\1099",Space,Str "\1085\1072\1079\1099\1074\1072\1102\1090",Space,Emph [Str "\1072\1073\1089\1090\1088\1072\1082\1090\1085\1099\1084\1080",Space,Str "\1089\1080\1085\1090\1072\1082\1089\1080\1095\1077\1089\1082\1080\1084\1080",Space,Str "\1076\1077\1088\1077\1074\1100\1103\1084\1080"],Space,Str "(",Str "abstract",Space,Str "syntax",Space,Str "tree",Str ",",Space,Str "AST",Str ")",Str ".",Space,Str "\1054\1085\1080",Space,Str "\1089\1086\1076\1077\1088\1078\1072\1090",Space,Str "\1086\1087\1080\1089\1072\1085\1080\1077",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1081",Str ".",Space,Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1074\1084\1077\1089\1090\1086",Space,Str "\1090\1086\1075\1086",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1089\1088\1072\1079\1091",Space,Str "\1087\1088\1086\1074\1086\1076\1080\1090\1100",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Space,Str "\1084\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1089\1086\1073\1080\1088\1072\1090\1100",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Space,Str "\1074",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1080",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Exp}",Str ".",Space,Str "\1057\1076\1077\1083\1072\1077\1084",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088",Space,Str "\1076\1083\1103",Space,RawInline "latex" "\\In{Num}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ninstance Num Exp where\n    negate  = Neg\n    (+)     = Add\n    (*)     = Mul\n\n    fromInteger = Lit . fromInteger\n\n    abs     = undefined\n    signum  = undefined\n\\end{code}\n"
,Para [Str "\1058\1072\1082\1078\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1074\1089\1087\1086\1084\1086\1075\1072\1090\1077\1083\1100\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1076\1083\1103",Space,Str "\1086\1073\1086\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1099\1093",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nvar :: String -> Exp\nvar = Var\n\nn :: Int -> Exp\nn = var . show\n\\end{code}\n"
,Para [Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{var}",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1077\1090",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1091\1102",Space,Str "\1089",Space,Str "\1076\1072\1085\1085\1099\1084",Space,Str "\1080\1084\1077\1085\1077\1084",Str ",",Space,Str "\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{n}",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1077\1090",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1091\1102",Str ",",Space,Str "\1091",Space,Str "\1082\1086\1090\1086\1088\1086\1081",Space,Str "\1080\1084\1103",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1094\1077\1083\1099\1084",Space,Str "\1095\1080\1089\1083\1086\1084",Str ".",Space,Str "\1057\1086\1093\1088\1072\1085\1080\1084",Space,Str "\1101\1090\1080",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1103",Space,Str "\1074",Space,Str "\1084\1086\1076\1091\1083\1077",Space,RawInline "latex" "\\In{Exp}",Str ".",Space,Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1074\1089\1105",Space,Str "\1075\1086\1090\1086\1074\1086",Space,Str "\1076\1083\1103",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1077\1085\1080\1103",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1081",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Exp> n 1\nVar \"1\"\n*Exp> n 1 + 2\nAdd (Var \"1\") (Lit 2)\n*Exp> 3 * (n 1 + 2)\nMul (Lit 3) (Add (Var \"1\") (Lit 2))\n*Exp> - n 2 * 3 * (n 1 + 2)\nNeg (Mul (Mul (Var \"2\") (Lit 3)) (Add (Var \"1\") (Lit 2)))\n\\end{code}\n"
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1076\1072\1074\1072\1081\1090\1077",Space,Str "\1089\1086\1079\1076\1072\1076\1080\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1076\1083\1103",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Space,Str "\1090\1072\1082\1080\1093",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1081",Str ".",Space,Str "\1054\1085\1072",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1090\1100",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1077",Space,Str "\1080",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1090\1100",Space,Str "\1094\1077\1083\1086\1077",Space,Str "\1095\1080\1089\1083\1086",Str "."]
,RawBlock "latex" "\n\\begin{code}\neval :: Exp -> Int\neval (Lit n)    = n\neval (Neg n)    = negate $ eval n\neval (Add a b)  = eval a + eval b\neval (Mul a b)  = eval a * eval b\neval (Var name) = ???\n\\end{code}\n"
,Para [Str "\1050\1072\1082",Space,Str "\1073\1099\1090\1100",Space,Str "\1089",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088\1086\1084",Space,RawInline "latex" "\\In{Var}",Str "?",Space,Str "\1053\1072\1084",Space,Str "\1085\1091\1078\1085\1086",Space,Str "\1086\1090\1082\1091\1076\1072",Str "-",Str "\1090\1086",Space,Str "\1091\1079\1085\1072\1090\1100",Space,Str "\1082\1072\1082\1086\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1089\1074\1103\1079\1072\1085\1086",Space,Str "\1089",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1086\1081",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{eval}",Space,Str "\1076\1086\1083\1078\1085\1072",Space,Str "\1090\1072\1082\1078\1077",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1090\1100",Space,Str "\1085\1072\1073\1086\1088",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Space,Str "\1076\1083\1103",Space,Str "\1074\1089\1077\1093",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1099\1093",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1091\1102\1090\1089\1103",Space,Str "\1074",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1080",Str ".",Space,Str "\1069\1090\1086\1090",Space,Str "\1085\1072\1073\1086\1088",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Space,Str "\1084\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1085\1072\1079\1099\1074\1072\1090\1100",Space,Str "\1086\1082\1088\1091\1078\1077\1085\1080\1077\1084",Str "."]
,Para [Str "\1054\1073\1088\1072\1090\1080\1090\1077",Space,Str "\1074\1085\1080\1084\1072\1085\1080\1077",Space,Str "\1085\1072",Space,Str "\1090\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1074",Space,Str "\1082\1072\1078\1076\1086\1084",Space,Str "\1089\1086\1089\1090\1072\1074\1085\1086\1084",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088\1077",Space,Str "\1084\1099",Space,Str "\1088\1077\1082\1091\1088\1089\1080\1074\1085\1086",Space,Str "\1074\1099\1079\1099\1074\1072\1077\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{eval}",Str ",",Space,Str "\1084\1099",Space,Str "\1089\1083\1086\1074\1085\1086",Space,Str "\1086\1073\1093\1086\1076\1080\1084",Space,Str "\1074\1089\1105",Space,Str "\1076\1077\1088\1077\1074\1086",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Str ".",Space,Str "\1057\1087\1091\1089\1082\1072\1077\1084\1089\1103",Space,Str "\1074\1085\1080\1079",Str ",",Space,Str "\1076\1086",Space,Str "\1089\1072\1084\1099\1093",Space,Str "\1083\1080\1089\1090\1100\1077\1074",Space,Str "\1074",Space,Str "\1082\1086\1090\1086\1088\1099\1093",Space,Str "\1088\1072\1089\1087\1086\1083\1086\1078\1077\1085\1099",Space,Str "\1083\1080\1073\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "(",RawInline "latex" "\\In{Lit}",Str ")",Str ",",Space,Str "\1083\1080\1073\1086",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1099\1077",Space,Str "(",RawInline "latex" "\\In{Var}",Str ")",Str ".",Space,Str "\1053\1072\1084",Space,Str "\1073\1099\1083\1086",Space,Str "\1073\1099",Space,Str "\1091\1076\1086\1073\1085\1086",Space,Str "\1080\1084\1077\1090\1100",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1086\1089\1090\1100",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100\1089\1103",Space,Str "\1086\1082\1088\1091\1078\1077\1085\1080\1077\1084",Space,Str "\1080\1079",Space,Str "\1083\1102\1073\1086\1075\1086",Space,Str "\1091\1079\1083\1072",Space,Str "\1076\1077\1088\1077\1074\1072",Str ".",Space,Str "\1042",Space,Str "\1101\1090\1086\1084",Space,Str "\1085\1072\1084",Space,Str "\1087\1086\1084\1086\1078\1077\1090",Space,Str "\1090\1080\1087",Space,RawInline "latex" "\\In{Reader}",Str "."]
,Para [Str "\1055\1088\1077\1076\1089\1090\1072\1074\1080\1084",Space,Str "\1095\1090\1086",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1077\1089\1090\1100",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Env}",Space,Str "\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1087\1086\1079\1074\1086\1083\1103\1077\1090",Space,Str "\1095\1080\1090\1072\1090\1100",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1099\1093",Space,Str "\1087\1086",Space,Str "\1080\1084\1077\1085\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nvalue :: Env -> String -> Int\n\\end{code}\n"
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{eval}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\neval :: Exp -> Reader Env Int\neval (Lit n)    = pure n\neval (Neg n)    = liftA  negate $ eval n\neval (Add a b)  = liftA2 (+) (eval a) (eval b)\neval (Mul a b)  = liftA2 (*) (eval a) (eval b)\neval (Var name) = Reader $ \\env -> value env name \n\\end{code}\n"
,Para [Str "\1054\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1089\1080\1083\1100\1085\1086",Space,Str "\1080\1079\1084\1077\1085\1080\1083\1086\1089\1100",Str ",",Space,Str "\1086\1085\1086",Space,Str "\1089\1090\1072\1083\1086",Space,Str "\1085\1077",Space,Str "\1090\1072\1082\1080\1084",Space,Str "\1085\1072\1075\1083\1103\1076\1085\1099\1084",Str ".",Space,Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,RawInline "latex" "\\In{eval}",Space,Str "\1089\1090\1072\1083\1086",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1099\1084",Str ",",Space,Str "\1087\1086\1101\1090\1086\1084\1091",Space,Str "\1087\1088\1080",Space,Str "\1088\1077\1082\1091\1088\1089\1080\1074\1085\1086\1084",Space,Str "\1074\1099\1079\1086\1074\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{eval}",Space,Str "\1085\1072\1084",Space,Str "\1087\1088\1080\1093\1086\1076\1080\1090\1089\1103",Space,Str "\1087\1086\1076\1085\1080\1084\1072\1090\1100",Space,Str "\1074",Space,Str "\1084\1080\1088",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1099\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1086\1073\1099\1095\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1074\1099\1095\1080\1090\1072\1085\1080\1103",Str ",",Space,Str "\1089\1083\1086\1078\1077\1085\1080\1103",Space,Str "\1080",Space,Str "\1091\1084\1085\1086\1078\1077\1085\1080\1103",Str ".",Space,Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1079\1072\1087\1080\1089\1072\1090\1100",Space,Str "\1101\1090\1086",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1077",LineBreak,Str "\1085\1077\1084\1085\1086\1075\1086",Space,Str "\1087\1086",Space,Str "\1076\1088\1091\1075\1086\1084\1091",Str ":"]
,RawBlock "latex" "\n\\begin{code}\neval :: Exp -> Reader Env Int\neval (Lit n)    = pure n\neval (Neg n)    = negateA $ eval n\neval (Add a b)  = eval a `addA` eval b\neval (Mul a b)  = eval a `mulA` eval b\neval (Var name) = Reader $ \\env -> value env name    \n   \naddA      = liftA2 (+)\nmulA      = liftA2 (*)  \nnegateA   = liftA negate  \n\\end{code}\n"
,Header 3 [Str "\1058\1080\1087",Space,Str "Map"]
,Para [RawInline "tex" "\\Types{Map, \1072\1089\1089\1086\1094\1080\1072\1090\1080\1074\1085\1099\1077 \1084\1072\1089\1089\1080\1074\1099}",Space,Str "\1044\1083\1103",Space,Str "\1090\1086\1075\1086",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1079\1072\1082\1086\1085\1095\1080\1090\1100",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{eval}",Space,Str "\1085\1072\1084",Space,Str "\1085\1091\1078\1085\1086",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1090\1080\1087",Space,RawInline "latex" "\\In{Env}",Space,Str "\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{value}",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1084\1099",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1091\1077\1084\1089\1103",Space,Str "\1090\1080\1087\1086\1084",Space,RawInline "latex" "\\In{Map}",Str ",",Space,Str "\1086\1085",Space,Str "\1087\1088\1077\1076\1085\1072\1079\1085\1072\1095\1077\1085",Space,Str "\1076\1083\1103",Space,Str "\1093\1088\1072\1085\1077\1085\1080\1103",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Space,Str "\1087\1086",Space,Str "\1082\1083\1102\1095\1091",Str "."]
,Para [Str "\1069\1090\1086\1090",Space,Str "\1090\1080\1087",Space,Str "\1078\1080\1074\1105\1090",Space,Str "\1074",Space,Str "\1089\1090\1072\1085\1076\1072\1088\1090\1085\1086\1084",Space,Str "\1084\1086\1076\1091\1083\1077",Space,RawInline "latex" "\\In{Data.Map}",Str ".",Space,Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1077\1075\1086",Space,Str "\1086\1087\1080\1089\1072\1085\1080\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndata Map k a = ..\n\\end{code}\n"
,Para [Str "\1055\1077\1088\1074\1099\1081",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{k}",Space,Str "\1101\1090\1086",Space,Str "\1082\1083\1102\1095",Str ",",Space,Str "\1072",Space,Str "\1074\1090\1086\1088\1086\1081",Space,Str "\1101\1090\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Str ".",Space,Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1089\1086\1079\1076\1072\1090\1100",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Map}",Space,Str "\1080\1079",Space,Str "\1089\1087\1080\1089\1082\1072",Space,Str "\1087\1072\1088",Space,Str "\1082\1083\1102\1095",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{fromList}",Str "."]
,Para [Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1086\1089\1085\1086\1074\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n-- \1057\1086\1079\1076\1072\1105\1084 \1079\1085\1072\1095\1077\1085\1080\1103 \1090\1080\1087\1072 Map                    -- \1089\1086\1079\1076\1072\1105\1084  \nempty :: Map k a                                -- \1087\1091\1089\1090\1086\1081 Map\nfromList :: Ord k => [(k, a)] -> Map k a        -- \1087\1086 \1089\1087\1080\1089\1082\1091 (\1082\1083\1102\1095, \1079\1085\1072\1095\1077\1085\1080\1077)\n\n-- \1059\1079\1085\1072\1105\1084 \1079\1085\1072\1095\1077\1085\1080\1077 \1087\1086 \1082\1083\1102\1095\1091\n(!)     :: Ord k => Map k a -> k -> a           \nlookup  :: Ord k => k -> Map k a -> Maybe a\n\n-- \1044\1086\1073\1072\1074\1083\1103\1077\1084 \1101\1083\1077\1084\1077\1085\1090\1099\ninsert :: Ord k => k -> a -> Map k a -> Map k a\n\n-- \1059\1076\1072\1083\1103\1077\1084 \1101\1083\1077\1084\1077\1085\1090\1099\ndelete :: Ord k => k -> Map k a -> Map k a\n\\end{code}\n"
,Para [Str "\1054\1073\1088\1072\1090\1080\1090\1077",Space,Str "\1074\1085\1080\1084\1072\1085\1080\1077",Space,Str "\1085\1072",Space,Str "\1086\1075\1088\1072\1085\1080\1095\1077\1085\1080\1077",Space,RawInline "latex" "\\In{Ord k}",Space,Str "\1074",Space,Str "\1101\1090\1080\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1103\1093",Str ",",Space,Str "\1082\1083\1102\1095",Space,Str "\1076\1086\1083\1078\1077\1085",Space,Str "\1073\1099\1090\1100",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1086\1084",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Ord}",Str ".",Space,Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1082\1072\1082",Space,Str "\1101\1090\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1088\1072\1073\1086\1090\1072\1102\1090",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Exp> :m +Data.Map\n*Exp Data.Map> :m -Exp\nData.Map> let v = fromList [(1, \"Hello\"), (2, \"Bye\")]\nData.Map> v ! 1\n\"Hello\"\nData.Map> v ! 3\n\"*** Exception: Map.find: element not in the map\nData.Map> lookup 3 v\nNothing\nData.Map> let v1 = insert 3 \"Yo\" v\nData.Map> v1 ! 3\n\"Yo\"\n\\end{code}\n"
,Para [Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{lookup}",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1089\1090\1072\1073\1080\1083\1100\1085\1099\1084",Space,Str "\1072\1085\1072\1083\1086\1075\1086\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{!}",Str ".",Space,Str "\1042",Space,Str "\1090\1086\1084",Space,Str "\1089\1084\1099\1089\1083\1077",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1086\1085\1072",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1072",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,RawInline "latex" "\\In{Maybe}",Str ".",Space,Str "\1054\1085\1072",Space,Str "\1085\1077",Space,Str "\1087\1088\1080\1074\1077\1076\1105\1090",Space,Str "\1082",Space,Str "\1087\1072\1076\1077\1085\1080\1102",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1099",Str ",",Space,Str "\1077\1089\1083\1080",Space,Str "\1076\1083\1103",Space,Str "\1076\1072\1085\1085\1086\1075\1086",Space,Str "\1082\1083\1102\1095\1072",Space,Str "\1085\1077",Space,Str "\1085\1072\1081\1076\1105\1090\1089\1103",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Str "."]
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{value}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nimport qualified Data.Map as M(Map, lookup, fromList)\n\n...\n\ntype Env = M.Map String Int\n\nvalue :: Env -> String -> Int\nvalue env name = maybe errorMsg $ M.lookup env name \n    where errorMsg = error $ \"value is undefined for \" ++ name\n\\end{code}\n"
,Para [Str "\1054\1073\1099\1095\1085\1086",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1080\1079",Space,Str "\1084\1086\1076\1091\1083\1103",Space,RawInline "latex" "\\In{Data.Map}",Space,Str "\1074\1082\1083\1102\1095\1072\1102\1090\1089\1103",Space,Str "\1089",Space,Str "\1076\1080\1088\1077\1082\1090\1080\1074\1086\1081",Space,RawInline "latex" "\\In{qualified}",Str ",",Space,Str "\1087\1086\1089\1082\1086\1083\1100\1082\1091",Space,Str "\1080\1084\1077\1085\1072",Space,Str "\1084\1085\1086\1075\1080\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1080\1079",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1084\1086\1076\1091\1083\1103",Space,Str "\1089\1086\1074\1087\1072\1076\1072\1102\1090",Space,Str "\1089",Space,Str "\1080\1084\1077\1085\1072\1084\1080",Space,Str "\1080\1079",Space,Str "\1084\1086\1076\1091\1083\1103",Space,RawInline "latex" "\\In{Prelude}",Str ".",Space,Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1074\1089\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1103",Space,Str "\1080\1079",Space,Str "\1084\1086\1076\1091\1083\1103",Space,RawInline "latex" "\\In{Data.Map}",Space,Str "\1087\1080\1096\1091\1090\1089\1103",Space,Str "\1089",Space,Str "\1087\1088\1080\1089\1090\1072\1074\1082\1086\1081",Space,RawInline "latex" "\\In{M.}",Str "."]
,Para [Str "\1057\1086\1079\1076\1072\1076\1080\1084",Space,Str "\1074\1089\1087\1086\1084\1086\1075\1072\1090\1077\1083\1100\1085\1091\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1091\1087\1088\1086\1089\1090\1080\1090",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1077",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1081",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nrunExp :: Exp -> [(String, Int)] -> Int\nrunExp a env = runReader (eval a) $ M.fromList env\n\\end{code}\n"
,Para [Str "\1057\1086\1093\1088\1072\1085\1080\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1085\1086\1074\1099\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1074",Space,Str "\1084\1086\1076\1091\1083\1077",Space,RawInline "latex" "\\In{Exp}",Str ".",Space,Str "\1048",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1095\1090\1086",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1087\1086\1083\1091\1095\1080\1083\1086\1089\1100",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Exp> let env a b = [(\"1\", a), (\"2\", b)]\n*Exp> let exp = 2 * (n 1 + n 2) - n 1\n*Exp> runExp exp (env 1 2)\n5\n*Exp> runExp exp (env 10 5)\n20\n\\end{code}\n"
,Para [Str "\1058\1072\1082",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100\1089\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1103\1084\1080",Space,Str "\1089",Space,Str "\1086\1082\1088\1091\1078\1077\1085\1080\1077\1084",Space,Str "\1076\1083\1103",Space,Str "\1090\1086\1075\1086",Str ",",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1095\1080\1090\1072\1090\1100",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1080\1079",Space,Str "\1086\1073\1097\1077\1075\1086",Space,Str "\1080\1089\1090\1086\1095\1085\1080\1082\1072",Str ".",Space,Str "\1042\1087\1088\1086\1095\1077\1084",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1087\1088\1086\1089\1090\1086",Space,Str "\1087\1077\1088\1077\1076\1072\1074\1072\1090\1100",Space,Str "\1086\1082\1088\1091\1078\1077\1085\1080\1077",Space,Str "\1076\1086\1087\1086\1083\1085\1080\1090\1077\1083\1100\1085\1099\1084",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1084",Space,Str "\1080",Space,Str "\1085\1077",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100\1089\1103",Space,Str "\1084\1086\1085\1072\1076\1072\1084\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\neval :: Env -> Exp -> Int\neval env x = case x of\n    Lit n       -> n\n    Neg n       -> negate $ eval' n\n    Add a b     -> eval' a + eval' b\n    Mul a b     -> eval' a + eval' b\n    Var name    -> value env name\n    where eval' = eval env\n\\end{code}\n"
,Header 2 [Str "\1053\1072\1082\1086\1087\1083\1077\1085\1080\1077",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1072"]
,Para [Str "\1056\1072\1089\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1087\1086",Str "-",Str "\1087\1086\1076\1088\1086\1073\1085\1077\1077",Space,Str "\1090\1080\1087",Space,RawInline "latex" "\\In{Writer}",Str ".",Space,Str "\1054\1085",Space,Str "\1074\1099\1087\1086\1083\1085\1103\1077\1090",Space,Str "\1079\1072\1076\1072\1095\1091",Space,Str "\1086\1073\1088\1072\1090\1085\1091\1102",Space,Str "\1082",Space,Str "\1090\1080\1087\1091",Space,RawInline "latex" "\\In{Reader}",Str ".",Space,Str "\1050\1086\1075\1076\1072",Space,Str "\1084\1099",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1083\1080\1089\1100",Space,Str "\1090\1080\1087\1086\1084",Space,RawInline "latex" "\\In{Reader}",Str ",",Space,Str "\1084\1099",Space,Str "\1084\1086\1075\1083\1080",Space,Str "\1074",Space,Str "\1083\1102\1073\1086\1084",Space,Str "\1084\1077\1089\1090\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1080\1079\1074\1083\1077\1082\1072\1090\1100",Space,Str "\1076\1072\1085\1085\1099\1077",Space,Str "\1080\1079",Space,Str "\1086\1082\1088\1091\1078\1077\1085\1080\1103",Str ".",Space,Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1078\1077",Space,Str "\1084\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1085\1077",Space,Str "\1080\1079\1074\1083\1077\1082\1072\1090\1100",Space,Str "\1076\1072\1085\1085\1099\1077",Space,Str "\1080\1079",Space,Str "\1086\1082\1088\1091\1078\1077\1085\1080\1103",Str ",",Space,Str "\1072",Space,Str "\1079\1072\1087\1080\1089\1099\1074\1072\1090\1100",Space,Str "\1080\1093",Str "."]
,Para [Str "\1056\1072\1089\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1090\1072\1082\1091\1102",Space,Str "\1079\1072\1076\1072\1095\1091",Space,Str "\1085\1072\1084",Space,Str "\1085\1091\1078\1085\1086",Space,Str "\1086\1073\1086\1081\1090\1080",Space,Str "\1076\1077\1088\1077\1074\1086",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Exp}",Space,Str "\1080",Space,Str "\1087\1086\1076\1089\1095\1080\1090\1072\1090\1100",Space,Str "\1074\1089\1077",Space,Str "\1073\1080\1085\1072\1088\1085\1099\1077",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Str ".",Space,Str "\1052\1099",Space,Str "\1087\1088\1080\1073\1072\1074\1083\1103\1077\1084",Space,Str "\1082",Space,Str "\1085\1072\1082\1086\1087\1080\1090\1077\1083\1102",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1072",Space,Str "\1077\1076\1080\1085\1080\1094\1091",Space,Str "\1079\1072",Space,Str "\1082\1072\1078\1076\1099\1081",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088",Space,RawInline "latex" "\\In{Add}",Space,Str "\1080\1083\1080",Space,RawInline "latex" "\\In{Mul}",Str ".",Space,Str "\1058\1080\1087",Space,Str "\1089\1086\1086\1073\1097\1077\1085\1080\1081",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1095\1080\1089\1083\1086\1084",Str ".",Space,Str "\1053\1072\1084",Space,Str "\1085\1091\1078\1085\1086",Space,Str "\1089\1076\1077\1083\1072\1090\1100",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Monoid}",Space,Str "\1076\1083\1103",Space,Str "\1095\1080\1089\1077\1083",Str "."]
,Para [Str "\1053\1072\1087\1086\1084\1085\1102",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1090\1080\1087",Space,Str "\1085\1072\1082\1086\1087\1080\1090\1077\1083\1103",Space,Str "\1076\1086\1083\1078\1077\1085",Space,Str "\1073\1099\1090\1100",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1086\1084",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Monoid}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nclass Monoid a where\n    mempty  :: a\n    mappend :: a -> a -> a\n\n    mconcat :: [a] -> a\n    mconcat = foldr mappend mempty\n\\end{code}\n"
,Para [Str "\1053\1086",Space,Str "\1076\1083\1103",Space,Str "\1095\1080\1089\1077\1083",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1086",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1074\1072\1088\1080\1072\1085\1090\1086\1074",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1091\1076\1086\1074\1083\1077\1090\1074\1086\1088\1103\1102\1090",Space,Str "\1089\1074\1086\1081\1089\1090\1074\1072\1084",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1089\1083\1086\1078\1077\1085\1080\1103",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ninstance Num a => Monoid a where\n    mempty  = 0\n    mappend = (+)\n\\end{code}\n"
,Para [Str "\1048",Space,Str "\1091\1084\1085\1086\1078\1077\1085\1080\1103",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ninstance Num a => Monoid a where\n    mempty  = 1\n    mappend = (*)\n\\end{code}\n"
,Para [Str "\1044\1083\1103",Space,Str "\1085\1072\1096\1077\1081",Space,Str "\1079\1072\1076\1072\1095\1080",Space,Str "\1087\1086\1076\1086\1081\1076\1105\1090",Space,Str "\1087\1077\1088\1074\1099\1081",Space,Str "\1074\1072\1088\1080\1072\1085\1090",Str ",",Space,Str "\1085\1086",Space,Str "\1085\1077",Space,Str "\1080\1089\1082\1083\1102\1095\1077\1085\1072",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1086\1089\1090\1100",Space,Str "\1090\1086\1075\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1076\1083\1103",Space,Str "\1076\1088\1091\1075\1086\1081",Space,Str "\1079\1072\1076\1072\1095\1080",Space,Str "\1085\1072\1084",Space,Str "\1087\1086\1085\1072\1076\1086\1073\1080\1090\1089\1103",Space,Str "\1074\1090\1086\1088\1086\1081",Str ".",Space,Str "\1053\1086",Space,Str "\1090\1086\1075\1076\1072",Space,Str "\1084\1099",Space,Str "\1091\1078\1077",Space,Str "\1085\1077",Space,Str "\1089\1084\1086\1078\1077\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1090\1072\1082\1086\1081",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1088\1077\1096\1077\1085\1080\1103",Space,Str "\1101\1090\1086\1081",Space,Str "\1087\1088\1086\1073\1083\1077\1084\1099",Space,Str "\1074",Space,Str "\1084\1086\1076\1091\1083\1077",Space,RawInline "latex" "\\In{Data.Monoid}",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1086",Space,Str "\1076\1074\1072",Space,Str "\1090\1080\1087\1072",Space,Str "\1086\1073\1105\1088\1090\1082\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nnewtype Sum  a = Sum  { getSum  :: a }\nnewtype Prod a = Prod { getProd :: a }\n\\end{code}\n"
,Para [Str "\1042",Space,Str "\1101\1090\1086\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1080",Space,Str "\1077\1089\1090\1100",Space,Str "\1076\1074\1072",Space,Str "\1085\1086\1074\1099\1093",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1072",Str ".",Space,Str "\1055\1077\1088\1074\1099\1081",Space,Str "\1101\1090\1086",Space,Str "\1082\1083\1102\1095\1077\1074\1086\1077",Space,Str "\1089\1083\1086\1074\1086",Space,RawInline "tex" "\\KeyWord{newtype}",Space,RawInline "latex" "\\In{newtype}",Str ",",Space,Str "\1072",Space,Str "\1074\1090\1086\1088\1086\1081",Space,Str "\1101\1090\1086",Space,Str "\1092\1080\1075\1091\1088\1085\1099\1077",Space,Str "\1089\1082\1086\1073\1082\1080",Str ".",Space,Str "\1063\1090\1086",Space,Str "\1074\1089\1105",Space,Str "\1101\1090\1086",Space,Str "\1079\1085\1072\1095\1080\1090",Str "?"]
,Header 3 [Str "\1058\1080\1087",Str "-",Str "\1086\1073\1105\1088\1090\1082\1072",Space,Str "newtype"]
,Para [Str "\1050\1083\1102\1095\1077\1074\1086\1077",Space,Str "\1089\1083\1086\1074\1086",Space,RawInline "latex" "\\In{newtype}",Space,Str "\1074\1074\1086\1076\1080\1090",Space,Str "\1085\1086\1074\1099\1081",Space,Str "\1090\1080\1087",Str "-",Str "\1086\1073\1105\1088\1090\1082\1091",Str ".",Space,Str "\1058\1080\1087",Str "-",Str "\1086\1073\1105\1088\1090\1082\1072",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1080\1084\1077\1090\1100",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1086\1076\1080\1085",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088",Str ",",Space,Str "\1091",Space,Str "\1082\1086\1090\1086\1088\1086\1075\1086",Space,Str "\1083\1080\1096\1100",Space,Str "\1086\1076\1085\1080",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090",Str ".",Space,Str "\1047\1072\1087\1080\1089\1100",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nnewtype Sum a = Sum a\n\\end{code}\n"
,Para [Str "\1069\1090\1086",Space,Str "\1090\1086\1078\1077",Space,Str "\1089\1072\1084\1086\1077",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1080"]
,RawBlock "latex" "\n\\begin{code}\ndata Sum a = Sum a\n\\end{code}\n"
,Para [Str "\1045\1076\1080\1085\1089\1090\1074\1077\1085\1085\1086\1077",Space,Str "\1086\1090\1083\1080\1095\1080\1077",Space,Str "\1079\1072\1082\1083\1102\1095\1072\1077\1090\1089\1103",Space,Str "\1074",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1074",Space,Str "\1089\1083\1091\1095\1072\1077",Space,RawInline "latex" "\\In{newtype}",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1090\1077\1083\1100",Space,Str "\1085\1077",Space,Str "\1074\1080\1076\1080\1090",Space,Str "\1088\1072\1079\1085\1080\1094\1099",Space,Str "\1084\1077\1078\1076\1091",Space,RawInline "latex" "\\In{Sum a}",Space,Str "\1080",Space,RawInline "latex" "\\In{a}",Str ".",Space,Str "\1045\1105",Space,Str "\1074\1080\1076\1080\1090",Space,Str "\1083\1080\1096\1100",Space,Str "\1082\1086\1084\1087\1080\1083\1103\1090\1086\1088",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1086\1079\1085\1072\1095\1072\1077\1090",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1085\1072",Space,Str "\1088\1072\1079\1074\1086\1088\1072\1095\1080\1074\1072\1085\1080\1077",Space,Str "\1080",Space,Str "\1079\1072\1074\1086\1088\1072\1095\1080\1074\1072\1085\1080\1077",Space,Str "\1090\1072\1082\1086\1075\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1074",Space,Str "\1090\1080\1087",Space,Str "\1086\1073\1105\1088\1090\1082\1091",Space,Str "\1085\1077",Space,Str "\1090\1088\1072\1090\1080\1090\1089\1103",Space,Str "\1085\1080\1082\1072\1082\1080\1093",Space,Str "\1091\1089\1080\1083\1080\1081",Str ".",Space,Str "\1058\1072\1082\1080\1077",Space,Str "\1090\1080\1087\1099",Space,Str "\1087\1086\1076\1093\1086\1076\1103\1090",Space,Str "\1076\1083\1103",Space,Str "\1088\1077\1096\1077\1085\1080\1103",Space,Str "\1076\1074\1091\1093",Space,Str "\1079\1072\1076\1072\1095",Str ":"]
,BulletList
 [[Para [Str "\1041\1086\1083\1077\1077",Space,Str "\1090\1086\1095\1085\1072\1103",Space,Str "\1087\1088\1086\1074\1077\1088\1082\1072",Space,Str "\1090\1080\1087\1086\1074",Str "."]
  ,Para [Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1077\1089\1090\1100",Space,Str "\1090\1080\1087\1099",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1086\1087\1080\1089\1099\1074\1072\1102\1090",Space,Str "\1092\1080\1079\1080\1095\1077\1089\1082\1080\1077",Space,Str "\1074\1077\1083\1080\1095\1080\1085\1099",Str ",",Space,Str "\1074\1089\1077",Space,Str "\1086\1085\1080",Space,Str "\1103\1074\1083\1103\1102\1090\1089\1103",Space,Str "\1095\1080\1089\1083\1072\1084\1080",Str ",",Space,Str "\1085\1086",Space,Str "\1091",Space,Str "\1085\1080\1093",Space,Str "\1090\1072\1082\1078\1077",Space,Str "\1077\1089\1090\1100",Space,Str "\1080",Space,Str "\1088\1072\1079\1084\1077\1088\1085\1086\1089\1090\1080",Str ".",Space,Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1085\1072\1087\1080\1089\1072\1090\1100",Str ":"]
  ,RawBlock "latex" "\n\\begin{code}\ntype Velocity   = Double\ntype Time       = Double\ntype Length     = Double\n\nvelocity :: Length -> Time -> Velocity\nvelocity leng time = leng / time\n\\end{code}\n"
  ,Para [Str "\1042",Space,Str "\1101\1090\1086\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1084\1099",Space,Str "\1089\1087\1086\1082\1086\1081\1085\1086",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1087\1086\1076\1089\1090\1072\1074\1080\1090\1100",Space,Str "\1085\1072",Space,Str "\1084\1077\1089\1090\1086",Space,Str "\1074\1088\1077\1084\1077\1085\1080",Space,Str "\1087\1091\1090\1100",Space,Str "\1080",Space,Str "\1085\1072\1086\1073\1086\1088\1086\1090",Str ".",Space,Str "\1053\1086",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1090\1080\1087\1086\1074",Space,Str "\1086\1073\1105\1088\1090\1086\1082",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1080\1089\1082\1083\1102\1095\1080\1090\1100",Space,Str "\1101\1090\1080",Space,Str "\1089\1083\1091\1095\1072\1080",Str ":"]
  ,RawBlock "latex" "\n\\begin{code}\nnewtype Velocity   = Velocity   Double\nnewtype Time       = Time       Double\nnewtype Length     = Length     Double\n\nvelocity :: Length -> Time -> Velocity\nvelocity (Length leng) (Time time) = Velocity $ leng / time\n\\end{code}\n"
  ,Para [Str "\1042",Space,Str "\1101\1090\1086\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1084\1099",Space,Str "\1087\1088\1086\1074\1086\1076\1080\1084",Space,Str "\1087\1088\1086\1074\1077\1088\1082\1091",Space,Str "\1087\1086",Space,Str "\1088\1072\1079\1084\1077\1088\1085\1086\1089\1090\1103\1084",Str ",",Space,Str "\1082\1086\1084\1087\1080\1083\1103\1090\1086\1088",Space,Str "\1085\1077",Space,Str "\1076\1086\1087\1091\1089\1090\1080\1090",Space,Str "\1089\1084\1077\1096\1080\1074\1072\1085\1080\1103",Space,Str "\1076\1072\1085\1085\1099\1093",Str "."]]
 ,[Para [Str "\1054\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1080\1093",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1086\1074",Space,Str "\1086\1076\1085\1086\1075\1086",Space,Str "\1082\1083\1072\1089\1089\1072",Space,Str "\1076\1083\1103",Space,Str "\1086\1076\1085\1086\1075\1086",Space,Str "\1090\1080\1087\1072",Str ".",Space,Str "\1069\1090\1086\1090",Space,Str "\1089\1083\1091\1095\1072\1081",Space,Str "\1084\1099",Space,Str "\1082\1072\1082",Space,Str "\1088\1072\1079",Space,Str "\1080",Space,Str "\1088\1072\1089\1089\1084\1072\1090\1088\1080\1074\1072\1077\1084",Space,Str "\1076\1083\1103",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Monoid}",Str ".",Space,Str "\1053\1072\1084",Space,Str "\1085\1091\1078\1085\1086",Space,Str "\1089\1076\1077\1083\1072\1090\1100",Space,Str "\1076\1074\1072",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1072",Space,Str "\1076\1083\1103",Space,Str "\1086\1076\1085\1086\1075\1086",Space,Str "\1080",Space,Str "\1090\1086\1075\1086",Space,Str "\1078\1077",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Num a => a}",Str "."]
  ,Para [Str "\1057\1076\1077\1083\1072\1077\1084",Space,Str "\1076\1074\1077",Space,Str "\1086\1073\1105\1088\1090\1082\1080",Str "!"]
  ,RawBlock "latex" "\n\\begin{code}\nnewtype Sum  a = Sum  a\nnewtype Prod a = Prod a\n\\end{code}\n"
  ,Para [Str "\1058\1086\1075\1076\1072",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1076\1074\1072",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1072",Space,Str "\1076\1083\1103",Space,Str "\1076\1074\1091\1093",Space,Str "\1088\1072\1079\1085\1099\1093",Space,Str "\1090\1080\1087\1086\1074",Str ":"]
  ,Para [Str "\1054\1076\1080\1085",Space,Str "\1076\1083\1103",Space,RawInline "latex" "\\In{Sum}",Str ":"]
  ,RawBlock "latex" "\n\\begin{code}\ninstance Num a => Monoid (Sum a) where\n    mempty  = Sum 0\n    mappend (Sum a) (Sum b) = Sum (a + b)\n\\end{code}\n"
  ,Para [Str "\1040",Space,Str "\1076\1088\1091\1075\1086\1081",Space,Str "\1076\1083\1103",Space,RawInline "latex" "\\In{Prod}",Str ":"]
  ,RawBlock "latex" "\n\\begin{code}\ninstance Num a => Monoid (Prod a) where\n    mempty  = Prod 1\n    mappend (Prod a) (Prod b) = Prod (a * b)\n\\end{code}\n"]]
,Header 3 [Str "\1047\1072\1087\1080\1089\1080"]
,Para [Str "\1042\1090\1086\1088\1072\1103",Space,Str "\1085\1086\1074\1080\1085\1082\1072",Space,Str "\1079\1072\1082\1083\1102\1095\1072\1083\1072\1089\1100",Space,Str "\1074",Space,Str "\1092\1080\1075\1091\1088\1085\1099\1093",Space,Str "\1089\1082\1086\1073\1082\1072\1093",Str ".",Space,Str "\1057",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1092\1080\1075\1091\1088\1085\1099\1093",Space,Str "\1089\1082\1086\1073\1086\1082",Space,Str "\1074",Space,Str "Haskell",Space,Str "\1086\1073\1086\1079\1085\1072\1095\1072\1102\1090\1089\1103",Space,Emph [Str "\1079\1072\1087\1080\1089\1080"],Space,Str "(",Str "records",Str ")",Str ".",Space,Str "\1047\1072\1087\1080\1089\1100",Space,Str "\1101\1090\1086",Space,Str "\1087\1088\1086\1080\1079\1074\1077\1076\1077\1085\1080\1077",Space,Str "\1090\1080\1087\1072",Str ",",Space,Str "\1085\1086",Space,Str "\1089",Space,Str "\1074\1099\1076\1077\1083\1077\1085\1085\1099\1084\1080",Space,Str "\1080\1084\1077\1085\1072\1084\1080",Space,Str "\1076\1083\1103",Space,Str "\1087\1086\1083\1077\1081",Str "."]
,Para [Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1089\1076\1077\1083\1072\1090\1100",Space,Str "\1090\1080\1087",Space,Str "\1076\1083\1103",Space,Str "\1086\1087\1080\1089\1072\1085\1080\1103",Space,Str "\1087\1072\1089\1087\1086\1088\1090\1072",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndata Passport   = Person {\n    surname         :: String,      -- \1060\1072\1084\1080\1083\1080\1103\n    givenName       :: String,      -- \1048\1084\1103\n    nationality     :: String,      -- \1053\1072\1094\1080\1086\1085\1072\1083\1100\1085\1086\1089\1090\1100\n    dateOfBirth     :: Date,        -- \1044\1072\1090\1072 \1088\1086\1078\1076\1077\1085\1080\1103\n    sex             :: Bool,        -- \1055\1086\1083\n    placeOfBirth    :: String,      -- \1052\1077\1089\1090\1086 \1088\1086\1078\1076\1077\1085\1080\1103\n    authority       :: String,      -- \1052\1077\1089\1090\1086 \1074\1099\1076\1072\1095\1080 \1076\1086\1082\1091\1084\1077\1085\1090\1072\n    dateOfIssue     :: Date,        -- \1044\1072\1090\1072 \1074\1099\1076\1072\1095\1080\n    dateOfExpiry    :: Date         -- \1044\1072\1090\1072 \1086\1082\1086\1085\1095\1072\1085\1080\1103 \1089\1088\1086\1082\1072\n    } deriving (Eq, Show)           --      \1076\1077\1081\1089\1090\1074\1080\1103\n\ndata Date   = Date {\n                day     :: Int,\n                month   :: Int,\n                year    :: Int\n              } deriving (Show, Eq)\n\\end{code}\n"
,Para [Str "\1042",Space,Str "\1092\1080\1075\1091\1088\1085\1099\1093",Space,Str "\1089\1082\1086\1073\1082\1072\1093",Space,Str "\1095\1077\1088\1077\1079",Space,Str "\1079\1072\1087\1103\1090\1091\1102",Space,Str "\1084\1099",Space,Str "\1091\1082\1072\1079\1099\1074\1072\1077\1084",Space,Str "\1087\1086\1083\1103",Str ".",Space,Str "\1055\1086\1083\1077",Space,Str "\1089\1086\1089\1090\1086\1080\1090",Space,Str "\1080\1079",Space,Str "\1080\1084\1077\1085\1080",Space,Str "\1080",Space,Str "\1090\1080\1087\1072",Str ".",Space,Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1085\1072\1084",Space,Str "\1076\1086\1089\1090\1091\1087\1085\1099",Space,Str "\1076\1074\1077",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Str ":"]
,BulletList
 [[Para [Str "\1063\1090\1077\1085\1080\1077",Space,Str "\1087\1086\1083\1077\1081"]
  ,RawBlock "latex" "\n\\begin{code}\nhello :: Passport -> String\nhello p = \"Hello, \" ++ givenName p ++ \"!\"\n\\end{code}\n"
  ,Para [Str "\1044\1083\1103",Space,Str "\1095\1090\1077\1085\1080\1103",Space,Str "\1084\1099",Space,Str "\1087\1088\1086\1089\1090\1086",Space,Str "\1087\1086\1076\1089\1090\1072\1074\1083\1103\1077\1084",Space,Str "\1074",Space,Str "\1080\1084\1103",Space,Str "\1087\1086\1083\1103",Space,Str "\1076\1072\1085\1085\1086\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Str ".",Space,Str "\1042",Space,Str "\1101\1090\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1084\1099",Space,Str "\1087\1088\1080\1074\1077\1090\1089\1090\1074\1091\1077\1084",Space,Str "\1095\1077\1083\1086\1074\1077\1082\1072",Space,Str "\1080",Space,Str "\1086\1073\1088\1072\1097\1072\1077\1084\1089\1103",Space,Str "\1082",Space,Str "\1085\1077\1084\1091",Space,Str "\1087\1086",Space,Str "\1080\1084\1077\1085\1080",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1090\1086\1075\1086",Str ",",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1091\1079\1085\1072\1090\1100",Space,Str "\1077\1075\1086",Space,Str "\1080\1084\1103",Space,Str "\1084\1099",Space,Str "\1087\1086\1076\1089\1084\1086\1090\1088\1077\1083\1080",Space,Str "\1074",Space,Str "\1087\1072\1089\1087\1086\1088\1090",Str ",",Space,Str "\1074",Space,Str "\1087\1086\1083\1077",Space,RawInline "latex" "\\In{givenName}",Str "."]]
 ,[Para [Str "\1054\1073\1085\1086\1074\1083\1077\1085\1080\1077",Space,Str "\1087\1086\1083\1077\1081",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1103",Space,Str "\1087\1086\1083\1077\1081",Space,Str "\1084\1099",Space,Str "\1087\1086\1083\1100\1079\1091\1077\1084\1089\1103",Space,Str "\1090\1072\1082\1080\1084",Space,Str "\1089\1080\1085\1090\1072\1082\1089\1080\1089\1086\1084",Str ":"]
  ,RawBlock "latex" "\n\\begin{code}\nvalue { fieldName1 = newValue1, fieldName2 = newValue2, ... }\n\\end{code}\n"
  ,Para [Str "\1052\1099",Space,Str "\1087\1088\1080\1089\1074\1072\1080\1074\1072\1077\1084",Space,Str "\1074",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1080",Space,RawInline "latex" "\\In{value}",Space,Str "\1087\1086\1083\1102",Space,Str "\1089",Space,Str "\1080\1084\1077\1085\1077\1084",Space,RawInline "latex" "\\In{fieldName}",Space,Str "\1085\1086\1074\1086\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,RawInline "latex" "\\In{newFieldValue}",Str ".",Space,Str "\1050",Space,Str "\1087\1088\1080\1084\1077\1088\1091",Space,Str "\1087\1088\1086\1076\1083\1080\1084",Space,Str "\1089\1088\1086\1082",Space,Str "\1076\1077\1081\1089\1090\1074\1080\1103",Space,Str "\1087\1072\1089\1087\1086\1088\1090\1072",Space,Str "\1085\1072",Space,Str "\1076\1077\1089\1103\1090\1100",Space,Str "\1083\1077\1090",Str ":"]
  ,RawBlock "latex" "\n\\begin{code}\nprolongate :: Passport -> Passport \nprolongate p = p{ dateOfExpiry = newDate }\n    where newDate = oldDate { year = year oldDate + 10 }\n          oldDate = dateOfExpiry p      \n\\end{code}\n"]]
,Para [Str "\1042\1077\1088\1085\1105\1084\1089\1103",Space,Str "\1082",Space,Str "\1090\1080\1087\1072\1084",Space,RawInline "latex" "\\In{Sum}",Space,Str "\1080",Space,RawInline "latex" "\\In{Prod}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nnewtype Sum  a = Sum  { getSum  :: a }\nnewtype Prod a = Prod { getProd :: a }\n\\end{code}\n"
,Para [Str "\1069\1090\1086\1081",Space,Str "\1079\1072\1087\1080\1089\1100\1102",Space,Str "\1084\1099",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1083\1080",Space,Str "\1076\1074\1072",Space,Str "\1090\1080\1087\1072",Str "-",Str "\1086\1073\1105\1088\1090\1082\1080",Str ".",Space,Str "\1059",Space,Str "\1085\1072\1089",Space,Str "\1077\1089\1090\1100",Space,Str "\1076\1074\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1079\1072\1074\1086\1088\1072\1095\1080\1074\1072\1102\1090",Space,Str "\1086\1073\1099\1095\1085\1086\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Str ",",Space,Str "\1101\1090\1086",Space,RawInline "latex" "\\In{Sum}",Space,Str "\1080",Space,RawInline "latex" "\\In{Prod}",Str ".",Space,Str "\1057",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1079\1072\1087\1080\1089\1077\1081",Space,Str "\1084\1099",Space,Str "\1090\1091\1090",Space,Str "\1078\1077",Space,Str "\1074",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1080",Space,Str "\1090\1080\1087\1072",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1083\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1088\1072\1079\1074\1086\1088\1072\1095\1080\1074\1072\1102\1090",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str ",",Space,Str "\1101\1090\1086",Space,RawInline "latex" "\\In{getSum}",Space,Str "\1080",Space,RawInline "latex" "\\In{getProd}",Str "."]
,Para [Str "\1042\1089\1087\1086\1084\1085\1080\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1076\1083\1103",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{State}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndata State s a = State (s -> (a, s))\n\nrunState :: State s a -> (s -> (a, s))\nrunState (State f) = f\n\\end{code}\n"
,Para [Str "\1041\1099\1083\1086",Space,Str "\1073\1099",Space,Str "\1075\1086\1088\1072\1079\1076\1086",Space,Str "\1083\1091\1095\1096\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1077\1075\1086",Space,Str "\1090\1072\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nnewtype State s a = State{ runState :: s -> (a, s) }\n\\end{code}\n"
,Header 3 [Str "\1053\1072\1082\1086\1087\1083\1077\1085\1080\1077",Space,Str "\1095\1080\1089\1077\1083"]
,Para [Str "\1053\1086",Space,Str "\1074\1077\1088\1085\1105\1084\1089\1103",Space,Str "\1082",Space,Str "\1085\1072\1096\1077\1081",Space,Str "\1079\1072\1076\1072\1095\1077",Str ".",Space,Str "\1052\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1085\1072\1082\1072\1087\1083\1080\1074\1072\1090\1100",Space,Str "\1089\1091\1084\1084\1091",Space,Str "\1074",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1080",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Sum}",Str ".",Space,Str "\1055\1086\1089\1082\1086\1083\1100\1082\1091",Space,Str "\1085\1072\1089",Space,Str "\1080\1085\1090\1077\1088\1077\1089\1091\1077\1090",Space,Str "\1083\1080\1096\1100",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1085\1072\1082\1086\1087\1080\1090\1077\1083\1103",Str ",",Space,Str "\1085\1072\1096\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1090\1100",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1077\1076\1080\1085\1080\1095\1085\1086\1075\1086",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{()}",Str "."]
,RawBlock "latex" "\n\\begin{code}\ncountBiFuns :: Exp -> Int\ncountBiFuns = getSum . execWriter . countBiFuns'\n\ncountBiFuns' :: Exp -> Writer (Sum Int) ()\ncountBiFuns' x = case x of\n    Add a b -> tell (Sum 1) *> bi a b\n    Mul a b -> tell (Sum 1) *> bi a b\n    Neg a   -> un a\n    _       -> pure ()\n    where bi a b = countBiFuns' a *> countBiFuns' b  \n          un     = countBiFuns'\n\ntell :: Monoid a => a -> Writer a () \ntell a = Writer ((), a)\n\nexecWriter :: Writer msg a -> msg\nexecWriter (Writer (a, msg)) = msg\n\\end{code}\n"
,Para [Str "\1055\1077\1088\1074\1072\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{countBiFuns}",Space,Str "\1080\1079\1074\1083\1077\1082\1072\1077\1090",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1080\1079",Space,Str "\1090\1080\1087\1086\1074",Space,RawInline "latex" "\\In{Writer}",Space,Str "\1080",Space,RawInline "latex" "\\In{Sum}",Str ".",Space,Str "\1040",Space,Str "\1074\1090\1086\1088\1072\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{countBiFuns'}",Space,Str "\1074\1099\1095\1080\1089\1083\1103\1077\1090",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Str "."]
,Para [Str "\1052\1099",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1083\1080",Space,Str "\1076\1074\1077",Space,Str "\1074\1089\1087\1086\1084\1086\1075\1072\1090\1077\1083\1100\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{tell}",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1079\1072\1087\1080\1089\1099\1074\1072\1077\1090",Space,Str "\1089\1086\1086\1073\1097\1077\1085\1080\1077",Space,Str "\1074",Space,Str "\1085\1072\1082\1086\1087\1080\1090\1077\1083\1100",Space,Str "\1080",Space,RawInline "latex" "\\In{execWriter}",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1083\1080\1096\1100",Space,Str "\1089\1086\1086\1073\1097\1077\1085\1080\1077",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1089\1090\1072\1085\1076\1072\1088\1090\1085\1099\1077",Space,Str "\1076\1083\1103",Space,RawInline "latex" "\\In{Writer}",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str "."]
,Para [Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1082\1072\1082",Space,Str "\1088\1072\1073\1086\1090\1072\1077\1090",Space,Str "\1101\1090\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Exp> countBiFuns (n 2)\n0\n*Exp> countBiFuns (n 2 + n 1 + 2 + 3)\n3\n\\end{code}\n"
,Header 3 [Str "\1053\1072\1082\1086\1087\1083\1077\1085\1080\1077",Space,Str "\1083\1086\1075\1080\1095\1077\1089\1082\1080\1093",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081"]
,Para [Str "\1042",Space,Str "\1084\1086\1076\1091\1083\1077",Space,RawInline "latex" "\\In{Data.Monoid}",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1099",Space,Str "\1076\1074\1072",Space,Str "\1090\1080\1087\1072",Space,Str "\1076\1083\1103",Space,Str "\1085\1072\1082\1086\1087\1083\1077\1085\1080\1103",Space,Str "\1083\1086\1075\1080\1095\1077\1089\1082\1080\1093",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1090\1080\1087\1099",Space,RawInline "latex" "\\In{All}",Space,Str "\1080",Space,RawInline "latex" "\\In{Any}",Str ".",Space,Str "\1057",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{All}",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1087\1088\1086\1074\1077\1088\1080\1090\1100",Space,Str "\1074\1099\1087\1086\1083\1085\1103\1077\1090\1089\1103",Space,Str "\1083\1080",Space,Str "\1085\1077\1082\1086\1090\1086\1088\1086\1077",Space,Str "\1089\1074\1086\1081\1089\1090\1074\1086",Space,Str "\1076\1083\1103",Space,Str "\1074\1089\1077\1093",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Str ".",Space,Str "\1040",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Any}",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1091\1079\1085\1072\1090\1100",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1089\1091\1097\1077\1089\1090\1074\1091\1077\1090",Space,Str "\1093\1086\1090\1103",Space,Str "\1073\1099",Space,Str "\1086\1076\1080\1085",Space,Str "\1101\1083\1077\1084\1077\1085\1090",Str ",",Space,Str "\1076\1083\1103",Space,Str "\1082\1086\1090\1086\1088\1099\1093",Space,Str "\1101\1090\1086",Space,Str "\1089\1074\1086\1081\1089\1090\1074\1086",Space,Str "\1074\1099\1087\1086\1083\1085\1077\1085\1086",Str "."]
,Para [Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1086\1074",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Monoid}",Space,Str "\1076\1083\1103",Space,Str "\1101\1090\1080\1093",Space,Str "\1090\1080\1087\1086\1074",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nnewtype All = All { getAll :: Bool }\n\ninstance Monoid All where\n        mempty = All True\n        All x `mappend` All y = All (x && y)\n\\end{code}\n"
,Para [Str "\1042",Space,Str "\1090\1080\1087\1077",Space,RawInline "latex" "\\In{All}",Space,Str "\1084\1099",Space,Str "\1085\1072\1082\1072\1087\1083\1080\1074\1072\1077\1084",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1083\1086\1075\1080\1095\1077\1089\1082\1086\1075\1086",Space,Quoted DoubleQuote [Str "\1080"],Str ".",Space,Str "\1053\1077\1081\1090\1088\1072\1083\1100\1085\1099\1084",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1086\1084",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088",Space,RawInline "latex" "\\In{True}",Str ".",Space,Str "\1048\1090\1086\1075\1086\1074\1086\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1085\1072\1082\1086\1087\1080\1090\1077\1083\1103",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1088\1072\1074\1085\1086",Space,RawInline "latex" "\\In{True}",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1074",Space,Str "\1090\1086\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Str ",",Space,Str "\1077\1089\1083\1080",Space,Str "\1074\1089\1077",Space,Str "\1085\1072\1082\1072\1087\1083\1080\1074\1072\1077\1084\1099\1077",Space,Str "\1089\1086\1086\1073\1097\1077\1085\1080\1103",Space,Str "\1073\1099\1083\1080",Space,Str "\1088\1072\1074\1085\1099",Space,RawInline "latex" "\\In{True}",Str "."]
,Para [Str "\1042",Space,Str "\1090\1080\1087\1077",Space,RawInline "latex" "\\In{Any}",Space,Str "\1074\1089\1105",Space,Str "\1085\1072\1086\1073\1086\1088\1086\1090",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ninstance Monoid Any where\n        mempty = Any False\n        Any x `mappend` Any y = Any (x || y)\n\\end{code}\n"
,Para [Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1082\1072\1082",Space,Str "\1088\1072\1073\1086\1090\1072\1102\1090",Space,Str "\1101\1090\1080",Space,Str "\1090\1080\1087\1099",Str ".",Space,Str "\1057\1086\1089\1090\1072\1074\1080\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1087\1088\1086\1074\1077\1088\1103\1077\1090",Space,Str "\1086\1090\1089\1091\1090\1089\1090\1074\1080\1077",Space,Str "\1086\1087\1077\1088\1072\1090\1086\1088\1072",Space,Str "\1084\1080\1085\1091\1089",Space,Str "\1074",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nnoNeg :: Exp -> Bool\nnoNeg = not . getAny . execWriter . anyNeg\n\nanyNeg :: Exp -> Writer Any ()\nanyNeg x = case x of\n    Neg _   -> tell (Any True)\n    Add a b -> bi a b\n    Mul a b -> bi a b\n    _       -> pure ()\n    where bi a b = anyNeg a *> anyNeg b            \n\\end{code}\n"
,Para [Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{anyNeg}",Space,Str "\1087\1088\1086\1074\1077\1088\1103\1077\1090",Space,Str "\1077\1089\1090\1100",Space,Str "\1083\1080",Space,Str "\1074",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1080",Space,Str "\1093\1086\1090\1103",Space,Str "\1073\1099",Space,Str "\1086\1076\1080\1085",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088",Space,RawInline "latex" "\\In{Neg}",Str ".",Space,Str "\1042",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{noNeg}",Space,Str "\1084\1099",Space,Str "\1080\1079\1074\1083\1077\1082\1072\1077\1084",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090",Space,Str "\1080",Space,Str "\1073\1077\1088\1105\1084",Space,Str "\1077\1075\1086",Space,Str "\1086\1090\1088\1080\1094\1072\1085\1080\1077",Str ",",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1091\1073\1077\1076\1080\1090\1100\1089\1103",Space,Str "\1074",Space,Str "\1090\1086\1084",Space,Str "\1095\1090\1086",Space,Str "\1074",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1080",Space,Str "\1085\1077",Space,Str "\1074\1089\1090\1088\1077\1090\1080\1083\1086\1089\1100",Space,Str "\1085\1080",Space,Str "\1086\1076\1085\1086\1075\1086",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088\1072",Space,RawInline "latex" "\\In{Neg}",Str "."]
,RawBlock "latex" "\n\\begin{code}\n*Exp> noNeg (n 2 + n 1 + 2 + 3)\nTrue\n*Exp> noNeg (n 2 - n 1 + 2 + 3)\nFalse\n\\end{code}\n"
,Header 3 [Str "\1053\1072\1082\1086\1087\1083\1077\1085\1080\1077",Space,Str "\1089\1087\1080\1089\1082\1086\1074"]
,Para [Str "\1069\1082\1079\1077\1084\1087\1083\1103\1088",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Monoid}",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1105\1085",Space,Str "\1080",Space,Str "\1076\1083\1103",Space,Str "\1089\1087\1080\1089\1082\1086\1074",Str ".",Space,Str "\1055\1088\1077\1076\1087\1086\1083\1086\1078\1080\1084",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1077\1089\1090\1100",Space,Str "\1076\1077\1088\1077\1074\1086",Str ",",Space,Str "\1074",Space,Str "\1082\1072\1078\1076\1086\1084",Space,Str "\1091\1079\1083\1077",Space,Str "\1082\1086\1090\1086\1088\1086\1075\1086",Space,Str "\1085\1072\1093\1086\1076\1103\1090\1089\1103",Space,Str "\1095\1080\1089\1083\1072",Str ",",Space,Str "\1076\1072\1074\1072\1081\1090\1077",Space,Str "\1089\1086\1073\1077\1088\1105\1084",Space,Str "\1074\1089\1077",Space,Str "\1095\1080\1089\1083\1072",Space,Str "\1073\1086\1083\1100\1096\1077",Space,Str "5",Str ",",Space,Str "\1085\1086",Space,Str "\1084\1077\1085\1100\1096\1077",Space,Str "10",Str ".",Space,Str "\1044\1077\1088\1077\1074\1100\1103",Space,Str "\1084\1099",Space,Str "\1074\1086\1079\1100\1084\1105\1084",Space,Str "\1080\1079",Space,Str "\1084\1086\1076\1091\1083\1103",Space,RawInline "latex" "\\In{Data.Tree}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndata Tree a   = Node \n        { rootLabel :: a           -- \1079\1085\1072\1095\1077\1085\1080\1077 \1084\1077\1090\1082\1080\n        , subForest :: Forest a    -- \1085\1086\1083\1100 \1080\1083\1080 \1085\1077\1089\1082\1086\1083\1100\1082\1086 \1076\1086\1095\1077\1088\1085\1080\1093 \1076\1077\1088\1077\1074\1100\1077\1074\n        }\n\ntype Forest a = [Tree a]\n\\end{code}\n"
,Para [Str "\1048\1085\1090\1077\1088\1077\1089\1085\1099\1081",Space,Str "\1090\1080\1087",Str ".",Space,Str "\1058\1080\1087",Space,RawInline "latex" "\\In{Tree}",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1105\1085",Space,Str "\1095\1077\1088\1077\1079",Space,RawInline "latex" "\\In{Forest}",Str ",",Space,Str "\1072",Space,RawInline "latex" "\\In{Forest}",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1105\1085",Space,Str "\1095\1077\1088\1077\1079",Space,RawInline "latex" "\\In{Tree}",Str ".",Space,Str "\1055\1086",Space,Str "\1101\1090\1086\1084\1091",Space,Str "\1090\1080\1087\1091",Space,Str "\1084\1099",Space,Str "\1074\1080\1076\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1082\1072\1078\1076\1099\1081",Space,Str "\1091\1079\1077\1083",Space,Str "\1089\1086\1076\1077\1088\1078\1080\1090",Space,Str "\1085\1077\1082\1086\1090\1086\1088\1086\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{a}",Str ",",Space,Str "\1080",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1076\1086\1095\1077\1088\1085\1080\1093",Space,Str "\1076\1077\1088\1077\1074\1100\1077\1074",Str "."]
,Para [Str "\1057\1086\1089\1090\1072\1074\1080\1084",Space,Str "\1076\1077\1088\1077\1074\1086",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Exp> :m Data.Tree\nPrelude Data.Tree> let t a = Node a []\nPrelude Data.Tree> let list a = Node a []\nPrelude Data.Tree> let bi v a b = Node v [a, b]\nPrelude Data.Tree> let un v a   = Node v [a]\nPrelude Data.Tree> \nPrelude Data.Tree> let tree1 = bi 10 (un 2 $ un 6 $ list 7) (list 5)\nPrelude Data.Tree> let tree2 = bi 12 tree1 (bi 8 tree1 tree1)\n\\end{code}\n"
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1089\1086\1089\1090\1072\1074\1080\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1086\1073\1093\1086\1076\1080\1090\1100",Space,Str "\1076\1077\1088\1077\1074\1086",Str ",",Space,Str "\1080",Space,Str "\1089\1086\1073\1080\1088\1072\1090\1100",Space,Str "\1095\1080\1089\1083\1072",Space,Str "\1080\1079",Space,Str "\1079\1072\1076\1072\1085\1085\1086\1075\1086",Space,Str "\1076\1080\1072\1087\1072\1079\1086\1085\1072",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ntype Diap a = (a, a)\n\ninDiap :: Ord a => Diap a -> Tree a -> [a]\ninDiap d = execWriter . inDiap' d\n\ninDiap' :: Ord a => Diap a -> Tree a -> Writer [a] ()\ninDiap' d (Node v xs) = pick d v *> mapM_ (inDiap' d) xs \n    where pick (a, b) v\n            | (a <= v) && (v <= b)  = tell [v]\n            | otherwise             = pure ()\n\\end{code}\n"
,Para [Str "\1050\1072\1082",Space,Str "\1080",Space,Str "\1088\1072\1085\1100\1096\1077",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1076\1074\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1086\1076\1085\1072",Space,Str "\1074\1099\1087\1086\1083\1085\1103\1077\1090",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Str ",",Space,Str "\1076\1088\1091\1075\1072\1103",Space,Str "\1080\1079\1074\1083\1077\1082\1072\1077\1090",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090",Space,Str "\1080\1079",Space,RawInline "latex" "\\In{Writer}",Str ".",Space,Str "\1042",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{pick}",Space,Str "\1084\1099",Space,Str "\1087\1088\1086\1074\1077\1088\1103\1077\1084",Space,Str "\1095\1080\1089\1083\1086",Space,Str "\1085\1072",Space,Str "\1087\1088\1080\1085\1072\1076\1083\1077\1078\1085\1086\1089\1090\1100",Space,Str "\1080\1085\1090\1077\1088\1074\1072\1083\1091",Str ",",Space,Str "\1077\1089\1083\1080",Space,Str "\1101\1090\1086",Space,Str "\1090\1072\1082",Space,Str "\1084\1099",Space,Str "\1076\1086\1073\1072\1074\1083\1103\1077\1084",Space,Str "\1095\1080\1089\1083\1086",Space,Str "\1082",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1091",Str ",",Space,Str "\1072",Space,Str "\1077\1089\1083\1080",Space,Str "\1085\1077\1090",Space,Str "\1087\1088\1086\1087\1091\1089\1082\1072\1077\1084",Space,Str "\1077\1075\1086",Str ",",Space,Str "\1076\1086\1073\1072\1074\1083\1103\1103",Space,Str "\1085\1077\1081\1090\1088\1072\1083\1100\1085\1099\1081",Space,Str "\1101\1083\1077\1084\1077\1085\1090",Space,Str "(",Str "\1074",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{pure}",Str ")",Str ".",Space,Str "\1054\1073\1088\1072\1090\1080\1090\1077",Space,Str "\1074\1085\1080\1084\1072\1085\1080\1077",Space,Str "\1085\1072",Space,Str "\1090\1086",Space,Str "\1082\1072\1082",Space,Str "\1084\1099",Space,Str "\1086\1073\1088\1072\1073\1072\1090\1099\1074\1072\1077\1084",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1076\1086\1095\1077\1088\1085\1080\1093",Space,Str "\1087\1086\1076\1076\1077\1088\1074\1100\1077\1074",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{mapM_}",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1072\1085\1072\1083\1086\1075\1086\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{mapM}",Str ",",Space,Str "\1054\1085\1072",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1091\1077\1090\1089\1103",Str ",",Space,Str "\1077\1089\1083\1080",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1085\1077",Space,Str "\1074\1072\1078\1077\1085",Str ",",Space,Str "\1072",Space,Str "\1074\1072\1078\1085\1099",Space,Str "\1090\1077",Space,Str "\1076\1077\1081\1089\1090\1074\1080\1103",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1087\1088\1086\1080\1089\1093\1086\1076\1103\1090",Space,Str "\1087\1088\1080",Space,Str "\1087\1088\1077\1086\1073\1088\1072\1079\1086\1074\1072\1085\1080\1080",Space,Str "\1089\1087\1080\1089\1082\1072",Str ".",Space,Str "\1042",Space,Str "\1085\1072\1096\1077\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1101\1090\1086",Space,Str "\1085\1072\1082\1086\1087\1083\1077\1085\1080\1077",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1072",Str ".",Space,Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1101\1090\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nmapM_ :: Monad m => (a -> m b) ->  [a] -> m ()\nmapM_ f = sequence_ . map f\n\nsequence_ :: Monad m => [m a] -> m ()\nsequence_ = foldr (>>) (return ())\n\\end{code}\n"
,Para [Str "\1054\1089\1085\1086\1074\1085\1086\1077",Space,Str "\1086\1090\1083\1080\1095\1080\1077",Space,Str "\1089\1086\1089\1090\1086\1080\1090",Space,Str "\1074",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{sequence_}",Str ".",Space,Str "\1056\1072\1085\1100\1096\1077",Space,Str "\1084\1099",Space,Str "\1089\1086\1073\1080\1088\1072\1083\1080",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1074",Space,Str "\1089\1087\1080\1089\1086\1082",Str ",",Space,Str "\1072",Space,Str "\1090\1077\1087\1077\1088\1100",Space,Str "\1086\1090\1073\1088\1072\1089\1099\1074\1072\1077\1084",Space,Str "\1080\1093",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1082\1086\1085\1089\1090\1072\1085\1090\1085\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{>>}",Str ".",Space,Str "\1042",Space,Str "\1082\1086\1085\1094\1077",Space,Str "\1084\1099",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1084",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1077\1076\1080\1085\1080\1095\1085\1086\1075\1086",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{()}",Str "."]
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1089\1086\1093\1088\1072\1085\1080\1084",Space,Str "\1074",Space,Str "\1084\1086\1076\1091\1083\1077",Space,RawInline "latex" "\\In{Tree}",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1080",Space,Str "\1074\1089\1087\1086\1084\1086\1075\1072\1090\1077\1083\1100\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1089\1086\1079\1076\1072\1085\1080\1103",Space,Str "\1076\1077\1088\1077\1074\1100\1077\1074",Space,RawInline "latex" "\\In{un}",Str ",",Space,RawInline "latex" "\\In{bi}",Str ",",Space,Str "\1080",Space,RawInline "latex" "\\In{list}",Space,Str "\1080",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1082\1072\1082",Space,Str "\1085\1072\1096\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1088\1072\1073\1086\1090\1072\1077\1090",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Tree> inDiap (4, 10) tree2\n[10,6,7,5,8,10,6,7,5,10,6,7,5]\n*Tree> inDiap (5, 8) tree2\n[6,7,5,8,6,7,5,6,7,5]\n*Tree> inDiap (0, 3) tree2\n[2,2,2]\n\\end{code}\n"
,Header 2 [Str "\1052\1086\1085\1072\1076\1072",Space,Str "\1080\1079\1084\1077\1085\1103\1077\1084\1099\1093",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Space,Str "ST"]
,Para [Str "\1042\1086\1079\1084\1086\1078\1085\1086",Space,Str "\1095\1080\1090\1072\1090\1077\1083\1080",Str ",",Space,Str "\1076\1083\1103",Space,Str "\1082\1086\1090\1086\1088\1099\1093",Space,Quoted DoubleQuote [Str "\1088\1086\1076\1085\1099\1084"],Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1086\1076\1080\1085",Space,Str "\1080\1079",Space,Str "\1080\1084\1087\1077\1088\1072\1090\1080\1074\1085\1099\1093",Space,Str "\1103\1079\1099\1082\1086\1074",Str ",",Space,Str "\1085\1077\1084\1085\1086\1075\1086",Space,Str "\1079\1072\1089\1082\1091\1095\1072\1083\1080",Space,Str "\1087\1086",Space,Str "\1080\1079\1084\1077\1085\1103\1077\1084\1099\1084",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103\1084",Str ".",Space,Str "\1052\1099",Space,Str "\1075\1086\1074\1086\1088\1080\1083\1080",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1074",Space,Str "Haskell",Space,Str "\1085\1080\1095\1077\1075\1086",Space,Str "\1085\1077",Space,Str "\1080\1079\1084\1077\1085\1103\1077\1090\1089\1103",Str ",",Space,Str "\1084\1099",Space,Str "\1076\1072\1105\1084",Space,Str "\1074\1089\1105",Space,Str "\1073\1086\1083\1077\1077",Space,Str "\1080",Space,Str "\1073\1086\1083\1077\1077",Space,Str "\1089\1083\1086\1078\1085\1099\1077",Space,Str "\1080\1084\1077\1085\1072",Space,Str "\1089\1090\1072\1090\1080\1095\1077\1089\1082\1080\1084",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103\1084",Str ",",Space,Str "\1072",Space,Str "\1087\1086\1090\1086\1084",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1090\1077\1083\1100",Space,Str "\1088\1077\1076\1091\1094\1080\1088\1091\1077\1090",Space,Str "\1080\1084\1077\1085\1072",Space,Str "\1082",Space,Str "\1085\1072\1089\1090\1086\1103\1097\1080\1084",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103\1084",Str ".",Space,Str "\1053\1086",Space,Str "\1077\1089\1090\1100",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084\1099",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1101\1083\1077\1075\1072\1085\1090\1085\1086",Space,Str "\1086\1087\1080\1089\1099\1074\1072\1102\1090\1089\1103",Space,Str "\1074",Space,Str "\1090\1077\1088\1084\1080\1085\1072\1093",Space,Str "\1080\1079\1084\1077\1085\1103\1077\1084\1099\1093",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Str ".",Space,Str "\1055\1088\1080\1084\1077\1088\1086\1084",Space,Str "\1090\1072\1082\1086\1075\1086",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084\1072",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1073\1099\1090\1100",Space,Str "\1073\1099\1089\1090\1088\1072\1103",Space,Str "\1089\1086\1088\1090\1080\1088\1086\1074\1082\1072",Str ".",Space,Str "\1047\1072\1076\1072\1095\1072",Space,Str "\1089\1086\1089\1090\1086\1080\1090",Space,Str "\1074",Space,Str "\1087\1077\1088\1077\1089\1090\1072\1085\1086\1074\1082\1077",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1086\1074",Space,Str "\1084\1072\1089\1089\1080\1074\1072",Space,Str "\1090\1072\1082",Str ",",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1085\1072",Space,Str "\1074\1099\1093\1086\1076\1077",Space,Str "\1083\1102\1073\1086\1081",Space,Str "\1087\1086\1089\1083\1077\1076\1091\1102\1097\1080\1081",Space,Str "\1101\1083\1077\1084\1077\1085\1090",Space,Str "\1084\1072\1089\1089\1080\1074\1072",Space,Str "\1073\1099\1083",Space,Str "\1073\1086\1083\1100\1096\1077",Space,Str "\1087\1088\1077\1076\1099\1076\1091\1097\1077\1075\1086",Space,Str "(",Str "\1076\1083\1103",Space,Str "\1089\1087\1080\1089\1082\1086\1074",Space,Str "\1101\1090\1091",Space,Str "\1079\1072\1076\1072\1095\1091",Space,Str "\1088\1077\1096\1072\1102\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{sort}",Space,Str "\1080",Space,RawInline "latex" "\\In{sortBy}",Str ")",Str "."]
,Para [Str "\1057\1072\1084\1086",Space,Str "\1087\1086",Space,Str "\1089\1077\1073\1077",Space,Str "\1103\1074\1083\1077\1085\1080\1077",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1103",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1087\1086\1073\1086\1095\1085\1099\1084",Space,Str "\1101\1092\1092\1077\1082\1090\1086\1084",Str ".",Space,Str "\1054\1085\1086",Space,Str "\1083\1086\1084\1072\1077\1090",Space,Str "\1087\1088\1077\1076\1089\1090\1072\1074\1083\1077\1085\1080\1077",Space,Str "\1086",Space,Str "\1089\1090\1072\1090\1080\1095\1085\1086\1089\1090\1080",Space,Str "\1084\1080\1088\1072",Str ",",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1087\1086\1103\1074\1083\1103\1102\1090\1089\1103",Space,Str "\1092\1072\1079\1099",Str ":",Space,Str "\1076\1086",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1103",Space,Str "\1080",Space,Str "\1087\1086\1089\1083\1077",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1103",Str ".",Space,Str "\1053\1086",Space,Str "\1087\1088\1077\1076\1089\1090\1072\1074\1100\1090\1077",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1077",Space,Str "\1087\1088\1086\1080\1089\1093\1086\1076\1080\1090",Space,Str "\1083\1086\1082\1072\1083\1100\1085\1086",Str ",",Space,Str "\1084\1099",Space,Str "\1087\1086\1089\1090\1086\1103\1085\1085\1086",Space,Str "\1084\1077\1085\1103\1077\1084",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1086\1076\1085\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Str ",",Space,Str "\1087\1088\1080",Space,Str "\1101\1090\1086\1084",Space,Str "\1079\1072",Space,Str "\1074\1088\1077\1084\1103",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1103",Space,Str "\1085\1080",Space,Str "\1086\1076\1085\1072",Space,Str "\1076\1088\1091\1075\1072\1103",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1072\1103",Space,Emph [Str "\1085\1077",Space,Str "\1084\1086\1078\1077\1090"],Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100\1089\1103",Space,Str "\1087\1088\1086\1084\1077\1078\1091\1090\1086\1095\1085\1099\1084\1080",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103\1084\1080",Space,Str "\1080",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1103",Space,Str "\1087\1088\1086\1080\1089\1093\1086\1076\1103\1090",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Emph [Str "\1095\1080\1089\1090\1099\1093"],Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str ".",Space,Str "\1055\1088\1077\1076\1089\1090\1072\1074\1100\1090\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Str ",",Space,Str "\1074\1099\1076\1077\1083\1103\1077\1090",Space,Str "\1074\1085\1091\1090\1088\1080",Space,Str "\1089\1077\1073\1103",Space,Str "\1087\1072\1084\1103\1090\1100",Str ",",Space,Str "\1080",Space,Str "\1087\1088\1080",Space,Str "\1087\1086\1089\1090\1088\1086\1077\1085\1080\1080",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1072",Space,Str "\1085\1072\1095\1080\1085\1072\1077\1090",Space,Str "\1086\1073\1085\1086\1074\1083\1103\1090\1100",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1074\1085\1091\1090\1088\1080",Space,Str "\1101\1090\1086\1081",Space,Str "\1087\1072\1084\1103\1090\1080",Space,Str "(",Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1095\1080\1089\1090\1099\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str ")",Space,Str "\1080",Space,Str "\1089\1095\1080\1090\1072\1090\1100",Space,Str "\1095\1090\1086",Str "-",Str "\1090\1086",Space,Str "\1077\1097\1105",Space,Str "\1087\1086\1083\1077\1079\1085\1086\1077",Space,Str "\1085\1072",Space,Str "\1086\1089\1085\1086\1074\1077",Space,Str "\1101\1090\1080\1093",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1081",Str ",",Space,Str "\1082\1072\1082",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Space,Str "\1079\1072\1082\1086\1085\1095\1072\1090\1089\1103",Str ",",Space,Str "\1087\1072\1084\1103\1090\1100",Space,Str "\1089\1090\1080\1088\1072\1077\1090\1089\1103",Str ",",Space,Str "\1080",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090\1089\1103",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Str ".",Space,Str "\1041\1091\1076\1077\1090",Space,Str "\1083\1080",Space,Str "\1090\1072\1082\1072\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1095\1080\1089\1090\1086\1081",Str "?",Space,Str "\1048\1085\1090\1091\1080\1094\1080\1103",Space,Str "\1087\1086\1076\1089\1082\1072\1079\1099\1074\1072\1077\1090",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1076\1072",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1073\1099\1083\1086",Space,Str "\1076\1086\1082\1072\1079\1072\1085\1086",Str ",",Space,Str "\1085\1086",Space,Str "\1076\1083\1103",Space,Str "\1088\1077\1072\1083\1080\1079\1072\1094\1080\1080",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1090\1088\1077\1073\1091\1077\1090\1089\1103",Space,Str "\1085\1077\1073\1086\1083\1100\1096\1086\1081",Space,Str "\1090\1088\1102\1082",Space,Str "\1085\1072",Space,Str "\1091\1088\1086\1074\1085\1077",Space,Str "\1090\1080\1087\1086\1074",Str ".",Space,Str "\1055\1086\1083\1091\1095\1072\1077\1090\1089\1103",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1085\1077",Space,Str "\1089\1084\1086\1090\1088\1103",Space,Str "\1085\1072",Space,Str "\1090\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1089\1086\1076\1077\1088\1078\1080\1090",Space,Str "\1087\1086\1073\1086\1095\1085\1099\1077",Space,Str "\1101\1092\1092\1077\1082\1090\1099",Str ",",Space,Str "\1086\1085\1072",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1095\1080\1089\1090\1086\1081",Str ",",Space,Str "\1087\1086\1089\1082\1086\1083\1100\1082\1091",Space,Str "\1074\1089\1077",Space,Str "\1087\1086\1073\1086\1095\1085\1099\1077",Space,Str "\1101\1092\1092\1077\1082\1090\1099",Space,Str "\1083\1086\1082\1072\1083\1100\1085\1099",Str ",",Space,Str "\1086\1085\1080",Space,Str "\1087\1088\1086\1080\1089\1093\1086\1076\1103\1090",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1074\1085\1091\1090\1088\1080",Space,Str "\1074\1099\1079\1086\1074\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1080",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1074",Space,Str "\1089\1072\1084\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str "."]
,Para [Str "\1044\1083\1103",Space,Str "\1089\1080\1084\1091\1083\1103\1094\1080\1080",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1103",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1074",Space,Str "Haskell",Space,Str "\1085\1072\1084",Space,Str "\1085\1091\1078\1085\1086",Space,Str "\1088\1077\1096\1080\1090\1100",Space,Str "\1076\1074\1077",Space,Str "\1087\1088\1086\1073\1083\1077\1084\1099",Str ".",Space,Str "\1050\1072\1082",Space,Str "\1091\1087\1086\1088\1103\1076\1086\1095\1080\1090\1100",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str "?",Space,Str "\1048",Space,Str "\1082\1072\1082",Space,Str "\1083\1086\1082\1072\1083\1080\1079\1086\1074\1072\1090\1100",Space,Str "\1077\1075\1086",Str "?",Space,Str "\1042",Space,Str "\1080\1084\1087\1077\1088\1072\1090\1080\1074\1085\1099\1093",Space,Str "\1103\1079\1099\1082\1072\1093",Space,Str "\1087\1086\1088\1103\1076\1086\1082",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1081",Space,Str "\1089\1090\1088\1086\1075\1086",Space,Str "\1089\1074\1103\1079\1072\1085",Space,Str "\1089",Space,Str "\1087\1086\1088\1103\1076\1082\1086\1084",Space,Str "\1089\1083\1077\1076\1086\1074\1072\1085\1080\1103",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1081",Str ",",Space,Str "\1085\1072",Space,Str "\1087\1088\1080\1084\1080\1090\1080\1074\1085\1086\1084",Space,Str "\1091\1088\1086\1074\1085\1077",Str ",",Space,Str "\1075\1088\1091\1073\1086",Space,Str "\1091\1087\1088\1086\1097\1072\1103",Str ",",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1089\1082\1072\1079\1072\1090\1100",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1090\1077\1083\1100",Space,Str "\1095\1080\1090\1072\1077\1090",Space,Str "\1082\1086\1076",Space,Str "\1082\1072\1082",Space,Str "\1083\1077\1085\1090\1091",Space,Str "\1080",Space,Str "\1074\1099\1087\1086\1083\1085\1103\1077\1090",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1077",Space,Str "\1079\1072",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1077\1084",Str ".",Space,Str "\1042",Space,Str "Haskell",Space,Str "\1074\1089\1105",Space,Str "\1089\1086\1074\1089\1077\1084",Space,Str "\1087\1086",Str "-",Str "\1076\1088\1091\1075\1086\1084\1091",Str ".",Space,Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1087\1080\1089\1072\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1074",Space,Str "\1083\1102\1073\1086\1084",Space,Str "\1087\1086\1088\1103\1076\1082\1077",Str ",",Space,Str "\1090\1072\1082\1078\1077",Space,Str "\1074",Space,Str "\1083\1102\1073\1086\1084",Space,Str "\1087\1086\1088\1103\1076\1082\1077",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1086\1073\1098\1103\1074\1083\1103\1090\1100",Space,Str "\1083\1086\1082\1072\1083\1100\1085\1099\1077",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1099\1077",Space,Str "\1074",Space,RawInline "latex" "\\In{where}",Space,Str "\1080\1083\1080",Space,RawInline "latex" "\\In{let}",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103\1093",Str ".",Space,Str "\1050\1086\1084\1087\1080\1083\1103\1090\1086\1088",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1077\1090",Space,Str "\1087\1086\1088\1103\1076\1086\1082",Space,Str "\1088\1077\1076\1091\1082\1094\1080\1080",Space,Str "\1089\1080\1085\1086\1085\1080\1084\1086\1074",Space,Str "\1087\1086",Space,Str "\1092\1091\1085\1082\1094\1080\1086\1085\1072\1083\1100\1085\1099\1084",Space,Str "\1079\1072\1074\1080\1089\1080\1084\1086\1089\1090\1103\1084",Str ".",Space,Str "\1057\1080\1085\1086\1085\1080\1084",Space,RawInline "latex" "\\In{f}",Space,Str "\1085\1077",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1088\1072\1089\1082\1088\1099\1090",Space,Str "\1088\1072\1085\1100\1096\1077",Space,Str "\1089\1080\1085\1086\1085\1080\1084\1072",Space,RawInline "latex" "\\In{g}",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1074",Space,Str "\1090\1086\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Str ",",Space,Str "\1077\1089\1083\1080",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090",Space,RawInline "latex" "\\In{g}",Space,Str "\1090\1088\1077\1073\1091\1077\1090\1089\1103",Space,Str "\1074",Space,RawInline "latex" "\\In{f}",Str ".",Space,Str "\1053\1086",Space,Str "\1089",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1077\1084",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1101\1090\1086\1090",Space,Str "\1074\1072\1088\1080\1072\1085\1090",Space,Str "\1085\1077",Space,Str "\1087\1088\1086\1081\1076\1105\1090",Str ",",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nfun :: Int -> Int\nfun arg = \n    let mem = new arg\n        x   = read mem\n        y   = x + 1\n        ??  = write mem y\n        z   = read mem\n    in z\n\\end{code}\n"
,Para [Str "\1055\1088\1077\1076\1087\1086\1083\1072\1075\1072\1077\1090\1089\1103",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1074",Space,Str "\1101\1090\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1084\1099",Space,Str "\1087\1086\1083\1091\1095\1072\1077\1084",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,RawInline "latex" "\\In{arg}",Str ",",Space,Str "\1074\1099\1076\1077\1083\1103\1077\1084",Space,Str "\1087\1072\1084\1103\1090\1100",Space,RawInline "latex" "\\In{mem}",Space,Str "c",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{new}",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1085\1072\1095\1072\1083\1100\1085\1086\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Str ",",Space,Str "\1082\1086\1090\1086\1088\1086\1077",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1093\1088\1072\1085\1080\1090\1100\1089\1103",Space,Str "\1074",Space,Str "\1087\1072\1084\1103\1090\1080",Str ".",Space,Str "\1047\1072\1090\1077\1084",Space,Str "\1095\1080\1090\1072\1077\1084",Space,Str "\1080\1079",Space,Str "\1087\1072\1084\1103\1090\1080",Str ",",Space,Str "\1087\1088\1080\1073\1072\1074\1083\1103\1077\1084",Space,Str "\1082",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1102",Space,Str "\1077\1076\1080\1085\1080\1094\1091",Str ",",Space,Str "\1089\1085\1086\1074\1072",Space,Str "\1079\1072\1087\1080\1089\1099\1074\1072\1077\1084",Space,Str "\1074",Space,Str "\1087\1072\1084\1103\1090\1100",Str ",",Space,Str "\1087\1086\1090\1086\1084",Space,Str "\1086\1087\1103\1090\1100",Space,Str "\1095\1080\1090\1072\1077\1084",Space,Str "\1080\1079",Space,Str "\1087\1072\1084\1103\1090\1080",Str ",",Space,Str "\1089\1086\1093\1088\1072\1085\1080\1074",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1074",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1086\1081",Space,RawInline "latex" "\\In{z}",Str ",",Space,Str "\1080",Space,Str "\1074",Space,Str "\1089\1072\1084\1086\1084",Space,Str "\1082\1086\1085\1094\1077",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1084",Space,Str "\1086\1090\1074\1077\1090",Str ".",Space,Str "\1053\1072\1083\1080\1094\1086",Space,Str "\1076\1074\1077",Space,Str "\1087\1088\1086\1073\1083\1077\1084\1099",Str ":",Space,RawInline "latex" "\\In{z}",Space,Str "\1085\1077",Space,Str "\1079\1072\1074\1080\1089\1080\1090",Space,Str "\1086\1090",Space,RawInline "latex" "\\In{y}",Str ",",Space,Str "\1087\1086\1101\1090\1086\1084\1091",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1089\1095\1080\1090\1072\1090\1100",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,RawInline "latex" "\\In{z}",Space,Str "\1074",Space,Str "\1083\1102\1073\1086\1081",Space,Str "\1084\1086\1084\1077\1085\1090",Space,Str "\1087\1086\1089\1083\1077",Space,Str "\1080\1085\1080\1094\1080\1072\1083\1080\1079\1072\1094\1080\1080",Space,Str "\1087\1072\1084\1103\1090\1080",Space,Str "\1080",Space,Str "\1074\1090\1086\1088\1072\1103",Space,Str "\1087\1088\1086\1073\1083\1077\1084\1072",Str ":",Space,Str "\1095\1090\1086",Space,Str "\1076\1086\1083\1078\1085\1072",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{write}",Str "?"]
,Para [Str "\1044\1083\1103",Space,Str "\1090\1086\1075\1086",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1091\1087\1086\1088\1103\1076\1086\1095\1080\1090\1100",Space,Str "\1101\1090\1080",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Space,Str "\1084\1099",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1091\1077\1084\1089\1103",Space,Str "\1090\1080\1087\1086\1084",Space,RawInline "latex" "\\In{State}",Str ".",Space,Str "\1050\1072\1078\1076\1086\1077",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1077",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1090\1100",Space,Str "\1092\1080\1082\1090\1080\1074\1085\1086\1077",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1077",Space,Str "\1080",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1090\1100",Space,Str "\1077\1075\1086",Str ".",Space,Str "\1058\1086\1075\1076\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{fun}",Space,Str "\1079\1072\1087\1080\1096\1077\1090\1089\1103",Space,Str "\1090\1072\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nfun :: Int -> State s Int\nfun arg = State $ \\s0 -> \n    let (mem, s1)   = runState (new arg)          s0\n        ((),  s2)   = runState (write mem arg)    s1\n        (x,   s3)   = runState (read mem)         s2\n        y           = x + 1\n        ((),  s4)   = runState (write mem y)      s3\n        (z,   s5)   = runState (read mem)         s4\n    in (z, s5)\n\nnew     :: a -> State s (Mem a)\nwrite   :: Mem a -> a -> State s ()\nread    :: Mem a -> State s a\n\\end{code}\n"
,Para [Str "\1058\1080\1087",Space,RawInline "latex" "\\In{Mem}",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1080\1079\1086\1074\1072\1085",Space,Str "\1090\1080\1087\1086\1084",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str ",",Space,Str "\1082\1086\1090\1086\1088\1086\1077",Space,Str "\1093\1088\1072\1085\1080\1090\1089\1103",Space,Str "\1074",Space,Str "\1087\1072\1084\1103\1090\1080",Str ".",Space,Str "\1042",Space,Str "\1101\1090\1086\1084",Space,Str "\1074\1072\1088\1080\1072\1085\1090\1077",Space,Str "\1084\1099",Space,Str "\1085\1077",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1080\1079\1084\1077\1085\1080\1090\1100",Space,Str "\1087\1086\1088\1103\1076\1086\1082",Space,Str "\1089\1083\1077\1076\1086\1074\1072\1085\1080\1103",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1081",Str ",",Space,Str "\1087\1086\1089\1082\1086\1083\1100\1082\1091",Space,Str "\1085\1072\1084",Space,Str "\1087\1088\1080\1093\1086\1076\1080\1090\1089\1103",Space,Str "\1087\1077\1088\1077\1076\1086\1074\1072\1090\1100",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1077",Str ".",Space,Str "\1052\1099",Space,Str "\1084\1086\1075\1083\1080",Space,Str "\1073\1099",Space,Str "\1079\1072\1087\1080\1089\1072\1090\1100",Space,Str "\1101\1090\1086",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1077",Space,Str "\1075\1086\1088\1072\1079\1076\1086",Space,Str "\1082\1086\1088\1086\1095\1077",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1084\1077\1090\1086\1076\1086\1074",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Monad}",Str ",",Space,Str "\1085\1086",Space,Str "\1084\1085\1077",Space,Str "\1093\1086\1090\1077\1083\1086\1089\1100",Space,Str "\1087\1086\1076\1095\1077\1088\1082\1085\1091\1090\1100",Space,Str "\1082\1072\1082",Space,Str "\1087\1077\1088\1077\1076\1072\1095\1072",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1103",Space,Str "\1085\1072\1074\1103\1079\1099\1074\1072\1077\1090",Space,Str "\1087\1086\1088\1103\1076\1086\1082",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{write}",Space,Str "\1090\1077\1087\1077\1088\1100",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1087\1091\1089\1090\1086\1081",Space,Str "\1082\1086\1088\1090\1077\1078",Str ".",Space,Str "\1053\1086",Space,Str "\1087\1086\1088\1103\1076\1086\1082",Space,Str "\1085\1077",Space,Str "\1090\1077\1088\1103\1077\1090\1089\1103",Space,Str "\1079\1072",Space,Str "\1089\1095\1105\1090",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1103",Str ".",Space,Str "\1055\1091\1089\1090\1086\1081",Space,Str "\1082\1086\1088\1090\1077\1078",Space,Str "\1085\1072\1084\1077\1082\1072\1077\1090",Space,Str "\1085\1072",Space,Str "\1090\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1077\1076\1080\1085\1089\1090\1074\1077\1085\1085\1086\1077",Space,Str "\1085\1072\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{write}",Space,Str "\8211",Space,Str "\1101\1090\1086",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1077",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1103",Str "."]
,Para [Str "\1054\1076\1085\1072\1082\1086",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1085\1077",Space,Str "\1076\1086\1089\1090\1072\1090\1086\1095\1085\1086",Str ".",Space,Str "\1052\1099",Space,Str "\1093\1086\1090\1080\1084",Str ",",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1073\1099\1083\1086",Space,Str "\1089\1082\1088\1099\1090\1086",Space,Str "\1086\1090",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1077\1083\1103",Space,Str "\1074",Space,Emph [Str "\1095\1080\1089\1090\1086\1081"],Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ".",Space,Str "\1052\1099",Space,Str "\1093\1086\1090\1080\1084",Str ",",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1090\1080\1087",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{fun}",Space,Str "\1085\1077",Space,Str "\1089\1086\1076\1077\1088\1078\1072\1083",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{State}",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1085\1072\1084",Space,Str "\1086\1090\1082\1091\1076\1072",Str "-",Str "\1090\1086",Space,Str "\1085\1091\1078\1085\1086",Space,Str "\1074\1079\1103\1090\1100",Space,Str "\1085\1072\1095\1072\1083\1100\1085\1086\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1103",Str ".",Space,Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1088\1077\1096\1080\1090\1100",Space,Str "\1101\1090\1091",Space,Str "\1087\1088\1086\1073\1083\1077\1084\1091",Str ",",Space,Str "\1079\1072\1092\1080\1082\1089\1080\1088\1086\1074\1072\1074",Space,Str "\1090\1080\1087",Space,RawInline "latex" "\\In{s}",Str ".",Space,Str "\1055\1091\1089\1090\1100",Space,Str "\1101\1090\1086",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1090\1080\1087",Space,RawInline "latex" "\\In{FakeState}",Str ",",Space,Str "\1089\1082\1088\1099\1090\1099\1081",Space,Str "\1086\1090",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1077\1083\1103",Str "."]
,RawBlock "latex" "\n\\begin{code}\nmodule Mutable(\n    Mutable, Mem, purge, \n    new, read, write)\nwhere\n\nnewtype Mutable a = Mutable (State FakeState a)\n\ndata FakeState = FakeState\n\npurge :: Mutable a -> a\npurge (Mutable a) = fst $ runState a FakeState\n\nnew     :: a -> Mutable (Mem a)\nread    :: Mem a -> Mutable a\nwrite   :: Mem a -> a -> Mutable ()\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1087\1088\1077\1076\1086\1089\1090\1072\1074\1080\1084",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1077\1083\1102",Space,Str "\1083\1080\1096\1100",Space,Str "\1090\1080\1087",Space,RawInline "latex" "\\In{Mutable}",Space,Str "\1073\1077\1079",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088\1072",Space,Str "\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{purge}",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Quoted DoubleQuote [Str "\1086\1095\1080\1097\1072\1077\1090"],Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1086\1090",Space,Str "\1087\1086\1073\1086\1095\1085\1099\1093",Space,Str "\1101\1092\1092\1077\1082\1090\1086\1074",Space,Str "\1080",Space,Str "\1087\1088\1080\1084\1080\1090\1080\1074\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1076\1083\1103",Space,Str "\1088\1072\1073\1086\1090\1099",Space,Str "\1089",Space,Str "\1087\1072\1084\1103\1090\1100\1102",Str ".",Space,Str "\1058\1072\1082\1078\1077",Space,Str "\1084\1099",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1099",Space,Str "\1082\1083\1072\1089\1089\1086\1074",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{State}",Space,Str "\1076\1083\1103",Space,RawInline "latex" "\\In{Mutable}",Str ",",Space,Str "\1089\1076\1077\1083\1072\1090\1100",Space,Str "\1101\1090\1086",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1089\1086\1074\1089\1077\1084",Space,Str "\1085\1077",Space,Str "\1090\1088\1091\1076\1085\1086",Str ",",Space,Str "\1074\1077\1076\1100",Space,RawInline "latex" "\\In{Mutable}",Space,Str "\8211",Space,Str "\1101\1090\1086",Space,Str "\1087\1088\1086\1089\1090\1086",Space,Str "\1086\1073\1105\1088\1090\1082\1072",Str ".",Space,Str "\1057",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1101\1090\1080\1093",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1086\1074",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1077\1083\1100",Space,Str "\1089\1084\1086\1078\1077\1090",Space,Str "\1082\1086\1084\1073\1080\1085\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1089\1074\1103\1079\1072\1085\1099",Space,Str "\1089",Space,Str "\1080\1079\1084\1077\1085\1077\1085\1080\1077\1084",Space,Str "\1087\1072\1084\1103\1090\1080",Str ".",Space,Str "\1055\1086\1082\1072",Space,Str "\1074\1088\1086\1076\1077",Space,Str "\1074\1089\1105",Space,Str "\1093\1086\1088\1086\1096\1086",Str ",",Space,Str "\1085\1086",Space,Str "\1086\1073\1077\1089\1087\1077\1095\1080\1074\1072\1077\1084",Space,Str "\1083\1080",Space,Str "\1084\1099",Space,Str "\1083\1086\1082\1072\1083\1100\1085\1086\1089\1090\1100",Space,Str "\1080\1079\1084\1077\1085\1077\1085\1080\1103",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Str "?",Space,Str "\1053\1072\1084",Space,Str "\1074\1072\1078\1085\1086",Str ",",Space,Str "\1095\1090\1086\1073\1099",Str ",",Space,Str "\1086\1076\1080\1085",Space,Str "\1088\1072\1079",Space,Str "\1085\1072\1095\1072\1074",Space,Str "\1088\1072\1073\1086\1090\1072\1090\1100",Space,Str "\1089",Space,Str "\1087\1072\1084\1103\1090\1100\1102",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Mem}",Str ",",Space,Str "\1084\1099",Space,Str "\1085\1077",Space,Str "\1089\1084\1086\1075\1083\1080",Space,Str "\1073\1099",Space,Str "\1085\1080\1075\1076\1077",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100\1089\1103",Space,Str "\1101\1090\1086\1081",Space,Str "\1087\1072\1084\1103\1090\1100\1102",Space,Str "\1087\1086\1089\1083\1077",Space,Str "\1074\1099\1087\1086\1083\1085\1077\1085\1080\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{purge}",Str ".",Space,Str "\1054\1082\1072\1079\1099\1074\1072\1077\1090\1089\1103",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1088\1072\1079\1088\1091\1096\1080\1090\1100",Space,Str "\1083\1086\1082\1072\1083\1100\1085\1086\1089\1090\1100",Str ".",Space,Str "\1055\1086\1089\1084\1086\1090\1088\1080\1090\1077",Space,Str "\1085\1072",Space,Str "\1087\1088\1080\1084\1077\1088",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nlet mem = purge allocate\nin  purge (read mem)\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1084",Space,Str "\1080\1079",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{purge}",Space,Str "\1089\1089\1099\1083\1082\1091",Space,Str "\1085\1072",Space,Str "\1087\1072\1084\1103\1090\1100",Space,Str "\1080",Space,Str "\1089\1087\1086\1082\1086\1081\1085\1086",Space,Str "\1087\1086\1083\1100\1079\1091\1077\1084\1089\1103",Space,Str "\1077\1102",Space,Str "\1074",Space,Str "\1076\1088\1091\1075\1086\1081",Space,Str "\1074\1077\1090\1082\1077",Space,RawInline "latex" "\\In{Mutable}",Str "-",Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1081",Str ".",Space,Str "\1052\1086\1078\1085\1086",Space,Str "\1083\1080",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1080\1079\1073\1077\1078\1072\1090\1100",Str "?",Space,Str "\1054\1082\1072\1079\1099\1074\1072\1077\1090\1089\1103",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1086\1078\1085\1086",Str ".",Space,Str "\1055\1088\1080\1095\1105\1084",Space,Str "\1088\1077\1096\1077\1085\1080\1077",Space,Str "\1074\1077\1089\1100\1084\1072",Space,Str "\1101\1083\1077\1075\1072\1085\1090\1085\1086",Str ".",Space,Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1087\1086\1089\1090\1088\1086\1080\1090\1100",Space,Str "\1090\1080\1087\1099",Space,RawInline "latex" "\\In{Mem}",Space,Str "\1080",Space,RawInline "latex" "\\In{Mutable}",Space,Str "\1090\1072\1082",Str ",",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1089\1089\1099\1083\1082\1077",Space,Str "\1085\1072",Space,Str "\1087\1072\1084\1103\1090\1100",Space,Str "\1085\1077",Space,Str "\1091\1076\1072\1083\1086\1089\1100",Space,Str "\1087\1088\1086\1089\1086\1095\1080\1090\1100\1089\1103",Space,Str "\1095\1077\1088\1077\1079",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{purge}",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1084\1099",Space,Str "\1074\1077\1088\1085\1105\1084\1089\1103",Space,Str "\1082",Space,Str "\1086\1073\1097\1077\1084\1091",Space,Str "\1090\1080\1087\1091",Space,RawInline "latex" "\\In{State}",Space,Str "c",Space,Str "\1076\1074\1091\1084\1103",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1072\1084\1080",Str ".",Space,Str "\1055\1088\1080\1095\1105\1084",Space,Str "\1087\1077\1088\1074\1099\1081",Space,Str "\1087\1077\1088\1074\1099\1081",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088",Space,Str "\1084\1099",Space,Str "\1087\1088\1080\1094\1077\1087\1080\1084",Space,Str "\1080",Space,Str "\1082",Space,RawInline "latex" "\\In{Mem}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndata    Mem     s a = ..\nnewtype Mutable s a = ..\n\nnew     :: a -> Mutable s (Mem s a)\nwrite   :: Mem s a -> a -> Mutable s ()\nread    :: Mem s a -> Mutable s a\n\\end{code}\n"
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1087\1088\1080",Space,Str "\1089\1086\1079\1076\1072\1085\1080\1080",Space,Str "\1090\1080\1087\1099",Space,RawInline "latex" "\\In{Mem}",Space,Str "\1080",Space,RawInline "latex" "\\In{Mutable}",Space,Str "\1089\1074\1103\1079\1072\1085\1099",Space,Str "\1086\1073\1097\1080\1084",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1086\1084",Space,RawInline "latex" "\\In{s}",Str ".",Space,Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1090\1080\1087",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{purge}"]
,RawBlock "latex" "\n\\begin{code}\npurge :: (forall s. Mutable s a) -> a\n\\end{code}\n"
,Para [Str "\1054\1085\1072",Space,Str "\1080\1084\1077\1077\1090",Space,Str "\1085\1077\1086\1073\1099\1095\1085\1099\1081",Space,Str "\1090\1080\1087",Str ".",Space,Str "\1057\1083\1086\1074\1086",Space,RawInline "latex" "\\In{forall}",Space,Str "\1086\1079\1085\1072\1095\1072\1077\1090",Space,Quoted DoubleQuote [Str "\1076\1083\1103",Space,Str "\1083\1102\1073\1099\1093"],Str ".",Space,Str "\1069\1090\1086",Space,Str "\1089\1083\1086\1074\1086",Space,Str "\1085\1072\1079\1099\1074\1072\1102\1090",Space,Str "\1082\1074\1072\1085\1090\1086\1088\1086\1084",Space,Str "\1074\1089\1077\1086\1073\1097\1085\1086\1089\1090\1080",Str ".",Space,Str "\1069\1090\1080\1084",Space,Str "\1084\1099",Space,Str "\1075\1086\1074\1086\1088\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1080\1079\1074\1083\1077\1095\1077\1085\1080\1103",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1085\1077",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1076\1077\1083\1072\1090\1100",Space,Str "\1085\1080\1082\1072\1082\1080\1093",Space,Str "\1087\1088\1077\1076\1087\1086\1083\1086\1078\1077\1085\1080\1081",Space,Str "\1086",Space,Str "\1090\1080\1087\1077",Space,Str "\1092\1080\1082\1090\1080\1074\1085\1086\1075\1086",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1103",Str ".",Space,Str "\1050\1072\1082",Space,Str "\1076\1086\1087\1086\1083\1085\1080\1090\1077\1083\1100\1085\1099\1081",Space,RawInline "latex" "\\In{forall}",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1085\1072\1084",Space,Str "\1087\1086\1084\1086\1095\1100",Str "?",Space,Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{purge}",Space,Str "\1079\1072\1073\1099\1074\1072\1077\1090",Space,Str "\1090\1080\1087",Space,Str "\1092\1080\1082\1090\1080\1074\1085\1086\1075\1086",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1103",Space,RawInline "latex" "\\In{s}",Space,Str "\1080\1079",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Mutable}",Str ",",Space,Str "\1085\1086",Space,Str "\1074",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Mem}",Str ",",Space,Str "\1101\1090\1086\1090",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088",Space,Str "\1087\1088\1086\1076\1086\1083\1078\1072\1077\1090",Space,Str "\1089\1074\1086\1105",Space,Str "\1087\1091\1090\1077\1096\1077\1089\1090\1074\1080\1077",Space,Str "\1087\1086",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1077",Space,Str "\1074",Space,Str "\1090\1080\1087\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,RawInline "latex" "\\In{v :: Mem s a}",Str ".",Space,Str "\1055\1086",Space,Str "\1090\1080\1087\1091",Space,RawInline "latex" "\\In{v}",Space,Str "\1082\1086\1084\1087\1080\1083\1103\1090\1086\1088",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1089\1082\1072\1079\1072\1090\1100",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1089\1091\1097\1077\1089\1090\1074\1091\1077\1090",Space,Str "\1090\1072\1082\1086\1077",Space,RawInline "latex" "\\In{s}",Str ",",Space,Str "\1076\1083\1103",Space,Str "\1082\1086\1090\1086\1088\1086\1075\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,RawInline "latex" "\\In{v}",Space,Str "\1080\1084\1077\1077\1090",Space,Str "\1089\1084\1099\1089\1083",Space,Str "(",Str "\1087\1088\1072\1074\1080\1083\1100\1085\1086",Space,Str "\1090\1080\1087\1080\1079\1080\1088\1086\1074\1072\1085\1086",Str ")",Str ".",Space,Str "\1053\1086",Space,Str "\1086\1085\1086",Space,Str "\1085\1077",Space,Str "\1083\1102\1073\1086\1077",Str "!",Space,Str "\1060\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{purge}",Space,Str "\1089",Space,Str "\1090\1088\1102\1082\1086\1084",Space,Str "\1080\1085\1090\1077\1088\1077\1089\1091\1077\1090",Space,Str "\1085\1077",Space,Str "\1085\1077\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1090\1080\1087",Str ",",Space,Str "\1072",Space,Str "\1074\1089\1077",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1099\1077",Space,Str "\1090\1080\1087\1099",Space,RawInline "latex" "\\In{s}",Str ",",Space,Str "\1087\1086\1101\1090\1086\1084\1091",Space,Str "\1087\1088\1080\1084\1077\1088",Space,Str "\1085\1077",Space,Str "\1087\1088\1086\1081\1076\1105\1090",Space,Str "\1087\1088\1086\1074\1077\1088\1082\1091",Space,Str "\1090\1080\1087\1086\1074",Str ".",Space,Str "\1050\1086\1084\1087\1080\1083\1103\1090\1086\1088",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1089\1083\1077\1076\1080\1090\1100",Space,Str "\1079\1072",Space,Quoted DoubleQuote [Str "\1095\1080\1089\1090\1086\1090\1086\1081"],Space,Str "\1085\1072\1096\1080\1093",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1081",Str "."]
,Para [Str "\1055\1088\1080",Space,Str "\1090\1072\1082\1086\1084",Space,Str "\1087\1086\1076\1093\1086\1076\1077",Space,Str "\1086\1089\1090\1072\1105\1090\1089\1103",Space,Str "\1074\1086\1087\1088\1086\1089",Str ":",Space,Str "\1086\1090\1082\1091\1076\1072",Space,Str "\1084\1099",Space,Str "\1074\1086\1079\1100\1084\1105\1084",Space,Str "\1085\1072\1095\1072\1083\1100\1085\1086\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Str ",",Space,Str "\1074\1077\1076\1100",Space,Str "\1090\1077\1087\1077\1088\1100",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1085\1077\1090",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{FakeState}",Str "?",Space,Str "\1042",Space,Str "Haskell",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1086",Space,Str "\1076\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1090\1080\1087\1072",Space,Str "\1073\1099\1083\1086",Space,Str "\1089\1076\1077\1083\1072\1085\1086",Space,Str "\1080\1089\1082\1083\1102\1095\1077\1085\1080\1077",Str ".",Space,Str "\1052\1099",Space,Str "\1074\1086\1079\1100\1084\1105\1084",Space,Str "\1077\1075\1086",Space,Str "\1080\1079",Space,Str "\1074\1086\1079\1076\1091\1093\1072",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1095\1080\1089\1090\1086",Space,Str "\1092\1080\1082\1090\1080\1074\1085\1099\1081",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088",Str ",",Space,Str "\1085\1072\1084",Space,Str "\1075\1083\1072\1074\1085\1086\1077",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1086\1085",Space,Str "\1089\1082\1088\1099\1090",Space,Str "\1086\1090",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1077\1083\1103",Str ",",Space,Str "\1080",Space,Str "\1086\1085",Space,Str "\1085\1080\1075\1076\1077",Space,Str "\1085\1077",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1080\1084",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100\1089\1103",Str ".",Space,Str "\1055\1086\1089\1082\1086\1083\1100\1082\1091",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1085\1077\1090",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088\1072",Space,RawInline "latex" "\\In{Mutable}",Space,Str "\1084\1099",Space,Str "\1085\1080\1082\1086\1075\1076\1072",Space,Str "\1085\1077",Space,Str "\1089\1084\1086\1078\1077\1084",Space,Str "\1076\1086\1073\1088\1072\1090\1100\1089\1103",Space,Str "\1076\1086",Space,Str "\1074\1085\1091\1090\1088\1077\1085\1085\1077\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{State}",Space,Str "\1080",Space,Str "\1080\1079\1074\1083\1077\1095\1100",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1077",Str ".",Space,Str "\1057\1086\1089\1090\1086\1103\1085\1080\1077",Space,Str "\1089\1082\1088\1099\1090\1086",Space,Str "\1079\1072",Space,Str "\1080\1085\1090\1077\1088\1092\1077\1081\1089\1086\1084",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Monad}",Space,Str "\1080",Space,Str "\1086\1090\1073\1088\1072\1089\1099\1074\1072\1077\1090\1089\1103",Space,Str "\1074",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{purge}",Str "."]
,Header 3 [Str "\1058\1080\1087",Space,Str "ST"]
,Para [Str "\1042\1099\1096\1077",Space,Str "\1103",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1083\1089\1103",Space,Str "\1074\1099\1084\1099\1096\1083\1077\1085\1085\1099\1084\1080",Space,Str "\1090\1080\1087\1072\1084\1080",Space,Str "\1076\1083\1103",Space,Str "\1091\1087\1088\1086\1097\1077\1085\1080\1103",Space,Str "\1086\1073\1098\1103\1089\1085\1077\1085\1080\1081",Str ",",Space,Str "\1085\1072",Space,Str "\1089\1072\1084\1086\1084",Space,Str "\1076\1077\1083\1077",Space,Str "\1074",Space,Str "Haskell",Space,Str "\1079\1072",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Space,Str "\1086\1090\1074\1077\1095\1072\1077\1090",Space,Str "\1090\1080\1087",Space,RawInline "latex" "\\In{ST}",Space,Str "(",Str "\1089\1086\1082\1088\1072\1097\1077\1085\1080\1077",Space,Str "\1086\1090",Space,Str "state",Space,Str "transformer",Str ")",Str ".",Space,Str "\1054\1085",Space,Str "\1078\1080\1074\1105\1090",Space,Str "\1074",Space,Str "\1084\1086\1076\1091\1083\1077",Space,RawInline "latex" "\\In{Control.Monad.ST}",Str ".",Space,Str "\1048\1079",Space,Str "\1076\1086\1082\1091\1084\1077\1085\1090\1072\1094\1080\1080",Space,Str "\1074\1080\1076\1085\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1091",Space,Str "\1085\1077\1075\1086",Space,Str "\1076\1074\1072",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1072",Str ",",Space,Str "\1080",Space,Str "\1085\1077\1090",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088\1086\1074",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndata ST s a\n\\end{code}\n"
,Para [Str "\1069\1090\1086",Space,Str "\1085\1072\1096",Space,Str "\1090\1080\1087",Space,RawInline "latex" "\\In{Mutable}",Str ",",Space,Str "\1090\1077\1087\1077\1088\1100",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1090\1080\1087",Space,RawInline "latex" "\\In{Mem}",Str ".",Space,Str "\1054\1085",Space,Str "\1085\1072\1079\1099\1074\1072\1077\1090\1089\1103",Space,RawInline "latex" "\\In{ST}",Str "-",Str "\1089\1089\1099\1083\1082\1086\1081",Space,Str "\1080",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1105\1085",Space,Str "\1074",Space,Str "\1084\1086\1076\1091\1083\1077",Space,RawInline "latex" "\\In{Data.STRef}",Space,Str "(",Str "\1089\1086\1082\1088\1072\1097\1077\1085\1080\1077",Space,Str "\1086\1090",Space,Str "ST",Space,Str "reference",Str ")",Str ".",Space,Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1086\1089\1085\1086\1074\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nnewSTRef    :: a -> ST s (STRef s a)\nreadSTRef   :: STRef s a -> ST s a\nwriteSTRef  :: STRef s a -> a -> ST s ()\n\\end{code}\n"
,Para [Str "\1058\1072\1082\1080\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1080\1085\1086\1075\1076\1072",Space,Str "\1085\1072\1079\1099\1074\1072\1102\1090",Space,Emph [Str "\1089\1084\1099\1096\1083\1105\1085\1099\1084\1080",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088\1072\1084\1080"],Space,Str "(",Str "smart",Space,Str "constructors",Str ")",Space,Str "\1086\1085\1080",Space,Str "\1087\1086\1079\1074\1086\1083\1103\1102\1090",Space,Str "\1089\1090\1088\1086\1080\1090\1100",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Str ",",Space,Str "\1085\1086",Space,Str "\1089\1082\1088\1099\1074\1072\1102\1090",Space,Str "\1086\1090",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1077\1083\1103",Space,Str "\1088\1077\1072\1083\1080\1079\1072\1094\1080\1102",Space,Str "\1079\1072",Space,Str "\1089\1095\1105\1090",Space,Str "\1089\1082\1088\1099\1090\1080\1103",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088\1086\1074",Space,Str "\1090\1080\1087\1072",Space,Str "(",Str "\1084\1086\1076\1091\1083\1100",Space,Str "\1101\1082\1089\1087\1086\1088\1090\1080\1088\1091\1077\1090",Space,Str "\1083\1080\1096\1100",Space,Str "\1080\1084\1103",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{STRef}",Str ")",Str "."]
,Para [Str "\1044\1083\1103",Space,Str "\1080\1083\1083\1102\1089\1090\1088\1072\1094\1080\1080",Space,Str "\1101\1090\1080\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1088\1077\1072\1083\1080\1079\1091\1077\1084",Space,Str "\1086\1076\1085\1091",Space,Str "\1074\1089\1087\1086\1084\1086\1075\1072\1090\1077\1083\1100\1085\1091\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1080\1079",Space,Str "\1084\1086\1076\1091\1083\1103",Space,RawInline "latex" "\\In{Data.STRef}",Str ",",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1103",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1087\1086",Space,Str "\1089\1089\1099\1083\1082\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nmodifySTRef :: STRef s a -> (a -> a) -> ST s ()\nmodifySTRef ref f = writeSTRef . f =<< readSTRef ref \n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1086\1074\1072\1083\1080\1089\1100",Space,Str "\1090\1077\1084",Str ",",Space,Str "\1095\1090\1086",Space,RawInline "latex" "\\In{ST}",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1086\1084",Space,RawInline "latex" "\\In{Monad}",Str ".",Space,Str "\1058\1072\1082\1078\1077",Space,Str "\1082\1072\1082",Space,Str "\1080",Space,Str "\1076\1083\1103",Space,RawInline "latex" "\\In{State}",Space,Str "\1076\1083\1103",Space,RawInline "latex" "\\In{ST}",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1099",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1099",Space,Str "\1082\1083\1072\1089\1089\1086\1074",Space,RawInline "latex" "\\In{Functor}",Str ",",Space,RawInline "latex" "\\In{Applicative}",Space,Str "\1080",Space,RawInline "latex" "\\In{Monad}",Str ".",Space,Str "\1050\1072\1082\1086\1077",Space,Str "\1089\1086\1074\1087\1072\1076\1077\1085\1080\1077",Str "!",Space,Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{purge}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nrunST :: (forall s. ST s a) -> a\n\\end{code}\n"
,Header 3 [Str "\1048\1084\1087\1077\1088\1072\1090\1080\1074\1085\1099\1077",Space,Str "\1094\1080\1082\1083\1099"]
,Para [Str "\1056\1077\1072\1083\1080\1079\1091\1077\1084",Space,RawInline "latex" "\\In{for}",Space,Str "\1094\1080\1082\1083",Space,Str "\1080\1079",Space,Str "\1103\1079\1099\1082\1072",Space,Str "C",Str ":"]
,CodeBlock ("",["c"],[]) "Result s;\n\nfor (i = 0 ; i < n; i++)\n    update(i, s);\n\nreturn s;"
,Para [Str "\1059",Space,Str "\1085\1072\1089",Space,Str "\1077\1089\1090\1100",Space,Str "\1089\1090\1072\1088\1090\1086\1074\1086\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1089\1095\1105\1090\1095\1080\1082\1072",Space,Str "\1080",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1072",Str ",",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1103",Space,Str "\1089\1095\1105\1090\1095\1080\1082\1072",Str ",",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090",Space,Str "\1086\1089\1090\1072\1085\1086\1074\1072",Space,Str "\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1103",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1072",Str ".",Space,Str "\1052\1099",Space,Str "\1080\1085\1080\1094\1080\1072\1083\1080\1079\1080\1088\1091\1077\1084",Space,Str "\1089\1095\1105\1090\1095\1080\1082",Space,Str "\1080",Space,Str "\1079\1072\1090\1077\1084",Space,Str "\1086\1073\1085\1086\1074\1083\1103\1077\1084",Space,Str "\1089\1095\1105\1090\1095\1080\1082",Space,Str "\1080",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1077",Space,Str "\1076\1086",Space,Str "\1090\1077\1093",Space,Str "\1087\1086\1088",Space,Str "\1087\1086\1082\1072",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090",Space,Str "\1089\1095\1105\1090\1095\1080\1082\1072",Space,Str "\1085\1077",Space,Str "\1089\1090\1072\1085\1077\1090",Space,Str "\1083\1086\1078\1085\1099\1084",Str ".",Space,Str "\1053\1072\1087\1080\1096\1077\1084",Space,Str "\1095\1080\1089\1090\1091\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1088\1077\1072\1083\1080\1079\1091\1077\1090",Space,Str "\1101\1090\1086\1090",Space,Str "\1087\1088\1086\1094\1077\1089\1089",Str ".",Space,Str "\1042",Space,Str "\1101\1090\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1084\1099",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1091\1077\1084\1089\1103",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1099\1084",Space,Str "\1089\1080\1085\1090\1072\1082\1089\1080\1095\1077\1089\1082\1080\1084",Space,Str "\1089\1072\1093\1072\1088\1086\1084",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1085\1072\1079\1099\1074\1072\1077\1090\1089\1103",Space,RawInline "latex" "\\In{do}",Str "-",Str "\1085\1086\1090\1072\1094\1080\1103",Str ",",Space,Str "\1085\1077",Space,Str "\1087\1091\1075\1072\1081\1090\1077\1089\1100",Space,Str "\1101\1090\1086",Space,Str "\1074\1089\1105",Space,Str "\1077\1097\1105",Space,Str "Haskell",Str ",",Space,Str "\1076\1083\1103",Space,Str "\1087\1086\1085\1080\1084\1072\1085\1080\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1087\1088\1080\1084\1077\1088\1072",Space,Str "\1079\1072\1075\1083\1103\1085\1080\1090\1077",Space,Str "\1074",Space,Str "\1088\1072\1079\1076\1077\1083",Space,Quoted DoubleQuote [Str "\1089\1072\1093\1072\1088",Space,Str "\1076\1083\1103",Space,Str "\1084\1086\1085\1072\1076"],Space,Str "\1075\1083\1072\1074\1099",Str "~",Str "17",Str "."]
,RawBlock "latex" "\n\\begin{code}\nmodule Loop where\n\nimport Control.Monad\n\nimport Data.STRef\nimport Control.Monad.ST\n\nforLoop ::  i -> (i -> Bool) -> (i -> i) -> (i -> s -> s) -> s -> s\nforLoop i0 pred next update s0 = runST $ do\n    refI <- newSTRef i0\n    refS <- newSTRef s0\n    iter refI refS\n    readSTRef refS\n    where iter refI refS = do\n            i <- readSTRef refI\n            s <- readSTRef refS\n            when (pred i) $ do\n                writeSTRef refI $ next i\n                writeSTRef refS $ update i s\n                iter refI refS\n\\end{code}\n"
,Para [Str "\1042\1087\1088\1086\1095\1077\1084",Space,Str "\1082\1086\1076",Space,Str "\1074\1099\1096\1077",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1087\1086\1085\1103\1090\1100",Space,Str "\1077\1089\1083\1080",Space,Str "\1095\1080\1090\1072\1090\1100",Space,Str "\1077\1075\1086",Space,Str "\1082\1072\1082",Space,Str "\1086\1073\1099\1095\1085\1099\1081",Space,Str "\1080\1084\1087\1077\1088\1072\1090\1080\1074\1085\1099\1081",Space,Str "\1082\1086\1076",Str ".",Space,Str "\1042\1099\1088\1072\1078\1077\1085\1080\1103",Space,RawInline "latex" "\\In{do}",Str "-",Str "\1073\1083\1086\1082\1072",Space,Str "\1074\1099\1087\1086\1083\1085\1103\1102\1090\1089\1103",Space,Str "\1087\1086\1089\1083\1077\1076\1086\1074\1072\1090\1077\1083\1100\1085\1086",Str ",",Space,Str "\1086\1076\1085\1086",Space,Str "\1079\1072",Space,Str "\1076\1088\1091\1075\1080\1084",Str ".",Space,Str "\1057\1085\1072\1095\1072\1083\1072",Space,Str "\1084\1099",Space,Str "\1080\1085\1080\1094\1080\1072\1083\1080\1079\1080\1088\1091\1077\1084",Space,Str "\1076\1074\1072",Space,Str "\1080\1079\1084\1077\1085\1103\1077\1084\1099\1093",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str ",",Space,Str "\1076\1083\1103",Space,Str "\1089\1095\1105\1090\1095\1080\1082\1072",Space,Str "\1094\1080\1082\1083\1072",Space,Str "\1080",Space,Str "\1076\1083\1103",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1103",Str ".",Space,Str "\1047\1072\1090\1077\1084",Space,Str "\1074",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{iter}",Space,Str "\1084\1099",Space,Str "\1095\1080\1090\1072\1077\1084",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1080",Space,Str "\1074\1099\1087\1086\1083\1085\1103\1077\1084",Space,Str "\1087\1088\1086\1074\1077\1088\1082\1091",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090\1072",Space,RawInline "latex" "\\In{pred}",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{when}",Space,Str "\8211",Space,Str "\1101\1090\1086",Space,Str "\1089\1090\1072\1085\1076\1072\1088\1090\1085\1072\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1080\1079",Space,Str "\1084\1086\1076\1091\1083\1103",Space,RawInline "latex" "\\In{Control.Monad}",Str ".",Space,Str "\1054\1085\1072",Space,Str "\1087\1088\1086\1074\1077\1088\1103\1077\1090",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090",Str ",",Space,Str "\1080",Space,Str "\1077\1089\1083\1080",Space,Str "\1086\1085",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,RawInline "latex" "\\In{True}",Space,Str "\1074\1099\1087\1086\1083\1085\1103\1077\1090",Space,Str "\1089\1077\1088\1080\1102",Space,Str "\1076\1077\1081\1089\1090\1074\1080\1081",Str ",",Space,Str "\1074",Space,Str "\1082\1086\1090\1086\1088\1099\1093",Space,Str "\1084\1099",Space,Str "\1079\1072\1087\1080\1089\1099\1074\1072\1077\1084",Space,Str "\1086\1073\1085\1086\1074\1083\1105\1085\1085\1099\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str ".",Space,Str "\1054\1073\1088\1072\1090\1080\1090\1077",Space,Str "\1074\1085\1080\1084\1072\1085\1080\1077",Space,Str "\1085\1072",Space,Str "\1090\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1089\1074\1103\1079\1082\1072",Space,RawInline "latex" "\\In{when-do}",Space,Str "\1101\1090\1086",Space,Str "\1085\1077",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1072\1103",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1094\1080\1103",Space,Str "\1103\1079\1099\1082\1072",Str ".",Space,Str "\1050\1072\1082",Space,Str "\1073\1099\1083\1086",Space,Str "\1089\1082\1072\1079\1072\1085\1086",Space,RawInline "latex" "\\In{when}",Space,Str "\8211",Space,Str "\1101\1090\1086",Space,Str "\1087\1088\1086\1089\1090\1086",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Str ",",Space,Str "\1085\1086",Space,Str "\1086\1085\1072",Space,Str "\1086\1078\1080\1076\1072\1077\1090",Space,Str "\1086\1076\1085\1086",Space,Str "\1076\1077\1081\1089\1090\1074\1080\1077",Str ",",Space,Str "\1072",Space,Str "\1084\1099",Space,Str "\1093\1086\1090\1080\1084",Space,Str "\1074\1099\1087\1086\1083\1085\1080\1090\1100",Space,Str "\1089\1088\1072\1079\1091",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Str ".",Space,Str "\1057\1083\1077\1076\1091\1102\1097\1077\1077",Space,Str "\1079\1072",Space,Str "\1085\1077\1081",Space,RawInline "latex" "\\In{do}",Space,Str "\1085\1072\1095\1080\1085\1072\1077\1090",Space,Str "\1073\1083\1086\1082",Space,Str "\1076\1077\1081\1089\1090\1074\1080\1081",Space,Str "(",Str "\1075\1088\1072\1085\1080\1094\1099",Space,Str "\1073\1083\1086\1082\1072",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1102\1090\1089\1103",Space,Str "\1087\1086",Space,Str "\1086\1090\1089\1090\1091\1087\1072\1084",Str ")",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1080\1085\1090\1077\1088\1087\1088\1077\1090\1080\1088\1086\1074\1072\1090\1100\1089\1103",Space,Str "\1082\1072\1082",Space,Str "\1086\1076\1085\1086",Space,Str "\1076\1077\1081\1089\1090\1074\1080\1077",Str ".",Space,Str "\1042",Space,Str "\1085\1072\1089\1090\1086\1103\1097\1077\1084",Space,Str "\1080\1084\1087\1077\1088\1072\1090\1080\1074\1085\1086\1084",Space,Str "\1094\1080\1082\1083\1077",Space,Str "\1074",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1080",Space,Str "\1080",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090\1077",Space,Str "\1089\1095\1105\1090\1095\1080\1082\1072",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1091\1095\1072\1089\1090\1074\1086\1074\1072\1090\1100",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1072\1103",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1072",Str ",",Space,Str "\1085\1086",Space,Str "\1101\1090\1086",Space,Str "\1089\1095\1080\1090\1072\1077\1090\1089\1103",Space,Str "\1087\1088\1080\1079\1085\1072\1082\1086\1084",Space,Str "\1076\1091\1088\1085\1086\1075\1086",Space,Str "\1089\1090\1080\1083\1103",Str ",",Space,Str "\1087\1086\1101\1090\1086\1084\1091",Space,Str "\1085\1072\1096\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1099",Space,Str "\1085\1072",Space,Str "\1090\1080\1087\1077",Space,Str "\1089\1095\1105\1090\1095\1080\1082\1072",Str ".",Space,Str "\1056\1077\1096\1080\1084",Space,Str "\1090\1080\1087\1080\1095\1085\1091\1102",Space,Str "\1079\1072\1076\1072\1095\1091",Str ",",Space,Str "\1087\1086\1089\1095\1080\1090\1072\1077\1084",Space,Str "\1095\1080\1089\1083\1072",Space,Str "\1086\1090",Space,Str "\1086\1076\1085\1086\1075\1086",Space,Str "\1076\1086",Space,Str "\1076\1077\1089\1103\1090\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Loop> forLoop 1 (<=10) succ (+) 0\n55\n\\end{code}\n"
,Para [Str "\1055\1086\1089\1095\1080\1090\1072\1077\1084",Space,Str "\1092\1072\1082\1090\1086\1088\1080\1072\1083",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Loop> forLoop 1 (<=10) succ (*) 1\n3628800\n*Loop> forLoop 1 (<=100) succ (*) 1\n9332621544394415268169923885626670049071596826\n4381621468592963895217599993229915608941463976\n1565182862536979208272237582511852109168640000\n00000000000000000000\n\\end{code}\n"
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1085\1072\1087\1080\1096\1077\1084",Space,RawInline "latex" "\\In{while}",Str "-",Str "\1094\1080\1082\1083",Str ":"]
,CodeBlock ("",["c"],[]) "Result s;\n\nwhile (pred(s))\n    update(s);\n\nreturn s;"
,Para [Str "\1042",Space,Str "\1101\1090\1086\1084",Space,Str "\1094\1080\1082\1083\1077",Space,Str "\1091\1095\1072\1089\1090\1074\1091\1077\1090",Space,Str "\1086\1076\1080\1085",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090",Space,Str "\1080",Space,Str "\1086\1076\1085\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1103",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1072",Str ",",Space,Str "\1084\1099",Space,Str "\1086\1073\1085\1086\1074\1083\1103\1077\1084",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090",Space,Str "\1076\1086",Space,Str "\1090\1077\1093",Space,Str "\1087\1086\1088",Space,Str "\1087\1086\1082\1072",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090",Space,Str "\1085\1077",Space,Str "\1089\1090\1072\1085\1077\1090",Space,Str "\1083\1086\1078\1085\1099\1084",Str "."]
,RawBlock "latex" "\n\\begin{code}\nwhileLoop :: (s -> Bool) -> (s -> s) -> s -> s\nwhileLoop pred update s0 = runST $ do\n    ref <- newSTRef s0\n    iter ref \n    readSTRef ref\n    where iter ref = do\n            s <- readSTRef ref\n            when (pred s) $ do\n                writeSTRef ref $ update s\n                iter ref\n\\end{code}\n"
,Para [Str "\1055\1086\1089\1095\1080\1090\1072\1077\1084",Space,Str "\1089\1091\1084\1084\1091",Space,Str "\1095\1080\1089\1077\1083",Space,Str "\1095\1077\1088\1077\1079",Space,RawInline "latex" "\\In{while}",Str "-",Str "\1094\1080\1082\1083",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Loop> whileLoop ((>0) . fst) (\\(n, s) -> (pred n, n + s)) (10, 0)\n(0,55)\n\\end{code}\n"
,Para [Str "\1055\1077\1088\1074\1099\1081",Space,Str "\1101\1083\1077\1084\1077\1085\1090",Space,Str "\1087\1072\1088\1099",Space,Str "\1080\1075\1088\1072\1077\1090",Space,Str "\1088\1086\1083\1100",Space,Str "\1089\1095\1105\1090\1095\1080\1082\1072",Str ",",Space,Str "\1072",Space,Str "\1074\1086",Space,Str "\1074\1090\1086\1088\1086\1084",Space,Str "\1084\1099",Space,Str "\1085\1072\1082\1072\1087\1083\1080\1074\1072\1077\1084",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090",Str "."]
,Header 3 [Str "\1041\1099\1089\1090\1088\1072\1103",Space,Str "\1089\1086\1088\1090\1080\1088\1086\1074\1082\1072"]
,Para [Str "\1056\1077\1072\1083\1080\1079\1091\1077\1084",Space,Str "\1080\1084\1087\1077\1088\1072\1090\1080\1074\1085\1099\1081",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084",Space,Str "\1073\1099\1089\1090\1088\1086\1081",Space,Str "\1089\1086\1088\1090\1080\1088\1086\1074\1082\1080",Str ".",Space,Str "\1040\1083\1075\1086\1088\1080\1090\1084",Space,Str "\1073\1099\1089\1090\1088\1086\1081",Space,Str "\1089\1086\1088\1090\1080\1088\1086\1074\1082\1080",Space,Str "\1093\1086\1088\1086\1096",Space,Str "\1085\1077",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1090\1077\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1086\1085",Space,Str "\1088\1072\1073\1086\1090\1072\1077\1090",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1073\1099\1089\1090\1088\1086",Str ",",Space,Str "\1085\1086",Space,Str "\1080",Space,Str "\1084\1080\1085\1080\1084\1072\1083\1100\1085\1099\1084",Space,Str "\1088\1072\1089\1093\1086\1076\1086\1084",Space,Str "\1087\1072\1084\1103\1090\1080",Str ".",Space,Str "\1057\1086\1088\1090\1080\1088\1086\1074\1082\1072",Space,Str "\1087\1088\1086\1074\1086\1076\1080\1090\1089\1103",Space,Str "\1074",Space,Str "\1089\1072\1084\1086\1084",Space,Str "\1084\1072\1089\1089\1080\1074\1077",Str ",",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1086\1073\1084\1077\1085\1072",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1086\1074",Space,Str "\1084\1077\1089\1090\1072\1084\1080",Str ".",Space,Str "\1053\1086",Space,Str "\1076\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1085\1072\1084",Space,Str "\1087\1086\1085\1072\1076\1086\1073\1103\1090\1089\1103",Space,Str "\1080\1079\1084\1077\1085\1103\1077\1084\1099\1077",Space,Str "\1084\1072\1089\1089\1080\1074\1099",Str ".",Space,Str "\1069\1090\1086\1090",Space,Str "\1090\1080\1087",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1105\1085",Space,Str "\1074",Space,Str "\1084\1086\1076\1091\1083\1077",Space,RawInline "latex" "\\In{Data.Array.ST}",Str ".",Space,Str "\1042",Space,Str "Haskell",Space,Str "\1077\1089\1090\1100",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1090\1080\1087\1086\1074",Space,Str "\1080\1079\1084\1077\1085\1103\1077\1084\1099\1093",Space,Str "\1084\1072\1089\1089\1080\1074\1086\1074",Space,Str "(",Str "\1082\1072\1082",Space,Str "\1074\1087\1088\1086\1095\1077\1084",Space,Str "\1080",Space,Str "\1085\1077\1080\1079\1084\1077\1085\1103\1077\1084\1099\1093",Str ")",Str ",",Space,Str "\1101\1090\1086",Space,Str "\1089\1074\1103\1079\1072\1085\1086",Space,Str "\1089",Space,Str "\1088\1072\1079\1083\1080\1095\1085\1099\1084\1080",Space,Str "\1085\1102\1072\1085\1089\1072\1084\1080",Space,Str "\1088\1072\1079\1084\1077\1097\1077\1085\1080\1103",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1086\1074",Space,Str "\1074",Space,Str "\1084\1072\1089\1089\1080\1074\1072\1093",Str ",",Space,Str "\1086",Space,Str "\1082\1086\1090\1086\1088\1099\1093",Space,Str "\1084\1099",Space,Str "\1087\1086\1082\1072",Space,Str "\1091\1084\1086\1083\1095\1080\1084",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1087\1088\1077\1076\1086\1089\1090\1074\1072\1083\1077\1085\1080\1103",Space,Str "\1086\1073\1097\1077\1075\1086",Space,Str "\1080\1085\1090\1077\1088\1092\1077\1081\1089\1072",Space,Str "\1082",Space,Str "\1088\1072\1079\1083\1080\1095\1085\1099\1084",Space,Str "\1084\1072\1089\1089\1080\1074\1072\1084",Space,Str "\1073\1099\1083",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1105\1085",Space,Str "\1082\1083\1072\1089\1089",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nclass (HasBounds a, Monad m) => MArray a e m where\n    newArray  :: Ix i => (i, i) -> e -> m (a i e)\n    newArray_ :: Ix i => (i, i) -> m (a i e)\n\\end{code}\n"
,Para [RawInline "latex" "\\In{MArray}",Space,Str "\8211",Space,Str "\1101\1090\1086",Space,Str "\1089\1086\1082\1088\1072\1097\1077\1085\1080\1077",Space,Str "\1086\1090",Space,Str "mutable",Space,Str "(",Str "\1080\1079\1084\1077\1085\1103\1077\1084\1099\1081",Str ")",Space,Str "array",Str ".",Space,Str "\1052\1077\1090\1086\1076",Space,RawInline "latex" "\\In{newArray}",Space,Str "\1089\1086\1079\1076\1105\1090",Space,Str "\1084\1072\1089\1089\1080\1074",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{a}",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1079\1072\1074\1105\1088\1085\1091\1090",Space,Str "\1074",Space,Str "\1090\1080\1087",Str "-",Str "\1084\1086\1085\1072\1076\1091",Space,RawInline "latex" "\\In{m}",Str ".",Space,Str "\1055\1077\1088\1074\1099\1081",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090",Space,Str "\1091\1082\1072\1079\1099\1074\1072\1077\1090",Space,Str "\1085\1072",Space,Str "\1076\1080\1072\1087\1072\1079\1086\1085",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Space,Str "\1080\1085\1076\1077\1082\1089\1086\1074",Space,Str "\1084\1072\1089\1089\1080\1074\1072",Str ",",Space,Str "\1072",Space,Str "\1074\1090\1086\1088\1099\1084",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1084",Space,Str "\1087\1077\1088\1077\1076\1072\1105\1090\1089\1103",Space,Str "\1101\1083\1077\1084\1077\1085\1090",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1079\1072\1087\1080\1089\1072\1085",Space,Str "\1074\1086",Space,Str "\1074\1089\1077",Space,Str "\1103\1095\1077\1081\1082\1080",Space,Str "\1084\1072\1089\1089\1080\1074\1072",Str ".",Space,Str "\1042\1090\1086\1088\1072\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1079\1072\1087\1080\1089\1099\1074\1072\1077\1090",Space,Str "\1074",Space,Str "\1084\1072\1089\1089\1080\1074",Space,Str "\1101\1083\1077\1084\1077\1085\1090",Space,RawInline "latex" "\\In{undefined}",Str "."]
,Para [Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1074\1089\1087\1086\1084\1086\1075\1072\1090\1077\1083\1100\1085\1099\1077",Space,Str "\1082\1083\1072\1089\1089\1099",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nclass Ord a => Ix a where\n    range :: (a, a) -> [a]\n    index :: (a, a) -> a -> Int\n    inRange :: (a, a) -> a -> Bool\n    rangeSize :: (a, a) -> Int\n\nclass HasBounds a where\n    bounds :: Ix i => a i e -> (i, i)\n\\end{code}\n"
,Para [Str "\1050\1083\1072\1089\1089",Space,RawInline "latex" "\\In{Ix}",Space,Str "\1086\1087\1080\1089\1099\1074\1072\1077\1090",Space,Str "\1090\1080\1087",Space,Str "\1080\1085\1076\1077\1082\1089\1072",Space,Str "\1080\1079",Space,Str "\1085\1077\1087\1088\1077\1088\1099\1074\1085\1086\1075\1086",Space,Str "\1076\1080\1072\1087\1072\1079\1086\1085\1072",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Str ".",Space,Str "\1053\1072\1074\1077\1088\1085\1103\1082\1072",Space,Str "\1087\1086",Space,Str "\1080\1084\1077\1085\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1080",Space,Str "\1090\1080\1087\1091",Space,Str "\1074\1099",Space,Str "\1076\1086\1075\1072\1076\1072\1077\1090\1077\1089\1100",Space,Str "\1086",Space,Str "\1085\1072\1079\1085\1072\1095\1077\1085\1080\1080",Space,Str "\1084\1077\1090\1086\1076\1086\1074",Space,Str "(",Str "\1084\1086\1078\1077\1090\1077",Space,Str "\1089\1074\1077\1088\1080\1090\1100\1089\1103",Space,Str "\1089",Space,Str "\1080\1085\1090\1077\1088\1087\1088\1077\1090\1072\1090\1086\1088\1086\1084",Space,Str "\1085\1072",Space,Str "\1090\1080\1087\1072\1093",Space,RawInline "latex" "\\In{Int}",Space,Str "\1080\1083\1080",Space,RawInline "latex" "\\In{(Int, Int)}",Str ")",Str ".",Space,Str "\1050\1083\1072\1089\1089",Space,RawInline "latex" "\\In{HasBounds}",Space,Str "\1086\1073\1086\1079\1085\1072\1095\1072\1077\1090",Space,Str "\1084\1072\1089\1089\1080\1074\1099",Space,Str "\1088\1072\1079\1084\1077\1088",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1093",Space,Str "\1092\1080\1082\1089\1080\1088\1086\1074\1072\1085",Str ".",Space,Str "\1053\1086",Space,Str "\1074\1077\1088\1085\1105\1084\1089\1103",Space,Str "\1082",Space,Str "\1084\1072\1089\1089\1080\1074\1072\1084",Str ".",Space,Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1085\1077",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1074\1099\1076\1077\1083\1103\1090\1100",Space,Str "\1087\1072\1084\1103\1090\1100",Space,Str "\1087\1086\1076",Space,Str "\1084\1072\1089\1089\1080\1074",Str ",",Space,Str "\1085\1086",Space,Str "\1080",Space,Str "\1095\1080\1090\1072\1090\1100",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1099",Space,Str "\1080",Space,Str "\1086\1073\1085\1086\1074\1083\1103\1090\1100",Space,Str "\1080\1093",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nreadArray  :: (MArray a e m, Ix i) => a i e -> i -> m e\nwriteArray :: (MArray a e m, Ix i) => a i e -> i -> e -> m ()\n\\end{code}\n"
,Para [Str "\1042",Space,Str "\1089\1083\1091\1095\1072\1077",Space,RawInline "latex" "\\In{ST}",Str "-",Str "\1089\1089\1099\1083\1086\1082",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1073\1099\1083\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{runST}",Str ".",Space,Str "\1054\1085\1072",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1083\1072",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1080\1079",Space,Str "\1087\1072\1084\1103\1090\1080",Str ",",Space,Str "\1085\1086",Space,Str "\1095\1090\1086",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1090\1100",Space,Str "\1072\1085\1072\1083\1086\1075\1080\1095\1085\1072\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1076\1083\1103",Space,Str "\1084\1072\1089\1089\1080\1074\1072",Str "?",Space,Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1085\1077\1105",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nfreeze :: (Ix i, MArray a e m, IArray b e) => a i e -> m (b i e)\n\\end{code}\n"
,Para [Str "\1042\1086\1079\1084\1086\1078\1085\1086",Space,Str "\1079\1072",Space,Str "\1074\1089\1077\1084\1080",Space,Str "\1082\1083\1072\1089\1089\1072\1084\1080",Space,Str "\1089\1093\1086\1078\1077\1089\1090\1100",Space,Str "\1089",Space,Str "\1092\1091\1085\1082\1094\1080\1077\1081",Space,RawInline "latex" "\\In{runST}",Space,Str "\1087\1088\1086\1089\1083\1077\1078\1080\1074\1072\1077\1090\1089\1103",Space,Str "\1085\1077",Space,Str "\1090\1072\1082",Space,Str "\1095\1105\1090\1082\1086",Str ".",Space,Str "\1053\1086\1074\1099\1081",Space,Str "\1082\1083\1072\1089\1089",Space,RawInline "latex" "\\In{IArray}",Space,Str "\1086\1073\1086\1079\1085\1072\1095\1072\1077\1090",Space,Str "\1085\1077\1080\1079\1084\1077\1085\1103\1077\1084\1099\1077",Space,Str "(",Str "immutable",Str ")",Space,Str "\1084\1072\1089\1089\1080\1074\1099",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1077\1081",Space,RawInline "latex" "\\In{freeze}",Space,Str "\1084\1099",Space,Str "\1087\1088\1077\1074\1088\1072\1097\1072\1077\1084",Space,Str "\1080\1079\1084\1077\1085\1103\1077\1084\1099\1081",Space,Str "\1084\1072\1089\1089\1080\1074",Space,Str "\1074",Space,Str "\1085\1077\1080\1079\1084\1077\1085\1103\1077\1084\1099\1081",Str ",",Space,Str "\1085\1086",Space,Str "\1079\1072\1074\1105\1088\1085\1091\1090\1099\1081",Space,Str "\1074",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1099\1081",Space,Str "\1090\1080\1087",Str "-",Str "\1084\1086\1085\1072\1076\1091",Str ".",Space,Str "\1042",Space,Str "\1085\1072\1096\1077\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1101\1090\1080\1084",Space,Str "\1090\1080\1087\1086\1084",Space,Str "\1073\1091\1076\1077\1090",Space,RawInline "latex" "\\In{ST}",Str ".",Space,Str "\1042",Space,Str "\1084\1086\1076\1091\1083\1077",Space,RawInline "latex" "\\In{Data.Array.ST}",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1072",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1072\1103",Space,Str "\1074\1077\1088\1089\1080\1103",Space,Str "\1101\1090\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nrunSTArray :: Ix i => (forall s . ST s (STArray s i e)) -> Array i e\n\\end{code}\n"
,Para [Str "\1047\1076\1077\1089\1100",Space,RawInline "latex" "\\In{Array}",Space,Str "\8211",Space,Str "\1101\1090\1086",Space,Str "\1086\1073\1099\1095\1085\1099\1081",Space,Str "\1085\1077\1080\1079\1084\1077\1085\1103\1077\1084\1099\1081",Space,Str "\1084\1072\1089\1089\1080\1074",Str ".",Space,Str "\1054\1085",Space,Str "\1078\1080\1074\1105\1090",Space,Str "\1074",Space,Str "\1084\1086\1076\1091\1083\1077",Space,RawInline "latex" "\\In{Data.Array}",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1089\1090\1088\1086\1080\1090\1100",Space,Str "\1084\1072\1089\1089\1080\1074\1099",Space,Str "\1080\1079",Space,Str "\1089\1087\1080\1089\1082\1086\1074",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Str ",",Space,Str "\1087\1088\1077\1086\1073\1088\1072\1079\1086\1074\1099\1074\1072\1090\1100",Space,Str "\1080\1093",Space,Str "\1088\1072\1079\1085\1099\1084\1080",Space,Str "\1089\1087\1086\1089\1086\1073\1072\1084\1080",Str ",",Space,Str "\1087\1088\1077\1074\1088\1072\1097\1072\1090\1100",Space,Str "\1074",Space,Str "\1086\1073\1088\1072\1090\1085\1086",Space,Str "\1074",Space,Str "\1089\1087\1080\1089\1082\1080",Space,Str "\1080",Space,Str "\1084\1085\1086\1075\1086\1077",Space,Str "\1076\1088\1091\1075\1086\1077",Str ".",Space,Str "\1054\1073",Space,Str "\1086",Space,Str "\1074\1089\1105\1084",Space,Str "\1101\1090\1086\1084",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1091\1079\1085\1072\1090\1100",Space,Str "\1080\1079",Space,Str "\1076\1086\1082\1091\1084\1077\1085\1090\1072\1094\1080\1080",Space,Str "\1082",Space,Str "\1084\1086\1076\1091\1083\1102",Str ".",Space,Str "\1054\1073\1088\1072\1090\1080\1090\1077",Space,Str "\1085\1072",Space,Str "\1087\1086\1103\1074\1083\1077\1085\1080\1077",Space,Str "\1089\1083\1086\1074\1072",Space,RawInline "latex" "\\In{forall}",Space,Str "\1080",Space,Str "\1074",Space,Str "\1101\1090\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ".",Space,Str "\1054\1085\1086",Space,Str "\1085\1077\1089\1105\1090",Space,Str "\1090\1086\1090",Space,Str "\1078\1077",Space,Str "\1089\1084\1099\1089\1083",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1080",Space,Str "\1074",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{runST}",Str "."]
,Para [Str "\1044\1083\1103",Space,Str "\1090\1088\1077\1085\1080\1088\1086\1074\1082\1080",Space,Str "\1085\1072\1087\1080\1096\1077\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1084\1077\1085\1103\1077\1090",Space,Str "\1084\1077\1089\1090\1072\1084\1080",Space,Str "\1076\1074\1072",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1072",Space,Str "\1084\1072\1089\1089\1080\1074\1072",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nmodule Qsort where\n\nimport Data.STRef\nimport Control.Monad.ST\n\nimport Data.Array\nimport Data.Array.ST\nimport Data.Array.MArray\n\nswapElems :: Ix i => i -> i -> STArray s i e -> ST s ()\nswapElems i j arr = do\n     vi <- readArray arr i\n     vj <- readArray arr j\n\n     writeArray arr i vj\n     writeArray arr j vi\n\\end{code}\n"
,Para [Str "\1055\1088\1086\1090\1077\1089\1090\1080\1088\1091\1077\1084",Space,Str "\1085\1072",Space,Str "\1085\1077\1073\1086\1083\1100\1096\1086\1084",Space,Str "\1084\1072\1089\1089\1080\1074\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ntest :: Int -> Int -> [a] -> [a]\ntest i j xs = elems $ runSTArray $ do\n    arr <- newListArray (0, length xs - 1) xs\n    swapElems i j arr\n    return arr\n\\end{code}\n"
,Para [Str "\1058\1080\1088",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{test}",Space,Str "\1085\1080\1095\1077\1084",Space,Str "\1085\1077",Space,Str "\1074\1099\1076\1072\1105\1090",Space,Str "\1077\1105",Space,Str "\1089\1086\1076\1077\1088\1078\1072\1085\1080\1077",Str ".",Space,Str "\1042\1088\1086\1076\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1082\1072\1082",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ntest :: Int -> Int -> [a] -> [a]\n\\end{code}\n"
,Para [Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1090\1086",Str ",",Space,Str "\1082\1072\1082",Space,Str "\1086\1085\1072",Space,Str "\1088\1072\1073\1086\1090\1072\1077\1090",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Qsort> test 0 3 [0,1,2,3,4]\n[3,1,2,0,4]\n*Qsort> test 0 4 [0,1,2,3,4]\n[4,1,2,3,0]\n\\end{code}\n"
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1087\1077\1088\1077\1081\1076\1105\1084",Space,Str "\1082",Space,Str "\1089\1086\1088\1090\1080\1088\1086\1074\1082\1077",Str ".",Space,Str "\1057\1091\1090\1100",Space,Str "\1084\1077\1090\1086\1076\1072",Space,Str "\1074",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1099",Space,Str "\1074\1099\1073\1080\1088\1072\1077\1084",Space,Str "\1086\1076\1080\1085",Space,Str "\1101\1083\1077\1084\1077\1085\1090",Space,Str "\1084\1072\1089\1089\1080\1074\1072",Str ",",Space,Str "\1085\1072\1079\1099\1074\1072\1077\1084\1099\1081",Space,Str "\1086\1089\1100\1102",Space,Str "(",Str "pivot",Str ")",Space,Str "\1080",Space,Str "\1087\1077\1088\1077\1089\1090\1072\1074\1083\1103\1077\1084",Space,Str "\1086\1089\1090\1072\1083\1100\1085\1099\1077",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1099",Space,Str "\1084\1072\1089\1089\1080\1074\1072",Space,Str "\1090\1072\1082",Str ",",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1074\1089\1077",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1099",Space,Str "\1084\1077\1085\1100\1096\1077",Space,Str "\1086\1089\1077\1074\1086\1075\1086",Space,Str "\1073\1099\1083\1080",Space,Str "\1089\1083\1077\1074\1072",Space,Str "\1086\1090",Space,Str "\1085\1077\1075\1086",Str ",",Space,Str "\1072",Space,Str "\1074\1089\1077",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1073\1086\1083\1100\1096\1077",Space,Str "\1086\1082\1072\1079\1072\1083\1080\1089\1100",Space,Str "\1089\1087\1088\1072\1074\1072",Str ".",Space,Str "\1047\1072\1090\1077\1084",Space,Str "\1084\1099",Space,Str "\1087\1086\1074\1090\1086\1088\1103\1077\1084",Space,Str "\1101\1090\1091",Space,Str "\1087\1088\1086\1094\1077\1076\1091\1088\1091",Space,Str "\1085\1072",Space,Str "\1084\1072\1089\1089\1080\1074\1072\1093",Space,Str "\1087\1086\1084\1077\1085\1100\1096\1077",Str ",",Space,Str "\1090\1077\1093",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1085\1072\1093\1086\1076\1103\1090\1089\1103",Space,Str "\1089\1083\1077\1074\1072",Space,Str "\1080",Space,Str "\1089\1087\1088\1072\1074\1072",Space,Str "\1086\1090",Space,Str "\1086\1089\1077\1074\1086\1075\1086",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1072",Space,Str "\1080",Space,Str "\1090\1072\1082",Space,Str "\1087\1086\1082\1072",Space,Str "\1074\1089\1077",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1099",Space,Str "\1085\1077",Space,Str "\1086\1090\1089\1086\1088\1090\1080\1088\1091\1102\1090\1089\1103",Str ".",Space,Str "\1042",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084\1077",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1093\1080\1090\1088\1072\1103",Space,Str "\1087\1088\1086\1094\1077\1076\1091\1088\1072",Space,Str "\1087\1077\1088\1077\1089\1090\1072\1085\1086\1074\1082\1080",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1086\1074",Str ",",Space,Str "\1085\1072\1096\1072",Space,Str "\1079\1072\1076\1072\1095\1072",Space,Str "\1087\1077\1088\1077\1089\1090\1072\1074\1080\1090\1100",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1099",Space,Str "\1074",Space,Str "\1084\1072\1089\1089\1080\1074\1077",Str ",",Space,Str "\1090\1086",Space,Str "\1077\1089\1090\1100",Space,Str "\1085\1077",Space,Str "\1087\1086\1083\1100\1079\1091\1103\1089\1100",Space,Str "\1085\1080\1082\1072\1082\1080\1084\1080",Space,Str "\1076\1086\1087\1086\1083\1085\1080\1090\1077\1083\1100\1085\1099\1084\1080",Space,Str "\1089\1090\1088\1091\1082\1090\1091\1088\1072\1084\1080",Space,Str "\1076\1072\1085\1085\1099\1093",Str ".",Space,Str "\1071",Space,Str "\1085\1077",Space,Str "\1073\1091\1076\1091",Space,Str "\1075\1086\1074\1086\1088\1080\1090\1100",Space,Str "\1082\1072\1082",Space,Str "\1101\1090\1086",Space,Str "\1076\1077\1083\1072\1077\1090\1089\1103",Str ",",Space,Str "\1087\1088\1086\1089\1090\1086",Space,Str "\1074\1099\1087\1080\1096\1091",Space,Str "\1082\1086\1076",Str ",",Space,Str "\1072",Space,Str "\1074\1099",Space,Str "\1084\1086\1078\1077\1090\1077",Space,Str "\1087\1086\1095\1080\1090\1072\1090\1100",Space,Str "\1086\1073",Space,Str "\1101\1090\1086\1084",Space,Str "\1075\1076\1077",Str "-",Str "\1085\1080\1073\1091\1076\1100",Str ",",Space,Str "\1074",Space,Str "\1083\1102\1073\1086\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1080\1079",Space,Str "\1082\1086\1076\1072",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1087\1086\1085\1103\1090\1085\1086",Space,Str "\1082\1072\1082",Space,Str "\1101\1090\1086",Space,Str "\1087\1088\1086\1080\1089\1093\1086\1076\1080\1090",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nqsort :: Ord a => [a] -> [a]\nqsort xs = elems $ runSTArray $ do\n    arr <- newListArray (left, right) xs\n    qsortST left right arr\n    return arr\n    where left  = 0\n          right = length xs - 1\n \nqsortST :: Ord a => Int -> Int -> STArray s Int a -> ST s ()\nqsortST left right arr = do\n    when (left <= right) $ do\n        swapArray left (div (left + right) 2) arr\n        vLeft <- readArray arr left \n        (last, _) <- forLoop (left + 1) (<= right) succ \n                            (update vLeft) (return (left, arr))\n        swapArray left last arr\n        qsortST left (last - 1) arr\n        qsortST (last + 1) right arr\n    where update vLeft i st = do\n            (last, arr) <- st\n            vi <- readArray arr i\n            if (vi < vLeft) \n                then do\n                    swapArray (succ last) i arr\n                    return (succ last, arr)\n                else do\n                    return (last, arr)\n\\end{code}\n"
,Para [Str "\1069\1090\1086",Space,Str "\1076\1072\1083\1077\1082\1086",Space,Str "\1085\1077",Space,Str "\1089\1072\1084\1099\1081",Space,Str "\1073\1099\1089\1090\1088\1099\1081",Space,Str "\1074\1072\1088\1080\1072\1085\1090",Space,Str "\1073\1099\1089\1090\1088\1086\1081",Space,Str "\1089\1086\1088\1090\1080\1088\1086\1074\1082\1080",Str ",",Space,Str "\1085\1086",Space,Str "\1089\1072\1084\1099\1081",Space,Str "\1087\1088\1086\1089\1090\1086\1081",Str ".",Space,Str "\1052\1099",Space,Str "\1087\1088\1086\1089\1090\1086",Space,Str "\1091\1095\1080\1084\1089\1103",Space,Str "\1086\1073\1088\1072\1097\1072\1090\1100\1089\1103",Space,Str "\1089",Space,Str "\1080\1079\1084\1077\1085\1103\1077\1084\1099\1084\1080",Space,Str "\1084\1072\1089\1089\1080\1074\1072\1084\1080",Str ".",Space,Str "\1055\1088\1086\1090\1077\1089\1090\1080\1088\1091\1077\1084",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Qsort> qsort \"abracadabra\"\n\"aaaaabbcdrr\"\n*Qsort> let x = 1000000\n*Qsort> last $ qsort [x, pred x .. 0]\n-- \1076\1074\1072\1076\1094\1072\1090\1100 \1083\1077\1090 \1089\1087\1091\1089\1090\1103\n1000000\n\\end{code}\n"
,Header 2 [Str "\1050\1088\1072\1090\1082\1086\1077",Space,Str "\1089\1086\1076\1077\1088\1078\1072\1085\1080\1077"]
,Para [Str "\1052\1099",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1077\1083\1080",Space,Str "\1085\1072",Space,Str "\1087\1088\1080\1084\1077\1088\1072\1093",Space,Str "\1082\1072\1082",Space,Str "\1087\1088\1080\1084\1077\1085\1103\1102\1090\1089\1103",Space,Str "\1090\1080\1087\1099",Space,RawInline "latex" "\\In{State}",Str ",",Space,RawInline "latex" "\\In{Reader}",Space,Str "\1080",Space,RawInline "latex" "\\In{Writer}",Str ".",Space,Str "\1058\1072\1082\1078\1077",Space,Str "\1084\1099",Space,Str "\1087\1086\1079\1085\1072\1082\1086\1084\1080\1083\1080\1089\1100",Space,Str "\1089",Space,Str "\1084\1086\1085\1072\1076\1086\1081",Space,Str "\1080\1079\1084\1077\1085\1103\1077\1084\1099\1093",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Space,RawInline "latex" "\\In{ST}",Str ".",Space,Str "\1054\1085\1072",Space,Str "\1087\1086\1079\1074\1086\1083\1103\1077\1090",Space,Str "\1087\1080\1089\1072\1090\1100",Space,Str "\1074",Space,Str "\1080\1084\1077\1088\1072\1090\1080\1074\1085\1086\1084",Space,Str "\1089\1090\1080\1083\1077",Space,Str "\1085\1072",Space,Str "Haskell",Str ".",Space,Str "\1052\1099",Space,Str "\1091\1079\1085\1072\1083\1080",Space,Str "\1076\1074\1072",Space,Str "\1085\1086\1074\1099\1093",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1072",Space,Str "\1087\1086\1089\1090\1088\1077\1085\1080\1103",Space,Str "\1090\1080\1087\1086\1074",Str ":"]
,BulletList
 [[Para [Str "\1058\1080\1087\1099",Str "-",Str "\1086\1073\1105\1088\1090\1082\1080",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1102\1090\1089\1103",Space,Str "\1095\1077\1088\1077\1079",Space,Str "\1082\1083\1102\1095\1077\1074\1086\1077",Space,Str "\1089\1083\1086\1074\1086",Space,RawInline "latex" "\\In{newtype}",Str "."]]
 ,[Para [Str "\1047\1072\1087\1080\1089\1080",Str ",",Space,Str "\1086\1085\1080",Space,Str "\1103\1074\1083\1103\1102\1090\1089\1103",Space,Str "\1087\1088\1086\1080\1079\1074\1077\1076\1077\1085\1080\1077\1084",Space,Str "\1090\1080\1087\1086\1074",Space,Str "\1089",Space,Str "\1080\1084\1077\1085\1086\1074\1072\1085\1085\1099\1084\1080",Space,Str "\1087\1086\1083\1103\1084\1080",Str "."]]]
,Para [Str "\1058\1072\1082\1078\1077",Space,Str "\1084\1099",Space,Str "\1091\1079\1085\1072\1083\1080",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1087\1086\1083\1077\1079\1085\1099\1093",Space,Str "\1090\1080\1087\1086\1074",Str ":"]
,BulletList
 [[Para [RawInline "latex" "\\In{Map}",Space,Str "\8211",Space,Str "\1093\1088\1072\1085\1077\1085\1080\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Space,Str "\1087\1086",Space,Str "\1082\1083\1102\1095\1091",Space,Str "(",Str "\1080\1079",Space,Str "\1084\1086\1076\1091\1083\1103",Space,RawInline "latex" "\\In{Data.Map}",Str ")",Str "."]]
 ,[Para [RawInline "latex" "\\In{Tree}",Space,Str "\8211",Space,Str "\1076\1077\1088\1077\1074\1100\1103",Space,Str "(",Str "\1080\1079",Space,Str "\1084\1086\1076\1091\1083\1103",Space,RawInline "latex" "\\In{Data.Tree}",Str ")",Str "."]]
 ,[Para [RawInline "latex" "\\In{Array}",Space,Str "\8211",Space,Str "\1084\1072\1089\1089\1080\1074\1099",Space,Str "(",Str "\1080\1079",Space,Str "\1084\1086\1076\1091\1083\1103",Space,RawInline "latex" "\\In{Data.Array}",Str ")",Str "."]]
 ,[Para [Str "\1058\1080\1087\1099",Space,Str "\1076\1083\1103",Space,Str "\1085\1072\1082\1086\1087\1083\1077\1085\1080\1103",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1072",Space,Str "(",Str "\1080\1079",Space,Str "\1084\1086\1076\1091\1083\1103",Space,RawInline "latex" "\\In{Data.Monoid}",Str ")",Str "."]]]
,Para [Str "\1054\1090\1084\1077\1090\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Monad}",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1105\1085",Space,Str "\1080",Space,Str "\1076\1083\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str ".",Space,Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1079\1072\1087\1080\1089\1072\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1076\1074\1091\1093",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1074",Space,RawInline "latex" "\\In{(a -> b -> c)}",Space,Str "\1082\1072\1082",Space,RawInline "latex" "\\In{(a -> (->) b c)}",Str ".",Space,Str "\1058\1086\1075\1076\1072",Space,Str "\1090\1080\1087",Space,RawInline "latex" "\\In{(->) b}",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1090\1080\1087\1086\1084",Space,Str "\1089",Space,Str "\1086\1076\1085\1080\1084",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1086\1084",Str ",",Space,Str "\1082\1072\1082",Space,Str "\1088\1072\1079",Space,Str "\1090\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1085\1091\1078\1085\1086",Space,Str "\1076\1083\1103",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Monad}",Str ".",Space,Str "\1055\1086",Space,Str "\1089\1084\1099\1089\1083\1091",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Monad}",Space,Str "\1076\1083\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1089\1086\1074\1087\1072\1076\1072\1077\1090",Space,Str "\1089",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1086\1084",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Reader}",Str ".",Space,Str "\1055\1077\1088\1074\1099\1081",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090",Space,Str "\1089\1090\1088\1077\1083\1086\1095\1085\1086\1075\1086",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{b}",Space,Str "\1080\1075\1088\1072\1077\1090",Space,Str "\1088\1086\1083\1100",Space,Str "\1086\1082\1088\1091\1078\1077\1085\1080\1103",Str "."]
,Header 2 [Str "\1059\1087\1088\1072\1078\1085\1077\1085\1080\1103"]
,BulletList
 [[Para [Str "\1053\1072\1087\1080\1096\1080\1090\1077",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Random}",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1080\1075\1088\1099",Space,Str "\1074",Space,Str "\1082\1086\1089\1090\1080",Str ",",Space,Str "\1076\1074\1072",Space,Str "\1080\1075\1088\1086\1082\1072",Space,Str "\1073\1088\1086\1089\1072\1102\1090",Space,Str "\1087\1086",Space,Str "\1086\1095\1077\1088\1077\1076\1080",Space,Str "\1082\1086\1089\1090\1080",Space,Str "(",Str "\1076\1074\1072",Space,Str "\1082\1091\1073\1080\1082\1072",Space,Str "\1089",Space,Str "\1096\1077\1089\1090\1100\1102",Space,Str "\1075\1088\1072\1085\1103\1084\1080",Str ",",Space,Str "\1075\1088\1072\1085\1080",Space,Str "\1087\1088\1086\1085\1091\1084\1077\1088\1086\1074\1072\1085\1099",Space,Str "\1086\1090",Space,Str "1",Space,Str "\1076\1086",Space,Str "6",Str ")",Str ".",Space,Str "\1054\1085\1080",Space,Str "\1073\1088\1086\1089\1072\1102\1090",Space,Str "\1082\1091\1073\1080\1082\1080",Space,Str "10",Space,Str "\1088\1072\1079",Space,Str "\1074\1099\1080\1075\1088\1099\1074\1072\1077\1090",Space,Str "\1090\1086\1090",Str ",",Space,Str "\1091",Space,Str "\1082\1086\1075\1086",Space,Str "\1074",Space,Str "\1089\1091\1084\1084\1077",Space,Str "\1074\1099\1087\1072\1076\1077\1090",Space,Str "\1073\1086\1083\1100\1096\1077",Space,Str "\1086\1095\1082\1086\1074",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1103",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1085\1072\1095\1072\1083\1100\1085\1086\1077",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1077",Space,Str "\1080",Space,Str "\1074\1099\1074\1086\1076\1080\1090",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090",Space,Str "\1080\1075\1088\1099",Str ":",Space,Str "\1089\1091\1084\1084\1072\1088\1085\1099\1077",Space,Str "\1073\1072\1083\1083\1099",Space,Str "\1080\1075\1088\1086\1082\1086\1074",Str "."]]
 ,[Para [Str "\1053\1072\1087\1080\1096\1080\1090\1077",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Random}",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1089\1086\1079\1076\1072\1074\1072\1090\1100",Space,Str "\1089\1083\1091\1095\1072\1081\1085\1099\1077",Space,Str "\1076\1077\1088\1077\1074\1100\1103",Space,Str "\1079\1072\1076\1072\1085\1085\1086\1081",Space,Str "\1075\1083\1091\1073\1080\1085\1099",Str ".",Space,Str "\1047\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1074",Space,Str "\1091\1079\1083\1077",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1089\1083\1091\1095\1072\1081\1085\1099\1084",Space,Str "\1095\1080\1089\1083\1086\1084",Space,Str "\1086\1090",Space,Str "0",Space,Str "\1076\1086",Space,Str "100",Str ",",Space,Str "\1090\1072\1082\1078\1077",Space,Str "\1095\1080\1089\1083\1086",Space,Str "\1076\1086\1095\1077\1088\1085\1080\1093",Space,Str "\1076\1077\1088\1077\1074\1100\1077\1074",Space,Str "\1074",Space,Str "\1082\1072\1078\1076\1086\1084",Space,Str "\1091\1079\1083\1077",Space,Str "\1089\1083\1091\1095\1072\1081\1085\1086",Str ",",Space,Str "\1086\1085\1086",Space,Str "\1080\1079\1084\1077\1085\1103\1077\1090\1089\1103",Space,Str "\1086\1090",Space,Str "0",Space,Str "\1076\1086",Space,Str "10",Str "."]]
 ,[Para [Str "\1054\1087\1080\1096\1080\1090\1077",Space,Str "\1074",Space,Str "\1074\1080\1076\1077",Space,Str "\1082\1086\1085\1077\1095\1085\1086\1075\1086",Space,Str "\1072\1074\1090\1086\1084\1072\1090\1072",Space,Str "\1087\1086\1074\1077\1076\1077\1085\1080\1077",Space,Str "\1072\1084\1105\1073\1099",Str ".",Space,Str "\1040\1084\1105\1073\1072",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1076\1074\1080\1075\1072\1090\1100\1089\1103",Space,Str "\1085\1072",Space,Str "\1087\1083\1086\1089\1082\1086\1089\1090\1080",Space,Str "\1087\1086",Space,Str "\1095\1077\1090\1099\1088\1105\1084",Space,Str "\1085\1072\1087\1088\1072\1074\1083\1077\1085\1080\1103\1084",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1086\1085\1072",Space,Str "\1095\1091\1074\1089\1090\1074\1091\1077\1090",Space,Str "\1089\1074\1077\1090",Space,Str "\1074",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1105\1085\1085\1086\1081",Space,Str "\1089\1090\1086\1088\1086\1085\1077",Str ",",Space,Str "\1090\1086",Space,Str "\1086\1085\1072",Space,Str "\1087\1086\1083\1079\1105\1090",Space,Str "\1090\1091\1076\1072",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1087\1086",Str "-",Str "\1073\1083\1080\1079\1086\1089\1090\1080",Space,Str "\1085\1077\1090",Space,Str "\1089\1074\1077\1090\1072",Str ",",Space,Str "\1086\1085\1072",Space,Str "\1087\1086\1083\1079\1072\1077\1090",Space,Str "\1074",Space,Str "\1087\1088\1086\1080\1079\1074\1086\1083\1100\1085\1086\1084",Space,Str "\1085\1072\1087\1088\1072\1074\1083\1077\1085\1080\1080",Str ".",Space,Str "\1040\1084\1105\1073\1072",Space,Str "\1091\1083\1072\1074\1083\1080\1074\1072\1077\1090",Space,Str "\1080\1085\1090\1077\1085\1089\1080\1074\1085\1086\1089\1090\1100",Space,Str "\1089\1074\1077\1090\1072",Str ",",Space,Str "\1077\1089\1083\1080",Space,Str "\1087\1086",Space,Str "\1074\1089\1077\1084",Space,Str "\1095\1077\1090\1099\1088\1105\1084",Space,Str "\1089\1090\1086\1088\1086\1085\1072\1084",Space,Str "\1080\1085\1090\1077\1085\1089\1080\1074\1085\1086\1089\1090\1100",Space,Str "\1086\1076\1080\1085\1072\1082\1086\1074\1072\1103",Str ",",Space,Str "\1086\1085\1072",Space,Str "\1089\1090\1086\1080\1090",Space,Str "\1085\1072",Space,Str "\1084\1077\1089\1090\1077",Space,Str "\1080",Space,Str "\1075\1088\1077\1077\1090\1089\1103",Str "."]]
 ,[Para [Str "\1050\1072\1079\1072\1083\1086\1089\1100",Space,Str "\1073\1099",Str ",",Space,Str "\1079\1072\1095\1077\1084",Space,Str "\1085\1072\1084",Space,Str "\1089\1086\1093\1088\1072\1085\1103\1090\1100",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Space,Str "\1074",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103\1093",Str ",",Space,Str "\1087\1086\1095\1077\1084\1091",Space,Str "\1073\1099",Space,Str "\1085\1072\1084",Space,Str "\1087\1088\1086\1089\1090\1086",Space,Str "\1085\1077",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1090\1100",Space,Str "\1080\1093",Space,Str "\1089\1088\1072\1079\1091",Str "?",Space,Str "\1045\1089\1083\1080",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1077\1089\1090\1100",Space,Str "\1086\1087\1080\1089\1072\1085\1080\1077",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1087\1088\1080\1084\1077\1085\1080\1090\1100",Space,Str "\1088\1072\1079\1083\1080\1095\1085\1099\1077",Space,Str "\1090\1077\1093\1085\1080\1082\1080",Space,Str "\1086\1087\1090\1080\1084\1080\1079\1072\1094\1080\1080",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1084\1086\1075\1091\1090",Space,Str "\1089\1086\1082\1088\1072\1097\1072\1090\1100",Space,Str "\1095\1080\1089\1083\1086",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1081",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1085\1072\1084",Space,Str "\1080\1079\1074\1077\1089\1090\1085\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1076\1074\1086\1081\1085\1086\1077",Space,Str "\1086\1090\1088\1080\1094\1072\1085\1080\1077",Space,Str "\1085\1077",Space,Str "\1074\1083\1080\1103\1077\1090",Space,Str "\1085\1072",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090",Str ",",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1074\1099\1088\1072\1079\1080\1090\1100",Space,Str "\1101\1090\1086",Space,Str "\1090\1072\1082",Str ":"]
  ,RawBlock "latex" "\n\\begin{code}\ninstance Num Exp where\n    negate (Neg a)  = a\n    negate x        = Neg x\n    ...\n    ...\n\\end{code}\n"
  ,Para [Str "\1058\1072\1082",Space,Str "\1084\1099",Space,Str "\1089\1086\1082\1088\1072\1090\1080\1083\1080",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Space,Str "\1085\1072",Space,Str "\1076\1074\1077",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Str ".",Space,Str "\1042\1086\1079\1084\1086\1078\1085\1099",Space,Str "\1080",Space,Str "\1073\1086\1083\1077\1077",Space,Str "\1089\1083\1086\1078\1085\1099\1077",Space,Str "\1090\1077\1093\1085\1080\1082\1080",Space,Str "\1086\1087\1090\1080\1084\1080\1079\1072\1094\1080\1080",Str ".",Space,Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1091\1095\1077\1089\1090\1100",Space,Str "\1085\1086\1083\1100",Space,Str "\1080",Space,Str "\1077\1076\1080\1085\1080\1094\1091",Space,Str "\1087\1088\1080",Space,Str "\1089\1083\1086\1078\1077\1085\1080\1080",Space,Str "\1080",Space,Str "\1091\1084\1085\1086\1078\1077\1085\1080\1080",Space,Str "\1080\1083\1080",Space,Str "\1076\1080\1089\1090\1088\1080\1073\1091\1090\1080\1074\1085\1086\1089\1090\1100",Space,Str "\1089\1083\1086\1078\1077\1085\1080\1103",Space,Str "\1086\1090\1085\1086\1089\1080\1090\1077\1083\1100\1085\1086",Space,Str "\1091\1084\1085\1086\1078\1077\1085\1080\1103",Str "."]
  ,Para [Str "\1042",Space,Str "\1101\1090\1086\1084",Space,Str "\1091\1087\1088\1072\1078\1085\1077\1085\1080\1080",Space,Str "\1074\1072\1084",Space,Str "\1087\1088\1077\1076\1083\1072\1075\1072\1077\1090\1089\1103",Space,Str "\1087\1088\1086\1074\1077\1089\1090\1080",Space,Str "\1087\1086\1076\1086\1073\1085\1091\1102",Space,Str "\1086\1087\1090\1080\1084\1080\1079\1072\1094\1080\1102",Space,Str "\1076\1083\1103",Space,Str "\1083\1086\1075\1080\1095\1077\1089\1082\1080\1093",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Str ".",Space,Str "\1059",Space,Str "\1085\1072\1089",Space,Str "\1077\1089\1090\1100",Space,Str "\1072\1073\1089\1090\1088\1072\1082\1090\1085\1086\1077",Space,Str "\1089\1080\1085\1090\1072\1082\1089\1080\1095\1077\1089\1082\1086\1077",Space,Str "\1076\1077\1088\1077\1074\1086",Str ":"]
  ,RawBlock "latex" "\n\\begin{code}\ndata Log    = True\n            | False\n            | Not Log\n            | Or  Log Log\n            | And Log Log            \n\\end{code}\n"
  ,Para [Str "\1053\1072\1087\1080\1096\1080\1090\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1086\1087\1090\1080\1084\1080\1079\1080\1088\1091\1077\1090",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1077",Space,RawInline "latex" "\\In{Log}",Str ".",Space,Str "\1069\1090\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1087\1088\1080\1074\1086\1076\1080\1090",Space,RawInline "latex" "\\In{Log}",Space,Str "\1082",Space,Str "\1082\1086\1085\1098\1102\1085\1082\1090\1080\1074\1085\1086\1081",Space,Str "\1085\1086\1088\1084\1072\1083\1100\1085\1086\1081",Space,Str "\1092\1086\1088\1084\1077",Space,Str "(",Str "\1050\1053\1060",Str ")",Str ".",Space,Str "\1044\1077\1088\1077\1074\1086",Space,Str "\1074",Space,Str "\1050\1053\1060",Space,Str "\1086\1073\1083\1072\1076\1072\1077\1090",Space,Str "\1090\1072\1082\1080\1084\1080",Space,Str "\1089\1074\1086\1081\1089\1090\1074\1072\1084\1080",Str ":",Space,Str "\1074\1089\1077",Space,Str "\1091\1079\1083\1099",Space,Str "\1089",Space,RawInline "latex" "\\In{Or}",Space,Str "\1085\1072\1093\1086\1076\1103\1090\1089\1103",Space,Str "\1073\1083\1080\1078\1077",Space,Str "\1082",Space,Str "\1082\1086\1088\1085\1102",Space,Str "\1095\1077\1084",Space,Str "\1091\1079\1083\1099",Space,Str "\1089",Space,RawInline "latex" "\\In{And}",Space,Str "\1080",Space,Str "\1074\1089\1077",Space,Str "\1091\1079\1083\1099",Space,Str "\1089",Space,RawInline "latex" "\\In{And}",Space,Str "\1085\1072\1093\1086\1076\1103\1090\1089\1103",Space,Str "\1073\1083\1080\1078\1077",Space,Str "\1082",Space,Str "\1082\1086\1088\1085\1102",Space,Str "\1095\1077\1084",Space,Str "\1091\1079\1083\1099",Space,Str "\1089",Space,RawInline "latex" "\\In{Not}",Str ".",Space,Str "\1042",Space,Str "\1050\1053\1060",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Space,Str "\1080\1084\1077\1102\1090",Space,Str "\1074\1080\1076",Str ":"]
  ,RawBlock "latex" "\n\\begin{code}\n(True `And` Not False `And` True) `Or` True `Or` (True `And` False)\n(True `And` True `And` False) `Or` True\n\\end{code}\n"
  ,Para [Str "\1050\1072\1082",Space,Str "\1073\1099",Space,Str "\1084\1099",Space,Str "\1085\1077",Space,Str "\1096\1083\1080",Space,Str "\1086\1090",Space,Str "\1082\1086\1088\1085\1103",Space,Str "\1082",Space,Str "\1083\1080\1089\1090\1091",Space,Str "\1089\1085\1072\1095\1072\1083\1072",Space,Str "\1085\1072\1084",Space,Str "\1073\1091\1076\1091\1090",Space,Str "\1074\1089\1090\1088\1077\1095\1072\1090\1100\1089\1103",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Space,RawInline "latex" "\\In{Or}",Str ",",Space,Str "\1079\1072\1090\1077\1084",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Space,RawInline "latex" "\\In{And}",Str ",",Space,Str "\1079\1072\1090\1077\1084",Space,Str "\1090\1086\1083\1100\1082\1086",Space,RawInline "latex" "\\In{Not}",Str "."]
  ,Para [Str "\1050\1053\1060",Space,Str "\1079\1072\1084\1077\1095\1072\1090\1077\1083\1100\1085\1072",Space,Str "\1090\1077\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1077\1105",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1077",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1087\1088\1086\1081\1090\1080",Space,Str "\1076\1086\1089\1088\1086\1095\1085\1086",Str ".",Space,Str "\1050\1053\1060",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1087\1088\1077\1076\1089\1090\1072\1074\1080\1090\1100",Space,Str "\1090\1072\1082",Str ":"]
  ,RawBlock "latex" "\n\\begin{code}\ndata Or'  a = Or'  [a]\ndata And' a = And' [a]\ndata Not' a = Not'  a\ndata Lit    = True' | False'\n\ntype CNF = Or' (And' (Not' Lit))\n\\end{code}\n"
  ,Para [Str "\1057\1085\1072\1095\1072\1083\1072",Space,Str "\1080\1076\1105\1090",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1081",Space,Str "\1088\1072\1079\1076\1077\1083\1105\1085\1085\1099\1093",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088\1086\1084",Space,RawInline "latex" "\\In{Or}",Space,Str "(",Str "\1074\1099\1095\1080\1089\1083\1103\1090\1100",Space,Str "\1074\1077\1089\1100",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1085\1077",Space,Str "\1085\1091\1078\1085\1086",Str ",",Space,Str "\1085\1072\1084",Space,Str "\1085\1091\1078\1085\1086",Space,Str "\1085\1072\1081\1090\1080",Space,Str "\1087\1077\1088\1074\1099\1081",Space,Str "\1101\1083\1077\1084\1077\1085\1090",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1074\1077\1088\1085\1105\1090",Space,RawInline "latex" "\\In{True}",Str ")",Str ".",Space,Str "\1047\1072\1090\1077\1084",Space,Str "\1080\1076\1105\1090",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1081",Str ",",Space,Str "\1088\1072\1079\1076\1077\1083\1105\1085\1085\1099\1093",Space,RawInline "latex" "\\In{And}",Space,Str "(",Str "\1086\1087\1103\1090\1100",Space,Str "\1078\1077",Space,Str "\1077\1075\1086",Space,Str "\1085\1077",Space,Str "\1085\1072\1076\1086",Space,Str "\1074\1099\1095\1080\1089\1083\1103\1090\1100",Space,Str "\1094\1077\1083\1080\1082\1086\1084",Str ",",Space,Str "\1085\1072\1084",Space,Str "\1085\1091\1078\1085\1086",Space,Str "\1085\1072\1081\1090\1080",Space,Str "\1087\1077\1088\1074\1086\1077",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1077",Str ",",Space,Str "\1082\1086\1090\1086\1088\1086\1077",Space,Str "\1074\1077\1088\1085\1105\1090",Space,RawInline "latex" "\\In{False}",Str ")",Str ".",Space,Str "\1042",Space,Str "\1089\1072\1084\1086\1084",Space,Str "\1082\1086\1085\1094\1077",Space,Str "\1089\1090\1086\1103\1090",Space,Str "\1086\1090\1088\1080\1094\1072\1085\1080\1103",Str "."]
  ,Para [Str "\1042",Space,Str "\1085\1072\1096\1077\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1087\1088\1080\1074\1077\1076\1077\1085\1080\1077",Space,Str "\1082",Space,Str "\1050\1053\1060",Space,Str "\1089\1086\1089\1090\1086\1080\1090",Space,Str "\1080\1079",Space,Str "\1076\1074\1091\1093",Space,Str "\1101\1090\1072\1087\1086\1074",Str ":"]
  ,BulletList
   [[Para [Str "\1057\1085\1072\1095\1072\1083\1072",Space,Str "\1087\1086\1089\1090\1088\1086\1080\1084",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1077",Str ",",Space,Str "\1074",Space,Str "\1082\1086\1090\1086\1088\1086\1084",Space,Str "\1074\1089\1077",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088\1099",Space,RawInline "latex" "\\In{Or}",Space,Str "\1080",Space,RawInline "latex" "\\In{And}",Space,Str "\1089\1090\1086\1103\1090",Space,Str "\1073\1083\1080\1078\1077",Space,Str "\1082",Space,Str "\1082\1086\1088\1085\1102",Space,Str "\1095\1077\1084",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088",Space,RawInline "latex" "\\In{Not}",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1085\1077\1086\1073\1093\1086\1076\1080\1084\1086",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100\1089\1103",Space,Str "\1090\1072\1082\1080\1084\1080",Space,Str "\1087\1088\1072\1074\1080\1083\1072\1084\1080",Str ":"]
    ,RawBlock "latex" "\n\\begin{code}\n-- \1091\1076\1072\1083\1077\1085\1080\1077 \1076\1074\1086\1081\1085\1086\1075\1086 \1086\1090\1088\1080\1094\1072\1085\1080\1103\nNot (Not a)  ==> a  \n\n-- \1087\1088\1072\1074\1080\1083\1072 \1076\1077 \1052\1086\1088\1075\1072\1085\1072\nNot (And a b) ==> Or  (Not a) (Not b)\nNot (Or  a b) ==> And (Not a) (Not b)\n\\end{code}\n"]
   ,[Para [Str "\1044\1077\1083\1072\1077\1084",Space,Str "\1090\1072\1082",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1074\1089\1077",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088\1099",Space,RawInline "latex" "\\In{Or}",Space,Str "\1073\1099\1083\1080",Space,Str "\1073\1099",Space,Str "\1073\1083\1080\1078\1077",Space,Str "\1082",Space,Str "\1082\1086\1088\1085\1102",Space,Str "\1095\1077\1084",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088\1099",Space,RawInline "latex" "\\In{And}",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1084\1099",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1091\1077\1084\1089\1103",Space,Str "\1087\1088\1072\1074\1080\1083\1086\1084",Space,Str "\1076\1080\1089\1090\1088\1080\1073\1091\1090\1080\1074\1085\1086\1089\1090\1080",Str ":"]
    ,RawBlock "latex" "\n\\begin{code}\nAnd a (Or b c)  ==> Or (And a b) (And a c)\n\\end{code}\n"
    ,Para [Str "\1055\1088\1080",Space,Str "\1101\1090\1086\1084",Space,Str "\1084\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1091\1095\1080\1090\1099\1074\1072\1090\1100",Space,Str "\1082\1086\1084\1084\1091\1090\1072\1090\1080\1074\1085\1086\1089\1090\1100",Space,RawInline "latex" "\\In{And}",Space,Str "\1080",Space,RawInline "latex" "\\In{Or}",Str ":"]
    ,RawBlock "latex" "\n\\begin{code}\nAnd a b  == And b a\nOr  a b  == Or  b a\n\\end{code}\n"]]]
 ,[Para [Str "\1050\1086\1075\1076\1072",Space,Str "\1074\1099",Space,Str "\1079\1072\1082\1086\1085\1095\1080\1090\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ":"]
  ,RawBlock "latex" "\n\\begin{code}\ntransform :: Log -> CNF\n\\end{code}\n"
  ,Para [Str "\1053\1072\1087\1080\1096\1080\1090\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1089\1088\1072\1074\1085\1080\1074\1072\1090\1100",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1077",Space,Str "\1080\1089\1093\1086\1076\1085\1086\1075\1086",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Space,Str "\1085\1072\1087\1088\1103\1084\1091\1102",Space,Str "\1080",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1077",Space,Str "\1095\1077\1088\1077\1079",Space,Str "\1050\1053\1060",Str ".",Space,Str "\1069\1090\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1090\1100",Space,Str "\1080\1089\1093\1086\1076\1085\1086\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Log}",Space,Str "\1080",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1090\1100",Space,Str "\1076\1074\1072",Space,Str "\1095\1080\1089\1083\1072",Str ",",Space,Str "\1095\1080\1089\1083\1086",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1081",Space,Str "\1085\1077\1086\1073\1093\1086\1076\1080\1084\1099\1093",Space,Str "\1076\1083\1103",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Str ":"]
  ,RawBlock "latex" "\n\\begin{code}\nevalCount :: Log -> (Int, Int)\nevalCount a = (evalCountLog a, evalCountCNF a)\n\nevalCountLog :: Log -> Int\nevalCountLog a = ...\n\nevalCountCNF :: Log -> Int\nevalCountCNF a = ...\n\\end{code}\n"
  ,Para [Str "\1055\1088\1080",Space,Str "\1085\1072\1087\1080\1089\1072\1085\1080\1080",Space,Str "\1101\1090\1080\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1091\1081\1090\1077\1089\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1103\1084\1080",Str "-",Str "\1085\1072\1082\1086\1087\1080\1090\1077\1083\1103\1084\1080",Str "."]]
 ,[Para [Str "\1042",Space,Str "\1084\1086\1076\1091\1083\1077",Space,RawInline "latex" "\\In{Data.Monoid}",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1105\1085",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1099\1081",Space,Str "\1090\1080\1087",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1082\1086\1090\1086\1088\1086\1075\1086",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1085\1072\1082\1072\1087\1083\1080\1074\1072\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ".",Space,Str "\1058\1086\1083\1100\1082\1086",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1076\1086\1083\1078\1085\1099",Space,Str "\1073\1099\1090\1100",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1086\1075\1086",Space,Str "\1090\1080\1087\1072",Str ".",Space,Str "\1054\1085\1080",Space,Str "\1076\1086\1083\1078\1085\1099",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1090\1100",Space,Str "\1080",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1090\1100",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1086\1076\1085\1086\1075\1086",Space,Str "\1090\1080\1087\1072",Str ".",Space,Str "\1058\1072\1082\1080\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1085\1072\1079\1099\1074\1072\1102\1090",Space,Emph [Str "\1101\1085\1076\1086\1084\1086\1088\1092\1080\1079\1084\1072\1084\1080"],Str "."]
  ,Para [Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1080\1093",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Str ":"]
  ,RawBlock "latex" "\n\\begin{code}\nnewtype Endo a = Endo { appEndo :: a -> a }\n\ninstance Monoid (Endo a) where\n        mempty = Endo id\n        Endo f `mappend` Endo g = Endo (f . g)\n\\end{code}\n"
  ,Para [Str "\1042",Space,Str "\1082\1072\1095\1077\1089\1090\1074\1077",Space,Str "\1085\1077\1081\1090\1088\1072\1083\1100\1085\1086\1075\1086",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1072",Space,Str "\1074\1099\1089\1090\1091\1087\1072\1077\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1090\1086\1078\1076\1077\1089\1090\1074\1072",Str ",",Space,Str "\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1077\1081",Space,Str "\1086\1073\1098\1077\1076\1080\1085\1077\1085\1080\1103",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1080",Str ".",Space,Str "\1055\1086\1087\1088\1086\1073\1091\1081\1090\1077",Space,Str "\1087\1077\1088\1077\1087\1080\1089\1072\1090\1100",Space,Str "\1087\1088\1080\1084\1077\1088\1099",Space,Str "\1080\1079",Space,Str "\1075\1083\1072\1074\1099",Space,Str "\1085\1072\1082\1086\1087\1083\1077\1085\1080\1077",Space,Str "\1095\1080\1089\1077\1083",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1090\1080\1087\1072",Str "."]]
 ,[Para [Str "\1056\1077\1072\1083\1080\1079\1091\1081\1090\1077",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1084\1086\1085\1072\1076\1099",Space,RawInline "latex" "\\In{ST}",Space,Str "\1082\1072\1082\1086\1081",Str "-",Str "\1085\1080\1073\1091\1076\1100",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084",Space,Str "\1074",Space,Str "\1080\1084\1087\1077\1088\1072\1090\1080\1074\1085\1086\1084",Space,Str "\1089\1090\1080\1083\1077",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084",Space,Str "\1087\1086\1080\1089\1082\1072",Space,Str "\1082\1086\1088\1085\1077\1081",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1103",Space,Str "\1084\1077\1090\1086\1076\1086\1084",Space,Str "\1076\1077\1083\1077\1085\1080\1103",Space,Str "\1087\1086\1087\1086\1083\1072\1084",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Math InlineMath "f",Space,Str "\1085\1077\1087\1088\1077\1088\1099\1074\1085\1072",Space,Str "\1080",Space,Str "\1074",Space,Str "\1076\1074\1091\1093",Space,Str "\1090\1086\1095\1082\1072\1093",Space,Math InlineMath "a",Space,Str "\1080",Space,Math InlineMath "b",Space,Str "(",Math InlineMath "a < b",Str ")",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1080\1084\1077\1102\1090",Space,Str "\1088\1072\1079\1085\1099\1077",Space,Str "\1079\1085\1072\1082\1080",Str ",",Space,Str "\1090\1086",Space,Str "\1101\1090\1086",Space,Str "\1075\1086\1074\1086\1088\1080\1090",Space,Str "\1086",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1075\1076\1077",Str "-",Str "\1090\1086",Space,Str "\1085\1072",Space,Str "\1086\1090\1088\1077\1079\1082\1077",Space,Math InlineMath "[a,\\ b]",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1077",Space,Math InlineMath "f(x) = 0",Space,Str "\1080\1084\1077\1077\1090",Space,Str "\1088\1077\1096\1077\1085\1080\1077",Str ".",Space,Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1085\1072\1081\1090\1080",Space,Str "\1077\1075\1086",Space,Str "\1090\1072\1082",Str ".",Space,Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1082\1072\1082\1086\1081",Space,Str "\1079\1085\1072\1082",Space,Str "\1091",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1074",Space,Str "\1089\1077\1088\1077\1076\1080\1085\1077",Space,Str "\1086\1090\1088\1077\1079\1082\1072",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1088\1072\1074\1085\1086",Space,Str "\1085\1091\1083\1102",Str ",",Space,Str "\1090\1086",Space,Str "\1085\1072\1084",Space,Str "\1087\1086\1074\1077\1079\1083\1086",Space,Str "\1080",Space,Str "\1084\1099",Space,Str "\1085\1072\1096\1083\1080",Space,Str "\1088\1077\1096\1077\1085\1080\1077",Str ",",Space,Str "\1077\1089\1083\1080",Space,Str "\1085\1077\1090",Str ",",Space,Str "\1090\1086",Space,Str "\1080\1079",Space,Str "\1076\1074\1091\1093",Space,Str "\1082\1086\1085\1094\1086\1074",Space,Str "\1086\1090\1088\1077\1079\1082\1072",Space,Str "\1074\1099\1073\1088\1077\1084",Space,Str "\1090\1086\1090",Str ",",Space,Str "\1091",Space,Str "\1082\1086\1090\1086\1088\1086\1075\1086",Space,Str "\1079\1085\1072\1082",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Math InlineMath "f",Space,Str "\1086\1090\1083\1080\1095\1072\1077\1090\1089\1103",Space,Str "\1086\1090",Space,Str "\1079\1085\1072\1082\1072",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1074",Space,Str "\1089\1077\1088\1077\1076\1080\1085\1077",Space,Str "\1086\1090\1088\1077\1079\1082\1072",Str ".",Space,Str "\1044\1072\1083\1077\1077",Space,Str "\1087\1086\1074\1090\1086\1088\1080\1084",Space,Str "\1101\1090\1091",Space,Str "\1087\1088\1086\1094\1077\1076\1091\1088\1091",Space,Str "\1085\1072",Space,Str "\1085\1086\1074\1086\1084",Space,Str "\1086\1090\1088\1077\1079\1082\1077",Str ".",Space,Str "\1048",Space,Str "\1090\1072\1082",Space,Str "\1087\1086\1082\1072",Space,Str "\1084\1099",Space,Str "\1085\1077",Space,Str "\1085\1072\1081\1076\1105\1084",Space,Str "\1082\1086\1088\1077\1085\1100",Space,Str "\1080\1083\1080",Space,Str "\1086\1090\1088\1077\1079\1086\1082",Space,Str "\1085\1077",Space,Str "\1089\1090\1103\1085\1077\1090\1089\1103",Space,Str "\1074",Space,Str "\1090\1086\1095\1082\1091",Str ".",Space,Str "\1042\1085\1091\1090\1088\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1074\1099\1076\1077\1083\1080\1090\1077",Space,Str "\1087\1072\1084\1103\1090\1100",Space,Str "\1087\1086\1076",Space,Str "\1082\1086\1085\1094\1099",Space,Str "\1086\1090\1088\1077\1079\1082\1072",Space,Str "\1080",Space,Str "\1087\1086\1089\1083\1077\1076\1086\1074\1072\1090\1077\1083\1100\1085\1086",Space,Str "\1080\1079\1084\1077\1085\1103\1081\1090\1077",Space,Str "\1080\1093",Space,Str "\1074\1085\1091\1090\1088\1080",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{ST}",Str "."]]]]