[Header 1 [Str "\1044\1086\1087\1086\1083\1085\1080\1090\1077\1083\1100\1085\1099\1077",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1086\1089\1090\1080"]
,Para [Str "\1042",Space,Str "\1101\1090\1086\1081",Space,Str "\1075\1083\1072\1074\1077",Space,Str "\1084\1099",Space,Str "\1088\1072\1089\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1077\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1076\1086\1087\1086\1083\1085\1080\1090\1077\1083\1100\1085\1099\1077",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1086\1089\1090\1080",Space,Str "\1103\1079\1099\1082\1072",Space,Str "\1080",Space,Str "\1088\1072\1089\1096\1080\1088\1077\1085\1080\1103",Str ",",Space,Str "\1086\1085\1080",Space,Str "\1095\1072\1089\1090\1086",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1091\1102\1090\1089\1103",Space,Str "\1074",Space,Str "\1089\1077\1088\1100\1105\1079\1085\1099\1093",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1072\1093",Str ".",Space,Str "\1052\1086\1078\1085\1086",Space,Str "\1087\1080\1089\1072\1090\1100",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1099",Space,Str "\1080",Space,Str "\1073\1077\1079",Space,Str "\1085\1080\1093",Str ",",Space,Str "\1085\1086",Space,Str "\1089",Space,Str "\1085\1080\1084\1080",Space,Str "\1075\1086\1088\1072\1079\1076\1086",Space,Str "\1083\1077\1075\1095\1077",Space,Str "\1080",Space,Str "\1091\1074\1083\1077\1082\1072\1090\1077\1083\1100\1085\1077\1081",Str "."]
,Header 2 [Str "\1055\1091\1076",Space,Str "\1089\1072\1093\1072\1088\1072"]
,Para [Str "\1042",Space,Str "\1101\1090\1086\1084",Space,Str "\1088\1072\1079\1076\1077\1083\1077",Space,Str "\1084\1099",Space,Str "\1088\1072\1089\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1099\1081",Space,Str "\1089\1080\1085\1090\1072\1082\1089\1080\1095\1077\1089\1082\1080\1081",Space,Str "\1089\1072\1093\1072\1088",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1087\1086\1079\1074\1086\1083\1103\1077\1090",Space,Str "\1073\1086\1083\1077\1077",Space,Str "\1082\1088\1072\1090\1082\1086",Space,Str "\1079\1072\1087\1080\1089\1099\1074\1072\1090\1100",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Space,Str "\1076\1083\1103",Space,Str "\1085\1077\1082\1086\1090\1086\1088\1099\1093",Space,Str "\1089\1090\1088\1091\1082\1090\1091\1088",Str "."]
,Header 3 [Str "\1057\1072\1093\1072\1088",Space,Str "\1076\1083\1103",Space,Str "\1089\1087\1080\1089\1082\1086\1074"]
,Header 4 [Str "\1055\1077\1088\1077\1095\1080\1089\1083\1077\1085\1080\1103"]
,Para [Str "\1044\1083\1103",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Enum}",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1105\1085",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1099\1081",Space,Str "\1089\1080\1085\1090\1072\1082\1089\1080\1089",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1077\1085\1080\1103",Space,Str "\1087\1086\1089\1083\1077\1076\1086\1074\1072\1090\1077\1083\1100\1085\1086\1089\1090\1077\1081",Space,Str "\1087\1077\1088\1077\1095\1080\1089\1083\1103\1077\1084\1099\1093",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Str ".",Space,Str "\1058\1072\1082",Space,Str "\1085\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1089\1086\1089\1090\1072\1074\1080\1090\1100",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1094\1077\1083\1099\1093",Space,Str "\1095\1080\1089\1077\1083",Space,Str "\1086\1090",Space,Str "\1085\1091\1083\1103",Space,Str "\1076\1086",Space,Str "\1076\1077\1089\1103\1090\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nPrelude> [0 .. 10]\n[0,1,2,3,4,5,6,7,8,9,10]\n\\end{code}\n"
,Para [Str "\1040",Space,Str "\1090\1072\1082",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1089\1086\1089\1090\1072\1074\1080\1090\1100",Space,Str "\1073\1077\1089\1082\1086\1085\1077\1095\1085\1091\1102",Space,Str "\1087\1086\1089\1083\1077\1076\1086\1074\1072\1090\1077\1083\1100\1085\1086\1089\1090\1100",Space,Str "\1087\1086\1083\1086\1078\1080\1090\1077\1083\1100\1085\1099\1093",Space,Str "\1095\1080\1089\1077\1083",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nPrelude> take 20 $ [0 .. ]\n[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1090\1100",Space,Str "\1087\1086\1089\1083\1077\1076\1086\1074\1072\1090\1077\1083\1100\1085\1086\1089\1090\1080",Space,Str "\1089",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1105\1085\1085\1099\1084",Space,Str "\1096\1072\1075\1086\1084",Str ".",Space,Str "\1058\1072\1082",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1074\1099\1076\1077\1083\1080\1090\1100",Space,Str "\1074\1089\1077",Space,Str "\1095\1105\1090\1085\1099\1077",Space,Str "\1087\1086\1083\1086\1078\1080\1090\1077\1083\1100\1085\1099\1077",Space,Str "\1095\1080\1089\1083\1072",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nPrelude> take 20 $ [0, 2 .. ]\n[0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38]\n\\end{code}\n"
,Para [Str "\1040",Space,Str "\1090\1072\1082",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1089\1086\1089\1090\1072\1074\1080\1090\1100",Space,Str "\1091\1073\1099\1074\1072\1102\1097\1091\1102",Space,Str "\1087\1086\1089\1083\1077\1076\1086\1074\1072\1090\1077\1083\1100\1085\1086\1089\1090\1100",Space,Str "\1095\1080\1089\1077\1083",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nPrelude> [10, 9 .. 0]\n[10,9,8,7,6,5,4,3,2,1,0]\n\\end{code}\n"
,Para [Str "\1063\1090\1086",Space,Str "\1080\1085\1090\1077\1088\1077\1089\1085\1086",Space,Str "\1074",Space,Str "\1089\1087\1080\1089\1082\1077",Space,Str "\1084\1086\1075\1091\1090",Space,Str "\1085\1072\1093\1086\1076\1080\1090\1100\1089\1103",Space,Str "\1085\1077",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1095\1080\1089\1083\1072",Str ",",Space,Str "\1072",Space,Str "\1083\1102\1073\1099\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1080\1079",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Enum}",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1090\1080\1087",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndata Day    = Monday | Tuesday | Wednesday | Thursday\n            | Friday | Saturday | Sunday\n            deriving (Show, Enum)\n\\end{code}\n"
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1085\1072\1087\1080\1089\1072\1090\1100",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Week> [Friday .. Sunday]\n[Friday,Saturday,Sunday]\n*Week> [ Monday .. ]\n[Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday]\n\\end{code}\n"
,Para [Str "\1058\1072\1082\1078\1077",Space,Str "\1096\1072\1075",Space,Str "\1087\1086\1089\1083\1077\1076\1086\1074\1072\1090\1077\1083\1100\1085\1086\1089\1090\1080",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1073\1099\1090\1100",Space,Str "\1080",Space,Str "\1076\1088\1086\1073\1085\1099\1084",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Week> [0, 0.5 .. 4]\n[0.0,0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0]\n\\end{code}\n"
,Header 4 [Str "\1043\1077\1085\1077\1088\1072\1090\1086\1088\1099",Space,Str "\1089\1087\1080\1089\1082\1086\1074"]
,Para [RawInline "tex" "\\index{\1075\1077\1085\1077\1088\1072\1090\1086\1088\1099 \1089\1087\1080\1089\1082\1086\1074}",Space,Emph [Str "\1043\1077\1085\1077\1088\1072\1090\1086\1088\1099",Space,Str "\1089\1087\1080\1089\1082\1086\1074"],Space,Str "(",Str "list",Space,Str "comprehensions",Str ")",Space,Str "\1086\1073\1098\1077\1076\1080\1085\1103\1102\1090",Space,Str "\1074",Space,Str "\1089\1077\1073\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1087\1088\1077\1086\1073\1088\1072\1079\1086\1074\1072\1085\1080\1103",Space,Str "\1080",Space,Str "\1092\1080\1083\1100\1090\1088\1072\1094\1080\1080",Space,Str "\1089\1087\1080\1089\1082\1086\1074",Str ".",Space,Str "\1054\1085\1080",Space,Str "\1079\1072\1087\1080\1089\1099\1074\1072\1102\1090\1089\1103",Space,Str "\1090\1072\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n[ f x | x <- list, p x]\n\\end{code}\n"
,Para [Str "\1042",Space,Str "\1101\1090\1086\1081",Space,Str "\1079\1072\1087\1080\1089\1080",Space,Str "\1084\1099",Space,Str "\1092\1080\1083\1100\1090\1088\1091\1077\1084",Space,Str "\1089\1087\1080\1089\1086\1082",Space,RawInline "latex" "\\In{list}",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090\1086\1084",Space,RawInline "latex" "\\In{p}",Space,Str "\1080",Space,Str "\1087\1088\1077\1086\1073\1088\1072\1079\1091\1077\1084",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1077\1081",Space,RawInline "latex" "\\In{f}",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1074\1086\1079\1074\1077\1076\1105\1084",Space,Str "\1074",Space,Str "\1082\1074\1072\1076\1088\1072\1090",Space,Str "\1074\1089\1077",Space,Str "\1095\1105\1090\1085\1099\1077",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1099",Space,Str "\1089\1087\1080\1089\1082\1072",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nPrelude> [x*x | x <- [1 .. 10], even x]\n[4,16,36,64,100]\n\\end{code}\n"
,Para [Str "\1055\1088\1077\1076\1080\1082\1072\1090\1086\1074",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1073\1099\1090\1100",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Str ",",Space,Str "\1090\1072\1082",Space,Str "\1085\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1086\1089\1090\1072\1074\1080\1090\1100",Space,Str "\1083\1080\1096\1100",Space,Str "\1087\1086\1083\1086\1078\1080\1090\1077\1083\1100\1085\1099\1077",Space,Str "\1095\1105\1090\1085\1099\1077",Space,Str "\1095\1080\1089\1083\1072",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nPrelude> [x | x <- [-10 .. 10], even x, x >= 0]\n[0,2,4,6,8,10]\n\\end{code}\n"
,Para [Str "\1058\1072\1082\1078\1077",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1099",Space,Str "\1084\1086\1075\1091\1090",Space,Str "\1073\1088\1072\1090\1100\1089\1103",Space,Str "\1080\1079",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1080\1093",Space,Str "\1089\1087\1080\1089\1082\1086\1074",Str ",",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1074\1089\1077",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1099\1077",Space,Str "\1082\1086\1084\1073\1080\1085\1072\1094\1080\1080",Space,Str "\1073\1091\1082\1074",Space,Str "\1080\1079",Space,Str "\1087\1072\1088\1099",Space,Str "\1089\1083\1086\1074",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nPrelude> [ [x,y] | x <- \"Hello\", y <- \"World\"]\n[\"HW\",\"Ho\",\"Hr\",\"Hl\",\"Hd\",\"eW\",\"eo\",\"er\",\"el\",\n \"ed\",\"lW\",\"lo\",\"lr\",\"ll\",\"ld\",\"lW\",\"lo\",\"lr\",\n \"ll\",\"ld\",\"oW\",\"oo\",\"or\",\"ol\",\"od\"]\n\\end{code}\n"
,Header 3 [Str "\1057\1072\1093\1072\1088",Space,Str "\1076\1083\1103",Space,Str "\1084\1086\1085\1072\1076",Str ",",Space,Str "do",Str "-",Str "\1085\1086\1090\1072\1094\1080\1103"]
,Para [Str "\1052\1086\1085\1072\1076\1099",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1091\1102\1090\1089\1103",Space,Str "\1089\1090\1086\1083\1100",Space,Str "\1095\1072\1089\1090\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1076\1083\1103",Space,Str "\1085\1080\1093",Space,Str "\1087\1088\1080\1076\1091\1084\1072\1083\1080",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1099\1081",Space,Str "\1089\1080\1085\1090\1072\1082\1089\1080\1089",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1086\1073\1083\1077\1075\1095\1072\1077\1090",Space,Str "\1087\1086\1076\1089\1090\1072\1085\1086\1074\1082\1091",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1099\1093",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Space,Str "\1074",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1080\1093",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1099\1093",Str ".",Space,Str "\1052\1086\1085\1072\1076\1099",Space,Str "\1087\1086\1079\1074\1086\1083\1103\1102\1090",Space,Str "\1082\1086\1084\1073\1080\1085\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1074\1080\1076\1072"]
,RawBlock "latex" "\n\\begin{code}\na -> m b\n\\end{code}\n"
,Para [Str "\1045\1089\1083\1080",Space,Str "\1073\1099",Space,Str "\1101\1090\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1074\1099\1075\1083\1103\1076\1077\1083\1080",Space,Str "\1082\1072\1082",Space,Str "\1086\1073\1099\1095\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\na -> b\n\\end{code}\n"
,RawBlock "latex" "\\noindent "
,Para [Str "\1080\1093",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1073\1099\1083\1086",Space,Str "\1089\1074\1086\1073\1086\1076\1085\1086",Space,Str "\1082\1086\1084\1073\1080\1085\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1089",Space,Str "\1076\1088\1091\1075\1080\1084\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1103\1084\1080",Str ".",Space,Str "\1040",Space,Str "\1090\1072\1082",Space,Str "\1085\1072\1084",Space,Str "\1087\1086\1089\1090\1086\1103\1085\1085\1086",Space,Str "\1087\1088\1080\1093\1086\1076\1080\1090\1089\1103",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100\1089\1103",Space,Str "\1084\1077\1090\1086\1076\1072\1084\1080",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Monad}",Str ".",Space,Str "\1054\1095\1077\1085\1100",Space,Str "\1095\1072\1089\1090\1086",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1089",Space,Str "\1087\1086\1073\1086\1095\1085\1099\1084\1080",Space,Str "\1101\1092\1092\1077\1082\1090\1072\1084\1080",Space,Str "\1080\1084\1077\1102\1090",Space,Str "\1074\1080\1076",Str ":"]
,RawBlock "latex" "\n\\begin{code}\na1 -> a2 -> a3 -> ... -> an -> m b\n\\end{code}\n"
,Para [Str "\1040",Space,Str "\1090\1077\1087\1077\1088\1100",Space,Str "\1087\1088\1077\1076\1089\1090\1072\1074\1100\1090\1077",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1074\1072\1084",Space,Str "\1085\1091\1078\1085\1086",Space,Str "\1087\1086\1076\1089\1090\1072\1074\1080\1090\1100",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1086\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1090\1088\1077\1090\1100\1080\1084",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1084",Space,Str "\1090\1072\1082\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1080",Space,Str "\1079\1072\1090\1077\1084",Space,Str "\1087\1077\1088\1077\1076\1072\1090\1100",Space,Str "\1077\1097\1105",Space,Str "\1074",Space,Str "\1086\1076\1085\1091",Space,Str "\1090\1072\1082\1091\1102",Space,Str "\1078\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1086\1073\1083\1077\1075\1095\1077\1085\1080\1103",Space,Str "\1091\1095\1072\1089\1090\1080",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1080\1089\1090\1086\1074",Space,Str "\1073\1099\1083\1086",Space,Str "\1087\1088\1080\1076\1091\1084\1072\1085\1086",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1086\1077",Space,Str "\1086\1082\1088\1091\1078\1077\1085\1080\1077",Space,RawInline "tex" "\\KeyWord{do}",Space,RawInline "latex" "\\In{do}",Str ",",Space,Str "\1074",Space,Str "\1082\1086\1090\1086\1088\1086\1084",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1082\1086\1084\1073\1080\1085\1080\1088\1091\1102\1090\1089\1103",Space,Str "\1090\1072\1082",Space,Str "\1089\1083\1086\1074\1085\1086",Space,Str "\1086\1085\1080",Space,Str "\1103\1074\1083\1103\1102\1090\1089\1103",Space,Str "\1086\1073\1099\1095\1085\1099\1084\1080",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1091\1077\1090\1089\1103",Space,Str "\1086\1073\1088\1072\1090\1085\1072\1103",Space,Str "\1089\1090\1088\1077\1083\1082\1072",Str ".",Space,Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1082\1072\1082",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1077\1090\1089\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{sequence}",Space,Str "\1074",Space,Str "\1086\1082\1088\1091\1078\1077\1085\1080\1080",Space,RawInline "latex" "\\In{do}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nsequence :: [m a] -> m [a]\nsequence []         = return []\nsequence (mx:mxs)   = do\n    x  <- mx\n    xs <- sequence mxs\n    return (x:xs)\n\\end{code}\n"
,Para [Str "\1042\1086",Space,Str "\1074\1090\1086\1088\1086\1084",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1080",Space,Str "\1089\1085\1072\1095\1072\1083\1072",Space,Str "\1084\1099",Space,Str "\1075\1086\1074\1086\1088\1080\1084",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1090\1077\1083\1102",Space,Str "\1089\1083\1086\1074\1086\1084",Space,RawInline "latex" "\\In{do}",Space,Str "\1086",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Space,Str "\1079\1072\1087\1080\1089\1072\1085\1099",Space,Str "\1074",Space,Str "\1084\1080\1088\1077",Space,Str "\1084\1086\1085\1072\1076\1099",Space,RawInline "latex" "\\In{m}",Str ".",Space,Str "\1047\1072\1087\1080\1089\1100",Space,Str "\1089",Space,Str "\1087\1077\1088\1077\1074\1105\1088\1085\1091\1090\1086\1081",Space,Str "\1089\1090\1088\1077\1083\1082\1086\1081",Space,RawInline "latex" "\\In{x <- mx}",Space,Str "\1086\1079\1085\1072\1095\1072\1077\1090",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1099",Space,Str "\1076\1072\1083\1077\1077",Space,Str "\1074",Space,RawInline "latex" "\\In{do}",Str "-",Str "\1073\1083\1086\1082\1077",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100\1089\1103",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077\1084",Space,RawInline "latex" "\\In{x}",Space,Str "\1090\1072\1082",Space,Str "\1089\1083\1086\1074\1085\1086",Space,Str "\1086\1085\1086",Space,Str "\1080\1084\1077\1077\1090",Space,Str "\1090\1080\1087",Space,Str "\1087\1088\1086\1089\1090\1086",Space,RawInline "latex" "\\In{a}",Str ",",Space,Str "\1085\1086",Space,Str "\1085\1077",Space,RawInline "latex" "\\In{m a}",Str ".",Space,Str "\1057\1084\1086\1090\1088\1080\1090\1077",Space,Str "\1074",Space,Str "\1101\1090\1086\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1080",Space,Str "\1084\1099",Space,Str "\1089\1085\1072\1095\1072\1083\1072",Space,Str "\1080\1079\1074\1083\1077\1082\1072\1077\1084",Space,Str "\1087\1077\1088\1074\1099\1081",Space,Str "\1101\1083\1077\1084\1077\1085\1090",Space,Str "\1089\1087\1080\1089\1082\1072",Str ",",Space,Str "\1079\1072\1090\1077\1084",Space,Str "\1080\1079\1074\1083\1077\1082\1072\1077\1084",Space,Str "\1093\1074\1086\1089\1090",Space,Str "\1089\1087\1080\1089\1082\1072",Str ",",Space,Str "\1087\1088\1080\1074\1077\1076\1105\1085\1085\1099\1081",Space,Str "\1082",Space,Str "\1090\1080\1087\1091",Space,RawInline "latex" "\\In{m [a]}",Str ",",Space,Str "\1080",Space,Str "\1074",Space,Str "\1089\1072\1084\1086\1084",Space,Str "\1082\1086\1085\1094\1077",Space,Str "\1084\1099",Space,Str "\1089\1086\1077\1076\1080\1085\1103\1077\1084",Space,Str "\1075\1086\1083\1086\1074\1091",Space,Str "\1080",Space,Str "\1093\1074\1086\1089\1090",Space,Str "\1080",Space,Str "\1074",Space,Str "\1089\1072\1084\1086\1084",Space,Str "\1082\1086\1085\1094\1077",Space,Str "\1086\1073\1086\1088\1072\1095\1080\1074\1072\1077\1084",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090",Space,Str "\1074",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1086\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Str "."]
,Para [Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1087\1086\1089\1090\1088\1086\1080\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1076\1074\1072\1078\1076\1099",Space,Str "\1095\1080\1090\1072\1077\1090",Space,Str "\1089\1090\1088\1086\1082\1091",Space,Str "\1089\1086",Space,Str "\1089\1090\1072\1085\1076\1072\1088\1090\1085\1086\1075\1086",Space,Str "\1074\1074\1086\1076\1072",Space,Str "\1080",Space,Str "\1079\1072\1090\1077\1084",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1086\1073\1098\1077\1076\1080\1085\1077\1085\1080\1077",Space,Str "\1076\1074\1091\1093",Space,Str "\1089\1090\1088\1086\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ngetLine2 :: IO String\ngetLine2 = do\n    a <- getLine\n    b <- getLine\n    return (a ++ b)\n\\end{code}\n"
,Para [Str "\1042",Space,RawInline "latex" "\\In{do}",Str "-",Str "\1085\1086\1090\1072\1094\1080\1080",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1074\1074\1086\1076\1080\1090\1100",Space,Str "\1083\1086\1082\1072\1083\1100\1085\1099\1077",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1099\1077",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,RawInline "tex" "\\mbox{\1089\1083\1086\1074\1072 \\In{let}}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nt = do\n    b <- f a\n    c <- g b\n    let x = c + b\n        y = x + c\n    return y\n\\end{code}\n"
,Para [Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1082\1072\1082",Space,RawInline "latex" "\\In{do}",Str "-",Str "\1085\1086\1090\1072\1094\1080\1103",Space,Str "\1087\1077\1088\1077\1074\1086\1076\1080\1090\1089\1103",Space,Str "\1074",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1077",Str ",",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1077\1085\1085\1086\1077",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1084\1077\1090\1086\1076\1086\1074",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Monad}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndo\n    a <- ma     =>   ma >>= (\\a -> exp)\n    exp\ndo\n    exp1        =>   exp1 >> exp2\n    exp2    \ndo\n    let x = fx  =>   let x = fx\n        y = fy           y = fy\n    exp              in  exp\n\\end{code}\n"
,Para [Str "\1055\1077\1088\1077\1074\1077\1076\1105\1084",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1101\1090\1080\1093",Space,Str "\1087\1088\1072\1074\1080\1083",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1076\1083\1103",Space,Str "\1074\1090\1086\1088\1086\1075\1086",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1103",Space,Str "\1080\1079",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{sequence}"]
,RawBlock "latex" "\n\\begin{code}\nsequence (mx:mxs) = do\n    x   <- mx                  mx >>= (\\x -> do  \n    xs  <- sequence mxs   =>              xs <- sequence mxs    =>    \n    return (x:xs)                         return (x:xs))\n\n=>     mx >>= (\\x -> sequence mxs >>= (\\xs -> return (x:xs)))\n\\end{code}\n"
,Header 4 [Str "do",Space,Str "\1080\1083\1080",Space,Str "Applicative",Str "?"]
,Para [Str "\1057",Space,Str "\1087\1086\1103\1074\1083\1077\1085\1080\1077\1084",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Applicative}",Space,Str "\1074\1086",Space,Str "\1084\1085\1086\1075\1080\1093",Space,Str "\1089\1083\1091\1095\1072\1103\1093",Space,RawInline "latex" "\\In{do}",Str "-",Str "\1085\1086\1090\1072\1094\1080\1103",Space,Str "\1090\1077\1088\1103\1077\1090",Space,Str "\1089\1074\1086\1102",Space,Str "\1094\1077\1085\1085\1086\1089\1090\1100",Str ".",Space,Str "\1058\1072\1082",Space,Str "\1085\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1083\1102\1073\1086\1081",Space,RawInline "latex" "\\In{do}",Str "-",Str "\1073\1083\1086\1082",Space,Str "\1074\1080\1076\1072",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nf mx my = do\n    x <- mx \n    y <- my\n    return (op x y)\n\\end{code}\n"
,Para [Str "\1052\1086\1078\1085\1086",Space,Str "\1079\1072\1087\1080\1089\1072\1090\1100",Space,Str "\1075\1086\1088\1072\1079\1076\1086",Space,Str "\1082\1086\1088\1086\1095\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nf = liftA2 op \n\\end{code}\n"
,Para [Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1085\1072\1087\1080\1096\1077\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1086\1073\1098\1077\1076\1080\1085\1103\1077\1090",Space,Str "\1076\1074\1072",Space,Str "\1092\1072\1081\1083\1072",Space,Str "\1074",Space,Str "\1086\1076\1080\1085",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nappendFiles :: FilePath -> FilePath -> FilePath -> IO ()\n\\end{code}\n"
,Para [Str "\1057",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,RawInline "latex" "\\In{do}",Str "-",Str "\1085\1086\1090\1072\1094\1080\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nappendFiles file1 file2 resFile = do\n\ta <- readFile file1\n\tb <- readFile file2\n\twriteFile resFile (a ++ b)\t\n\\end{code}\n"
,Para [Str "\1040",Space,Str "\1090\1077\1087\1077\1088\1100",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Applicative}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nappendFiles file1 file2 resFile = writeFile resFile =<< \n\tliftA2 (++) (readFile file1) (readFile file2)\n\\end{code}\n"
,Header 2 [Str "\1056\1072\1089\1096\1080\1088\1077\1085\1080\1103"]
,Para [Str "\1056\1072\1089\1096\1080\1088\1077\1085\1080\1077",Space,Str "\1087\1086\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1074",Space,Str "\1086\1090\1074\1077\1090",Space,Str "\1085\1072",Space,Str "\1087\1088\1086\1073\1083\1077\1084\1091",Str ",",Space,Str "\1089",Space,Str "\1082\1086\1090\1086\1088\1086\1081",Space,Str "\1090\1088\1091\1076\1085\1086",Space,Str "\1080\1083\1080",Space,Str "\1085\1077\1074\1086\1079\1084\1086\1078\1085\1086",Space,Str "\1089\1087\1088\1072\1074\1080\1090\1089\1103",Space,Str "\1074",Space,Str "\1088\1072\1084\1082\1072\1093",Space,Str "\1089\1090\1072\1085\1076\1072\1088\1090\1072",Space,Str "Haskell",Str ".",Space,Str "\1052\1099",Space,Str "\1088\1072\1089\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1085\1072\1080\1073\1086\1083\1077\1077",Space,Str "\1095\1072\1089\1090\1086",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1091\1077\1084\1099\1093",Space,Str "\1088\1072\1089\1096\1080\1088\1077\1085\1080\1081",Str ".",Space,Str "\1056\1072\1089\1096\1080\1088\1077\1085\1080\1103",Space,Str "\1087\1086\1076\1082\1083\1102\1095\1072\1102\1090\1089\1103",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1086\1075\1086",Space,Str "\1082\1086\1084\1084\1077\1085\1090\1072\1088\1080\1103",Str ".",Space,Str "\1054\1085",Space,Str "\1087\1086\1084\1077\1097\1072\1077\1090\1089\1103",Space,Str "\1074",Space,Str "\1085\1072\1095\1072\1083\1077",Space,Str "\1084\1086\1076\1091\1083\1103",Str ".",Space,Str "\1056\1072\1089\1096\1080\1088\1077\1085\1080\1077",Space,Str "\1076\1077\1081\1089\1090\1074\1091\1077\1090",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1074",Space,Str "\1090\1077\1082\1091\1097\1077\1084",Space,Str "\1084\1086\1076\1091\1083\1077",Str "."]
,RawBlock "latex" "\n\\begin{code}\n{-# LANGUAGE  ExtentionName1, ExtentionName2, ExtentionName3 #-}\n\\end{code}\n"
,Para [Str "\1054\1073\1088\1072\1090\1080\1090\1077",Space,Str "\1074\1085\1080\1084\1072\1085\1080\1077",Space,Str "\1085\1072",Space,Str "\1089\1080\1084\1074\1086\1083",Space,Str "\1088\1077\1096\1105\1090\1082\1072",Str ",",Space,Str "\1086\1073\1088\1072\1084\1083\1103\1102\1097\1080\1077",Space,Str "\1082\1086\1084\1084\1077\1085\1090\1072\1088\1080\1080",Str ".",Space,Str "\1057\1083\1086\1074\1086",Space,RawInline "latex" "\\In{LANGUAGE}",Space,Str "\1075\1086\1074\1086\1088\1080\1090",Space,Str "\1082\1086\1084\1087\1080\1083\1103\1090\1086\1088\1091",Space,Str "\1086",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1099",Space,Str "\1093\1086\1090\1080\1084",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100\1089\1103",Space,Str "\1088\1072\1089\1096\1080\1088\1077\1085\1080\1103\1084\1080",Space,Str "\1089",Space,Str "\1080\1084\1077\1085\1072\1084\1080",Space,RawInline "latex" "\\In{ExtentionName1}",Str ",",Space,RawInline "latex" "\\In{ExtentionName2}",Str ",",Space,RawInline "latex" "\\In{ExtentionName3}",Str ".",Space,Str "\1058\1072\1082\1086\1081",Space,Str "\1082\1086\1084\1084\1077\1085\1090\1072\1088\1080\1081",Space,Str "\1085\1072\1079\1099\1074\1072\1077\1090\1089\1103",Space,Emph [Str "\1087\1088\1072\1075\1084\1086\1081"],Space,Str "(",Str "pragma",Str ")",Str ".",Space,Str "\1063\1072\1089\1090\1086",Space,Str "\1082\1086\1084\1087\1080\1083\1103\1090\1086\1088",Space,Str "ghc",Space,Str "\1074",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1086\1096\1080\1073\1082\1080",Space,Str "\1087\1088\1077\1076\1083\1072\1075\1072\1077\1090",Space,Str "\1085\1072\1084",Space,Str "\1087\1086\1076\1082\1083\1102\1095\1080\1090\1100",Space,Str "\1088\1072\1089\1096\1080\1088\1077\1085\1080\1077",Str ",",Space,Str "\1074",Space,Str "\1082\1086\1090\1086\1088\1086\1084",Space,Str "\1086\1096\1080\1073\1082\1072",Space,Str "\1091\1078\1077",Space,Str "\1085\1077",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1086\1096\1080\1073\1082\1086\1081",Str ",",Space,Str "\1072",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1086\1089\1090\1100\1102",Space,Str "\1103\1079\1099\1082\1072",Str ".",Space,Str "\1054\1085",Space,Str "\1075\1086\1074\1086\1088\1080\1090",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1086",Space,Str "\1074\1099",Space,Str "\1080\1084\1077\1083\1080",Space,Str "\1074",Space,Str "\1074\1080\1076\1091",Space,Str "\1088\1072\1089\1096\1080\1088\1077\1085\1080\1077",Space,RawInline "latex" "\\In{XXX}",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1087\1086\1087\1088\1086\1073\1091\1081\1090\1077",Space,Str "\1079\1072\1075\1088\1091\1079\1080\1090\1100",Space,Str "\1074",Space,Str "\1080\1085\1090\1077\1088\1087\1088\1077\1090\1072\1090\1086\1088",Space,Str "\1084\1086\1076\1091\1083\1100",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nmodule Test where\n\nclass Multi a b where\n\\end{code}\n"
,Para [Str "\1042",Space,Str "\1101\1090\1086\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1084\1099",Space,Str "\1091\1074\1080\1076\1080\1084",Space,Str "\1086\1096\1080\1073\1082\1091",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nPrelude> :l Test\n[1 of 1] Compiling Test             ( Test.hs, interpreted )\n\nTest.hs:3:0:\n    Too many parameters for class `Multi'\n    (Use -XMultiParamTypeClasses to allow multi-parameter classes)\n    In the class declaration for `Multi'\nFailed, modules loaded: none.\n\\end{code}\n"
,Para [Str "\1050\1086\1084\1087\1080\1083\1103\1090\1086\1088",Space,Str "\1089\1086\1086\1073\1097\1072\1077\1090",Space,Str "\1085\1072\1084",Space,Str "\1086",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1089\1083\1080\1096\1082\1086\1084",Space,Str "\1084\1085\1086\1075\1086",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1086\1074",Space,Str "\1074",Space,Str "\1082\1083\1072\1089\1089\1077",Space,RawInline "latex" "\\In{Multi}",Str ".",Space,Str "\1042",Space,Str "\1088\1072\1084\1082\1072\1093",Space,Str "\1089\1090\1072\1085\1076\1072\1088\1090\1072",Space,Str "Haskell",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1089\1086\1079\1076\1072\1074\1072\1090\1100",Space,Str "\1083\1080\1096\1100",Space,Str "\1082\1083\1072\1089\1089\1099",Space,Str "\1089",Space,Str "\1086\1076\1085\1080\1084",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1086\1084",Str ".",Space,Str "\1053\1086",Space,Str "\1079\1072",Space,Str "\1089\1086\1086\1073\1097\1077\1085\1080\1077\1084",Space,Str "\1084\1099",Space,Str "\1074\1080\1076\1080\1084",Space,Str "\1087\1086\1076\1089\1082\1072\1079\1082\1091",Str ",",Space,Str "\1077\1089\1083\1080",Space,Str "\1084\1099",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1091\1077\1084\1089\1103",Space,Str "\1088\1072\1089\1096\1080\1088\1077\1085\1080\1077\1084",Space,RawInline "latex" "\\In{-XMultiParamTypeClasses}",Str ",",Space,Str "\1090\1086",Space,Str "\1074\1089\1105",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1093\1086\1088\1086\1096\1086",Str ".",Space,Str "\1042",Space,Str "\1101\1090\1086\1084",Space,Str "\1089\1086\1086\1073\1097\1077\1085\1080\1080",Space,Str "\1080\1084\1103",Space,Str "\1088\1072\1089\1096\1080\1088\1077\1085\1080\1103",Space,Str "\1079\1072\1082\1086\1076\1080\1088\1086\1074\1072\1085\1086",Space,Str "\1074",Space,Str "\1074\1080\1076\1077",Space,Str "\1092\1083\1072\1075\1072",Str ".",Space,Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1079\1072\1087\1091\1089\1090\1080\1090\1100",Space,Str "ghc",Space,Str "\1080\1083\1080",Space,Str "ghci",Space,Str "\1089",Space,Str "\1101\1090\1080\1084",Space,Str "\1092\1083\1072\1075\1086\1084",Space,Str "\1080",Space,Str "\1090\1086\1075\1076\1072",Space,Str "\1088\1072\1089\1096\1080\1088\1077\1085\1080\1077",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1072\1082\1090\1080\1074\1080\1088\1086\1074\1072\1085\1086",Str ",",Space,Str "\1080",Space,Str "\1084\1086\1076\1091\1083\1100",Space,Str "\1079\1072\1075\1088\1091\1079\1080\1090\1089\1103",Str ".",Space,Str "\1055\1086\1087\1088\1086\1073\1091\1077\1084",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nPrelude> :q\nLeaving GHCi.\n$ ghci -XMultiParamTypeClasses\nPrelude> :l Test\n[1 of 1] Compiling Test             ( Test.hs, interpreted )\nOk, modules loaded: Test.\n*Test> \n\\end{code}\n"
,Para [Str "\1052\1086\1076\1091\1083\1100",Space,Str "\1079\1072\1075\1088\1091\1079\1080\1083\1089\1103",Str "!",Space,Str "\1059",Space,Str "\1085\1072\1089",Space,Str "\1077\1089\1090\1100",Space,Str "\1080",Space,Str "\1076\1088\1091\1075\1072\1103",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1086\1089\1090\1100",Space,Str "\1087\1086\1076\1082\1083\1102\1095\1080\1090\1100",Space,Str "\1084\1086\1076\1091\1083\1100",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1087\1088\1072\1075\1084\1099",Space,RawInline "latex" "\\In{LANGUAGE}",Str ".",Space,Str "\1048\1084\1103",Space,Str "\1088\1072\1089\1096\1080\1088\1077\1085\1080\1103",Space,Str "\1079\1072\1087\1080\1089\1072\1085\1086",Space,Str "\1074\1086",Space,Str "\1092\1083\1072\1075\1077",Space,Str "\1087\1086\1089\1083\1077",Space,Str "\1089\1080\1084\1074\1086\1083\1086\1074",Space,RawInline "latex" "\\In{-X}",Str ".",Space,Str "\1044\1086\1073\1072\1074\1080\1084",Space,Str "\1074",Space,Str "\1084\1086\1076\1091\1083\1100",Space,RawInline "latex" "\\In{Test}",Space,Str "\1088\1072\1089\1096\1080\1088\1077\1085\1080\1077",Space,Str "\1089",Space,Str "\1080\1084\1077\1085\1077\1084",Space,RawInline "latex" "\\In{MultiParamTypeClasses}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n{-# LANGUAGE MultiParamTypeClasses #-}\nmodule Test where\n\nclass Multi a b where\n\\end{code}\n"
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1079\1072\1075\1088\1091\1079\1080\1084",Space,Str "ghci",Space,Str "\1074",Space,Str "\1086\1073\1099\1095\1085\1086\1084",Space,Str "\1088\1077\1078\1080\1084\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Test> :q\nLeaving GHCi.\n$ ghci\nPrelude> :l Test\n[1 of 1] Compiling Test             ( Test.hs, interpreted )\nOk, modules loaded: Test.\n\\end{code}\n"
,Header 3 [Str "\1054\1073\1086\1073\1097\1105\1085\1085\1099\1077",Space,Str "\1072\1083\1075\1077\1073\1088\1072\1080\1095\1077\1089\1082\1080\1077",Space,Str "\1090\1080\1087\1099",Space,Str "\1076\1072\1085\1085\1099\1093"]
,Para [Str "\1055\1088\1077\1076\1087\1086\1083\1086\1078\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1099",Space,Str "\1093\1086\1090\1080\1084",Space,Str "\1085\1072\1087\1080\1089\1072\1090\1100",Space,Str "\1082\1086\1084\1087\1080\1083\1103\1090\1086\1088",Space,Str "\1085\1077\1073\1086\1083\1100\1096\1086\1075\1086",Space,Str "\1103\1079\1099\1082\1072",Str ".",Space,Str "\1053\1072\1096",Space,Str "\1103\1079\1099\1082",Space,Str "\1089\1086\1076\1077\1088\1078\1080\1090",Space,Str "\1095\1080\1089\1083\1072",Space,Str "\1080",Space,Str "\1083\1086\1075\1080\1095\1077\1089\1082\1080\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str ".",Space,Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1089\1082\1083\1072\1076\1099\1074\1072\1090\1100",Space,Str "\1095\1080\1089\1083\1072",Space,Str "\1080",Space,Str "\1091\1084\1085\1086\1078\1072\1090\1100",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1083\1086\1075\1080\1095\1077\1089\1082\1080\1093",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1072",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1094\1080\1103",Space,RawInline "latex" "\\In{if-then-else}",Str ".",Space,Str "\1054\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1090\1080\1087",Space,Str "\1089\1080\1085\1090\1072\1082\1089\1080\1095\1077\1089\1082\1086\1075\1086",Space,Str "\1076\1077\1088\1077\1074\1072",Space,Str "\1076\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1103\1079\1099\1082\1072",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndata Exp = ValTrue\n         | ValFalse\n         | If Exp Exp Exp\n         | Val Int\n         | Add Exp Exp\n         | Mul Exp Exp\n         deriving (Show)\n\\end{code}\n"
,Para [Str "\1042",Space,Str "\1101\1090\1086\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1080",Space,Str "\1082\1088\1086\1077\1090\1089\1103",Space,Str "\1086\1076\1085\1072",Space,Str "\1087\1088\1086\1073\1083\1077\1084\1072",Str ".",Space,Str "\1053\1072\1096",Space,Str "\1090\1080\1087",Space,Str "\1087\1086\1079\1074\1086\1083\1103\1077\1090",Space,Str "\1085\1072\1084",Space,Str "\1089\1090\1088\1086\1080\1090\1100",Space,Str "\1073\1077\1089\1089\1084\1099\1089\1083\1077\1085\1085\1099\1077",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Space,Str "\1074\1088\1086\1076\1077",Space,RawInline "latex" "\\In{Add ValTrue (Val 2)}",Space,Str "\1080\1083\1080",Space,RawInline "latex" "\\In{If (Val 1) ValTrue (Val 22)}",Str ".",Space,Str "\1053\1072\1096",Space,Str "\1090\1080\1087",Space,RawInline "latex" "\\In{Val}",Space,Str "\1074\1082\1083\1102\1095\1072\1077\1090",Space,Str "\1074",Space,Str "\1089\1077\1073\1103",Space,Str "\1074\1089\1077",Space,Str "\1093\1086\1088\1086\1096\1080\1077",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Space,Str "\1080",Space,Str "\1084\1085\1086\1075\1086",Space,Str "\1087\1083\1086\1093\1080\1093",Str ".",Space,Str "\1069\1090\1072",Space,Str "\1087\1088\1086\1073\1083\1077\1084\1072",Space,Str "\1087\1088\1086\1103\1074\1080\1090\1089\1103",Space,Str "\1086\1089\1086\1073\1077\1085\1085\1086",Space,Str "\1103\1088\1082\1086",Str ",",Space,Str "\1077\1089\1083\1080",Space,Str "\1084\1099",Space,Str "\1087\1086\1087\1099\1090\1072\1077\1084\1089\1103",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{eval}",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1074\1099\1095\1080\1089\1083\1103\1077\1090",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1076\1083\1103",Space,Str "\1085\1072\1096\1077\1075\1086",Space,Str "\1103\1079\1099\1082\1072",Str ".",Space,Str "\1055\1086\1083\1091\1095\1072\1077\1090\1089\1103",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1090\1080\1087",Space,Str "\1101\1090\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\neval :: Exp -> Either Int Bool\n\\end{code}\n"
,Para [RawInline "tex" "\\Types{\1086\1073\1086\1073\1097\1105\1085\1085\1099\1077 \1072\1083\1075\1077\1073\1088\1072\1080\1095\1077\1089\1082\1080\1077 \1090\1080\1087\1099 \1076\1072\1085\1085\1099\1093, GADT}",Space,Str "\1044\1083\1103",Space,Str "\1088\1077\1096\1077\1085\1080\1103",Space,Str "\1101\1090\1086\1081",Space,Str "\1087\1088\1086\1073\1083\1077\1084\1099",Space,Str "\1073\1099\1083\1080",Space,Str "\1087\1088\1080\1076\1091\1084\1072\1085\1099",Space,Emph [Str "\1086\1073\1086\1073\1097\1105\1085\1085\1099\1077",Space,Str "\1072\1083\1075\1077\1073\1088\1072\1080\1095\1077\1089\1082\1080\1077",Space,Str "\1090\1080\1087\1099",Space,Str "\1076\1072\1085\1085\1099\1093"],Space,Str "(",Str "generalised",Space,Str "algebraic",Space,Str "data",Space,Str "types",Str ",",Space,Str "GADTs",Str ")",Str ".",Space,Str "\1054\1085\1080",Space,Str "\1087\1086\1076\1082\1083\1102\1095\1072\1102\1090\1089\1103",Space,Str "\1088\1072\1089\1096\1080\1088\1077\1085\1080\1077\1084",Space,RawInline "latex" "\\In{GADTs}",Str ".",Space,Str "\1055\1086\1084\1085\1080\1090\1077",Space,Str "\1082\1086\1075\1076\1072",Str "-",Str "\1090\1086",Space,Str "\1084\1099",Space,Str "\1075\1086\1074\1086\1088\1080\1083\1080",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1090\1080\1087\1099",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1087\1088\1077\1076\1089\1090\1072\1074\1080\1090\1100",Space,Str "\1074",Space,Str "\1074\1080\1076\1077",Space,Str "\1082\1083\1072\1089\1089\1086\1074",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1076\1083\1103",Space,Str "\1089\1087\1080\1089\1082\1072"]
,RawBlock "latex" "\n\\begin{code}\ndata List a = Nil | Cons a (List a)\n\\end{code}\n"
,RawBlock "latex" "\\noindent "
,Para [Str "\1084\1086\1078\1085\1086",Space,Str "\1084\1099\1089\1083\1077\1085\1085\1086",Space,Str "\1087\1077\1088\1077\1087\1080\1089\1072\1090\1100",Space,Str "\1090\1072\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndata List a where\n    Nil  :: List a\n    Cons :: a -> List a -> List a\n\\end{code}\n"
,Para [Str "\1058\1072\1082",Space,Str "\1074\1086\1090",Space,Str "\1074",Space,Str "GADT",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1103",Space,Str "\1079\1072\1087\1080\1089\1099\1074\1072\1102\1090\1089\1103",Space,Str "\1080\1084\1077\1085\1085\1086",Space,Str "\1074",Space,Str "\1090\1072\1082\1086\1084",Space,Str "\1074\1080\1076\1077",Str ".",Space,Str "\1054\1073\1086\1073\1097\1077\1085\1080\1077",Space,Str "\1079\1072\1082\1083\1102\1095\1072\1077\1090\1089\1103",Space,Str "\1074",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1090\1077\1087\1077\1088\1100",Space,Str "\1085\1072",Space,Str "\1084\1077\1089\1090\1077",Space,Str "\1087\1088\1086\1080\1079\1074\1086\1083\1100\1085\1086\1075\1086",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1072",Space,RawInline "latex" "\\In{a}",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1087\1080\1089\1072\1090\1100",Space,Str "\1082\1086\1085\1082\1088\1077\1090\1085\1099\1077",Space,Str "\1090\1080\1087\1099",Str ".",Space,Str "\1054\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1090\1080\1087",Space,RawInline "latex" "\\In{GExp}"]
,RawBlock "latex" "\n\\begin{code}\n{-# LANGUAGE GADTs #-}\n\ndata Exp a where\n    ValTrue     :: Exp Bool\n    ValFalse    :: Exp Bool\n    If          :: Exp Bool -> Exp a -> Exp a -> Exp a\n    Val         :: Int -> Exp Int\n    Add         :: Exp Int -> Exp Int -> Exp Int\n    Mul         :: Exp Int -> Exp Int -> Exp Int\n\\end{code}\n"
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1091",Space,Str "\1085\1072\1096\1077\1075\1086",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Exp}",Space,Str "\1087\1086\1103\1074\1080\1083\1089\1103",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088",Str ",",Space,Str "\1095\1077\1088\1077\1079",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1084\1099",Space,Str "\1082\1086\1076\1080\1088\1091\1077\1084",Space,Str "\1076\1086\1087\1086\1083\1085\1080\1090\1077\1083\1100\1085\1099\1077",Space,Str "\1086\1075\1088\1072\1085\1080\1095\1077\1085\1080\1103",Space,Str "\1085\1072",Space,Str "\1090\1080\1087\1099",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1081",Str ".",Space,Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1084\1099",Space,Str "\1085\1077",Space,Str "\1089\1084\1086\1078\1077\1084",Space,Str "\1089\1086\1089\1090\1072\1074\1080\1090\1100",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1077",Space,RawInline "latex" "\\In{Add ValTrue ValFalse}",Str ",",Space,Str "\1087\1086\1090\1086\1084\1091",Space,Str "\1095\1090\1086",Space,Str "\1086\1085\1086",Space,Str "\1085\1077",Space,Str "\1087\1088\1086\1081\1076\1105\1090",Space,Str "\1087\1088\1086\1074\1077\1088\1082\1091",Space,Str "\1090\1080\1087\1086\1074",Str "."]
,Para [Str "\1054\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{eval}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\neval :: Exp a -> a\neval x = case x of\n    ValTrue     -> True\n    ValFalse    -> False\n    If p t e    -> if eval p then eval t else eval e\n    Val n       -> n\n    Add a b     -> eval a + eval b\n    Mul a b     -> eval a * eval b\n\\end{code}\n"
,Para [Str "\1045\1089\1083\1080",Space,RawInline "latex" "\\In{eval}",Space,Str "\1087\1086\1083\1091\1095\1080\1090",Space,Str "\1083\1086\1075\1080\1095\1077\1089\1082\1086\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Str ",",Space,Str "\1090\1086",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1077\1085\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Bool}",Str ",",Space,Str "\1072",Space,Str "\1085\1072",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Exp Int}",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1077\1085\1086",Space,Str "\1094\1077\1083\1086\1077",Space,Str "\1095\1080\1089\1083\1086",Str ".",Space,Str "\1044\1072\1074\1072\1081\1090\1077",Space,Str "\1091\1073\1077\1076\1080\1084\1089\1103",Space,Str "\1074",Space,Str "\1101\1090\1086\1084",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Prelude> :l Exp\n[1 of 1] Compiling Exp              ( Exp.hs, interpreted )\nOk, modules loaded: Exp.\n*Exp> let notE x = If x ValFalse ValTrue\n*Exp> let squareE x = Mul x x\n*Exp> \n*Exp> eval $ squareE $ If (notE ValTrue) (Val 1) (Val 2)\n4\n*Exp> eval $ notE ValTrue\nFalse\n*Exp> eval $ notE $ Add (Val 1) (Val 2)\n\n<interactive>:1:14:\n    Couldn't match expected type `Bool' against inferred type `Int'\n    Expected type: Exp Bool\n      Actual type: Exp Int\n    In the return type of a call of `Add'\n    In the second argument of `($)', namely `Add (Val 1) (Val 2)'\n\\end{code}\n"
,Para [Str "\1057\1085\1072\1095\1072\1083\1072",Space,Str "\1084\1099",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1083\1080",Space,Str "\1076\1074\1077",Space,Str "\1074\1089\1087\1086\1084\1086\1075\1072\1090\1077\1083\1100\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ".",Space,Str "\1047\1072\1090\1077\1084",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1083\1080",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Str ".",Space,Str "Haskell",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1095\1072\1089\1090\1086",Space,Str "\1087\1088\1080\1084\1077\1085\1103\1077\1090\1089\1103",Space,Str "\1076\1083\1103",Space,Str "\1087\1086\1089\1090\1088\1086\1077\1085\1080\1103",Space,Str "\1082\1086\1084\1087\1080\1083\1103\1090\1086\1088\1086\1074",Str ".",Space,Str "\1052\1099",Space,Str "\1088\1072\1089\1089\1084\1086\1090\1088\1077\1083\1080",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1087\1088\1086\1089\1090\1086\1081",Space,Str "\1103\1079\1099\1082",Str ",",Space,Str "\1085\1086",Space,Str "\1074",Space,Str "\1073\1086\1083\1077\1077",Space,Str "\1089\1083\1086\1078\1085\1086\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1089\1091\1090\1100",Space,Str "\1086\1089\1090\1072\1085\1077\1090\1089\1103",Space,Str "\1087\1088\1077\1078\1085\1077\1081",Str ".",Space,Str "\1044\1086\1087\1086\1083\1085\1080\1090\1077\1083\1100\1085\1099\1081",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088",Space,Str "\1087\1086\1079\1074\1086\1083\1103\1077\1090",Space,Str "\1085\1072\1084",Space,Str "\1079\1072\1082\1086\1076\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1074",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1077",Space,Str "\1090\1080\1087",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1085\1072\1096\1077\1075\1086",Space,Str "\1103\1079\1099\1082\1072",Str ".",Space,Str "\1057\1087\1088\1072\1096\1080\1074\1072\1077\1090\1089\1103",Str ":",Space,Str "\1079\1072\1095\1077\1084",Space,Str "\1085\1072\1084",Space,Str "\1076\1091\1073\1083\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Space,Str "\1074",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{eval}",Str "?",Space,Str "\1047\1072\1095\1077\1084",Space,Str "\1085\1072\1084",Space,Str "\1089\1085\1072\1095\1072\1083\1072",Space,Str "\1082\1086\1076\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1077",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088\1072\1084\1080",Str ",",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1087\1086\1090\1086\1084",Space,Str "\1087\1086\1083\1091\1095\1080\1090\1100",Space,Str "\1090\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1099",Space,Str "\1084\1086\1075\1083\1080",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1090\1100",Space,Str "\1080",Space,Str "\1085\1072\1087\1088\1103\1084\1091\1102",Str "."]
,Para [Str "\1055\1088\1080",Space,Str "\1090\1072\1082\1086\1084",Space,Str "\1087\1086\1076\1093\1086\1076\1077",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1077\1089\1090\1100",Space,Str "\1087\1086\1083\1085\1099\1081",Space,Str "\1082\1086\1085\1090\1088\1086\1083\1100",Space,Str "\1079\1072",Space,Str "\1076\1077\1088\1077\1074\1086\1084",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Str ",",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1087\1088\1086\1074\1086\1076\1080\1090\1100",Space,Str "\1076\1086\1087\1086\1083\1085\1080\1090\1077\1083\1100\1085\1091\1102",Space,Str "\1086\1087\1090\1080\1084\1080\1079\1072\1094\1080\1102",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1081",Str ",",Space,Str "\1077\1089\1083\1080",Space,Str "\1085\1072\1084",Space,Str "\1080\1079\1074\1077\1089\1090\1085\1099",Space,Str "\1085\1077\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1079\1072\1082\1086\1085\1086\1084\1077\1088\1085\1086\1089\1090\1080",Str ".",Space,Str "\1045\1097\1105",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{eval}",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1074\1099\1095\1080\1089\1083\1103\1090\1100",Space,Str "\1089\1086\1074\1089\1077\1084",Space,Str "\1076\1088\1091\1075\1080\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1086\1085\1072",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1087\1086",Space,Str "\1074\1080\1076\1091",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1090\1100",Space,Str "\1082\1086\1076",Space,Str "\1085\1072",Space,Str "\1076\1088\1091\1075\1086\1084",Space,Str "\1103\1079\1099\1082\1077",Str ".",Space,Str "\1042\1086\1079\1084\1086\1078\1085\1086",Space,Str "\1101\1090\1086\1090",Space,Str "\1103\1079\1099\1082",Space,Str "\1075\1086\1088\1072\1079\1076\1086",Space,Str "\1084\1086\1097\1085\1077\1077",Space,Str "Haskell",Space,Str "\1087\1086",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1090\1077\1083\1100\1085\1099\1084",Space,Str "\1089\1087\1086\1089\1086\1073\1085\1086\1089\1090\1103\1084",Str ",",Space,Str "\1085\1086",Space,Str "\1073\1077\1076\1085\1077\1077",Space,Str "\1074",Space,Str "\1087\1083\1072\1085\1077",Space,Str "\1074\1099\1088\1072\1079\1080\1090\1077\1083\1100\1085\1086\1089\1090\1080",Str ",",Space,Str "\1075\1080\1073\1082\1086\1089\1090\1080",Space,Str "\1089\1080\1085\1090\1072\1082\1089\1080\1089\1072",Str ".",Space,Str "\1058\1086\1075\1076\1072",Space,Str "\1084\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1074",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{eval}",Space,Str "\1087\1088\1086\1077\1094\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1088\1072\1079\1085\1099\1077",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1094\1080\1080",Space,Str "Haskell",Space,Str "\1074",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1094\1080\1080",Space,Str "\1076\1088\1091\1075\1086\1075\1086",Space,Str "\1103\1079\1099\1082\1072",Str ".",Space,Str "\1058\1072\1082\1080\1077",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1099",Space,Str "\1085\1072\1079\1099\1074\1072\1102\1090\1089\1103",Space,Emph [Str "\1087\1088\1077\1076\1084\1077\1090\1085\1086",Str "-",Str "\1086\1088\1080\1077\1085\1090\1080\1088\1086\1074\1072\1085\1085\1099\1084\1080",Space,Str "\1103\1079\1099\1082\1072\1084\1080",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1080\1088\1086\1074\1072\1085\1080\1103"],Space,Str "(",Str "domain",Space,Str "specific",Space,Str "languages",Str ")",Str ".",Space,Str "\1052\1099",Space,Str "\1082\1086\1076\1080\1088\1091\1077\1084",Space,Str "\1074",Space,Str "\1090\1080\1087\1077",Space,RawInline "latex" "\\In{Exp}",Space,Str "\1085\1077\1082\1086\1090\1086\1088\1091\1102",Space,Str "\1086\1073\1083\1072\1089\1090\1100",Space,Str "\1080",Space,Str "\1079\1072\1090\1077\1084",Space,Str "\1085\1072\1076\1089\1090\1088\1072\1080\1074\1072\1077\1084",Space,Str "\1085\1072\1076",Space,Str "\1090\1080\1087\1086\1084",Space,RawInline "latex" "\\In{Exp}",Space,Str "\1088\1072\1079\1085\1099\1077",Space,Str "\1087\1086\1083\1077\1079\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ".",Space,Str "\1053\1072",Space,Str "\1089\1072\1084\1086\1084",Space,Str "\1087\1086\1089\1083\1077\1076\1085\1077\1084",Space,Str "\1101\1090\1072\1087\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{eval}",Space,Str "\1087\1077\1088\1077\1074\1086\1076\1080\1090",Space,Str "\1074\1089\1105",Space,Str "\1076\1077\1088\1077\1074\1086",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Space,Str "\1074",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1080\1083\1080",Space,Str "\1082\1086\1076",Space,Str "\1076\1088\1091\1075\1086\1075\1086",Space,Str "\1103\1079\1099\1082\1072",Str "."]
,Para [Str "\1054\1090\1084\1077\1090\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1085\1077",Space,Str "\1090\1072\1082",Space,Str "\1076\1072\1074\1085\1086",Space,Str "\1073\1099\1083\1086",Space,Str "\1087\1088\1077\1076\1083\1086\1078\1077\1085\1086",Space,Str "\1076\1088\1091\1075\1086\1077",Space,Str "\1088\1077\1096\1077\1085\1080\1077",Space,Str "\1101\1090\1086\1081",Space,Str "\1079\1072\1076\1072\1095\1080",Str ".",Space,Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1079\1072\1082\1086\1076\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1090\1080\1087\1099",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1074",Space,Str "\1082\1083\1072\1089\1089\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nclass E exp where\n    true    :: exp Bool\n    false   :: exp Bool\n    iff     :: exp Bool -> exp a -> exp a -> exp a\n    val     :: Int -> exp Int\n    add     :: exp Int -> exp Int -> exp Int\n    mul     :: exp Int -> exp Int -> exp Int    \n\\end{code}\n"
,Para [Str "\1055\1088\1077\1080\1084\1091\1097\1077\1089\1090\1074\1086\1084",Space,Str "\1090\1072\1082\1086\1075\1086",Space,Str "\1087\1086\1076\1093\1086\1076\1072",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1084\1086\1076\1091\1083\1100\1085\1086\1089\1090\1100",Str ".",Space,Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1089\1087\1086\1082\1086\1081\1085\1086",Space,Str "\1088\1072\1079\1076\1077\1083\1080\1090\1100",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1077",Space,Str "\1085\1072",Space,Str "\1076\1074\1077",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1102\1097\1080\1077",Space,Str "\1095\1072\1089\1090\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nclass (Log exp, Arith exp) => E exp\n\nclass Log exp where\n    true    :: exp Bool\n    false   :: exp Bool\n    iff     :: exp Bool -> exp a -> exp a -> exp a\n\nclass Arith exp where\n    val     :: Int -> exp Int\n    add     :: exp Int -> exp Int -> exp Int\n    mul     :: exp Int -> exp Int -> exp Int\n\\end{code}\n"
,Para [Str "\1048\1085\1090\1077\1088\1087\1088\1077\1090\1072\1094\1080\1103",Space,Str "\1076\1077\1088\1077\1074\1072",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Space,Str "\1074",Space,Str "\1101\1090\1086\1084",Space,Str "\1087\1086\1076\1093\1086\1076\1077",Space,Str "\1079\1072\1082\1083\1102\1095\1072\1077\1090\1089\1103",Space,Str "\1074",Space,Str "\1089\1086\1079\1076\1072\1085\1080\1080",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1072",Space,Str "\1082\1083\1072\1089\1089\1072",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1089\1086\1079\1076\1072\1076\1080\1084",Space,Str "\1082\1083\1072\1089\1089",Str "-",Str "\1074\1099\1095\1080\1089\1083\1080\1090\1077\1083\1100",Space,RawInline "latex" "\\In{Eval}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nnewtype Eval a = Eval { runEval :: a }\n\ninstance Log Eval where\n    true    = Eval True\n    false   = Eval False\n    iff p t e = if runEval p then t else e\n\ninstance Arith Eval where\n    val     = Eval\n    add a b = Eval $ runEval a + runEval b\n    mul a b = Eval $ runEval a * runEval b\n\ninstance E Eval\n\\end{code}\n"
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1087\1088\1086\1074\1077\1076\1105\1084",Space,Str "\1090\1072\1082\1091\1102",Space,Str "\1078\1077",Space,Str "\1089\1077\1089\1089\1080\1102",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Str ",",Space,Str "\1085\1086",Space,Str "\1076\1072\1074\1072\1081\1090\1077",Space,Str "\1090\1077\1087\1077\1088\1100",Space,Str "\1089\1085\1072\1095\1072\1083\1072",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1080\1093",Space,Str "\1074",Space,Str "\1090\1077\1082\1089\1090\1077",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1099",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nnotE :: Log exp => exp Bool -> exp Bool\nnotE x = iff x true false\n\nsquareE :: Arith exp => exp Int -> exp Int\nsquareE x = mul x x\n\ne1 :: E exp => exp Int\ne1 = squareE $ iff (notE true) (val 1) (val 2)\n\ne2 :: E exp => exp Bool\ne2 = notE true\n\\end{code}\n"
,Para [Str "\1047\1072\1075\1088\1091\1079\1080\1084",Space,Str "\1074",Space,Str "\1080\1085\1090\1077\1088\1087\1088\1077\1090\1072\1090\1086\1088",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Exp> :r\n[1 of 1] Compiling Exp              ( Exp.hs, interpreted )\nOk, modules loaded: Exp.\n*Exp> runEval e1\n4\n*Exp> runEval e2\nFalse\n\\end{code}\n"
,Para [Str "\1055\1086\1083\1091\1095\1080\1083\1080\1089\1100",Space,Str "\1090\1072\1082\1080\1077",Space,Str "\1078\1077",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1099",Space,Str "\1080",Space,Str "\1074",Space,Str "\1101\1090\1086\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1085\1072\1084",Space,Str "\1085\1077",Space,Str "\1085\1091\1078\1085\1086",Space,Str "\1087\1086\1076\1082\1083\1102\1095\1072\1090\1100",Space,Str "\1085\1080\1082\1072\1082\1080\1093",Space,Str "\1088\1072\1089\1096\1080\1088\1077\1085\1080\1081",Str ".",Space,Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1089\1086\1079\1076\1072\1076\1080\1084",Space,Str "\1090\1080\1087",Str "-",Str "\1087\1088\1080\1085\1090\1077\1088",Str ",",Space,Str "\1086\1085",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1088\1072\1089\1087\1077\1095\1072\1090\1099\1074\1072\1090\1100",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nnewtype Print a = Print { runPrint :: String }\n\ninstance Log Print where\n    true    = Print \"True\" \n    false   = Print \"False\"\n    iff p t e = Print $ \"if (\" ++ runPrint p ++ \") {\" \n            ++ runPrint t ++ \"}\"\n            ++ \"{\" ++ runPrint e ++ \"}\"\n\ninstance Arith Print where\n    val n   = Print $ show n\n    add a b = Print $ \"(\" ++ runPrint a ++ \")+(\" ++ runPrint b ++ \")\"\n    mul a b = Print $ \"(\" ++ runPrint a ++ \")*(\" ++ runPrint b ++ \")\"\n\\end{code}\n"
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1088\1072\1089\1087\1077\1095\1072\1090\1072\1077\1084",Space,Str "\1087\1088\1077\1076\1099\1076\1091\1097\1080\1077",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Exp> :r\n[1 of 1] Compiling Exp              ( Exp.hs, interpreted )\nOk, modules loaded: Exp.\n*Exp> runPrint e1\n\"(if (if (True) {False}{True}) {1}{2})*(if (if (True) {False}{True}) {1}{2})\"\n*Exp> runPrint e2\n\"if (True) {False}{True}\"\n\\end{code}\n"
,Para [Str "\1055\1088\1080",Space,Str "\1090\1072\1082\1086\1084",Space,Str "\1087\1086\1076\1093\1086\1076\1077",Space,Str "\1085\1072\1084",Space,Str "\1085\1077",Space,Str "\1087\1088\1080\1096\1083\1086\1089\1100",Space,Str "\1085\1080\1095\1077\1075\1086",Space,Str "\1084\1077\1085\1103\1090\1100",Space,Str "\1074",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103\1093",Str ",",Space,Str "\1084\1099",Space,Str "\1087\1088\1086\1089\1090\1086",Space,Str "\1079\1072\1084\1077\1085\1080\1083\1080",Space,Str "\1090\1080\1087",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Space,Str "\1080",Space,Str "\1086\1085\1086",Space,Str "\1072\1074\1090\1086\1084\1072\1090\1080\1095\1077\1089\1082\1080",Space,Str "\1087\1086\1076\1089\1090\1088\1086\1080\1083\1086\1089\1100",Space,Str "\1087\1086\1076",Space,Str "\1085\1091\1078\1085\1099\1081",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090",Str ".",Space,Str "\1055\1086\1076\1088\1086\1073\1085\1077\1077",Space,Str "\1086\1073",Space,Str "\1101\1090\1086\1084",Space,Str "\1087\1086\1076\1093\1086\1076\1077",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1087\1086\1095\1080\1090\1072\1090\1100",Space,Str "\1085\1072",Space,Str "\1089\1072\1081\1090\1077",Space,Link [Code ("",["url"],[]) "http://okmij.org/ftp/tagless-final/course/course.html"] ("http://okmij.org/ftp/tagless-final/course/course.html",""),Space,Str "\1080\1083\1080",Space,Str "\1074",Space,Str "\1089\1090\1072\1090\1100\1077",Space,Str "\1046\1072\1082\1072",Space,Str "\1050\1072\1088\1077",Space,Str "(",Str "Jacques",Space,Str "Carette",Str ")",Str ",",Space,Str "\1054\1083\1077\1075\1072",Space,Str "\1050\1080\1089\1077\1083\1105\1074\1072",Space,Str "(",Str "Oleg",Space,Str "Kiselyov",Str ")",Space,Str "\1080",Space,Str "\1063\1091\1085\1075",Str "-",Str "\1063\1077",Space,Str "\1064\1077\1085\1072",Space,Str "(",Str "Chung",Str "-",Str "chieh",Space,Str "Shan",Str ")",Space,Emph [Str "Finally",Space,Str "Tagless",Str ",",Space,Str "Partially",Space,Str "Evaluated"],Str "."]
,Header 3 [Str "\1057\1077\1084\1077\1081\1089\1090\1074\1072",Space,Str "\1090\1080\1087\1086\1074"]
,Para [RawInline "tex" "\\Types{\1089\1077\1084\1077\1081\1089\1090\1074\1072 \1090\1080\1087\1086\1074}",Space,RawInline "tex" "\\Types{\1072\1089\1089\1086\1094\1080\1072\1090\1080\1074\1085\1099\1077 \1090\1080\1087\1099}",Space,Str "\1057\1077\1084\1077\1081\1089\1090\1074\1072",Space,Str "\1090\1080\1087\1086\1074",Space,Str "\1087\1086\1079\1074\1086\1083\1103\1102\1090",Space,Str "\1074\1099\1088\1072\1078\1072\1090\1100",Space,Str "\1079\1072\1074\1080\1089\1080\1084\1086\1089\1090\1080",Space,Str "\1090\1080\1087\1086\1074",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1087\1088\1077\1076\1089\1090\1072\1074\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1082\1083\1072\1089\1089",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1077\1090",Space,Str "\1085\1077",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1084\1077\1090\1086\1076\1099",Str ",",Space,Str "\1085\1086",Space,Str "\1080",Space,Str "\1090\1080\1087\1099",Str ".",Space,Str "\1055\1088\1080\1095\1105\1084",Space,Str "\1085\1086\1074\1099\1077",Space,Str "\1090\1080\1087\1099",Space,Str "\1079\1072\1074\1080\1089\1103\1090",Space,Str "\1086\1090",Space,Str "\1082\1086\1085\1082\1088\1077\1090\1085\1086\1075\1086",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1072",Space,Str "\1082\1083\1072\1089\1089\1072",Str ".",Space,Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Str ",",Space,Str "\1085\1072\1087\1088\1080\1084\1077\1088",Str ",",Space,Str "\1085\1072",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1083\1080\1085\1077\1081\1085\1086\1075\1086",Space,Str "\1087\1088\1086\1089\1090\1088\1072\1085\1089\1090\1074\1072",Space,Str "\1080\1079",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1080",Space,RawInline "latex" "\\In{vector-space}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nclass AdditiveGroup v where\n    zeroV   :: v\n    (^+^)   :: v -> v -> v\n    negateV :: v -> v\n\nclass AdditiveGroup v => VectorSpace v where\n    type Scalar v   :: *\n    (*^)            :: Scalar v -> v -> v\n\\end{code}\n"
,Para [Str "\1051\1080\1085\1077\1081\1085\1086\1077",Space,Str "\1087\1088\1086\1089\1090\1088\1072\1085\1089\1090\1074\1086",Space,Str "\1101\1090\1086",Space,Str "\1084\1072\1090\1077\1084\1072\1090\1080\1095\1077\1089\1082\1072\1103",Space,Str "\1089\1090\1088\1091\1082\1090\1091\1088\1072",Str ",",Space,Str "\1086\1073\1098\1077\1082\1090\1072\1084\1080",Space,Str "\1082\1086\1090\1086\1088\1086\1081",Space,Str "\1103\1074\1083\1103\1102\1090\1089\1103",Space,Str "\1074\1077\1082\1090\1086\1088\1072",Space,Str "\1080",Space,Str "\1089\1082\1072\1083\1103\1088\1099",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1074\1077\1082\1090\1086\1088\1086\1074",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1072",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1103",Space,Str "\1089\1083\1086\1078\1077\1085\1080\1103",Str ",",Space,Str "\1072",Space,Str "\1076\1083\1103",Space,Str "\1089\1082\1072\1083\1103\1088\1086\1074",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Space,Str "\1089\1083\1086\1078\1077\1085\1080\1103",Space,Str "\1080",Space,Str "\1091\1084\1085\1086\1078\1077\1085\1080\1103",Str ".",Space,Str "\1050\1088\1086\1084\1077",Space,Str "\1090\1086\1075\1086",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1072",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1103",Space,Str "\1091\1084\1085\1086\1078\1077\1085\1080\1103",Space,Str "\1074\1077\1082\1090\1086\1088\1072",Space,Str "\1085\1072",Space,Str "\1089\1082\1072\1083\1103\1088",Str ".",Space,Str "\1055\1088\1080",Space,Str "\1101\1090\1086\1084",Space,Str "\1076\1086\1083\1078\1085\1099",Space,Str "\1074\1099\1087\1086\1083\1085\1103\1090\1089\1103",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1105\1085\1085\1099\1077",Space,Str "\1089\1074\1086\1081\1089\1090\1074\1072",Str ".",Space,Str "\1052\1099",Space,Str "\1085\1077",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1087\1086\1076\1088\1086\1073\1085\1086",Space,Str "\1085\1072",Space,Str "\1085\1080\1093",Space,Str "\1086\1089\1090\1072\1085\1072\1074\1083\1080\1074\1072\1090\1100\1089\1103",Str ",",Space,Str "\1074\1082\1088\1072\1090\1094\1077",Space,Str "\1079\1072\1084\1077\1090\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1101\1090\1080",Space,Str "\1089\1074\1086\1081\1089\1090\1074\1072",Space,Str "\1075\1086\1074\1086\1088\1103\1090",Space,Str "\1086",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1099",Space,Str "\1076\1077\1081\1089\1090\1074\1080\1090\1077\1083\1100\1085\1086",Space,Str "\1087\1086\1083\1100\1079\1091\1077\1084\1089\1103",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1103\1084\1080",Space,Str "\1089\1083\1086\1078\1077\1085\1080\1103",Space,Str "\1080",Space,Str "\1091\1084\1085\1086\1078\1077\1085\1080\1103",Str ".",Space,Str "\1042",Space,Str "\1082\1083\1072\1089\1089\1077",Space,RawInline "latex" "\\In{VectorSpace}",Space,Str "\1084\1099",Space,Str "\1074\1080\1076\1080\1084",Space,Str "\1085\1086\1074\1091\1102",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1094\1080\1102",Str ",",Space,Str "\1086\1073\1098\1103\1074\1083\1077\1085\1080\1077",Space,Str "\1090\1080\1087\1072",Str ".",Space,Str "\1052\1099",Space,Str "\1075\1086\1074\1086\1088\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1077\1089\1090\1100",Space,Str "\1087\1088\1086\1080\1079\1074\1086\1076\1085\1099\1081",Space,Str "\1090\1080\1087",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1089\1083\1077\1076\1091\1077\1090",Space,Str "\1080\1079",Space,RawInline "latex" "\\In{v}",Str ".",Space,Str "\1044\1072\1083\1077\1077",Space,Str "\1095\1077\1088\1077\1079",Space,Str "\1076\1074\1086\1081\1085\1086\1077",Space,Str "\1076\1074\1086\1077\1090\1086\1095\1080\1077",Space,Str "\1084\1099",Space,Str "\1091\1082\1072\1079\1099\1074\1072\1077\1084",Space,Str "\1077\1075\1086",Space,Str "\1074\1080\1076",Str ".",Space,Str "\1042",Space,Str "\1076\1072\1085\1085\1086\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1101\1090\1086",Space,Str "\1087\1088\1086\1089\1090\1086\1081",Space,Str "\1090\1080\1087",Space,Str "\1073\1077\1079",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1086\1074",Str "."]
,Para [Str "\1042\1080\1076",Space,RawInline "tex" "\\Types{\1074\1080\1076 \1090\1080\1087\1072}",Space,Str "(",Str "kind",Str ")",Space,Str "\1101\1090\1086",Space,Str "\1090\1080\1087",Space,Str "\1090\1080\1087\1072",Str ".",Space,Str "\1055\1088\1086\1089\1090\1086\1081",Space,Str "\1090\1080\1087",Space,Str "\1073\1077\1079",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1072",Space,Str "\1086\1073\1086\1079\1085\1072\1095\1072\1077\1090\1089\1103",Space,Str "\1079\1074\1105\1079\1076\1086\1095\1082\1086\1081",Str ".",Space,Str "\1058\1080\1087",Space,Str "\1089",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1086\1084",Space,Str "\1086\1073\1086\1079\1085\1072\1095\1072\1077\1090\1089\1103",Space,Str "\1082\1072\1082",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{* -> *}",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1073\1099",Space,Str "\1090\1080\1087",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1083",Space,Str "\1076\1074\1072",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1072",Str ",",Space,Str "\1090\1086",Space,Str "\1086\1085",Space,Str "\1086\1073\1086\1079\1085\1072\1095\1072\1083\1089\1103",Space,Str "\1073\1099",Space,RawInline "latex" "\\In{* -> * -> *}",Str ".",Space,Str "\1058\1072\1082\1078\1077",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1099",Space,Str "\1084\1086\1075\1091\1090",Space,Str "\1073\1099\1090\1100",Space,Str "\1085\1077",Space,Str "\1087\1088\1086\1089\1090\1099\1084\1080",Space,Str "\1090\1080\1087\1072\1084\1080",Space,Str "\1072",Space,Str "\1090\1080\1087\1072\1084\1080",Space,Str "\1089",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1072\1084\1080",Str ",",Space,Str "\1085\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1090\1080\1087",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1086\1073\1086\1079\1085\1072\1095\1072\1077\1090",Space,Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1102",Space,Str "\1090\1080\1087\1086\1074",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nnewtype O f g a = O { unO :: f (g a) }\n\\end{code}\n"
,RawBlock "latex" "\\noindent "
,Para [Str "\1080\1084\1077\1077\1090",Space,Str "\1074\1080\1076",Space,RawInline "latex" "\\In{(* -> *) -> (* -> *) -> * -> *}",Str "."]
,Para [Str "\1054\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1082\1083\1072\1089\1089",Space,Str "\1074\1077\1082\1090\1086\1088\1086\1074",Space,Str "\1085\1072",Space,Str "\1076\1074\1091\1084\1077\1088\1085\1086\1081",Space,Str "\1089\1077\1090\1082\1077",Space,Str "\1080",Space,Str "\1089\1076\1077\1083\1072\1077\1084",Space,Str "\1077\1075\1086",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1086\1084",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{VectorSpace}",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1085\1072\1095\1072\1083\1072",Space,Str "\1089\1086\1079\1076\1072\1076\1080\1084",Space,Str "\1085\1086\1074\1099\1081",Space,Str "\1084\1086\1076\1091\1083\1100",Space,Str "\1089",Space,Str "\1072\1082\1090\1080\1074\1085\1099\1084",Space,Str "\1088\1072\1089\1096\1080\1088\1077\1085\1080\1077\1084",Space,RawInline "latex" "\\In{TypeFamilies}",Space,Str "\1080",Space,Str "\1079\1072\1087\1080\1096\1077\1084",Space,Str "\1074",Space,Str "\1085\1077\1075\1086",Space,Str "\1082\1083\1072\1089\1089\1099",Space,Str "\1076\1083\1103",Space,Str "\1083\1080\1085\1077\1081\1085\1086\1075\1086",Space,Str "\1087\1088\1086\1089\1090\1088\1072\1085\1089\1090\1074\1072"]
,RawBlock "latex" "\n\\begin{code}\n{-# Language TypeFamilies #-}\nmodule Point2D where\n\nclass AdditiveGroup v where\n...\n\\end{code}\n"
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1085\1086\1074\1099\1081",Space,Str "\1090\1080\1087",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndata V2 = V2 Int Int\n    deriving (Show, Eq)\n\\end{code}\n"
,Para [Str "\1057\1076\1077\1083\1072\1077\1084",Space,Str "\1077\1075\1086",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1086\1084",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{AdditiveGroup}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ninstance AdditiveGroup V2 where\n    zeroV       = V2 0 0\n    (V2 x y)  ^+^ (V2 x' y')  = V2 (x+x') (y+y')\n    negateV (V2 x y)   = V2 (-x) (-y)\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1089\1082\1083\1072\1076\1099\1074\1072\1077\1084",Space,Str "\1080",Space,Str "\1074\1099\1095\1080\1090\1072\1077\1084",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1074",Space,Str "\1082\1072\1078\1076\1086\1084",Space,Str "\1080\1079",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1086\1074",Space,Str "\1082\1086\1088\1090\1077\1078\1072",Str ".",Space,Str "\1053\1077\1081\1090\1088\1072\1083\1100\1085\1099\1084",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1086\1084",Space,Str "\1086\1090\1085\1086\1089\1080\1090\1077\1083\1100\1085\1086",Space,Str "\1089\1083\1086\1078\1077\1085\1080\1103",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1082\1086\1088\1090\1077\1078",Str ",",Space,Str "\1089\1086\1089\1090\1086\1103\1097\1080\1081",Space,Str "\1080\1079",Space,Str "\1076\1074\1091\1093",Space,Str "\1085\1091\1083\1077\1081",Str ".",Space,Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088",Space,Str "\1076\1083\1103",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{VectorSpace}",Str ".",Space,Str "\1055\1086\1089\1082\1086\1083\1100\1082\1091",Space,Str "\1082\1086\1088\1090\1077\1078",Space,Str "\1089\1086\1089\1090\1086\1080\1090",Space,Str "\1080\1079",Space,Str "\1076\1074\1091\1093",Space,Str "\1094\1077\1083\1099\1093",Space,Str "\1095\1080\1089\1077\1083",Str ",",Space,Str "\1089\1082\1072\1083\1103\1088",Space,Str "\1090\1072\1082\1078\1077",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1094\1077\1083\1099\1084",Space,Str "\1095\1080\1089\1083\1086\1084",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ninstance VectorSpace V2 where\n    type Scalar V2 = Int\n    s *^ (V2 x y) = V2 (s*x) (s*y)\n\\end{code}\n"
,Para [Str "\1055\1086\1087\1088\1086\1073\1091\1077\1084",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1090\1100",Space,Str "\1095\1090\1086",Str "-",Str "\1085\1080\1073\1091\1076\1100",Space,Str "\1074",Space,Str "\1080\1085\1090\1077\1088\1087\1088\1077\1090\1072\1090\1086\1088\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Prelude> :l Point2D\n[1 of 1] Compiling Point2D          ( Point2D.hs, interpreted )\nOk, modules loaded: Point2D.\n*Point2D> let v =  V2 1 2\n*Point2D> v ^+^ v\nV2 2 4\n*Point2D> 3 *^ v ^+^ v\nV2 4 8\n*Point2D> negateV $ 3 *^ v ^+^ v\nV2 (-4) (-8)\n\\end{code}\n"
,Para [Str "\1057\1077\1084\1077\1081\1089\1090\1074\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1076\1072\1102\1090",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1086\1089\1090\1100",Space,Str "\1086\1088\1075\1072\1085\1080\1079\1086\1074\1099\1074\1072\1090\1100",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Space,Str "\1085\1072",Space,Str "\1090\1080\1087\1072\1093",Str ".",Space,Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1090\1072\1082\1086\1081",Space,Str "\1082\1083\1072\1089\1089\1080\1095\1077\1089\1082\1080\1081",Space,Str "\1087\1088\1080\1084\1077\1088",Str ".",Space,Str "\1056\1077\1072\1083\1080\1079\1091\1077\1084",Space,Str "\1074",Space,Str "\1090\1080\1087\1072\1093",Space,Str "\1095\1080\1089\1083\1072",Space,Str "\1055\1077\1072\1085\1086",Str ".",Space,Str "\1053\1072\1084",Space,Str "\1087\1086\1085\1072\1076\1086\1073\1103\1090\1089\1103",Space,Str "\1076\1074\1072",Space,Str "\1090\1080\1087\1072",Str ".",Space,Str "\1054\1076\1080\1085",Space,Str "\1076\1083\1103",Space,Str "\1086\1073\1086\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1085\1091\1083\1103",Str ",",Space,Str "\1072",Space,Str "\1076\1088\1091\1075\1086\1081",Space,Str "\1076\1083\1103",Space,Str "\1086\1073\1086\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1089\1083\1077\1076\1091\1102\1097\1077\1075\1086",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1072",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n{-# Language TypeFamilies, EmptyDataDecls #-}\nmodule Nat where\n\ndata Zero\ndata Succ a\n\\end{code}\n"
,Para [Str "\1047\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1101\1090\1080\1093",Space,Str "\1090\1080\1087\1086\1074",Space,Str "\1085\1072\1084",Space,Str "\1085\1077",Space,Str "\1087\1086\1085\1072\1076\1086\1073\1103\1090\1089\1103",Str ",",Space,Str "\1087\1086\1101\1090\1086\1084\1091",Space,Str "\1084\1099",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1091\1077\1084\1089\1103",Space,Str "\1088\1072\1089\1096\1080\1088\1077\1085\1080\1077\1084",Space,RawInline "latex" "\\In{EmptyDataDecls}",Str ",",Space,Str "\1082\1086\1090\1086\1088\1086\1077",Space,Str "\1087\1086\1079\1074\1086\1083\1103\1077\1090",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1090\1100",Space,Str "\1090\1080\1087\1099",Space,Str "\1073\1077\1079",Space,Str "\1079\1085\1072\1095\1077\1085\1077\1080\1081",Str ".",Space,Str "\1047\1085\1072\1095\1077\1085\1080\1103\1084\1080",Space,Str "\1073\1091\1076\1091\1090",Space,Str "\1082\1086\1084\1073\1080\1085\1072\1094\1080\1080",Space,Str "\1090\1080\1087\1086\1074",Str ".",Space,Str "\1052\1099",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Space,Str "\1089\1083\1086\1078\1077\1085\1080\1103",Space,Str "\1080",Space,Str "\1091\1084\1085\1086\1078\1077\1085\1080\1103",Space,Str "\1076\1083\1103",Space,Str "\1095\1080\1089\1077\1083",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1085\1072\1095\1072\1083\1072",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1089\1083\1086\1078\1077\1085\1080\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ntype family Add a b :: *\n\ntype instance Add a Zero        = a\ntype instance Add a (Succ b)    = Succ (Add a b)\n\\end{code}\n"
,Para [Str "\1055\1077\1088\1074\1086\1081",Space,Str "\1089\1090\1088\1086\1095\1082\1086\1081",Space,Str "\1084\1099",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1083\1080",Space,Str "\1089\1077\1084\1077\1081\1089\1090\1074\1086",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,RawInline "latex" "\\In{Add}",Str ",",Space,Str "\1091",Space,Str "\1082\1086\1090\1086\1088\1086\1075\1086",Space,Str "\1076\1074\1072",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1072",Str ".",Space,Str "\1054\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1089\1077\1084\1077\1081\1089\1090\1074\1072",Space,Str "\1090\1080\1087\1086\1074",Space,Str "\1085\1072\1095\1080\1085\1072\1077\1090\1089\1103",Space,Str "\1089",Space,Str "\1082\1083\1102\1095\1077\1074\1086\1081",Space,Str "\1092\1088\1072\1079\1099",Space,RawInline "tex" "\\KeyWord{type family}",Space,RawInline "latex" "\\In{type family}",Str ".",Space,Str "\1047\1072",Space,Str "\1076\1074\1086\1077\1090\1086\1095\1080\1077\1084",Space,Str "\1084\1099",Space,Str "\1091\1082\1072\1079\1072\1083\1080",Space,Str "\1090\1080\1087",Space,Str "\1089\1077\1084\1077\1081\1089\1090\1074\1072",Str ".",Space,Str "\1042",Space,Str "\1076\1072\1085\1085\1086\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1101\1090\1086",Space,Str "\1087\1088\1086\1089\1090\1086\1081",Space,Str "\1090\1080\1087",Space,Str "\1073\1077\1079",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1072",Str ".",Space,Str "\1044\1072\1083\1077\1077",Space,Str "\1089\1083\1077\1076\1091\1102\1090",Space,Str "\1079\1072\1074\1080\1089\1080\1084\1086\1089\1090\1080",Space,Str "\1090\1080\1087\1086\1074",Space,Str "\1076\1083\1103",Space,Str "\1089\1077\1084\1077\1081\1089\1090\1074\1072",Space,RawInline "latex" "\\In{Add}",Str ".",Space,Str "\1047\1072\1074\1080\1089\1080\1084\1086\1089\1090\1080",Space,Str "\1090\1080\1087\1086\1074",Space,Str "\1085\1072\1095\1080\1085\1072\1102\1090\1089\1103",Space,Str "\1089",Space,Str "\1082\1083\1102\1095\1077\1074\1086\1081",Space,Str "\1092\1088\1072\1079\1099",Space,RawInline "tex" "\\KeyWord{type instance}",Space,RawInline "latex" "\\In{type instance}",Str ".",Space,Str "\1042",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1072\1093",Space,Str "\1084\1099",Space,Str "\1089\1083\1086\1074\1085\1086",Space,Str "\1087\1086\1083\1100\1079\1091\1077\1084\1089\1103",Space,Str "\1089\1086\1087\1086\1089\1090\1072\1074\1083\1077\1085\1080\1077\1084",Space,Str "\1089",Space,Str "\1086\1073\1088\1072\1079\1094\1086\1084",Str ",",Space,Str "\1085\1086",Space,Str "\1085\1072",Space,Str "\1101\1090\1086\1090",Space,Str "\1088\1072\1079",Space,Str "\1085\1072",Space,Str "\1090\1080\1087\1072\1093",Str ".",Space,Str "\1055\1077\1088\1074\1086\1077",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ntype instance Add a Zero        = a\n\\end{code}\n"
,Para [Str "\1043\1086\1074\1086\1088\1080\1090",Space,Str "\1086",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1077\1089\1083\1080",Space,Str "\1074\1090\1086\1088\1086\1081",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090",Space,Str "\1080\1084\1077\1077\1090",Space,Str "\1090\1080\1087",Space,Str "\1085\1086\1083\1100",Str ",",Space,Str "\1090\1086",Space,Str "\1084\1099",Space,Str "\1074\1077\1088\1085\1105\1084",Space,Str "\1087\1077\1088\1074\1099\1081",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090",Str ".",Space,Str "\1057\1086\1074\1089\1077\1084",Space,Str "\1082\1072\1082",Space,Str "\1074",Space,Str "\1086\1073\1099\1095\1085\1086\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1086\1085\1072\1083\1100\1085\1086\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1080",Space,Str "\1089\1083\1086\1078\1077\1085\1080\1103",Space,Str "\1076\1083\1103",Space,Str "\1085\1072\1090\1091\1088\1072\1083\1100\1085\1099\1093",Space,Str "\1095\1080\1089\1077\1083",Space,Str "\1055\1077\1072\1085\1086",Str ".",Space,Str "\1072",Space,Str "\1074\1086",Space,Str "\1074\1090\1086\1088\1086\1084",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1080",Space,Str "\1084\1099",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1077\1084",Space,Str "\1088\1077\1082\1091\1088\1089\1080\1074\1085\1086\1077",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ntype instance Add a (Succ b)    = Succ (Add a b)\n\\end{code}\n"
,Para [Str "\1058\1086\1095\1085\1086",Space,Str "\1090\1072\1082\1078\1077",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1080",Space,Str "\1091\1084\1085\1086\1078\1077\1085\1080\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ntype family Mul a b :: *\n\ntype instance Mul a Zero        = Zero\ntype instance Mul a (Succ b)    = Add a (Mul a b)\n\\end{code}\n"
,Para [Str "\1055\1088\1080",Space,Str "\1101\1090\1086\1084",Space,Str "\1085\1072\1084",Space,Str "\1087\1088\1080\1076\1105\1090\1089\1103",Space,Str "\1087\1086\1076\1082\1083\1102\1095\1080\1090\1100",Space,Str "\1077\1097\1105",Space,Str "\1086\1076\1085\1086",Space,Str "\1088\1072\1089\1096\1080\1088\1077\1085\1080\1077",Space,RawInline "latex" "\\In{UndecidableInstances}",Str ",",Space,Str "\1087\1086\1089\1082\1086\1083\1100\1082\1091",Space,Str "\1074\1086",Space,Str "\1074\1090\1086\1088\1086\1084",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1080",Space,Str "\1084\1099",Space,Str "\1087\1086\1076\1089\1090\1072\1074\1080\1083\1080",Space,Str "\1086\1076\1085\1086",Space,Str "\1089\1077\1084\1077\1081\1089\1090\1074\1086",Space,Str "\1090\1080\1087\1086\1074",Space,Str "\1074",Space,Str "\1076\1088\1091\1075\1086\1077",Str ".",Space,Str "\1069\1090\1086\1090",Space,Str "\1092\1083\1072\1075",Space,Str "\1095\1072\1089\1090\1086",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1091\1077\1090\1089\1103",Space,Str "\1074",Space,Str "\1089\1086\1095\1077\1090\1072\1085\1080\1080",Space,Str "\1089",Space,Str "\1088\1072\1089\1096\1080\1088\1077\1085\1080\1077\1084",Space,RawInline "latex" "\\In{TypeFamilies}",Str ".",Space,Str "\1057\1077\1084\1077\1081\1089\1090\1074\1072",Space,Str "\1090\1080\1087\1086\1074",Space,Str "\1092\1072\1082\1090\1080\1095\1077\1089\1082\1080",Space,Str "\1087\1086\1079\1074\1086\1083\1103\1102\1090",Space,Str "\1085\1072\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1085\1072",Space,Str "\1090\1080\1087\1072\1093",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1074\1077\1076\1105\1090",Space,Str "\1082",Space,Str "\1090\1086\1084\1091",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084",Space,Str "\1074\1099\1074\1086\1076\1072",Space,Str "\1090\1080\1087\1086\1074",Space,Str "\1089\1090\1072\1085\1086\1074\1080\1090\1089\1103",Space,Str "\1085\1077\1086\1087\1088\1077\1076\1077\1083\1105\1085\1085\1099\1084",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1090\1080\1087\1099",Space,Str "\1087\1088\1072\1074\1080\1083\1100\1085\1099\1077",Str ",",Space,Str "\1090\1086",Space,Str "\1082\1086\1084\1087\1080\1083\1103\1090\1086\1088",Space,Str "\1089\1084\1086\1078\1077\1090",Space,Str "\1101\1090\1086",Space,Str "\1091\1089\1090\1072\1085\1086\1074\1080\1090\1100",Str ",",Space,Str "\1085\1086",Space,Str "\1077\1089\1083\1080",Space,Str "\1086\1085\1080",Space,Str "\1086\1082\1072\1078\1091\1090\1089\1103",Space,Str "\1085\1077\1087\1088\1072\1074\1080\1083\1100\1085\1099\1084\1080",Str ",",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1074\1086\1079\1085\1080\1082\1085\1091\1090\1100",Space,Str "\1090\1072\1082\1072\1103",Space,Str "\1089\1080\1090\1091\1072\1094\1080\1103",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1082\1086\1084\1087\1080\1083\1103\1090\1086\1088",Space,Str "\1079\1072\1094\1080\1082\1083\1080\1090\1089\1103",Space,Str "\1080",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1073\1077\1089\1082\1086\1085\1077\1095\1085\1086",Space,Str "\1076\1086\1083\1075\1086",Space,Str "\1080\1089\1082\1072\1090\1100",Space,Str "\1089\1086\1086\1090\1074\1077\1090\1089\1090\1074\1080\1077",Space,Str "\1086\1076\1085\1086\1075\1086",Space,Str "\1090\1080\1087\1072",Space,Str "\1076\1088\1091\1075\1086\1084\1091",Str ".",Space,Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1087\1088\1086\1074\1077\1088\1080\1084",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1099",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1084\1099",Space,Str "\1089\1086\1079\1076\1072\1076\1080\1084",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1099\1081",Space,Str "\1082\1083\1072\1089\1089",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1087\1077\1088\1077\1074\1086\1076\1080\1090\1100",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str "-",Str "\1090\1080\1087\1099",Space,Str "\1074",Space,Str "\1086\1073\1099\1095\1085\1099\1077",Space,Str "\1094\1077\1083\1086\1095\1080\1089\1083\1077\1085\1085\1099\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nclass Nat a where\n    toInt :: a -> Int\n\ninstance Nat Zero where\n    toInt = const 0\n\ninstance Nat a => Nat (Succ a) where\n    toInt x = 1 + toInt (proxy x)\n        \nproxy :: f a -> a\nproxy = undefined\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1083\1080",Space,Str "\1076\1083\1103",Space,Str "\1082\1072\1078\1076\1086\1075\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str "-",Str "\1090\1080\1087\1072",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Nat}",Str ",",Space,Str "\1074",Space,Str "\1082\1086\1090\1086\1088\1086\1084",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1087\1077\1088\1077\1074\1086\1076\1080\1090\1100",Space,Str "\1090\1080\1087\1099",Space,Str "\1074",Space,Str "\1095\1080\1089\1083\1072",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{proxy}",Space,Str "\1087\1086\1079\1074\1086\1083\1103\1077\1090",Space,Str "\1085\1072\1084",Space,Str "\1080\1079\1074\1083\1077\1095\1100",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1080\1079",Space,Str "\1090\1080\1087\1072",Str "-",Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088\1072",Space,RawInline "latex" "\\In{Succ}",Str ",",Space,Str "\1090\1072\1082",Space,Str "\1084\1099",Space,Str "\1087\1086\1103\1089\1085\1103\1077\1084",Space,Str "\1082\1086\1084\1087\1080\1083\1103\1090\1086\1088\1091",Space,Str "\1090\1080\1087",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str ".",Space,Str "\1055\1088\1080",Space,Str "\1101\1090\1086\1084",Space,Str "\1084\1099",Space,Str "\1085\1080\1075\1076\1077",Space,Str "\1085\1077",Space,Str "\1087\1086\1083\1100\1079\1091\1077\1084\1089\1103",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103\1084\1080",Space,Str "\1090\1080\1087\1086\1074",Space,RawInline "latex" "\\In{Zero}",Space,Str "\1080",Space,RawInline "latex" "\\In{Succ}",Str ",",Space,Str "\1074\1077\1076\1100",Space,Str "\1091",Space,Str "\1101\1090\1080\1093",Space,Str "\1090\1080\1087\1086\1074",Space,Str "\1085\1077\1090",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Str ".",Space,Str "\1055\1086\1101\1090\1086\1084\1091",Space,Str "\1074",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1077",Space,Str "\1076\1083\1103",Space,RawInline "latex" "\\In{Zero}",Space,Str "\1084\1099",Space,Str "\1087\1086\1083\1100\1079\1091\1077\1084\1089\1103",Space,Str "\1087\1086\1089\1090\1086\1103\1085\1085\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1077\1081",Space,RawInline "latex" "\\In{const}",Str "."]
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1087\1086\1083\1091\1095\1080\1083\1086\1089\1100",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nPrelude> :l Nat\n*Nat> let x = undefined :: (Mul (Succ (Succ (Succ Zero))) (Succ (Succ Zero)))\n*Nat> toInt x\n6\n\\end{code}\n"
,Para [Str "\1042\1080\1076\1085\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Nat}",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1080\1079\1074\1083\1077\1095\1100",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Str ",",Space,Str "\1079\1072\1082\1086\1076\1080\1088\1086\1074\1072\1085\1085\1086\1077",Space,Str "\1074",Space,Str "\1090\1080\1087\1077",Str ".",Space,Str "\1047\1072\1095\1077\1084",Space,Str "\1085\1072\1084",Space,Str "\1101\1090\1080",Space,Str "\1089\1090\1088\1072\1085\1085\1099\1077",Space,Str "\1090\1080\1087\1099",Str "-",Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str "?",Space,Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100",Space,Str "\1080\1093",Space,Str "\1074",Space,Str "\1076\1074\1091\1093",Space,Str "\1089\1083\1091\1095\1072\1103\1093",Str ".",Space,Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1082\1086\1076\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1074",Space,Str "\1090\1080\1087\1077",Space,Str "\1080\1083\1080",Space,Str "\1087\1088\1086\1074\1086\1076\1080\1090\1100",Space,Str "\1073\1086\1083\1077\1077",Space,Str "\1090\1086\1085\1082\1091\1102",Space,Str "\1087\1088\1086\1074\1077\1088\1082\1091",Space,Str "\1090\1080\1087\1086\1074",Str "."]
,Para [Str "\1055\1086\1084\1085\1080\1090\1077",Space,Str "\1082\1086\1075\1076\1072",Str "-",Str "\1090\1086",Space,Str "\1084\1099",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1083\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1076\1083\1103",Space,Str "\1095\1080\1089\1083\1077\1085\1085\1086\1075\1086",Space,Str "\1080\1085\1090\1077\1075\1088\1080\1088\1086\1074\1072\1085\1080\1103",Str ".",Space,Str "\1058\1072\1084",Space,Str "\1090\1086\1095\1085\1086\1089\1090\1100",Space,Str "\1084\1077\1090\1086\1076\1072",Space,Str "\1073\1099\1083\1072",Space,Str "\1078\1105\1089\1090\1082\1086",Space,Str "\1079\1072\1076\1072\1085\1072",Space,Str "\1074",Space,Str "\1090\1077\1082\1089\1090\1077",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1099",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n\ndt :: Fractional a => a\ndt = 1e-3\n\n-- \1084\1077\1090\1086\1076 \1069\1081\1083\1077\1088\1072\nint :: Fractional a => a -> [a] -> [a]\nint x0 ~(f:fs) = x0 : int (x0 + dt * f) fs\n\\end{code}\n"
,Para [Str "\1042",Space,Str "\1101\1090\1086\1084",Space,Str "\1087\1088\1080\1084\1077\1088\1077",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1089\1086\1079\1076\1072\1090\1100",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1099\1081",Space,Str "\1090\1080\1087",Space,Str "\1087\1086\1090\1086\1082\1086\1074",Str ",",Space,Str "\1091",Space,Str "\1082\1086\1090\1086\1088\1099\1093",Space,Str "\1096\1072\1075",Space,Str "\1076\1080\1089\1082\1088\1077\1090\1080\1079\1072\1094\1080\1080",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1079\1072\1082\1086\1076\1080\1088\1086\1074\1072\1085",Space,Str "\1074",Space,Str "\1090\1080\1087\1077",Str "."]
,RawBlock "latex" "\n\\begin{code}\ndata Stream n a = a :& Stream n a\n\\end{code}\n"
,Para [Str "\1055\1072\1088\1072\1084\1077\1090\1088",Space,RawInline "latex" "\\In{n}",Space,Str "\1082\1086\1076\1080\1088\1091\1077\1090",Space,Str "\1090\1086\1095\1085\1086\1089\1090\1100",Str ".",Space,Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1080\1079\1074\1083\1077\1082\1072\1090\1100",Space,Str "\1090\1086\1095\1085\1086\1089\1090\1100",Space,Str "\1080\1079",Space,Str "\1090\1080\1087\1072",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndt :: (Nat n, Fractional a) => Stream n a -> a\ndt xs = 1 / (fromIntegral $ toInt $ proxy xs)\n    where proxy :: Stream n a -> n\n          proxy = undefined\n\nint :: (Nat n, Fractional a) => a -> Stream n a -> Stream n a\nint x0 ~(f:&fs) = x0 :& int (x0 + dt fs * f) fs\n\\end{code}\n"
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1082\1072\1082",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1089\1076\1077\1083\1072\1090\1100",Space,Str "\1087\1088\1086\1074\1077\1088\1082\1091",Space,Str "\1090\1080\1087\1086\1074",Space,Str "\1073\1086\1083\1077\1077",Space,Str "\1090\1097\1072\1090\1077\1083\1100\1085\1086\1081",Str ".",Space,Str "\1055\1088\1077\1076\1089\1090\1072\1074\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1077\1089\1090\1100",Space,Str "\1090\1080\1087",Space,Str "\1084\1072\1090\1088\1080\1094",Str ".",Space,Str "\1048\1079\1074\1077\1089\1090\1085\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1089\1083\1086\1078\1077\1085\1080\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1086",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1076\1083\1103",Space,Str "\1084\1072\1090\1088\1080\1094",Space,Str "\1086\1076\1080\1085\1072\1082\1086\1074\1086\1081",Space,Str "\1076\1083\1080\1085\1099",Str ",",Space,Str "\1072",Space,Str "\1076\1083\1103",Space,Str "\1091\1084\1085\1086\1078\1077\1085\1080\1103",Space,Str "\1084\1072\1090\1088\1080\1094",Space,Str "\1095\1080\1089\1083\1086",Space,Str "\1089\1090\1086\1083\1073\1094\1086\1074",Space,Str "\1086\1076\1085\1086\1081",Space,Str "\1084\1072\1090\1088\1080\1094\1099",Space,Str "\1076\1086\1083\1078\1085\1086",Space,Str "\1089\1086\1074\1087\1072\1076\1072\1090\1100",Space,Str "\1089",Space,Str "\1095\1080\1089\1083\1086\1084",Space,Str "\1082\1086\1083\1086\1085\1086\1082",Space,Str "\1076\1088\1091\1075\1086\1081",Space,Str "\1084\1072\1090\1088\1080\1094\1099",Str ".",Space,Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1086\1090\1088\1072\1079\1080\1090\1100",Space,Str "\1074\1089\1077",Space,Str "\1101\1090\1080",Space,Str "\1079\1072\1074\1080\1089\1080\1084\1086\1089\1090\1080",Space,Str "\1074",Space,Str "\1094\1077\1083\1086\1095\1080\1089\1083\1077\1085\1085\1099\1093",Space,Str "\1090\1080\1087\1072\1093",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndata Mat n m a = ...\n\ninstance Num a => AdditiveGroup (Mat n m a) where\n    a ^+^ b     = ...\n    zeroV       = ...\n    negateV a   = ...\n\nmul :: Num a => Mat n m a -> Mat m k a -> Mat n k a\n\\end{code}\n"
,Para [Str "\1055\1088\1080",Space,Str "\1090\1072\1082\1080\1093",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1103\1093",Space,Str "\1084\1099",Space,Str "\1085\1077",Space,Str "\1089\1084\1086\1078\1077\1084",Space,Str "\1089\1083\1086\1078\1080\1090\1100",Space,Str "\1084\1072\1090\1088\1080\1094\1099",Space,Str "\1088\1072\1079\1085\1099\1093",Space,Str "\1088\1072\1079\1084\1077\1088\1086\1074",Str ".",Space,Str "\1055\1088\1080\1095\1105\1084",Space,Str "\1086\1096\1080\1073\1082\1072",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1072",Space,Str "\1076\1086",Space,Str "\1074\1099\1087\1086\1083\1085\1077\1085\1080\1103",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1099",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1086\1089\1074\1086\1073\1086\1078\1076\1072\1077\1090",Space,Str "\1086\1090",Space,Str "\1087\1088\1086\1074\1077\1088\1082\1080",Space,Str "\1075\1088\1072\1085\1080\1094",Space,Str "\1074\1085\1091\1090\1088\1080",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084\1072",Space,Str "\1091\1084\1085\1086\1078\1077\1085\1080\1103",Space,Str "\1084\1072\1090\1088\1080\1094",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084",Space,Str "\1079\1072\1087\1091\1089\1090\1080\1083\1089\1103",Str ",",Space,Str "\1090\1086",Space,Str "\1084\1099",Space,Str "\1079\1085\1072\1077\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1088\1072\1079\1084\1077\1088\1099",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1074",Space,Str "\1089\1086\1086\1090\1074\1077\1090\1089\1090\1074\1091\1102\1090",Str "."]
,Para [Str "\1057\1082\1086\1088\1086",Space,Str "\1074",Space,Str "ghc",Space,Str "\1087\1086\1103\1074\1080\1090\1089\1103",Space,Str "\1087\1086\1076\1076\1077\1088\1078\1082\1072",Space,Str "\1095\1080\1089\1077\1083",Space,Str "\1085\1072",Space,Str "\1091\1088\1086\1074\1085\1077",Space,Str "\1090\1080\1087\1086\1074",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1086\1077",Space,Str "\1088\1072\1089\1096\1080\1088\1077\1085\1080\1077",Space,RawInline "latex" "\\In{TypeLevelNats}",Str ",",Space,Str "\1087\1088\1080",Space,Str "\1074\1082\1083\1102\1095\1077\1085\1080\1080",Space,Str "\1082\1086\1090\1086\1088\1086\1075\1086",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100\1089\1103",Space,Str "\1095\1080\1089\1083\1077\1085\1085\1099\1084\1080",Space,Str "\1083\1080\1090\1077\1088\1072\1083\1072\1084\1080",Space,Str "\1074",Space,Str "\1090\1080\1087\1072\1093",Str ",",Space,Str "\1090\1072\1082\1078\1077",Space,Str "\1073\1091\1076\1091\1090",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1099",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Str "-",Str "\1089\1077\1084\1077\1081\1089\1090\1074\1072",Space,Str "\1090\1080\1087\1086\1074",Space,Str "\1085\1072",Space,Str "\1095\1080\1089\1083\1077\1085\1085\1099\1093",Space,Str "\1090\1080\1087\1072\1093",Space,Str "\1089",Space,Str "\1087\1088\1080\1074\1099\1095\1085\1099\1084\1080",Space,Str "\1080\1084\1077\1085\1072\1084\1080",Space,RawInline "latex" "\\In{+}",Str ",",Space,RawInline "latex" "\\In{*}",Str "."]
,Header 3 [Str "\1050\1083\1072\1089\1089\1099",Space,Str "\1089",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1080\1084\1080",Space,Str "\1090\1080\1087\1072\1084\1080"]
,Para [Str "\1056\1072\1089\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1087\1086\1083\1077\1079\1085\1099\1093",Space,Str "\1088\1072\1089\1096\1080\1088\1077\1085\1080\1081",Str ",",Space,Str "\1086\1090\1085\1086\1089\1103\1097\1080\1093\1089\1103",Space,Str "\1082",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1102",Space,Str "\1082\1083\1072\1089\1089\1086\1074",Space,Str "\1080",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1086\1074",Space,Str "\1082\1083\1072\1089\1089\1086\1074",Str ".",Space,Str "\1056\1072\1089\1096\1080\1088\1077\1085\1080\1077",Space,RawInline "latex" "\\In{MultiParamTypeClasses}",Space,Str "\1087\1086\1079\1074\1086\1083\1103\1077\1090",Space,Str "\1086\1073\1098\1103\1074\1083\1103\1090\1100",Space,Str "\1082\1083\1072\1089\1089\1099",Space,Str "\1089",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1080\1084\1080",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1072\1084\1080",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1074\1079\1075\1083\1103\1085\1080\1090\1077",Space,Str "\1085\1072",Space,Str "\1090\1072\1082\1086\1081",Space,Str "\1082\1083\1072\1089\1089",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nclass Iso a b where\n    to      :: a -> b\n    from    :: b -> a\n\\end{code}\n"
,Para [Str "\1058\1072\1082",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1080\1079\1086\1084\1086\1088\1092\1080\1079\1084",Space,Str "\1084\1077\1078\1076\1091",Space,Str "\1090\1080\1087\1072\1084\1080",Space,RawInline "latex" "\\In{a}",Space,Str "\1080",Space,RawInline "latex" "\\In{b}"]
,Header 3 [Str "\1069\1082\1079\1077\1084\1087\1083\1103\1088\1099",Space,Str "\1082\1083\1072\1089\1089\1086\1074",Space,Str "\1076\1083\1103",Space,Str "\1089\1080\1085\1086\1085\1080\1084\1086\1074"]
,Para [Str "\1056\1072\1089\1096\1080\1088\1077\1085\1080\1077",Space,RawInline "latex" "\\In{TypeSynonymInstances}",Space,Str "\1087\1086\1079\1074\1086\1083\1103\1077\1090",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1090\1100",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1099",Space,Str "\1076\1083\1103",Space,Str "\1089\1080\1085\1086\1085\1080\1084\1086\1074",Space,Str "\1090\1080\1087\1086\1074",Str ".",Space,Str "\1052\1099",Space,Str "\1091\1078\1077",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1083\1080\1089\1100",Space,Str "\1101\1090\1080\1084",Space,Str "\1088\1072\1089\1096\1080\1088\1077\1085\1080\1077\1084",Str ",",Space,Str "\1082\1086\1075\1076\1072",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1083\1080",Space,Str "\1088\1077\1082\1091\1088\1089\1080\1074\1085\1099\1077",Space,Str "\1090\1080\1087\1099",Space,Str "\1095\1077\1088\1077\1079",Space,Str "\1090\1080\1087",Space,RawInline "latex" "\\In{Fix}",Str ",",Space,Str "\1090\1072\1084",Space,Str "\1085\1072\1084",Space,Str "\1085\1091\1078\1085\1086",Space,Str "\1073\1099\1083\1086",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088",Space,RawInline "latex" "\\In{Num}",Space,Str "\1076\1083\1103",Space,Str "\1089\1080\1085\1086\1085\1080\1084\1072",Space,RawInline "latex" "\\In{Nat}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ntype Nat = Fix N\n\ninstance Num Nat where\n\\end{code}\n"
,Para [Str "\1042",Space,Str "\1088\1072\1084\1082\1072\1093",Space,Str "\1089\1090\1072\1085\1076\1072\1088\1090\1072",Space,Str "\1074\1089\1077",Space,Str "\1089\1091\1087\1077\1088\1082\1083\1072\1089\1089\1099",Space,Str "\1076\1086\1083\1078\1085\1099",Space,Str "\1073\1099\1090\1100",Space,Str "\1087\1088\1086\1089\1090\1099\1084\1080",Str ".",Space,Str "\1042\1089\1077",Space,Str "\1086\1085\1080",Space,Str "\1080\1084\1077\1102\1090",Space,Str "\1074\1080\1076",Space,RawInline "latex" "\\In{T a}",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1084\1099",Space,Str "\1093\1086\1090\1080\1084",Space,Str "\1093\1086\1090\1080\1084",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100",Space,Str "\1089\1091\1087\1077\1088\1082\1083\1072\1089\1089\1099",Space,Str "\1089",Space,Str "\1089\1086\1089\1090\1072\1074\1085\1099\1084\1080",Space,Str "\1090\1080\1087\1072\1084\1080",Str ",",Space,Str "\1085\1072\1084",Space,Str "\1087\1088\1080\1076\1105\1090\1089\1103",Space,Str "\1087\1086\1076\1082\1083\1102\1095\1080\1090\1100",Space,Str "\1088\1072\1089\1096\1080\1088\1077\1085\1080\1077",Space,RawInline "latex" "\\In{FlexibleContexts}",Str ".",Space,Str "\1069\1090\1080\1084",Space,Str "\1088\1072\1089\1096\1080\1088\1077\1085\1080\1077\1084",Space,Str "\1084\1099",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1083\1080\1089\1100",Str ",",Space,Str "\1082\1086\1075\1076\1072",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1083\1080",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088",Space,RawInline "latex" "\\In{Show}",Space,Str "\1076\1083\1103",Space,RawInline "latex" "\\In{Fix}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ninstance Show (f (Fix f)) => Show (Fix f) where\n    show x = \"(\" ++ show (unFix x) ++ \")\"\n\\end{code}\n"
,Header 3 [Str "\1060\1091\1085\1082\1094\1080\1086\1085\1072\1083\1100\1085\1099\1077",Space,Str "\1079\1072\1074\1080\1089\1080\1084\1086\1089\1090\1080"]
,Para [Str "\1050\1083\1072\1089\1089",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1087\1088\1077\1076\1089\1090\1072\1074\1080\1090\1100",Space,Str "\1082\1072\1082",Space,Str "\1084\1085\1086\1078\1077\1089\1090\1074\1086",Space,Str "\1090\1080\1087\1086\1074",Str ",",Space,Str "\1076\1083\1103",Space,Str "\1082\1086\1090\1086\1088\1099\1093",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1099",Space,Str "\1076\1072\1085\1085\1099\1077",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Str ".",Space,Str "\1057",Space,Str "\1087\1086\1103\1074\1083\1077\1085\1080\1077\1084",Space,Str "\1088\1072\1089\1096\1080\1088\1077\1085\1080\1103",Space,RawInline "latex" "\\In{MultiParamTypeClasses}",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1090\1100",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Space,Str "\1082\1083\1072\1089\1089\1072",Space,Str "\1076\1083\1103",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1080\1093",Space,Str "\1090\1080\1087\1086\1074",Str ".",Space,Str "\1058\1072\1082",Space,Str "\1085\1072\1096\1077",Space,Str "\1084\1085\1086\1078\1077\1089\1090\1074\1086",Space,Str "\1082\1083\1072\1089\1089\1086\1074",Space,Str "\1087\1088\1077\1074\1088\1072\1097\1072\1077\1090\1089\1103",Space,Str "\1074",Space,Str "\1086\1090\1085\1086\1096\1077\1085\1080\1077",Str ".",Space,Str "\1053\1072\1096",Space,Str "\1082\1083\1072\1089\1089",Space,Str "\1089\1074\1103\1079\1099\1074\1072\1077\1090",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1090\1080\1087\1086\1074",Space,Str "\1084\1077\1078\1076\1091",Space,Str "\1089\1086\1073\1086\1081",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1080\1079",Space,Str "\1086\1076\1085\1086\1081",Space,Str "\1082\1086\1084\1087\1086\1085\1077\1085\1090\1099",Space,Str "\1086\1090\1085\1086\1096\1077\1085\1080\1103",Space,Str "\1086\1076\1085\1086\1079\1085\1072\1095\1085\1086",Space,Str "\1089\1083\1077\1076\1091\1077\1090",Space,Str "\1076\1088\1091\1075\1072\1103",Str ",",Space,Str "\1090\1072\1082\1086\1077",Space,Str "\1086\1090\1085\1086\1096\1077\1085\1080\1077",Space,Str "\1087\1088\1080\1085\1103\1090\1086",Space,Str "\1085\1072\1079\1099\1074\1072\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1077\1081",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1086\1073\1099\1095\1085\1091\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1086\1076\1085\1086\1075\1086",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1072",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1087\1088\1077\1076\1089\1090\1072\1074\1080\1090\1100",Space,Str "\1082\1072\1082",Space,Str "\1084\1085\1086\1078\1077\1089\1090\1074\1086",Space,Str "\1087\1072\1088",Space,RawInline "latex" "\\In{(x, f x)}",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1090\1086\1075\1086",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1084\1085\1086\1078\1077\1089\1090\1074\1086",Space,Str "\1090\1072\1082\1080\1093",Space,Str "\1087\1072\1088",Space,Str "\1073\1099\1083\1086",Space,Str "\1092\1091\1085\1082\1094\1080\1077\1081",Space,Str "\1085\1077\1086\1073\1093\1086\1076\1080\1084\1086",Str ",",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1074\1099\1087\1086\1083\1085\1103\1083\1086\1089\1100",Space,Str "\1089\1074\1086\1081\1089\1090\1074\1086",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nforall x, y.  x == y => f x == f y \n\\end{code}\n"
,Para [Str "\1044\1083\1103",Space,Str "\1086\1076\1080\1085\1072\1082\1086\1074\1099\1093",Space,Str "\1074\1093\1086\1076\1086\1074",Space,Str "\1084\1099",Space,Str "\1087\1086\1083\1091\1095\1072\1077\1084",Space,Str "\1086\1076\1080\1085\1072\1082\1086\1074\1099\1077",Space,Str "\1074\1099\1093\1086\1076\1099",Str ".",Space,Str "\1057",Space,Str "\1092\1091\1085\1082\1094\1080\1086\1085\1072\1083\1100\1085\1099\1084\1080",Space,Str "\1079\1072\1074\1080\1089\1080\1084\1086\1089\1090\1103\1084\1080",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1074\1074\1077\1089\1090\1080",Space,Str "\1090\1072\1082\1086\1077",Space,Str "\1086\1075\1088\1072\1085\1080\1095\1077\1085\1080\1077",Space,Str "\1085\1072",Space,Str "\1082\1083\1072\1089\1089\1099",Space,Str "\1089",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1080\1084\1080",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1072\1084\1080",Str ".",Space,Str "\1056\1072\1089\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1087\1088\1072\1082\1090\1080\1095\1077\1089\1082\1080\1081",Space,Str "\1087\1088\1080\1084\1077\1088",Str ".",Space,Str "\1041\1080\1073\1083\1080\1086\1090\1077\1082\1072",Space,RawInline "latex" "\\In{Boolean}",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1077\1090",Space,Str "\1086\1073\1086\1073\1097\1105\1085\1085\1099\1077",Space,Str "\1083\1086\1075\1080\1095\1077\1089\1082\1080\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str ","]
,RawBlock "latex" "\n\\begin{code}\nclass Boolean b where\n    true, false :: b\n    notB        :: b -> b\n    (&&*), (||*) :: b -> b -> b\n\\end{code}\n"
,Para [Str "\1051\1086\1075\1080\1095\1077\1089\1082\1080\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1099",Space,Str "\1074",Space,Str "\1090\1077\1088\1084\1080\1085\1072\1093",Space,Str "\1087\1088\1086\1089\1090\1077\1081\1096\1080\1093",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1081",Str ",",Space,Str "\1090\1077\1087\1077\1088\1100",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1086\1073\1086\1073\1097\1080\1090\1100",Space,Str "\1089\1074\1103\1079\1082\1091",Space,RawInline "latex" "\\In{if-then-else}",Space,Str "\1080",Space,Str "\1082\1083\1072\1089\1089\1099",Space,RawInline "latex" "\\In{Eq}",Space,Str "\1080",Space,RawInline "latex" "\\In{Ord}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nclass Boolean bool => IfB bool a | a -> bool where\n    ifB :: bool -> a -> a -> a\n\nclass Boolean bool => EqB bool a | a -> bool where\n    (==*), (/=*) :: a -> a -> bool\n\nclass Boolean bool => OrdB bool a | a -> bool where\n    (<*), (>=*), (>*), (<=*) :: a -> a -> bool\n\\end{code}\n"
,Para [Str "\1050\1072\1078\1076\1099\1081",Space,Str "\1080\1079",Space,Str "\1082\1083\1072\1089\1089\1086\1074",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1105\1085",Space,Str "\1085\1072",Space,Str "\1076\1074\1091\1093",Space,Str "\1090\1080\1087\1072\1093",Str ".",Space,Str "\1054\1076\1080\1085",Space,Str "\1080\1079",Space,Str "\1085\1080\1093",Space,Str "\1080\1075\1088\1072\1077\1090",Space,Str "\1088\1086\1083\1100",Space,Str "\1086\1073\1099\1095\1085\1099\1093",Space,Str "\1083\1086\1075\1080\1095\1077\1089\1082\1080\1093",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Str ",",Space,Str "\1072",Space,Str "\1074\1090\1086\1088\1086\1081",Space,Str "\1090\1080\1087",Str "~",Str "\8211",Space,Str "\1101\1090\1086",Space,Str "\1090\1072\1082\1086\1081",Space,Str "\1078\1077",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088",Space,Str "\1082\1072\1082",Space,Str "\1080",Space,Str "\1074",Space,Str "\1086\1073\1099\1095\1085\1099\1093",Space,Str "\1082\1083\1072\1089\1089\1072\1093",Space,Str "\1080\1079",Space,Str "\1084\1086\1076\1091\1083\1103",Space,RawInline "latex" "\\In{Prelude}",Str ".",Space,Str "\1042",Space,Str "\1101\1090\1080\1093",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1103\1093",Space,Str "\1085\1072\1084",Space,Str "\1074\1089\1090\1088\1077\1090\1080\1083\1072\1089\1100",Space,Str "\1085\1086\1074\1072\1103",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1094\1080\1103",Str ":",Space,Str "\1079\1072",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1099\1084\1080",Space,Str "\1082\1083\1072\1089\1089\1072",Space,Str "\1095\1077\1088\1077\1079",Space,Str "\1088\1072\1079\1076\1077\1083\1080\1090\1077\1083\1100",Space,Quoted DoubleQuote [Str "\1080\1083\1080"],Space,Str "\1089\1083\1077\1076\1091\1077\1090",Space,Str "\1095\1090\1086",Str "-",Str "\1090\1086",Space,Str "\1087\1086\1093\1086\1078\1077\1077",Space,Str "\1085\1072",Space,Str "\1090\1080\1087",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ".",Space,Str "\1042",Space,Str "\1101\1090\1086\1084",Space,Str "\1090\1080\1087\1077",Space,Str "\1084\1099",Space,Str "\1075\1086\1074\1086\1088\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1080\1079",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{a}",Space,Str "\1089\1083\1077\1076\1091\1077\1090",Space,Str "\1090\1080\1087",Space,RawInline "latex" "\\In{bool}",Str ",",Space,Str "\1080\1083\1080",Space,Str "\1090\1080\1087",Space,RawInline "latex" "\\In{a}",Space,Str "\1086\1076\1085\1086\1079\1085\1072\1095\1085\1086",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1077\1090",Space,Str "\1090\1080\1087",Space,RawInline "latex" "\\In{bool}",Str ".",Space,Str "\1069\1090\1072",Space,Str "\1080\1085\1092\1086\1088\1084\1072\1094\1080\1103",Space,Str "\1087\1086\1084\1086\1075\1072\1077\1090",Space,Str "\1082\1086\1084\1087\1080\1083\1103\1090\1086\1088\1091",Space,Str "\1074\1099\1074\1086\1076\1080\1090\1100",Space,Str "\1090\1080\1087\1099",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1086\1085",Space,Str "\1074\1089\1090\1088\1077\1090\1080\1090",Space,Str "\1074",Space,Str "\1090\1077\1082\1089\1090\1077",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1077",Space,RawInline "latex" "\\In{v = a <* b}",Space,Str "\1080",Space,Str "\1090\1080\1087",Space,Str "\1086\1076\1085\1086\1075\1086",Space,Str "\1080\1079",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1074",Space,RawInline "latex" "\\In{a}",Space,Str "\1080\1083\1080",Space,RawInline "latex" "\\In{b}",Space,Str "\1080\1079\1074\1077\1089\1090\1077\1085",Str ",",Space,Str "\1090\1086",Space,Str "\1090\1080\1087",Space,RawInline "latex" "\\In{v}",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1105\1085",Space,Str "\1087\1086",Space,Str "\1079\1072\1074\1080\1089\1080\1084\1086\1089\1090\1080",Str "."]
,Para [Str "\1047\1072\1095\1077\1084",Space,Str "\1085\1072\1084",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1087\1086\1085\1072\1076\1086\1073\1080\1090\1100\1089\1103",Space,Str "\1090\1072\1082\1072\1103",Space,Str "\1089\1080\1089\1090\1077\1084\1072",Space,Str "\1082\1083\1072\1089\1089\1086\1074",Str "?",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Str ",",Space,Str "\1089",Space,Str "\1085\1077\1081",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088",Space,RawInline "latex" "\\In{Boolean}",Space,Str "\1076\1083\1103",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090\1086\1074",Space,Str "\1080\1083\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1074\1080\1076\1072",Space,RawInline "latex" "\\In{a -> Bool}",Space,Str "\1080",Space,Str "\1079\1072\1090\1077\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1090\1088\1080",Space,Str "\1086\1089\1090\1072\1083\1100\1085\1099\1093",Space,Str "\1082\1083\1072\1089\1089\1072",Space,Str "\1076\1083\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1074\1080\1076\1072",Space,RawInline "latex" "\\In{a -> b}",Str ".",Space,Str "\1052\1099",Space,Str "\1089\1088\1072\1074\1085\1080\1074\1072\1077\1084",Space,Str "\1085\1077",Space,Str "\1086\1090\1076\1077\1083\1100\1085\1099\1077",Space,Str "\1083\1086\1075\1080\1095\1077\1089\1082\1080\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str ",",Space,Str "\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1102\1090",Space,Str "\1083\1086\1075\1080\1095\1077\1089\1082\1080\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str ".",Space,Str "\1058\1072\1082",Space,Str "\1074",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1080",Space,RawInline "latex" "\\In{ifB c t e}",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{c}",Space,Str "\1080\1075\1088\1072\1077\1090",Space,Str "\1088\1086\1083\1100",Space,Quoted DoubleQuote [Str "\1084\1072\1089\1082\1080"],Str ",",Space,Str "\1077\1089\1083\1080",Space,Str "\1085\1072",Space,Str "\1076\1072\1085\1085\1086\1084",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{c}",Space,Str "\1074\1077\1088\1085\1090",Space,Str "\1080\1089\1090\1080\1085\1091",Str ",",Space,Str "\1090\1086",Space,Str "\1084\1099",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1091\1077\1084\1089\1103",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{t}",Str ",",Space,Str "\1080\1085\1072\1095\1077",Space,Str "\1074\1086\1079\1100\1084\1105\1084",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090",Space,Str "\1080\1079",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{e}",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1090\1072\1082",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1084\1086\1076\1091\1083\1103",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Boolean> let absolute = ifB (>0) id negate\n*Boolean> map absolute [-10 .. 10]\n[10,9,8,7,6,5,4,3,2,1,0,1,2,3,4,5,6,7,8,9,10]\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1091\1082\1072\1079\1072\1090\1100",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1079\1072\1074\1080\1089\1080\1084\1086\1089\1090\1077\1081",Space,Str "(",Str "\1095\1077\1088\1077\1079",Space,Str "\1079\1072\1087\1103\1090\1091\1102",Str ")",Space,Str "\1080\1083\1080",Space,Str "\1079\1072\1074\1080\1089\1080\1084\1086\1089\1090\1100",Space,Str "\1086\1090",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1080\1093",Space,Str "\1090\1080\1087\1086\1074",Space,Str "(",Str "\1095\1077\1088\1077\1079",Space,Str "\1087\1088\1086\1073\1077\1083",Str ",",Space,Str "\1089\1083\1077\1074\1072",Space,Str "\1086\1090",Space,Str "\1089\1090\1088\1077\1083\1082\1080",Str ")",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nclass C a b c | a -> b, b c -> a where\n    ...\n\\end{code}\n"
,Para [Str "\1054\1090\1084\1077\1090\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1085\1086\1075\1080\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1086\1085\1072\1083\1100\1085\1099\1077",Space,Str "\1079\1072\1074\1080\1089\1080\1084\1086\1089\1090\1080",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1074\1099\1088\1072\1079\1080\1090\1100",Space,Str "\1095\1077\1088\1077\1079",Space,Str "\1089\1077\1084\1077\1081\1089\1090\1074\1072",Space,Str "\1090\1080\1087\1086\1074",Str ".",Space,Str "\1055\1088\1080\1084\1077\1088",Space,Str "\1080\1079",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1080",Space,RawInline "latex" "\\In{Boolean}",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1073\1099\1083\1086",Space,Str "\1073\1099",Space,Str "\1079\1072\1087\1080\1089\1072\1090\1100",Space,Str "\1090\1072\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nclass Boolean a where\n    true, false     :: a\n    (&&*), (||*)    :: a -> a -> a\n\nclass Boolean (B a) => IfB a where\n    type B a :: *\n    ifB :: (B a) -> a -> a -> a\n\nclass IfB a => EqB a where\n    (==*), (/=*) :: a -> a -> B a\n               \nclass IfB a => OrdB a where\n    (<*), (>*), (>=*), (<=*) :: a -> a -> B a\n\\end{code}\n"
,Para [Str "\1048\1089\1090\1086\1088\1080\1095\1077\1089\1082\1080",Space,Str "\1087\1077\1088\1074\1099\1084\1080",Space,Str "\1074",Space,Str "Haskell",Space,Str "\1087\1086\1103\1074\1080\1083\1080\1089\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1086\1085\1072\1083\1100\1085\1099\1077",Space,Str "\1079\1072\1074\1080\1089\1080\1084\1086\1089\1090\1080",Str ".",Space,Str "\1055\1086\1101\1090\1086\1084\1091",Space,Str "\1085\1077\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1087\1072\1082\1077\1090\1099",Space,Str "\1085\1072",Space,RawInline "latex" "\\In{Hackage}",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1099",Space,Str "\1074",Space,Str "\1088\1072\1079\1085\1099\1093",Space,Str "\1074\1072\1088\1080\1072\1085\1090\1072\1093",Str ".",Space,Str "\1057\1077\1084\1077\1081\1089\1090\1074\1072",Space,Str "\1090\1080\1087\1086\1074",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1091\1102\1090\1089\1103",Space,Str "\1073\1086\1083\1077\1077",Space,Str "\1086\1093\1086\1090\1085\1086",Str "."]
,Header 3 [Str "\1054\1075\1088\1072\1085\1080\1095\1077\1085\1080\1077",Space,Str "\1084\1086\1085\1086\1084\1086\1088\1092\1080\1079\1084\1072"]
,Para [Str "\1042",Space,Str "Haskell",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1085\1077",Space,Str "\1087\1080\1089\1072\1090\1100",Space,Str "\1090\1080\1087\1099",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str ".",Space,Str "\1054\1085\1080",Space,Str "\1073\1091\1076\1091\1090",Space,Str "\1074\1099\1074\1077\1076\1077\1085\1099",Space,Str "\1082\1086\1084\1087\1080\1083\1103\1090\1086\1088\1086\1084",Space,Str "\1072\1074\1090\1086\1084\1072\1090\1080\1095\1077\1089\1082\1080",Str ".",Space,Str "\1053\1086",Space,Str "\1085\1072\1087\1080\1089\1072\1085\1080\1077",Space,Str "\1090\1080\1087\1086\1074",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1089\1095\1080\1090\1072\1077\1090\1089\1103",Space,Str "\1087\1088\1080\1079\1085\1072\1082\1086\1084",Space,Str "\1093\1086\1088\1086\1096\1077\1075\1086",Space,Str "\1089\1090\1080\1083\1103",Str ".",Space,Str "\1055\1086\1089\1082\1086\1083\1100\1082\1091",Space,Str "\1087\1086",Space,Str "\1090\1080\1087\1072\1084",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1076\1086\1075\1072\1076\1072\1090\1100\1089\1103",Space,Str "\1095\1077\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1079\1072\1085\1080\1084\1072\1077\1090\1089\1103",Str ".",Space,Str "\1053\1086",Space,Str "\1077\1089\1090\1100",Space,Str "\1074",Space,Str "\1087\1088\1072\1074\1080\1083\1077",Space,Str "\1074\1099\1074\1086\1076\1072",Space,Str "\1090\1080\1087\1086\1074",Space,Str "\1086\1076\1085\1086",Space,Str "\1080\1089\1082\1083\1102\1095\1077\1085\1080\1077",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1084\1099",Space,Str "\1085\1072\1087\1080\1096\1077\1084",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nf = show\n\\end{code}\n"
,Para [Str "\1058\1086",Space,Str "\1082\1086\1084\1087\1080\1083\1103\1090\1086\1088",Space,Str "\1089\1086\1086\1073\1097\1080\1090",Space,Str "\1085\1072\1084",Space,Str "\1086\1073",Space,Str "\1086\1096\1080\1073\1082\1077",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1077",Space,Str "\1087\1088\1080\1074\1086\1076\1080\1090",Space,Str "\1082",Space,Str "\1086\1096\1080\1073\1082\1077",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1074\1099\1079\1074\1072\1085\1072",Space,Str "\1086\1075\1088\1072\1085\1080\1095\1077\1085\1080\1077\1084",Space,Str "\1084\1086\1085\1086\1084\1086\1088\1092\1080\1079\1084\1072",Str ".",Space,Str "\1052\1099",Space,Str "\1075\1086\1074\1086\1088\1080\1083\1080",Space,Str "\1086",Space,Str "\1085\1105\1084",Space,Str "\1074",Space,Str "\1075\1083\1072\1074\1077",Space,Str "\1086",Space,Str "\1090\1080\1087\1072\1093",Str ".",Space,Str "\1063\1072\1089\1090\1086",Space,Str "\1074",Space,Str "\1089\1080\1083\1100\1085\1086",Space,Str "\1086\1073\1086\1073\1097\1105\1085\1085\1099\1093",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1072\1093",Str ",",Space,Str "\1089",Space,Str "\1073\1086\1083\1100\1096\1080\1084\1080",Space,Str "\1079\1072\1074\1080\1089\1080\1084\1086\1089\1090\1103\1084\1080",Space,Str "\1074",Space,Str "\1090\1080\1087\1072\1093",Space,Str "\1074\1099\1087\1080\1089\1099\1074\1072\1090\1100",Space,Str "\1090\1080\1087\1099",Space,Str "\1082\1088\1072\1081\1085\1077",Space,Str "\1085\1077\1091\1076\1086\1073\1085\1086",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1074",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1077",Space,Str "\1089\1086\1079\1076\1072\1085\1080\1103",Space,Str "\1087\1072\1088\1089\1077\1088\1086\1074",Space,RawInline "latex" "\\In{Parsec}",Str ".",Space,Str "\1057",Space,Str "\1101\1090\1080\1084",Space,Str "\1086\1075\1088\1072\1085\1080\1095\1077\1085\1080\1077\1084",Space,Str "\1087\1088\1080\1093\1086\1076\1080\1090\1089\1103",Space,Str "\1087\1080\1089\1072\1090\1100",Space,Str "\1086\1075\1088\1086\1084\1085\1099\1077",Space,Str "\1086\1073\1098\1103\1074\1083\1077\1085\1080\1103",Space,Str "\1090\1080\1087\1086\1074",Space,Str "\1076\1083\1103",Space,Str "\1082\1088\1086\1093\1086\1090\1085\1099\1093",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1081",Str ".",Space,Str "\1063\1090\1086",Str "-",Str "\1090\1086",Space,Str "\1074\1088\1086\1076\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nfun :: (Stream s m t, Show t) => ParsecT s u m a -> ParsecT s u m [a]\nfun = g . h (q x) y\n\\end{code}\n"
,Para [Str "\1048",Space,Str "\1090\1072\1082",Space,Str "\1076\1083\1103",Space,Str "\1083\1102\1073\1086\1075\1086",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Str ".",Space,Str "\1042",Space,Str "\1101\1090\1086\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1083\1091\1095\1096\1077",Space,Str "\1087\1088\1086\1089\1090\1086",Space,Str "\1074\1099\1082\1083\1102\1095\1080\1090\1100",Space,Str "\1086\1075\1088\1072\1085\1080\1095\1077\1085\1080\1077",Str ",",Space,Str "\1076\1086\1073\1072\1074\1080\1074",Space,Str "\1074",Space,Str "\1085\1072\1095\1072\1083\1086",Space,Str "\1092\1072\1081\1083\1072",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n{-# Language NoMonomorphismRestriction #-}\n\\end{code}\n"
,Header 3 [Str "\1055\1086\1083\1080\1084\1086\1088\1092\1080\1079\1084",Space,Str "\1074\1099\1089\1096\1080\1093",Space,Str "\1087\1086\1088\1103\1076\1082\1086\1074"]
,Para [Str "\1050\1086\1075\1076\1072",Space,Str "\1084\1099",Space,Str "\1075\1086\1074\1086\1088\1080\1083\1080",Space,Str "\1086\1073",Space,RawInline "latex" "\\In{ST}",Space,Str "\1085\1072\1084",Space,Str "\1074\1089\1090\1088\1077\1090\1080\1083\1072\1089\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1089",Space,Str "\1085\1077\1086\1073\1099\1095\1085\1099\1084",Space,Str "\1090\1080\1087\1086\1084",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nrunST :: (forall s. ST s a) -> a\n\\end{code}\n"
,Para [Str "\1057\1083\1086\1074\1086",Space,RawInline "latex" "\\In{forall}",Space,Str "\1086\1073\1086\1079\1085\1072\1095\1072\1077\1090",Space,Str "\1076\1083\1103",Space,Str "\1083\1102\1073\1099\1093",Str ".",Space,Str "\1051\1102\1073\1086\1081",Space,Str "\1087\1086\1083\1080\1084\1086\1088\1092\1085\1099\1081",Space,Str "\1090\1080\1087",Space,Str "\1074",Space,Str "Haskell",Space,Str "\1087\1086\1076\1088\1072\1079\1091\1084\1077\1074\1072\1077\1090",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1086\1085",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1105\1085",Space,Str "\1076\1083\1103",Space,Str "\1083\1102\1073\1099\1093",Space,Str "\1090\1080\1087\1086\1074",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Str ",",Space,Str "\1082\1086\1075\1076\1072",Space,Str "\1084\1099",Space,Str "\1087\1080\1096\1077\1084",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nreverse :: [a] -> [a]\nmap     :: (a -> b) -> [a] -> [b]\n\\end{code}\n"
,RawBlock "latex" "\\noindent "
,Para [Str "\1053\1072",Space,Str "\1089\1072\1084\1086\1084",Space,Str "\1076\1077\1083\1077",Space,Str "\1084\1099",Space,Str "\1087\1080\1096\1077\1084",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nreverse :: forall a. [a] -> [a]\nmap     :: forall a b. (a -> b) -> [a] -> [b]\n\\end{code}\n"
,Para [Str "\1055\1086",Space,Str "\1085\1072\1079\1074\1072\1085\1080\1102",Space,Str "\1089\1083\1086\1074\1072",Space,RawInline "latex" "\\In{forall}",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1087\1086\1082\1072\1079\1072\1090\1100\1089\1103",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1086\1085\1086",Space,Str "\1085\1077\1089\1105\1090",Space,Str "\1074",Space,Str "\1089\1077\1073\1077",Space,Str "\1084\1085\1086\1075\1086",Space,Str "\1089\1074\1086\1073\1086\1076\1099",Str ".",Space,Str "\1054\1085\1086",Space,Str "\1075\1086\1074\1086\1088\1080\1090",Space,Str "\1086",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1072",Space,Str "\1076\1083\1103",Space,Str "\1083\1102\1073\1099\1093",Space,Str "\1090\1080\1087\1086\1074",Str ".",Space,Str "\1053\1086",Space,Str "\1077\1089\1083\1080",Space,Str "\1087\1088\1080\1089\1084\1086\1090\1088\1077\1090\1100\1089\1103",Str ",",Space,Str "\1090\1086",Space,Str "\1101\1090\1072",Space,Str "\1089\1074\1086\1073\1086\1076\1072",Space,Str "\1086\1082\1072\1079\1099\1074\1072\1077\1090\1089\1103",Space,Str "\1078\1105\1089\1090\1082\1080\1084",Space,Str "\1086\1075\1088\1072\1085\1080\1095\1077\1085\1080\1077\1084",Str ".",Space,Quoted DoubleQuote [Str "\1044\1083\1103",Space,Str "\1083\1102\1073\1099\1093"],Space,Str "\1086\1079\1085\1072\1095\1072\1077\1090",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1099",Space,Str "\1085\1077",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1076\1077\1083\1072\1090\1100",Space,Str "\1085\1080\1082\1072\1082\1080\1093",Space,Str "\1087\1088\1077\1076\1087\1086\1083\1086\1078\1077\1085\1080\1081",Space,Str "\1086",Space,Str "\1074\1085\1091\1090\1088\1077\1085\1085\1077\1081",Space,Str "\1087\1088\1080\1088\1086\1076\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str ".",Space,Str "\1052\1099",Space,Str "\1085\1077",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1088\1072\1079\1073\1080\1088\1072\1090\1100",Space,Str "\1090\1072\1082\1080\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1085\1072",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1102\1097\1080\1077",Space,Str "\1095\1072\1089\1090\1080",Str ".",Space,Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1087\1086\1076\1089\1090\1072\1074\1083\1103\1090\1100",Space,Str "\1080\1093",Space,Str "\1074",Space,Str "\1085\1086\1074\1099\1077",Space,Str "\1087\1086\1083\1080\1084\1086\1088\1092\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "(",Str "\1082\1072\1082",Space,Str "\1074",Space,RawInline "latex" "\\In{map}",Str ")",Str ",",Space,Str "\1086\1090\1073\1088\1072\1089\1099\1074\1072\1090\1100",Space,Str "(",Str "\1082\1072\1082",Space,RawInline "latex" "\\In{const}",Str ")",Space,Str "\1080\1083\1080",Space,Str "\1087\1077\1088\1077\1082\1083\1072\1076\1099\1074\1072\1090\1100",Space,Str "\1080\1079",Space,Str "\1086\1076\1085\1086\1075\1086",Space,Str "\1084\1077\1089\1090\1072",Space,Str "\1074",Space,Str "\1076\1088\1091\1075\1086\1077",Space,Str "(",Str "\1082\1072\1082",Space,Str "\1074",Space,RawInline "latex" "\\In{swap}",Space,Str "\1080\1083\1080",Space,RawInline "latex" "\\In{reverse}",Str ")",Str ".",Space,Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1085\1077\1084\1085\1086\1075\1086",Space,Str "\1089\1084\1103\1075\1095\1080\1090\1100",Space,Str "\1086\1075\1088\1072\1085\1080\1095\1077\1085\1080\1077",Str ",",Space,Str "\1077\1089\1083\1080",Space,Str "\1091\1082\1072\1078\1077\1084",Space,Str "\1074",Space,Str "\1082\1086\1085\1090\1077\1082\1089\1090\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1082\1072\1082\1080\1077",Space,Str "\1082\1083\1072\1089\1089\1099",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1099",Space,Str "\1076\1083\1103",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Space,Str "\1076\1072\1085\1085\1086\1075\1086",Space,Str "\1090\1080\1087\1072",Str "."]
,Para [Str "\1042\1089\1077",Space,Str "\1089\1090\1072\1085\1076\1072\1088\1090\1085\1099\1077",Space,Str "\1087\1086\1083\1080\1084\1086\1088\1092\1085\1099\1077",Space,Str "\1090\1080\1087\1099",Space,Str "\1080\1084\1077\1102\1090",Space,Str "\1074\1080\1076",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nfun :: forall a b .. z. Expr(a, b, ..., z)\n\\end{code}\n"
,Para [Str "\1055\1088\1080\1095\1105\1084",Space,RawInline "latex" "\\In{Expr}",Space,Str "\1085\1077",Space,Str "\1089\1086\1076\1077\1088\1078\1080\1090",Space,RawInline "latex" "\\In{forall}",Str ",",Space,Str "\1072",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1089\1090\1088\1077\1083\1082\1080",Space,Str "\1080",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1077",Space,Str "\1085\1086\1074\1099\1093",Space,Str "\1090\1080\1087\1086\1074",Space,Str "\1082",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1072\1084",Str ".",Space,Str "\1058\1072\1082\1086\1081",Space,Str "\1090\1080\1087",Space,Str "\1085\1072\1079\1099\1074\1072\1102\1090",Space,Str "\1087\1086\1083\1080\1084\1086\1088\1092\1085\1099\1084",Space,Str "\1090\1080\1087\1086\1084",Space,Str "\1087\1077\1088\1074\1086\1075\1086",Space,Str "\1087\1086\1088\1103\1076\1082\1072",Space,Str "(",Str "rank",Str ")",Str ".",Space,Str "\1045\1089\1083\1080",Space,RawInline "latex" "\\In{forall}",Space,Str "\1089\1090\1086\1080\1090",Space,Str "\1089\1087\1088\1072\1074\1072",Space,Str "\1086\1090",Space,Str "\1089\1090\1088\1077\1083\1082\1080",Str ",",Space,Str "\1090\1086",Space,Str "\1077\1075\1086",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1074\1099\1085\1077\1089\1090\1080",Space,Str "\1080\1079",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Str ",",Space,Str "\1085\1072\1087\1088\1080\1084\1077\1088",Str ",",Space,Str "\1089\1083\1077\1076\1091\1102\1097\1080\1077",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Space,Str "\1101\1082\1074\1080\1074\1072\1083\1077\1085\1090\1085\1099",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nfun :: forall a.   a -> (forall b. b -> b)\nfun :: forall a b. a -> (b -> b)\n\\end{code}\n"
,Para [Str "\1058\1072\1082",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1087\1088\1080\1074\1077\1089\1090\1080",Space,Str "\1085\1077",Space,Str "\1089\1090\1072\1085\1076\1072\1088\1090\1085\1099\1081",Space,Str "\1090\1080\1087",Space,Str "\1082",Space,Str "\1089\1090\1072\1085\1076\1072\1088\1090\1085\1086\1084\1091",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1078\1077",Space,RawInline "latex" "\\In{forall}",Space,Str "\1074\1089\1090\1088\1077\1095\1072\1077\1090\1089\1103",Space,Str "\1089\1083\1077\1074\1072",Space,Str "\1086\1090",Space,Str "\1089\1090\1088\1077\1083\1082\1080",Str ",",Space,Str "\1082\1072\1082",Space,Str "\1074",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{runST}",Str ",",Space,Str "\1090\1086",Space,Str "\1077\1075\1086",Space,Str "\1091\1078\1077",Space,Str "\1085\1077\1083\1100\1079\1103",Space,Str "\1074\1099\1085\1077\1089\1090\1080",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1087\1088\1080\1074\1086\1076\1080\1090",Space,Str "\1082",Space,Str "\1087\1086\1074\1099\1096\1077\1085\1080\1102",Space,Str "\1087\1086\1088\1103\1076\1082\1072",Space,Str "\1087\1086\1083\1080\1084\1086\1088\1092\1080\1079\1084\1072",Str ".",Space,Str "\1055\1086\1088\1103\1076\1086\1082",Space,Str "\1087\1086\1083\1080\1084\1086\1088\1092\1080\1079\1084\1072",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1077\1090\1089\1103",Space,Str "\1082\1072\1082",Space,Str "\1089\1072\1084\1099\1081",Space,Str "\1084\1072\1082\1089\1080\1084\1091\1084",Space,Str "\1089\1088\1077\1076\1080",Space,Str "\1074\1089\1077\1093",Space,Str "\1087\1086\1076\1074\1099\1088\1072\1078\1077\1085\1080\1081",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1089\1090\1086\1103\1090",Space,Str "\1089\1083\1077\1074\1072",Space,Str "\1086\1090",Space,Str "\1089\1090\1088\1077\1083\1082\1080",Space,Str "\1087\1083\1102\1089",Space,Str "\1086\1076\1080\1085",Str ".",Space,Str "\1058\1072\1082",Space,Str "\1074",Space,Str "\1090\1080\1087\1077"]
,RawBlock "latex" "\n\\begin{code}\nrunST :: (forall s. ST s a) -> a\n\\end{code}\n"
,Para [Str "\1057\1083\1077\1074\1072",Space,Str "\1086\1090",Space,Str "\1089\1090\1088\1077\1083\1082\1080",Space,Str "\1089\1090\1086\1080\1090",Space,Str "\1090\1080\1087",Space,Str "\1087\1077\1088\1074\1086\1075\1086",Space,Str "\1087\1086\1088\1103\1076\1082\1072",Str ",",Space,Str "\1087\1088\1080\1073\1072\1074\1080\1074",Space,Str "\1077\1076\1080\1085\1080\1094\1091",Str ",",Space,Str "\1087\1086\1083\1091\1095\1080\1084",Space,Str "\1087\1086\1088\1103\1076\1086\1082",Space,Str "\1076\1083\1103",Space,Str "\1074\1089\1077\1075\1086",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1074\1076\1088\1091\1075",Space,Str "\1085\1072\1084",Space,Str "\1079\1072\1093\1086\1095\1077\1090\1089\1103",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100\1089\1103",Space,Str "\1090\1072\1082\1080\1084\1080",Space,Str "\1090\1080\1087\1072\1084\1080",Str ",",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1074\1082\1083\1102\1095\1080\1090\1100",Space,Str "\1086\1076\1085\1086",Space,Str "\1080\1079",Space,Str "\1088\1072\1089\1096\1080\1088\1077\1085\1080\1081",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n{-# Language Rank2Types #-}\n{-# Language RankNTypes #-}\n\\end{code}\n"
,Para [Str "\1042",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1088\1072\1085\1075\1086\1074",Space,Str "\1087\1088\1086\1080\1079\1074\1086\1083\1100\1085\1086\1075\1086",Space,Str "\1087\1086\1088\1103\1076\1082\1072",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084",Space,Str "\1074\1099\1074\1086\1076\1072",Space,Str "\1090\1080\1087\1086\1074",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1085\1077",Space,Str "\1079\1072\1074\1077\1088\1096\1080\1090\1100\1089\1103",Str ".",Space,Str "\1042",Space,Str "\1101\1090\1086\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1085\1072\1084",Space,Str "\1087\1088\1080\1076\1105\1090\1089\1103",Space,Str "\1087\1086\1084\1086\1075\1072\1090\1100",Space,Str "\1082\1086\1084\1087\1080\1083\1103\1090\1086\1088\1091",Space,Str "\1088\1072\1089\1089\1090\1072\1074\1083\1103\1103",Space,Str "\1090\1080\1087\1099",Space,Str "\1089\1083\1086\1078\1085\1099\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1074\1088\1091\1095\1085\1091\1102",Str "."]
,Header 3 [Str "\1051\1077\1082\1089\1080\1095\1077\1089\1082\1080",Space,Str "\1089\1074\1103\1079\1072\1085\1085\1099\1077",Space,Str "\1090\1080\1087\1099"]
,Para [Str "\1052\1099",Space,Str "\1091\1078\1077",Space,Str "\1087\1088\1080\1074\1099\1082\1083\1080",Space,Str "\1082",Space,Str "\1090\1086\1084\1091",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1082\1086\1075\1076\1072",Space,Str "\1084\1099",Space,Str "\1087\1080\1096\1077\1084"]
,RawBlock "latex" "\n\\begin{code}\nswap :: (a, b) -> (b, a)\n\\end{code}\n"
,RawBlock "latex" "\\noindent "
,Para [Str "\1082\1086\1084\1087\1080\1083\1103\1090\1086\1088",Space,Str "\1087\1086\1085\1080\1084\1072\1077\1090",Str ",",Space,Str "\1095\1090\1086",Space,RawInline "latex" "\\In{a}",Space,Str "\1080",Space,RawInline "latex" "\\In{b}",Space,Str "\1091\1082\1072\1079\1099\1074\1072\1102\1090",Space,Str "\1085\1072",Space,Str "\1086\1076\1080\1085",Space,Str "\1080",Space,Str "\1090\1086\1090",Space,Str "\1078\1077",Space,Str "\1090\1080\1087",Space,Str "\1089\1083\1077\1074\1072",Space,Str "\1080",Space,Str "\1089\1087\1088\1072\1074\1072",Space,Str "\1086\1090",Space,Str "\1089\1090\1088\1077\1083\1082\1080",Str ".",Space,Str "\1055\1088\1080",Space,Str "\1101\1090\1086\1084",Space,Str "\1090\1080\1087\1099",Space,RawInline "latex" "\\In{a}",Space,Str "\1080",Space,RawInline "latex" "\\In{b}",Space,Str "\1085\1077",Space,Str "\1086\1073\1103\1079\1072\1090\1077\1083\1100\1085\1086",Space,Str "\1088\1072\1079\1085\1099\1077",Str ".",Space,Str "\1048\1085\1086\1075\1076\1072",Space,Str "\1085\1072\1084",Space,Str "\1093\1086\1095\1077\1090\1089\1103",Space,Str "\1088\1072\1089\1096\1080\1088\1080\1090\1100",Space,Str "\1076\1077\1081\1089\1090\1074\1080\1077",Space,Str "\1082\1086\1085\1090\1077\1082\1089\1090\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1080",Space,Str "\1088\1072\1089\1087\1088\1086\1089\1090\1088\1072\1085\1080\1090\1100",Space,Str "\1077\1075\1086",Space,Str "\1085\1072",Space,Str "\1074\1089\1105",Space,Str "\1090\1077\1083\1086",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1088\1072\1085\1077\1077",Space,Str "\1074",Space,Str "\1101\1090\1086\1081",Space,Str "\1075\1083\1072\1074\1077",Str ",",Space,Str "\1082\1086\1075\1076\1072",Space,Str "\1084\1099",Space,Str "\1080\1084\1080\1090\1080\1088\1086\1074\1072\1083\1080",Space,Str "\1095\1080\1089\1083\1072",Space,Str "\1095\1077\1088\1077\1079",Space,Str "\1090\1080\1087\1099",Str ",",Space,Str "\1076\1083\1103",Space,Str "\1090\1086\1075\1086",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1080\1079\1074\1083\1077\1095\1100",Space,Str "\1095\1080\1089\1083\1086",Space,Str "\1080\1079",Space,Str "\1090\1080\1087\1072",Str ",",Space,Str "\1084\1099",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1083\1080\1089\1100",Space,Str "\1090\1088\1102\1082\1086\1084",Space,Str "\1089",Space,Str "\1092\1091\1085\1082\1094\1080\1077\1081",Space,RawInline "latex" "\\In{proxy}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ninstance Nat a => Nat (Succ a) where\n    toInt x = 1 + toInt (proxy x)\n        \nproxy :: f a -> a\nproxy = undefined\n\\end{code}\n"
,Para [Str "\1045\1076\1080\1085\1089\1090\1074\1077\1085\1085\1086\1077",Space,Str "\1085\1072\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{proxy}",Str "~",Str "\8211",Space,Str "\1101\1090\1086",Space,Str "\1087\1077\1088\1077\1076\1072\1095\1072",Space,Str "\1080\1085\1092\1086\1088\1084\1072\1094\1080\1080",Space,Str "\1086",Space,Str "\1090\1080\1087\1077",Str ".",Space,Str "\1041\1099\1083\1086",Space,Str "\1073\1099",Space,Str "\1075\1086\1088\1072\1079\1076\1086",Space,Str "\1091\1076\1086\1073\1085\1077\1077",Space,Str "\1085\1072\1087\1080\1089\1072\1090\1100",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ninstance Nat a => Nat (Succ a) where\n    toInt x = 1 + toInt (undefined :: a)\n\\end{code}\n"
,Para [Str "\1055\1088\1086\1073\1083\1077\1084\1072",Space,Str "\1074",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1087\1086",Space,Str "\1091\1084\1086\1083\1095\1072\1085\1080\1102",Space,Str "\1083\1102\1073\1086\1081",Space,Str "\1087\1086\1083\1080\1084\1086\1088\1092\1085\1099\1081",Space,Str "\1090\1080\1087",Space,Str "\1074",Space,Str "Haskell",Space,Str "\1080\1084\1077\1077\1090",Space,Str "\1087\1077\1088\1074\1099\1081",Space,Str "\1088\1072\1085\1075",Str ",",Space,Str "\1082\1086\1084\1087\1080\1083\1103\1090\1086\1088",Space,Str "\1095\1080\1090\1072\1077\1090",Space,Str "\1085\1072\1096\1091",Space,Str "\1079\1072\1087\1080\1089\1100",Space,Str "\1082\1072\1082",Space,RawInline "latex" "\\In{(x :: forall a. a)}",Str ",",Space,Str "\1080",Space,Str "\1087\1086\1083\1091\1095\1072\1077\1090\1089\1103",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1099",Space,Str "\1075\1086\1074\1086\1088\1080\1084",Str ":",Space,RawInline "latex" "\\In{x}",Space,Str "\1080\1084\1077\1077\1090",Space,Str "\1083\1102\1073\1086\1081",Space,Str "\1090\1080\1087",Str ",",Space,Str "\1082\1072\1082\1086\1081",Space,Str "\1079\1072\1093\1086\1095\1077\1096\1100",Str "!",Space,Str "\1053\1077",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1087\1086\1083\1077\1079\1085\1072\1103",Space,Str "\1080\1085\1092\1086\1088\1084\1072\1094\1080\1103",Str ".",Space,Str "\1050\1086\1084\1087\1080\1083\1103\1090\1086\1088",Space,Str "\1079\1072\1073\1083\1091\1076\1080\1083\1089\1103",Space,Str "\1080",Space,Str "\1089\1087\1088\1072\1096\1080\1074\1072\1077\1090",Space,Str "\1091",Space,Str "\1085\1072\1089",Str ":",Space,Quoted DoubleQuote [Str "\1082\1091\1076\1072",Space,Str "\1087\1086\1081\1090\1080",Str "?"],Space,Str "\1040",Space,Str "\1084\1099",Space,Str "\1077\1084\1091",Str ":",Space,Quoted DoubleQuote [Str "\1076\1072",Space,Str "\1082\1091\1076\1072",Space,Str "\1079\1072\1093\1086\1095\1077\1096\1100"],Str ".",Space,Str "\1050\1072\1082",Space,Str "\1088\1072\1079",Space,Str "\1076\1083\1103",Space,Str "\1090\1072\1082\1080\1093",Space,Str "\1089\1083\1091\1095\1072\1077\1074",Space,Str "\1089\1091\1097\1077\1089\1090\1074\1091\1077\1090",Space,Str "\1088\1072\1089\1096\1080\1088\1077\1085\1080\1077",Space,RawInline "latex" "\\In{ScopedTypeVariables}",Str ".",Space,Str "\1054\1085\1086",Space,Str "\1089\1074\1103\1079\1099\1074\1072\1077\1090",Space,Str "\1090\1080\1087",Str ",",Space,Str "\1086\1073\1098\1103\1074\1083\1077\1085\1085\1099\1081",Space,Str "\1074",Space,Str "\1079\1072\1075\1086\1083\1086\1074\1082\1077",Space,Str "\1082\1083\1072\1089\1089\1072",Str "/",Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1089",Space,Str "\1090\1080\1087\1072\1084\1080",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1074\1089\1090\1088\1077\1095\1072\1102\1090\1089\1103",Space,Str "\1074",Space,Str "\1090\1077\1083\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ".",LineBreak,Str "\1042",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1077\1089\1090\1100",Space,Str "\1086\1076\1085\1086",Space,Str "\1086\1090\1083\1080\1095\1080\1077",Space,Str "\1086\1090",Space,Str "\1089\1083\1091\1095\1072\1103",Space,Str "\1089",Space,Str "\1082\1083\1072\1089\1089\1072\1084\1080",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1084\1099",Space,Str "\1093\1086\1090\1080\1084",Space,Str "\1088\1072\1089\1096\1080\1088\1080\1090\1100",Space,Str "\1076\1077\1081\1089\1090\1074\1080\1077",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1086\1081",Space,Str "\1080\1079",Space,Str "\1086\1073\1098\1103\1074\1083\1077\1085\1080\1103",Space,Str "\1090\1080\1087\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1085\1077\1086\1073\1093\1086\1076\1080\1084\1086",Space,Str "\1091\1087\1086\1084\1103\1085\1091\1090\1100",Space,Str "\1077\1105",Space,Str "\1074",Space,Str "\1089\1083\1086\1074\1077",Space,RawInline "latex" "\\In{forall}",Space,Str "\1074",Space,Str "\1089\1090\1072\1085\1076\1072\1088\1090\1085\1086\1084",Space,Str "\1087\1086\1083\1086\1078\1077\1085\1080\1080",Space,Str "(",Str "\1082\1072\1082",Space,Str "\1076\1083\1103",Space,Str "\1090\1080\1087\1072",Space,Str "\1087\1077\1088\1074\1086\1075\1086",Space,Str "\1087\1086\1088\1103\1076\1082\1072",Str ")",Str ".",Space,Str "\1059",Space,Str "\1085\1072\1089",Space,Str "\1073\1099\1083",Space,Str "\1077\1097\1105",Space,Str "\1086\1076\1080\1085",Space,Str "\1087\1088\1080\1084\1077\1088",Space,Str "\1089",Space,RawInline "latex" "\\In{proxy}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndt :: (Nat n, Fractional a) => Stream n a -> a\ndt xs = 1 / (fromIntegral $ toInt $ proxy xs)\n    where proxy :: Stream n a -> n\n          proxy = undefined\n\\end{code}\n"
,Para [Str "\1042",Space,Str "\1101\1090\1086\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1084\1099",Space,Str "\1087\1080\1096\1077\1084",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n{-# Language ScopedTypeVariables #-}\n...\n\ndt :: forall n. (Nat n, Fractional a) => Stream n a -> a\ndt xs = 1 / (fromIntegral $ toInt (undefined :: n))\n\\end{code}\n"
,Para [Str "\1054\1073\1088\1072\1090\1080\1090\1077",Space,Str "\1074\1085\1080\1084\1077\1085\1080\1077",Space,Str "\1085\1072",Space,Str "\1087\1086\1103\1074\1083\1077\1085\1080\1077",Space,RawInline "latex" "\\In{forall}",Space,Str "\1074",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1080",Space,Str "\1090\1080\1087\1072",Str ".",Space,Str "\1055\1086\1087\1088\1086\1073\1091\1081\1090\1077",Space,Str "\1089\1082\1086\1084\1087\1080\1083\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1087\1088\1080\1084\1077\1088",Space,Str "\1073\1077\1079",Space,Str "\1085\1077\1075\1086",Space,Str "\1080\1083\1080",Space,Str "\1087\1077\1088\1077\1084\1077\1089\1090\1080\1090\1077",Space,Str "\1077\1075\1086",Space,Str "\1074",Space,Str "\1076\1088\1091\1075\1086\1077",Space,Str "\1084\1077\1089\1090\1086",Str ".",Space,Str "\1042\1086",Space,Str "\1084\1085\1086\1075\1080\1093",Space,Str "\1089\1083\1091\1095\1072\1103\1093",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1088\1089\1096\1080\1088\1077\1085\1080\1103",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1080\1079\1073\1077\1078\1072\1090\1100",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1089\1090\1072\1085\1076\1072\1088\1090\1085\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{asTypeOf}",Str ",",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1080\1079",Space,RawInline "latex" "\\In{Prelude}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nasTypeOf :: a -> a -> a\nasTypeOf x y = x\n\\end{code}\n"
,Para [Str "\1060\1072\1082\1090\1080\1095\1077\1089\1082\1080",Space,Str "\1101\1090\1086",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{const}",Str ",",Space,Str "\1086\1073\1072",Space,Str "\1090\1080\1087\1072",Space,Str "\1082\1086\1090\1086\1088\1086\1081",Space,Str "\1086\1076\1080\1085\1072\1082\1086\1074\1099",Str ".",Space,Str "\1054\1085\1072",Space,Str "\1095\1072\1089\1090\1086",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1091\1077\1090\1089\1103",Space,Str "\1074",Space,Str "\1080\1085\1092\1080\1082\1089\1085\1086\1081",Space,Str "\1092\1086\1088\1084\1077",Space,Str "\1076\1083\1103",Space,Str "\1092\1080\1082\1089\1072\1094\1080\1080",Space,Str "\1090\1080\1087\1072",Space,Str "\1087\1077\1088\1074\1086\1075\1086",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1072",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nq = f $ x `asTypeOf` var\n\\end{code}\n"
,Para [Str "\1055\1086\1083\1091\1095\1072\1077\1090\1089\1103",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1085\1072\1075\1083\1103\1076\1085\1086",Str ",",Space,Str "\1089\1083\1086\1074\1085\1086",Space,Str "\1101\1090\1086",Space,Str "\1087\1088\1077\1076\1083\1086\1078\1077\1085\1080\1077",Space,Str "\1086\1073\1099\1095\1085\1086\1075\1086",Space,Str "\1103\1079\1099\1082\1072",Str "."]
,Header 3 [Str "\1048",Space,Str "\1076\1088\1091\1075\1080\1077",Space,Str "\1091\1076\1086\1073\1089\1090\1074\1072",Space,Str "\1080",Space,Str "\1091\1082\1088\1072\1096\1077\1085\1080\1103"]
,Para [Str "\1057\1090\1086\1080\1090",Space,Str "\1091\1087\1086\1084\1103\1085\1091\1090\1100",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1088\1072\1089\1096\1080\1088\1077\1085\1080\1081",Str ".",Space,Str "\1054\1085\1080",Space,Str "\1083\1105\1075\1082\1080\1077",Space,Str "\1076\1083\1103",Space,Str "\1087\1086\1085\1080\1084\1072\1085\1080\1103",Str ",",Space,Str "\1074",Space,Str "\1086\1089\1085\1086\1074\1085\1086\1084",Space,Str "\1089\1083\1091\1078\1072\1090",Space,Str "\1091\1082\1088\1072\1096\1077\1085\1080\1102",Space,Str "\1079\1072\1087\1080\1089\1080",Space,Str "\1080\1083\1080",Space,Str "\1076\1083\1103",Space,Str "\1089\1086\1082\1088\1072\1097\1077\1085\1080\1103",Space,Str "\1088\1091\1090\1080\1085\1085\1086\1075\1086",Space,Str "\1082\1086\1076\1072",Str "."]
,Para [Str "\1044\1080\1088\1077\1082\1090\1080\1074\1072",Space,RawInline "latex" "\\In{deriving}",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100\1089\1103",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1089",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1080\1084\1080",Space,Str "\1089\1090\1072\1085\1076\1072\1088\1090\1085\1099\1084\1080",Space,Str "\1082\1083\1072\1089\1089\1072\1084\1080",Str ",",Space,Str "\1085\1086",Space,Str "\1077\1089\1083\1080",Space,Str "\1084\1099",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1083\1080",Space,Str "\1090\1080\1087",Str "-",Str "\1086\1073\1105\1088\1090\1082\1091",Space,Str "\1095\1077\1088\1077\1079",Space,RawInline "latex" "\\In{newtype}",Space,Str "\1080\1083\1080",Space,Str "\1087\1088\1086\1089\1090\1086",Space,Str "\1089\1080\1085\1086\1085\1080\1084",Str ",",Space,Str "\1090\1086",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1087\1088\1086\1089\1090\1086",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1085\1086\1074\1099\1081",Space,Str "\1090\1080\1087",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1086\1084",Space,Str "\1083\1102\1073\1086\1075\1086",Space,Str "\1082\1083\1072\1089\1089\1072",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1076\1086\1089\1090\1091\1087\1077\1085",Space,Str "\1079\1072\1074\1105\1088\1085\1091\1090\1086\1084\1091",Space,Str "\1090\1080\1087\1091",Str ".",Space,Str "\1050\1072\1082",Space,Str "\1088\1072\1079",Space,Str "\1076\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1089\1091\1097\1077\1089\1090\1074\1091\1077\1090",Space,Str "\1088\1072\1089\1096\1080\1088\1077\1085\1080\1077",Space,RawInline "latex" "\\In{GeneralizedNewtypeDeriving}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nnewtype MyDouble = MyDouble Double\n    deriving (Show, Eq, Enum, Ord, Num, Fractional, Floating)\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1075\1086\1074\1086\1088\1080\1083\1080",Space,Str "\1086",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1086\1073\1099\1095\1085\1099\1077",Space,Str "\1095\1080\1089\1083\1072",Space,Str "\1074",Space,Str "Haskell",Space,Str "\1087\1077\1088\1077\1075\1088\1091\1078\1077\1085\1099",Str ",",Space,Str "\1080\1085\1086\1075\1076\1072",Space,Str "\1074\1086\1079\1085\1080\1082\1072\1077\1090",Space,Str "\1085\1077\1086\1073\1093\1086\1076\1080\1084\1086\1089\1090\1100",Space,Str "\1074",Space,Str "\1087\1077\1088\1077\1075\1088\1091\1078\1077\1085\1085\1099\1093",Space,Str "\1089\1090\1088\1086\1082\1072\1093",Str ",",Space,Str "\1082\1072\1082",Space,Str "\1088\1072\1079",Space,Str "\1076\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1089\1091\1097\1077\1089\1090\1074\1091\1077\1090",Space,Str "\1088\1072\1089\1096\1080\1088\1077\1085\1080\1077",Space,RawInline "latex" "\\In{OverloadedStrings}",Str ".",Space,Str "\1055\1088\1080",Space,Str "\1101\1090\1086\1084",Space,Str "\1079\1072",Space,Str "\1086\1073\1099\1095\1085\1086\1081",Space,Str "\1079\1072\1087\1080\1089\1100\1102",Space,Str "\1089\1090\1088\1086\1082",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1089\1082\1088\1099\1074\1072\1090\1100\1089\1103",Space,Str "\1083\1102\1073\1086\1081",Space,Str "\1090\1080\1087",Space,Str "\1080\1079",Space,Str "\1082\1083\1072\1089\1089\1072",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nclass IsString a where\n    fromString :: String -> a\n\\end{code}\n"
,Para [Str "\1056\1072\1089\1096\1080\1088\1077\1085\1080\1077",Space,RawInline "latex" "\\In{TypeOperators}",Space,Str "\1087\1086\1079\1074\1086\1083\1103\1077\1090",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1090\1100",Space,Str "\1080\1085\1092\1080\1082\1089\1085\1099\1077",Space,Str "\1080\1084\1077\1085\1072",Space,Str "\1085\1077",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1076\1083\1103",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088\1086\1074",Space,Str "\1090\1080\1087\1086\1074",Str ",",Space,Str "\1085\1086",Space,Str "\1080",Space,Str "\1076\1083\1103",Space,Str "\1089\1072\1084\1080\1093",Space,Str "\1090\1080\1087\1086\1074",Str ",",Space,Str "\1089\1080\1085\1086\1085\1080\1084\1086\1074",Space,Str "\1090\1080\1087\1086\1074",Space,Str "\1080",Space,Str "\1076\1072\1078\1077",Space,Str "\1082\1083\1072\1089\1089\1086\1074",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndata a :+: b = Left a | Right b\n\\end{code}\n"
,Header 2 [Str "\1050\1088\1072\1090\1082\1086\1077",Space,Str "\1089\1086\1076\1077\1088\1078\1072\1085\1080\1077"]
,Para [Str "\1042",Space,Str "\1101\1090\1086\1081",Space,Str "\1075\1083\1072\1074\1077",Space,Str "\1084\1099",Space,Str "\1079\1072\1090\1088\1086\1085\1091\1083\1080",Space,Str "\1084\1072\1083\1091\1102",Space,Str "\1095\1072\1089\1090\1100",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1086\1089\1090\1077\1081",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1087\1088\1077\1076\1086\1089\1090\1072\1074\1083\1103\1102\1090\1089\1103",Space,Str "\1089\1080\1089\1090\1077\1084\1086\1081",Space,Str "ghc",Str ".",Space,Str "Haskell",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1087\1086\1083\1080\1075\1086\1085\1086\1084",Space,Str "\1076\1083\1103",Space,Str "\1080\1089\1087\1099\1090\1072\1085\1080\1103",Space,Str "\1089\1072\1084\1099\1093",Space,Str "\1088\1072\1079\1085\1086\1086\1073\1088\1072\1079\1085\1099\1093",Space,Str "\1080\1076\1077\1081",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1101\1082\1089\1087\1077\1088\1080\1084\1077\1085\1090\1072\1083\1100\1085\1099\1081",Space,Str "\1103\1079\1099\1082",Str ".",Space,Str "\1053\1086",Space,Str "\1074",Space,Str "\1087\1088\1072\1082\1090\1080\1095\1077\1089\1082\1080\1093",Space,Str "\1094\1077\1083\1103\1093",Space,Str "\1074",Space,Str "1998",Space,Str "\1075\1086\1076\1091",Space,Str "\1073\1099\1083",Space,Str "\1079\1072\1092\1080\1082\1089\1080\1088\1086\1074\1072\1085",Space,Str "\1089\1090\1072\1085\1076\1072\1088\1090",Space,Str "\1103\1079\1099\1082\1072",Str ",",Space,Str "\1077\1075\1086",Space,Str "\1086\1073\1099\1095\1085\1086",Space,Str "\1085\1072\1079\1099\1074\1072\1102\1090",Space,RawInline "latex" "\\In{Haskell98}",Str ".",Space,Str "\1051\1102\1073\1086\1077",Space,Str "\1088\1072\1089\1096\1080\1088\1077\1085\1080\1077",Space,Str "\1087\1086\1076\1082\1083\1102\1095\1072\1077\1090\1089\1103",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1086\1081",Space,Str "\1087\1088\1072\1075\1084\1099",Space,RawInline "latex" "\\In{Language}",Str ".",Space,Str "\1053\1086\1074\1099\1081",Space,Str "\1089\1090\1072\1085\1076\1072\1088\1090",Space,RawInline "latex" "\\In{Haskell Prime}",Space,Str "\1074\1082\1083\1102\1095\1080\1090",Space,Str "\1074",Space,Str "\1089\1077\1073\1103",Space,Str "\1085\1072\1080\1073\1086\1083\1077\1077",Space,Str "\1091\1089\1090\1086\1103\1074\1096\1080\1077\1089\1103",Space,Str "\1088\1072\1089\1096\1080\1088\1077\1085\1080\1103",Str ".",Space,Str "\1058\1072\1082\1078\1077",Space,Str "\1084\1099",Space,Str "\1088\1072\1089\1089\1084\1086\1090\1088\1077\1083\1080",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1087\1086\1083\1077\1079\1085\1099\1093",Space,Str "\1082\1083\1072\1089\1089\1086\1074",Space,Str "\1080",Space,Str "\1089\1080\1085\1090\1072\1082\1089\1080\1095\1077\1089\1082\1080\1093",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1094\1080\1081",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Str ",",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1086",Str ",",Space,Str "\1086\1073\1083\1077\1075\1095\1072\1102\1090",Space,Str "\1085\1072\1087\1080\1089\1072\1085\1080\1077",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084",Str "."]
,Header 2 [Str "\1059\1087\1088\1072\1078\1085\1077\1085\1080\1103"]
,Para [Str "\1069\1090\1086",Space,Str "\1073\1099\1083\1072",Space,Str "\1089\1087\1088\1072\1074\1086\1095\1085\1072\1103",Space,Str "\1075\1083\1072\1074\1072",Str ",",Space,Str "\1087\1088\1080\1089\1084\1086\1090\1088\1080\1090\1077\1089\1100",Space,Str "\1082",Space,Str "\1088\1072\1089\1089\1084\1086\1090\1088\1077\1085\1085\1099\1084",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1086\1089\1090\1103\1084",Space,Str "\1080",Space,Str "\1087\1086\1076\1091\1084\1072\1081\1090\1077",Space,Str "\1082\1072\1082\1080\1077",Space,Str "\1085\1091\1078\1085\1099",Space,Str "\1074\1072\1084",Str ",",Space,Str "\1072",Space,Str "\1082\1072\1082\1080\1077",Space,Str "\1085\1077\1090",Str ".",Space,Str "\1042\1086\1079\1084\1086\1078\1085\1086",Space,Str "\1074\1099",Space,Str "\1074\1086\1074\1089\1077",Space,Str "\1085\1077",Space,Str "\1073\1091\1076\1077\1090\1077",Space,Str "\1080\1084\1080",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100\1089\1103",Str ",",Space,Str "\1085\1086",Space,Str "\1085\1077\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1080\1079",Space,Str "\1085\1080\1093",Space,Str "\1084\1086\1075\1091\1090",Space,Str "\1074\1089\1090\1088\1077\1090\1080\1090\1100\1089\1103",Space,Str "\1074\1072\1084",Space,Str "\1074",Space,Str "\1095\1091\1078\1086\1084",Space,Str "\1082\1086\1076\1077",Space,Str "\1080\1083\1080",Space,Str "\1074",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1072\1093",Str "."]]