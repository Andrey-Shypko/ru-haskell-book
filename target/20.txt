[Header 1 [Str "\1048\1084\1087\1077\1088\1072\1090\1080\1074\1085\1086\1077",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1080\1088\1086\1074\1072\1085\1080\1077"]
,Para [Str "\1042",Space,Str "\1101\1090\1086\1081",Space,Str "\1075\1083\1072\1074\1077",Space,Str "\1084\1099",Space,Str "\1087\1086\1090\1088\1077\1085\1080\1088\1091\1077\1084\1089\1103",Space,Str "\1074",Space,Str "\1091\1082\1088\1086\1097\1077\1085\1080\1080",Space,Str "\1080\1084\1087\1077\1088\1072\1090\1080\1074\1085\1086\1075\1086",Space,Str "\1082\1086\1076\1072",Str ".",Space,Str "\1042",Space,Str "Haskell",Space,Str "\1074\1089\1077",Space,Str "\1087\1086\1073\1086\1095\1085\1099\1077",Space,Str "\1101\1092\1092\1077\1082\1090\1099",Space,Str "\1086\1075\1086\1088\1086\1078\1077\1085\1099",Space,Str "\1086\1090",Space,Str "\1095\1080\1089\1090\1099\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1073\1077\1090\1086\1085\1085\1086\1081",Space,Str "\1089\1090\1077\1085\1086\1081",Space,RawInline "latex" "\\In{IO}",Str ".",Space,Str "\1054\1076\1085\1072\1078\1076\1099",Space,Str "\1086\1089\1090\1091\1087\1080\1074\1096\1080\1089\1100",Str ",",Space,Str "\1084\1099",Space,Str "\1085\1077",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1089\1074\1077\1088\1085\1091\1090\1100",Space,Str "\1089",Space,Str "\1087\1091\1090\1080",Space,Str "\1087\1086\1073\1086\1095\1085\1099\1093",Space,Str "\1101\1092\1092\1077\1082\1090\1086\1074",Str ",",Space,Str "\1084\1099",Space,Str "\1074\1099\1085\1091\1078\1076\1077\1085\1099",Space,Str "\1090\1072\1097\1080\1090\1100",Space,Str "\1085\1072",Space,Str "\1089\1077\1073\1077",Space,Str "\1075\1088\1091\1079",Space,RawInline "latex" "\\In{IO}",Space,Str "\1076\1086",Space,Str "\1089\1072\1084\1086\1075\1086",Space,Str "\1082\1086\1085\1094\1072",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1099",Str ".",Space,Str "\1058\1080\1087",Space,RawInline "latex" "\\In{IO}",Str ",",Space,Str "\1093\1086\1090\1100",Space,Str "\1080",Space,Str "\1086\1073\1074\1086\1083\1072\1082\1080\1074\1072\1077\1090",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1091",Str ",",Space,Str "\1074\1089\1105",Space,Str "\1078\1077",Space,Str "\1087\1086\1079\1074\1086\1083\1103\1077\1090",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100\1089\1103",Space,Str "\1073\1083\1072\1075\1072\1084\1080",Space,Str "\1095\1080\1089\1090\1099\1093",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1081",Str ".",Space,Str "\1054\1090",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1080\1089\1090\1072",Space,Str "\1079\1072\1074\1080\1089\1080\1090",Space,Str "\1085\1072\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1089\1080\1083\1100\1085\1072",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1093\1074\1072\1090\1082\1072",Space,RawInline "latex" "\\In{IO}",Str ".",Space,Str "\1053\1077\1086\1073\1093\1086\1076\1080\1084\1086",Space,Str "\1091\1084\1077\1090\1100",Space,Str "\1074\1099\1076\1077\1083\1103\1090\1100",Space,Str "\1090\1086\1095\1082\1080",Str ",",Space,Str "\1074",Space,Str "\1082\1086\1090\1086\1088\1099\1093",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1077",Space,Str "\1087\1086\1073\1086\1095\1085\1099\1093",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1081",Space,Str "\1076\1077\1081\1089\1090\1074\1080\1090\1077\1083\1100\1085\1086",Space,Str "\1085\1077\1086\1073\1093\1086\1076\1080\1084\1086",Str ",",Space,Str "\1087\1086\1076\1082\1083\1102\1095\1072\1103",Space,Str "\1074",Space,Str "\1085\1080\1093",Space,Str "\1095\1080\1089\1090\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1095\1077\1088\1077\1079",Space,Str "\1084\1077\1090\1086\1076\1099",Space,Str "\1082\1083\1072\1089\1089\1086\1074",Space,RawInline "latex" "\\In{Functor}",Str ",",Space,RawInline "latex" "\\In{Applicative}",Space,Str "\1080",Space,RawInline "latex" "\\In{Monad}",Str ".",Space,Str "\1058\1080\1087",Space,RawInline "latex" "\\In{IO}",Space,Str "\1087\1086\1093\1086\1078",Space,Str "\1085\1072",Space,Str "\1076\1086\1088\1086\1075\1091",Space,Str "\1089",Space,Str "\1082\1086\1085\1090\1088\1086\1083\1100\1085\1099\1084\1080",Space,Str "\1087\1091\1085\1082\1090\1072\1084\1080",Str ",",Space,Str "\1074",Space,Str "\1082\1086\1090\1086\1088\1099\1093",Space,Str "\1085\1077\1086\1073\1093\1086\1076\1080\1084\1086",Space,Str "\1086\1090\1095\1080\1090\1072\1090\1100\1089\1103",Space,Str "\1087\1077\1088\1077\1076",Space,Str "\1082\1086\1084\1087\1080\1083\1103\1090\1086\1088\1086\1084",Space,Str "\1079\1072",Space,Quoted DoubleQuote [Str "\1075\1088\1103\1079\1085\1099\1081",Space,Str "\1082\1086\1076"],Str ".",Space,Str "\1055\1088\1080",Space,Str "\1085\1077\1091\1084\1077\1083\1086\1084",Space,Str "\1087\1088\1086\1077\1082\1090\1080\1088\1086\1074\1072\1085\1080\1080",Space,Str "\1085\1072\1087\1080\1089\1072\1085\1080\1077",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084",Str ",",Space,Str "\1085\1072\1089\1099\1097\1077\1085\1085\1099\1093",Space,Str "\1087\1086\1073\1086\1095\1085\1099\1084\1080",Space,Str "\1101\1092\1092\1077\1082\1090\1072\1084\1080",Str ",",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1087\1088\1077\1074\1088\1072\1090\1080\1090\1089\1103",Space,Str "\1074",Space,Str "\1087\1099\1090\1082\1091",Str ".",Space,Str "\1050\1086\1085\1090\1088\1086\1083\1100\1085\1099\1077",Space,Str "\1087\1091\1085\1082\1090\1099",Space,Str "\1073\1091\1076\1091\1090",Space,Str "\1074\1089\1090\1088\1077\1095\1072\1090\1100\1089\1103",Space,Str "\1074",Space,Str "\1082\1072\1078\1076\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str "."]
,Para [Str "\1045\1089\1090\1077\1089\1090\1074\1077\1085\1085\1099\1081",Space,Str "\1080\1089\1090\1086\1095\1085\1080\1082",Space,Str "\1087\1086\1073\1086\1095\1085\1099\1093",Space,Str "\1101\1092\1092\1077\1082\1090\1086\1074",Space,Str "\8211",Space,Str "\1101\1090\1086",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1077\1083\1100",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1099",Str ".",Space,Str "\1053\1086",Str ",",Space,Str "\1082",Space,Str "\1089\1086\1078\1072\1083\1077\1085\1080\1102",Str ",",Space,Str "\1101\1090\1086",Space,Str "\1085\1077",Space,Str "\1077\1076\1080\1085\1089\1090\1074\1077\1085\1085\1099\1081",Space,Str "\1080\1089\1090\1086\1095\1085\1080\1082",Str ".",Space,Str "Haskell",Space,Str "\8211",Space,Str "\1086\1090\1082\1088\1099\1090\1099\1081",Space,Str "\1103\1079\1099\1082",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1080\1088\1086\1074\1072\1085\1080\1103",Str ".",Space,Str "\1042",Space,Str "\1085\1105\1084",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100\1089\1103",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1072\1084\1080",Space,Str "\1080\1079",Space,Str "\1085\1080\1079\1082\1086\1091\1088\1086\1074\1085\1077\1074\1086\1075\1086",Space,Str "\1103\1079\1099\1082\1072",Space,Str "C",Str ".",Space,Str "\1054\1089\1085\1086\1074\1085\1086\1077",Space,Str "\1087\1088\1077\1080\1084\1091\1097\1077\1089\1090\1074\1086",Space,Str "\1057",Space,Str "\1079\1072\1082\1083\1102\1095\1072\1077\1090\1089\1103",Space,Str "\1074",Space,Str "\1085\1077\1087\1088\1077\1074\1079\1086\1081\1076\1105\1085\1085\1086\1081",Space,Str "\1089\1082\1086\1088\1086\1089\1090\1080",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084",Str ".",Space,Str "\1069\1090\1086\1090",Space,Str "\1103\1079\1099\1082",Space,Str "\1087\1086\1079\1074\1086\1083\1103\1077\1090",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1080\1089\1090\1091",Space,Str "\1088\1072\1073\1086\1090\1072\1090\1100",Space,Str "\1089",Space,Str "\1087\1072\1084\1103\1090\1100\1102",Space,Str "\1082\1086\1084\1087\1100\1102\1090\1077\1088\1072",Space,Str "\1085\1072\1087\1088\1103\1084\1091\1102",Str ".",Space,Str "\1053\1086",Space,Str "\1079\1072",Space,Str "\1101\1090\1091",Space,Str "\1089\1080\1083\1091",Space,Str "\1087\1088\1080\1093\1086\1076\1080\1090\1089\1103",Space,Str "\1087\1083\1072\1090\1080\1090\1100",Str ".",Space,Str "\1042\1086\1079\1084\1086\1078\1085\1099",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1085\1077\1087\1088\1080\1103\1090\1085\1099\1077",Space,Str "\1080",Space,Str "\1090\1088\1091\1076\1085\1086\1091\1083\1086\1074\1080\1084\1099\1077",Space,Str "\1086\1096\1080\1073\1082\1080",Str ".",Space,Str "\1059\1090\1077\1095\1082\1080",Space,Str "\1087\1072\1084\1103\1090\1080",Str ",",Space,Str "\1086\1073\1088\1072\1097\1077\1085\1080\1077",Space,Str "\1087\1086",Space,Str "\1085\1077\1074\1077\1088\1085\1086\1084\1091",Space,Str "\1072\1076\1088\1077\1089\1091",Space,Str "\1074",Space,Str "\1087\1072\1084\1103\1090\1080",Str ",",Space,Str "\1085\1077\1086\1078\1080\1076\1072\1085\1085\1086\1077",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1077",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1099\1093",Str ".",Space,Str "\1045\1097\1105",Space,Str "\1086\1076\1080\1085",Space,Str "\1087\1083\1102\1089",Space,Str "\1057",Space,Str "\1074",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1101\1090\1086",Space,Str "\1103\1079\1099\1082",Space,Str "\1089",Space,Str "\1080\1089\1090\1086\1088\1080\1077\1081",Str ",",Space,Str "\1085\1072",Space,Str "\1085\1105\1084",Space,Str "\1085\1072\1087\1080\1089\1072\1085\1086",Space,Str "\1084\1085\1086\1075\1086",Space,Str "\1093\1086\1088\1086\1096\1080\1093",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082",Str ".",Space,Str "\1053\1077\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1080\1079",Space,Str "\1085\1080\1093",Space,Str "\1074\1089\1090\1088\1086\1077\1085\1099",Space,Str "\1074",Space,Str "Haskell",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1086\1075\1086",Space,Str "\1084\1077\1093\1072\1085\1080\1079\1084\1072",Space,Str "FFI",Space,Str "(",Str "foreign",Space,Str "function",Space,Str "interface",Str ")",Str ".",Space,Str "\1054\1073\1089\1091\1078\1076\1077\1085\1080\1077",Space,Str "\1090\1086\1075\1086",Str ",",Space,Str "\1082\1072\1082",Space,Str "\1091\1089\1090\1088\1086\1077\1085",Space,Str "FFI",Space,Str "\1074\1099\1093\1086\1076\1080\1090",Space,Str "\1079\1072",Space,Str "\1088\1072\1084\1082\1080",Space,Str "\1101\1090\1086\1081",Space,Str "\1082\1085\1080\1075\1080",Str ".",Space,Str "\1048\1085\1090\1077\1088\1077\1089\1091\1102\1097\1080\1081\1089\1103",Space,Str "\1095\1080\1090\1072\1090\1077\1083\1100",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1086\1073\1088\1072\1090\1080\1090\1100\1089\1103",Space,Str "\1082",Space,Str "\1082\1085\1080\1075\1077",Space,Emph [Str "Real",Space,Str "World",Space,Str "Haskell"],Str ".",Space,Str "\1052\1099",Space,Str "\1078\1077",Space,Str "\1087\1086\1090\1088\1077\1085\1080\1088\1091\1077\1084\1089\1103",Space,Str "\1074",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1086\1074\1072\1085\1080\1080",Space,Str "\1090\1072\1082\1080\1093",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082",Str ".",Space,Str "\1071\1079\1099\1082",Space,Str "C",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1080\1084\1087\1077\1088\1072\1090\1080\1074\1085\1099\1084",Str ",",Space,Str "\1087\1086\1101\1090\1086\1084\1091",Str ",",Space,Str "\1087\1088\1080\1084\1077\1085\1103\1103",Space,Str "\1077\1075\1086",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1074",Space,Str "Haskell",Str ",",Space,Str "\1084\1099",Space,Str "\1085\1077\1080\1079\1073\1077\1078\1085\1086",Space,Str "\1089\1090\1072\1083\1082\1080\1074\1072\1077\1084\1089\1103",Space,Str "\1089",Space,Str "\1090\1080\1087\1086\1084",Space,RawInline "latex" "\\In{IO}",Str ",",Space,Str "\1087\1086\1089\1082\1086\1083\1100\1082\1091",Space,Str "\1073\1086\1083\1100\1096\1080\1085\1089\1090\1074\1086",Space,Str "\1080\1085\1090\1077\1088\1077\1089\1085\1099\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1074",Space,Str "\1057",Space,Str "\1080\1079\1084\1077\1085\1103\1102\1090",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1077",Space,Str "\1089\1074\1086\1080\1093",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1074",Str ".",Space,Str "\1042",Space,Str "\1057",Space,Str "\1087\1080\1096\1091\1090",Space,Str "\1080",Space,Str "\1095\1080\1089\1090\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1090\1072\1082\1080\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1087\1077\1088\1077\1085\1086\1089\1103\1090\1089\1103",Space,Str "\1074",Space,Str "Haskell",Space,Str "\1073\1077\1079",Space,Str "\1087\1086\1090\1077\1088\1080",Space,Str "\1095\1080\1089\1090\1086\1090\1099",Str ",",Space,Str "\1085\1086",Space,Str "\1101\1090\1086",Space,Str "\1085\1077",Space,Str "\1074\1089\1077\1075\1076\1072",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1086",Str "."]
,Para [Str "\1042",Space,Str "\1101\1090\1086\1081",Space,Str "\1075\1083\1072\1074\1077",Space,Str "\1084\1099",Space,Str "\1085\1072\1087\1080\1096\1077\1084",Space,Str "\1085\1077\1073\1086\1083\1100\1096\1091\1102",Space,Str "2D",Str "-",Str "\1080\1075\1088\1091",Str ",",Space,Str "\1087\1086\1076\1082\1083\1102\1095\1080\1074",Space,Str "\1076\1074\1077",Space,Str "FFI",Str "-",Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1080",Str ",",Space,Str "\1101\1090\1086",Space,Str "\1075\1088\1072\1092\1080\1095\1077\1089\1082\1072\1103",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1072",Space,RawInline "latex" "\\In{OpenGL}",Space,Str "\1080",Space,Str "\1092\1080\1079\1080\1095\1077\1089\1082\1080\1081",Space,Str "\1076\1074\1080\1078\1086\1082",Space,RawInline "latex" "\\In{Chipmunk}",Str "."]
,Header 4 [Str "\1054\1087\1080\1089\1072\1085\1080\1077",Space,Str "\1080\1075\1088\1099"]
,Para [Str "\1048\1075\1088\1072",Space,Str "\1087\1088\1086\1080\1089\1093\1086\1076\1080\1090",Space,Str "\1085\1072",Space,Str "\1073\1080\1083\1100\1103\1088\1076\1085\1086\1081",Space,Str "\1076\1086\1089\1082\1077",Str ".",Space,Str "\1048\1075\1088\1086\1082",Space,Str "\1091\1087\1088\1072\1074\1083\1103\1077\1090",Space,Str "\1082\1088\1072\1089\1085\1099\1084",Space,Str "\1096\1072\1088\1086\1084",Str ",",Space,Str "\1082\1083\1080\1082\1085\1091\1074",Space,Str "\1074",Space,Str "\1083\1102\1073\1091\1102",Space,Str "\1090\1086\1095\1082\1091",Space,Str "\1101\1082\1088\1072\1085\1072",Str ",",Space,Str "\1086\1085",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1080\1079\1084\1077\1085\1080\1090\1100",Space,Str "\1085\1072\1087\1088\1072\1074\1083\1077\1085\1080\1077",Space,Str "\1074\1077\1082\1090\1086\1088\1072",Space,Str "\1089\1082\1086\1088\1086\1089\1090\1080",Space,Str "\1082\1088\1072\1089\1085\1086\1075\1086",Space,Str "\1096\1072\1088\1072",Str ".",Space,Str "\1064\1072\1088",Space,Str "\1087\1086\1082\1072\1090\1080\1090\1089\1103",Space,Str "\1090\1091\1076\1072",Str ",",Space,Str "\1082\1091\1076\1072",Space,Str "\1082\1083\1080\1082\1085\1091\1083",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1077\1083\1100",Space,Str "\1074",Space,Str "\1087\1086\1089\1083\1077\1076\1085\1080\1081",Space,Str "\1088\1072\1079",Str ".",Space,Str "\1048\1079",Space,Str "\1083\1091\1079",Space,Str "\1073\1091\1076\1091\1090",Space,Str "\1074\1099\1083\1077\1090\1072\1090\1100",Space,Str "\1096\1072\1088\1099",Space,Str "\1090\1088\1105\1093",Space,Str "\1090\1080\1087\1086\1074",Str ":",Space,Str "\1089\1080\1085\1080\1077",Str ",",Space,Str "\1079\1077\1083\1105\1085\1099\1077",Space,Str "\1080",Space,Str "\1086\1088\1072\1085\1078\1077\1074\1099\1077",Str ".",Space,Str "\1057\1090\1086\1083\1082\1085\1086\1074\1077\1085\1080\1077",Space,Str "\1082\1088\1072\1089\1085\1086\1075\1086",Space,Str "\1096\1072\1088\1072",Space,Str "\1089",Space,Str "\1089\1080\1085\1080\1084",Space,Str "\1086\1079\1085\1072\1095\1072\1077\1090",Space,Str "\1084\1080\1085\1091\1089",Space,Str "\1086\1076\1085\1091",Space,Str "\1078\1080\1079\1085\1100",Str ",",Space,Str "\1089",Space,Str "\1079\1077\1083\1105\1085\1099\1084",Space,Str "\8211",Space,Str "\1087\1083\1102\1089",Space,Str "\1086\1076\1085\1091",Space,Str "\1078\1080\1079\1085\1100",Str ",",Space,Str "\1086\1088\1072\1085\1078\1077\1074\1099\1081",Space,Str "\1096\1072\1088",Space,Str "\1086\1079\1085\1072\1095\1072\1077\1090",Space,Str "\1073\1086\1085\1091\1089",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1096\1072\1088",Space,Str "\1080\1075\1088\1086\1082\1072",Space,Str "\1089\1090\1072\1083\1082\1080\1074\1072\1077\1090\1089\1103",Space,Str "\1089",Space,Str "\1086\1088\1072\1085\1078\1077\1074\1099\1084",Space,Str "\1096\1072\1088\1086\1084",Space,Str "\1074\1089\1077",Space,Str "\1096\1072\1088\1099",Space,Str "\1074",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1105\1085\1085\1086\1084",Space,Str "\1088\1072\1076\1080\1091\1089\1077",Space,Str "\1086\1090",Space,Str "\1084\1077\1089\1090\1072",Space,Str "\1089\1090\1086\1083\1082\1085\1086\1074\1077\1085\1080\1103",Space,Str "\1080\1089\1095\1077\1079\1072\1102\1090",Space,Str "\1080",Space,Str "\1079\1072\1087\1080\1089\1099\1074\1072\1102\1090\1089\1103",Space,Str "\1074",Space,Str "\1073\1086\1085\1091\1089\1085\1099\1077",Space,Str "\1086\1095\1082\1080",Str ",",Space,Str "\1079\1072",Space,Str "\1082\1072\1078\1076\1099\1081",Space,Str "\1096\1072\1088",Space,Str "\1087\1086",Space,Str "\1086\1076\1085\1086\1084\1091",Space,Str "\1086\1095\1082\1091",Str ",",Space,Str "\1087\1088\1080",Space,Str "\1101\1090\1086\1084",Space,Str "\1096\1072\1088",Space,Str "\1089",Space,Str "\1082\1086\1090\1086\1088\1099\1084",Space,Str "\1087\1088\1086\1080\1079\1086\1096\1083\1086",Space,Str "\1089\1090\1086\1083\1082\1085\1086\1074\1077\1085\1080\1077",Space,Str "\1085\1077",Space,Str "\1089\1095\1080\1090\1072\1077\1090\1089\1103",Str ".",Space,Str "\1042\1089\1077",Space,Str "\1089\1090\1086\1083\1082\1085\1086\1074\1077\1085\1080\1103",Space,Str "\8211",Space,Str "\1072\1073\1089\1086\1083\1102\1090\1085\1086",Space,Str "\1091\1087\1088\1091\1075\1080\1077",Str ",",Space,Str "\1087\1086\1101\1090\1086\1084\1091",Space,Str "\1087\1088\1080",Space,Str "\1089\1090\1086\1083\1082\1085\1086\1074\1077\1085\1080\1080",Space,Str "\1101\1085\1077\1088\1075\1080\1103",Space,Str "\1089\1086\1093\1088\1072\1085\1103\1077\1090\1089\1103",Space,Str "\1080",Space,Str "\1096\1072\1088\1099",Space,Str "\1085\1080\1082\1086\1075\1076\1072",Space,Str "\1085\1077",Space,Str "\1086\1089\1090\1072\1085\1086\1074\1103\1090\1089\1103",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1096\1072\1088",Space,Str "\1087\1086\1087\1072\1076\1072\1077\1090",Space,Str "\1074",Space,Str "\1083\1091\1079\1091",Str ",",Space,Str "\1090\1086",Space,Str "\1086\1085",Space,Str "\1080\1089\1095\1077\1079\1072\1077\1090",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1074",Space,Str "\1083\1091\1079\1091",Space,Str "\1087\1086\1087\1072\1083",Space,Str "\1096\1072\1088",Space,Str "\1080\1075\1088\1086\1082\1072",Space,Str "\8211",Space,Str "\1101\1090\1086",Space,Str "\1086\1079\1085\1072\1095\1072\1077\1090",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1080\1075\1088\1072",Space,Str "\1086\1082\1086\1085\1095\1077\1085\1072",Str ".",Space,Str "\1048\1075\1088\1086\1082",Space,Str "\1089\1090\1072\1088\1090\1091\1077\1090",Space,Str "\1089",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1080\1084\1080",Space,Str "\1078\1080\1079\1085\1103\1084\1080",Str ",",Space,Str "\1082\1086\1075\1076\1072",Space,Str "\1080\1093",Space,Str "\1095\1080\1089\1083\1086",Space,Str "\1087\1086\1076\1093\1086\1076\1080\1090",Space,Str "\1082",Space,Str "\1085\1091\1083\1102",Space,Str "\1080\1075\1088\1072",Space,Str "\1086\1089\1090\1072\1085\1072\1074\1083\1080\1074\1072\1077\1090\1089\1103",Str ".",Space,Str "\1055\1086\1089\1083\1077",Space,Str "\1089\1090\1086\1083\1082\1085\1086\1074\1077\1085\1080\1103",Space,Str "\1089",Space,Str "\1079\1077\1083\1105\1085\1099\1084",Space,Str "\1096\1072\1088\1086\1084",Str ",",Space,Str "\1096\1072\1088",Space,Str "\1087\1088\1086\1087\1072\1076\1072\1077\1090",Str ",",Space,Str "\1072",Space,Str "\1087\1086\1089\1083\1077",Space,Str "\1089\1090\1086\1083\1082\1085\1086\1074\1077\1085\1080\1103",Space,Str "\1089",Space,Str "\1089\1080\1085\1080\1084",Space,Str "\8211",Space,Str "\1085\1077\1090",Str ".",Space,Str "\1042",Space,Str "\1080\1090\1086\1075\1077",Space,Str "\1074\1089\1077",Space,Str "\1087\1088\1086\1090\1080\1074",Space,Str "\1080\1075\1088\1086\1082\1072",Str ",",Space,Str "\1082\1088\1086\1084\1077",Space,Str "\1079\1077\1083\1105\1085\1099\1093",Space,Str "\1080",Space,Str "\1086\1088\1072\1085\1078\1077\1074\1099\1093",Space,Str "\1096\1072\1088\1086\1074",Str "."]
,Header 2 [Str "\1054\1089\1085\1086\1074\1085\1099\1077",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1080"]
,Para [Str "\1050\1086\1085\1090\1088\1086\1083\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1092\1080\1079\1080\1082\1091",Space,Str "\1080\1075\1088\1086\1074\1086\1075\1086",Space,Str "\1084\1080\1088\1072",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1072",Space,RawInline "latex" "\\In{Chipmunk}",Str ",",Space,Str "\1072",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1072",Space,RawInline "latex" "\\In{OpenGL}",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1088\1080\1089\1086\1074\1072\1090\1100",Space,Str "(",Str "\1082\1086\1085\1077\1095\1085\1086",Space,Str "\1077\1089\1083\1080",Space,Str "\1084\1099",Space,Str "\1077\1105",Space,Str "\1101\1090\1086\1084\1091",Space,Str "\1085\1072\1091\1095\1080\1084",Str ")",Str ".",Space,Str "\1055\1088\1080\1096\1083\1086",Space,Str "\1074\1088\1077\1084\1103",Space,Str "\1089",Space,Str "\1085\1080\1084\1080",Space,Str "\1087\1086\1079\1085\1072\1082\1086\1084\1080\1090\1089\1103",Str "."]
,Header 3 [Str "\1048\1079\1084\1077\1085\1103\1077\1084\1099\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103"]
,Para [Str "\1055\1077\1088\1077\1076",Space,Str "\1090\1077\1084",Space,Str "\1082\1072\1082",Space,Str "\1084\1099",Space,Str "\1087\1077\1088\1077\1081\1076\1105\1084",Space,Str "\1082",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1072\1084",Space,Str "\1085\1072\1084",Space,Str "\1085\1091\1078\1085\1086",Space,Str "\1091\1079\1085\1072\1090\1100",Space,Str "\1077\1097\1105",Space,Str "\1082\1086\1077",Str "-",Str "\1095\1090\1086",Str ".",Space,Str "\1042",Space,Str "Haskell",Space,Str "\1084\1099",Space,Str "\1085\1077",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1080\1079\1084\1077\1085\1103\1090\1100",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str ".",Space,Str "\1053\1086",Space,Str "\1074",Space,Str "\1057",Space,Str "\1101\1090\1086",Space,Str "\1076\1077\1083\1072\1077\1090\1089\1103",Space,Str "\1087\1086\1089\1090\1086\1103\1085\1085\1086",Str ",",Space,Str "\1072",Space,Str "\1089\1086\1086\1090\1074\1077\1090\1089\1090\1074\1077\1085\1085\1086",Space,Str "\1080",Space,Str "\1074",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1072\1093",Space,Str "\1085\1072\1087\1080\1089\1072\1085\1085\1099\1093",Space,Str "\1085\1072",Space,Str "\1057",Space,Str "\1090\1086\1078\1077",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1090\1086\1075\1086",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1080\1084\1080\1090\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1074",Space,Str "Haskell",Space,Str "\1084\1077\1093\1072\1085\1080\1079\1084",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1103",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Space,Str "\1073\1099\1083\1080",Space,Str "\1087\1088\1080\1076\1091\1084\1072\1085\1099",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1099\1077",Space,Str "\1090\1080\1087\1099",Str ".",Space,Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1086\1073\1098\1103\1074\1080\1090\1100",Space,Str "\1080\1079\1084\1077\1085\1103\1077\1084\1086\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1080",Space,Str "\1086\1073\1085\1086\1074\1083\1103\1090\1100",Space,Str "\1077\1075\1086",Str ",",Space,Str "\1085\1086",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1074",Space,Str "\1087\1088\1077\1076\1077\1083\1072\1093",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{IO}",Str "."]
,Header 4 [Str "IORef"]
,Para [Str "\1058\1080\1087",Space,RawInline "latex" "\\In{IORef}",Space,Str "\1080\1079",Space,Str "\1084\1086\1076\1091\1083\1103",Space,RawInline "latex" "\\In{Data.IORef}",Space,Str "\1086\1087\1080\1089\1099\1074\1072\1077\1090",Space,Str "\1080\1079\1084\1077\1085\1103\1077\1084\1099\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nnewIORef :: a -> IO IORef\n\nreadIORef   :: IORef a -> IO a\nwriteIORef  :: IORef a -> a -> IO ()\nmodifyIORef :: IORef a -> (a -> a) -> IO ()\n\\end{code}\n"
,Para [Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{newIORef}",Space,Str "\1089\1086\1079\1076\1072\1105\1090",Space,Str "\1080\1079\1084\1077\1085\1103\1077\1084\1086\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1080",Space,Str "\1080\1085\1080\1094\1080\1072\1083\1080\1079\1080\1088\1091\1077\1090",Space,Str "\1077\1075\1086",Space,Str "\1085\1077\1082\1086\1090\1086\1088\1099\1084",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077\1084",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1089\1095\1080\1090\1072\1090\1100",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{readIORef}",Space,Str "\1080\1083\1080",Space,Str "\1086\1073\1085\1086\1074\1080\1090\1100",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,RawInline "latex" "\\In{writeIORef}",Space,Str "\1080\1083\1080",Space,RawInline "latex" "\\In{modifyIORef}",Str ".",Space,Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1082\1072\1082",Space,Str "\1101\1090\1086",Space,Str "\1088\1072\1073\1086\1090\1072\1077\1090",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nmodule Main where\n\nimport Data.IORef\n\nmain = var >>= (\\v -> \n       readIORef v >>= print \n    >> writeIORef v 4 \n    >> readIORef v >>= print)\n    where var = newIORef 2    \n\\end{code}\n"
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1086\1090\1074\1077\1090",Space,RawInline "latex" "\\In{ghci}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Main> :l HelloIORef\n[1 of 1] Compiling Main             ( HelloIORef.hs, interpreted )\nOk, modules loaded: Main.\n*Main> main\n2\n4\n\\end{code}\n"
,Para [Str "\1057\1072\1084\1086\1077",Space,Str "\1074\1088\1077\1084\1103",Space,Str "\1074\1077\1088\1085\1091\1090\1100\1089\1103",Space,Str "\1082",Space,Str "\1075\1083\1072\1074\1077",Space,Str "17",Space,Str "\1080",Space,Str "\1074\1089\1087\1086\1084\1085\1080\1090\1100",Space,Str "\1086",Space,RawInline "latex" "\\In{do}",Str "-",Str "\1085\1086\1090\1072\1094\1080\1080",Str ".",Space,Str "\1058\1072\1082\1086\1081",Space,Str "\1080\1084\1087\1077\1088\1072\1090\1080\1074\1085\1099\1081",Space,Str "\1082\1086\1076",Space,Str "\1075\1086\1088\1072\1079\1076\1086",Space,Str "\1085\1072\1075\1083\1103\1076\1085\1077\1077",Space,Str "\1087\1080\1089\1072\1090\1100",Space,Str "\1090\1072\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nmain = do\n    var <- newIORef 2\n    x <- readIORef var\n    print x\n    writeIORef var 4\n    x <- readIORef var\n    print x\n\\end{code}\n"
,Para [Str "\1069\1090\1072",Space,Str "\1079\1072\1087\1080\1089\1100",Space,Str "\1074\1099\1075\1083\1103\1076\1080\1090",Space,Str "\1082\1072\1082",Space,Str "\1087\1086\1089\1083\1077\1076\1086\1074\1072\1090\1077\1083\1100\1085\1086\1089\1090\1100",Space,Str "\1076\1077\1081\1089\1090\1074\1080\1081",Str ".",Space,Str "\1053\1077",Space,Str "\1087\1088\1072\1074\1076\1072",Space,Str "\1083\1080",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1087\1086\1093\1086\1078\1077",Space,Str "\1085\1072",Space,Str "\1086\1073\1099\1095\1085\1099\1081",Space,Str "\1080\1084\1087\1077\1088\1072\1090\1080\1074\1085\1099\1081",Space,Str "\1103\1079\1099\1082",Str ".",Space,Str "\1058\1072\1082\1080\1077",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1099\1077",Space,Str "\1074\1089\1090\1088\1077\1095\1072\1102\1090\1089\1103",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1095\1072\1089\1090\1086",Space,Str "\1074",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1072\1093",Str ",",Space,Str "\1079\1072\1080\1084\1089\1090\1074\1086\1074\1072\1085\1085\1099\1093",Space,Str "\1080\1079",Str "~",Str "\1057",Str "."]
,Header 4 [Str "StateVar"]
,Para [Str "\1042",Space,Str "\1084\1086\1076\1091\1083\1077",Space,RawInline "latex" "\\In{Data.StateVar}",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1099",Space,Str "\1090\1080\1087\1099",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1085\1072\1082\1083\1072\1076\1099\1074\1072\1102\1090",Space,Str "\1086\1075\1088\1072\1085\1080\1095\1077\1085\1080\1077",Space,Str "\1085\1072",Space,Str "\1087\1088\1072\1074\1072",Space,Str "\1087\1086",Space,Str "\1095\1090\1077\1085\1080\1102",Space,Str "\1080",Space,Str "\1079\1072\1087\1080\1089\1080",Str ".",Space,Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1090\1100",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1099\1077",Space,Str "\1076\1086\1089\1090\1091\1087\1085\1099\1077",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1076\1083\1103",Space,Str "\1095\1090\1077\1085\1080\1103",Space,Str "(",RawInline "latex" "\\In{GettableStateVar a}",Str ")",Str ",",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1076\1083\1103",Space,Str "\1079\1072\1087\1080\1089\1080",Space,Str "(",RawInline "latex" "\\In{SettableStateVar a}",Str ")",Space,Str "\1080\1083\1080",Space,Str "\1086\1073\1099\1095\1085\1099\1077",Space,Str "\1080\1079\1084\1077\1085\1103\1077\1084\1099\1077",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1099\1077",Space,Str "(",RawInline "latex" "\\In{SetVar a}",Str ")",Str "."]
,Para [Str "\1054\1087\1077\1088\1072\1094\1080\1080",Space,Str "\1095\1090\1077\1085\1080\1103",Space,Str "\1080",Space,Str "\1079\1072\1087\1080\1089\1080",Space,Str "\1086\1087\1080\1089\1099\1074\1072\1102\1090\1089\1103",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1082\1083\1072\1089\1089\1086\1074",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nclass HasGetter s where\n    get :: s a -> IO a\n\nclass HasSetter s where\n    ($=) :: s a -> a -> IO ()\n\\end{code}\n"
,Para [Str "\1058\1080\1087",Space,RawInline "latex" "\\In{IORef}",Space,Str "\1087\1088\1080\1085\1072\1076\1083\1077\1078\1080\1090",Space,Str "\1080",Space,Str "\1090\1086\1084\1091",Str ",",Space,Str "\1080",Space,Str "\1076\1088\1091\1075\1086\1084\1091",Space,Str "\1082\1083\1072\1089\1089\1091",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nmain = do\n    var <- newIORef 2\n    x   <- get var\n    print x\n    var $= 4\n    x   <- get var\n    print x\n\\end{code}\n"
,Header 3 [Str "OpenGL"]
,Para [RawInline "latex" "\\In{OpenGL}",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1103\1088\1082\1080\1084",Space,Str "\1087\1088\1080\1084\1077\1088\1086\1084",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1080",Space,Str "\1087\1086\1089\1090\1088\1086\1077\1085\1085\1086\1081",Space,Str "\1085\1072",Space,Str "\1080\1079\1084\1077\1085\1103\1077\1084\1099\1093",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1099\1093",Str ".",Space,RawInline "latex" "\\In{OpenGL}",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1087\1088\1077\1076\1089\1090\1072\1074\1080\1090\1100",Space,Str "\1082\1072\1082",Space,Str "\1073\1086\1083\1100\1096\1086\1081",Space,Str "\1082\1086\1085\1077\1095\1085\1099\1081",Space,Str "\1072\1074\1090\1086\1084\1072\1090",Str ".",Space,Str "\1050\1072\1078\1076\1072\1103",Space,Str "\1089\1090\1088\1086\1095\1082\1072",Space,Str "\1082\1086\1076\1072",Space,Str "\8211",Space,Str "\1101\1090\1086",Space,Str "\1079\1072\1087\1088\1086\1089",Space,Str "\1085\1072",Space,Str "\1080\1079\1084\1077\1085\1077\1085\1080\1077",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1103",Str ".",Space,Str "\1055\1088\1080\1095\1105\1084",Space,Str "\1101\1090\1086\1090",Space,Str "\1072\1074\1090\1086\1084\1072\1090",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1075\1083\1086\1073\1072\1083\1100\1085\1086\1081",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1086\1081",Str ".",Space,Str "\1045\1075\1086",Space,Str "\1090\1077\1082\1091\1097\1077\1077",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1077",Space,Str "\1079\1072\1074\1080\1089\1080\1090",Space,Str "\1086\1090",Space,Str "\1074\1089\1077\1081",Space,Str "\1094\1077\1087\1086\1095\1082\1080",Space,Str "\1087\1088\1077\1076\1099\1076\1091\1097\1080\1093",Space,Str "\1082\1086\1084\1072\1085\1076",Str ".",Space,Str "\1055\1072\1088\1072\1084\1077\1090\1088\1099",Space,Str "\1088\1080\1089\1086\1074\1072\1085\1080\1103",Space,Str "\1079\1072\1076\1072\1102\1090\1089\1103",Space,Str "\1075\1083\1086\1073\1072\1083\1100\1085\1099\1084\1080",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1099\1084\1080",Space,Str "(",Str "\1090\1080\1087",Space,RawInline "latex" "\\In{StateVar}",Str ")",Str "."]
,Para [RawInline "latex" "\\In{OpenGL}",Space,Str "\1085\1077",Space,Str "\1079\1072\1074\1080\1089\1080\1090",Space,Str "\1086\1090",Space,Str "\1082\1086\1085\1082\1088\1077\1090\1085\1086\1081",Space,Str "\1086\1082\1086\1085\1085\1086\1081",Space,Str "\1089\1080\1089\1090\1077\1084\1099",Str ",",Space,Str "\1086\1085\1072",Space,Str "\1086\1090\1074\1077\1095\1072\1077\1090",Space,Str "\1083\1080\1096\1100",Space,Str "\1079\1072",Space,Str "\1088\1080\1089\1086\1074\1072\1085\1080\1077",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1090\1086\1075\1086",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1089\1086\1079\1076\1072\1090\1100",Space,Str "\1086\1082\1085\1086",Space,Str "\1080",Space,Str "\1087\1077\1088\1077\1093\1074\1072\1090\1099\1074\1072\1090\1100",Space,Str "\1074",Space,Str "\1085\1105\1084",Space,Str "\1076\1077\1081\1089\1090\1074\1080\1103",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1077\1083\1103",Space,Str "\1085\1072\1084",Space,Str "\1087\1086\1085\1072\1076\1086\1073\1080\1090\1089\1103",Space,Str "\1086\1090\1076\1077\1083\1100\1085\1072\1103",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1072",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1084\1099",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1091\1077\1084\1089\1103",Space,RawInline "latex" "\\In{GLFW}",Str ",",Space,Str "\1101\1090\1086",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1072",Space,Str "\1090\1072\1082\1078\1077",Space,Str "\1087\1088\1080\1096\1083\1072",Space,Str "\1074",Space,Str "Haskell",Space,Str "\1080\1079",Space,Str "\1057",Str ".",Space,Str "\1048\1085\1090\1077\1088\1092\1077\1081\1089\1099",Space,RawInline "latex" "\\In{GLFW}",Space,Str "\1080",Space,RawInline "latex" "\\In{OpenGL}",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1087\1086\1093\1086\1078\1080",Str ".",Space,Str "\1052\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1086\1073\1085\1086\1074\1083\1103\1090\1100",Space,Str "\1088\1072\1079\1083\1080\1095\1085\1099\1077",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1099",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1080",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{StateVar}",Str ".",Space,Str "\1044\1072\1074\1072\1081\1090\1077",Space,Str "\1089\1086\1079\1076\1072\1076\1080\1084",Space,Str "\1086\1082\1085\1086",Space,Str "\1080",Space,Str "\1079\1072\1082\1088\1072\1089\1080\1084",Space,Str "\1092\1086\1085",Space,Str "\1073\1077\1083\1099\1084",Space,Str "\1094\1074\1077\1090\1086\1084",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nmodule Main where\n\nimport Graphics.UI.GLFW           \nimport Graphics.Rendering.OpenGL\nimport System.Exit\n\ntitle = \"Hello OpenGL\"\n\nwidth   = 700\nheight  = 600\n\nmain = do\n    initialize\n    openWindow (Size width height) [] Window\n    windowTitle $= title\n      \n    clearColor $= Color4 1 1 1 1\n    \n    windowCloseCallback $= exitWith ExitSuccess\n    loop\n\nloop = do\n    display\n    loop\n\ndisplay = do\n    clear [ColorBuffer]\n    swapBuffers\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1080\1085\1080\1094\1080\1072\1083\1080\1079\1080\1088\1091\1077\1084",Space,RawInline "latex" "\\In{GLFW}",Str ",",Space,Str "\1079\1072\1076\1072\1105\1084",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1099",Space,Str "\1086\1082\1085\1072",Str ".",Space,Str "\1059\1089\1090\1072\1085\1072\1074\1083\1080\1074\1072\1077\1084",Space,Str "\1094\1074\1077\1090",Space,Str "\1092\1086\1085\1072",Str ".",Space,Str "\1062\1074\1077\1090",Space,Str "\1080\1084\1077\1077\1090",Space,Str "\1095\1077\1090\1099\1088\1077",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1072",Space,Str "\1101\1090\1086",Space,Str "RGB",Str "-",Str "\1094\1074\1077\1090\1072",Space,Str "\1080",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088",Space,Str "\1087\1088\1086\1079\1088\1072\1095\1085\1086\1089\1090\1080",Str ".",Space,Str "\1047\1072\1090\1077\1084",Space,Str "\1084\1099",Space,Str "\1075\1086\1074\1086\1088\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1077",Space,Str "\1076\1077\1083\1072\1090\1100",Space,Str "\1087\1088\1080",Space,Str "\1079\1072\1082\1088\1099\1090\1080\1080",Space,Str "\1086\1082\1085\1072",Str ".",Space,Str "\1052\1099",Space,Str "\1091\1089\1090\1072\1085\1072\1074\1083\1080\1074\1072\1077\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1086\1073\1088\1072\1090\1085\1086\1075\1086",Space,Str "\1074\1099\1079\1086\1074\1072",Space,Str "(",Str "callback",Str ")",Space,RawInline "latex" "\\In{windowCloseCallback}",Str ".",Space,Str "\1042",Space,Str "\1089\1072\1084\1086\1084",Space,Str "\1082\1086\1085\1094\1077",Space,Str "\1084\1099",Space,Str "\1074\1093\1086\1076\1080\1084",Space,Str "\1074",Space,Str "\1094\1080\1082\1083",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1080",Space,Str "\1076\1077\1083\1072\1077\1090",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1089\1090\1080\1088\1072\1077\1090",Space,Str "\1086\1082\1085\1086",Space,Str "\1094\1074\1077\1090\1086\1084",Space,Str "\1092\1086\1085\1072",Space,Str "\1080",Space,Str "\1076\1077\1083\1072\1077\1090",Space,Str "\1088\1072\1073\1086\1095\1080\1081",Space,Str "\1073\1091\1092\1077\1088",Space,Str "\1074\1080\1076\1080\1084\1099\1084",Str ".",Space,Str "\1063\1090\1086",Space,Str "\1090\1072\1082\1086\1077",Space,Str "\1073\1091\1092\1077\1088",Str "?",Space,Str "\1041\1091\1092\1077\1088",Space,Str "\8211",Space,Str "\1101\1090\1086",Space,Str "\1084\1077\1089\1090\1086",Space,Str "\1074",Space,Str "\1082\1086\1090\1086\1088\1086\1084",Space,Str "\1084\1099",Space,Str "\1088\1080\1089\1091\1077\1084",Str ".",Space,Str "\1059",Space,Str "\1085\1072\1089",Space,Str "\1077\1089\1090\1100",Space,Str "\1076\1074\1072",Space,Str "\1073\1091\1092\1077\1088\1072",Str ".",Space,Str "\1054\1076\1080\1085",Space,Str "\1084\1099",Space,Str "\1087\1086\1082\1072\1079\1099\1074\1072\1077\1084",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1077\1083\1102",Str ",",Space,Str "\1072",Space,Str "\1074",Space,Str "\1076\1088\1091\1075\1086\1084",Space,Str "\1074",Space,Str "\1101\1090\1086",Space,Str "\1074",Space,Str "\1074\1088\1077\1084\1103",Space,Str "\1088\1080\1089\1091\1077\1084",Str ",",Space,Str "\1082\1086\1075\1076\1072",Space,Str "\1087\1088\1080\1093\1086\1076\1080\1090",Space,Str "\1074\1088\1077\1084\1103",Space,Str "\1086\1073\1085\1086\1074\1083\1103\1090\1100",Space,Str "\1082\1072\1088\1090\1080\1085\1082\1091",Space,Str "\1084\1099",Space,Str "\1087\1088\1086\1089\1090\1086",Space,Str "\1084\1077\1085\1103\1077\1084",Space,Str "\1080\1093",Space,Str "\1084\1077\1089\1090\1072\1084\1080",Space,Str "\1082\1086\1084\1072\1085\1076\1086\1081",Space,RawInline "latex" "\\In{swapBuffers}",Str "."]
,Para [Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1087\1086\1083\1091\1095\1080\1083\1086\1089\1100",Str ":"]
,RawBlock "latex" "\n\\begin{verbatim}\n$ ghc --make HelloOpenGL.hs\n$ ./HelloOpenGL\n\\end{verbatim}\n"
,Para [Str "\1053\1072\1088\1080\1089\1091\1077\1084",Space,Str "\1091\1087\1088\1086\1097\1105\1085\1085\1086\1077",Space,Str "\1085\1072\1095\1072\1083\1100\1085\1086\1077",Space,Str "\1087\1086\1083\1086\1078\1077\1085\1080\1077",Space,Str "\1085\1072\1096\1077\1081",Space,Str "\1080\1075\1088\1099",Str ":",Space,Str "\1087\1088\1103\1084\1086\1091\1075\1086\1083\1100\1085\1091\1102",Space,Str "\1088\1072\1084\1082\1091",Space,Str "\1080",Space,Str "\1074",Space,Str "\1085\1077\1081",Space,Str "\8211",Space,Str "\1082\1088\1072\1089\1085\1099\1081",Space,Str "\1096\1072\1088",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nmodule Main where\n\nimport Graphics.UI.GLFW           \nimport Graphics.Rendering.OpenGL\n\nimport System.Exit\n\ntitle = \"Hello OpenGL\"\n\nwidth, height :: GLsizei\n\nwidth   = 700\nheight  = 600\n    \nw2, h2 :: GLfloat\n\nw2 = (fromIntegral $ width) / 2\nh2 = (fromIntegral $ height)  / 2\n\ndw2, dh2 :: GLdouble\n\ndw2 = fromRational $ toRational w2\ndh2 = fromRational $ toRational h2\n\nmain = do\n    initialize\n    openWindow (Size width height) [] Window\n    windowTitle $= title\n\n    clearColor $= Color4 1 1 1 1\n    ortho (-dw2-50) (dw2+50) (-dh2-50) (dh2+50) (-1) 1\n   \n    windowCloseCallback $= exitWith ExitSuccess\n    windowSizeCallback  $= (\\size -> viewport $= (Position 0 0, size))\n\n    loop\n\nloop = do\n    display\n    loop\n\ndisplay = do\n    clear [ColorBuffer]\n\n    color black\n    line (-w2) (-h2) (-w2) h2\n    line (-w2) h2    w2    h2\n    line w2    h2    w2    (-h2)\n    line w2   (-h2)  (-w2) (-h2)\n\n    color red\n    circle 0 0 10\n\n    swapBuffers\n\n\nvertex2f :: GLfloat -> GLfloat -> IO ()\nvertex2f a b = vertex (Vertex3 a b 0)\n\n-- colors\n\nwhite = Color4 (0::GLfloat)\nblack = Color4 (0::GLfloat) 0 0 1\nred   = Color4 (1::GLfloat) 0 0 1\n\n-- primitives\n\nline :: GLfloat -> GLfloat -> GLfloat -> GLfloat -> IO ()\nline ax ay bx by = renderPrimitive Lines $ do\n    vertex2f ax ay\n    vertex2f bx by\n\n\ncircle :: GLfloat -> GLfloat -> GLfloat -> IO ()\ncircle cx cy rad = \n    renderPrimitive Polygon $ mapM_ (uncurry vertex2f) points\n    where n = 50\n          points = zip xs ys\n          xs = fmap (\\x -> cx + rad * sin (2*pi*x/n)) [0 .. n]\n          ys = fmap (\\x -> cy + rad * cos (2*pi*x/n)) [0 .. n]\n\\end{code}\n"
,Para [RawInline "tex" "\\Fig{\1053\1072\1095\1072\1083\1100\1085\1086\1077 \1087\1086\1083\1086\1078\1077\1085\1080\1077}{../pic/20/Static.ps}{Static}{0.4}"]
,Para [Str "\1052\1099",Space,Str "\1088\1080\1089\1091\1077\1084",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{renderPrimitive}",Str ".",Space,Str "\1054\1085\1072",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1084\1077\1090\1082\1091",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1072",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1084\1099",Space,Str "\1089\1086\1073\1080\1088\1072\1077\1084\1089\1103",Space,Str "\1088\1080\1089\1086\1074\1072\1090\1100",Space,Str "\1080",Space,Str "\1085\1072\1073\1086\1088",Space,Str "\1074\1077\1088\1096\1080\1085",Str ".",Space,Str "\1058\1072\1082",Space,Str "\1084\1077\1090\1082\1072",Space,RawInline "latex" "\\In{Lines}",Space,Str "\1086\1073\1086\1079\1085\1072\1095\1072\1077\1090",Space,Str "\1083\1080\1085\1080\1080",Str ",",Space,Str "\1072",Space,Str "\1084\1077\1090\1082\1072",Space,RawInline "latex" "\\In{Polygon}",Space,Str "\8211",Space,Str "\1079\1072\1082\1088\1072\1096\1077\1085\1085\1099\1077",Space,Str "\1084\1085\1086\1075\1086\1091\1075\1086\1083\1100\1085\1080\1082\1080",Str ".",Space,Str "\1042",Space,RawInline "latex" "\\In{OpenGL}",Space,Str "\1085\1077\1090",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1086\1081",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Space,Str "\1076\1083\1103",Space,Str "\1088\1080\1089\1086\1074\1072\1085\1080\1103",Space,Str "\1086\1082\1088\1091\1078\1085\1086\1089\1090\1077\1081",Str ",",Space,Str "\1087\1086\1101\1090\1086\1084\1091",Space,Str "\1085\1072\1084",Space,Str "\1087\1088\1080\1076\1105\1090\1089\1103",Space,Str "\1087\1088\1077\1076\1089\1090\1072\1074\1080\1090\1100",Space,Str "\1086\1082\1088\1091\1078\1085\1086\1089\1090\1100",Space,Str "\1074",Space,Str "\1074\1080\1076\1077",Space,Str "\1084\1085\1086\1075\1086\1091\1075\1086\1083\1100\1085\1080\1082\1072",Space,Str "(",RawInline "latex" "\\In{circle}",Str ")",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{ortho}",Space,Str "\1091\1089\1090\1072\1085\1072\1074\1083\1080\1074\1072\1077\1090",Space,Str "\1086\1073\1083\1072\1089\1090\1100",Space,Str "\1074\1080\1076\1080\1084\1086\1089\1090\1080",Space,Str "\1088\1080\1089\1091\1085\1082\1072",Str ",",Space,Str "\1096\1077\1089\1090\1100",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1074",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1086\1073\1086\1079\1085\1072\1095\1072\1102\1090",Space,Str "\1087\1072\1088\1099",Space,Str "\1076\1080\1072\1087\1072\1079\1086\1085\1086\1074",Space,Str "\1087\1086",Space,Str "\1082\1072\1078\1076\1086\1081",Space,Str "\1080\1079",Space,Str "\1090\1088\1105\1093",Space,Str "\1082\1086\1086\1088\1076\1080\1085\1072\1090",Str ".",Space,Str "\1055\1088\1080",Space,Str "\1101\1090\1086\1084",Space,Str "\1074\1077\1088\1096\1080\1085\1099",Space,Str "\1087\1077\1088\1077\1076\1072\1102\1090\1089\1103",Space,Str "\1085\1077",Space,Str "\1089\1087\1080\1089\1082\1086\1084",Space,Str "\1072",Space,Str "\1074",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1086\1084",Space,RawInline "latex" "\\In{do}",Str "-",Str "\1073\1083\1086\1082\1077",Str ".",Space,Str "\1047\1072",Space,Str "\1089\1095\1105\1090",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1080\1079\1084\1077\1085\1080\1090\1100",Space,Str "\1082\1072\1082\1080\1077",Str "-",Str "\1085\1080\1073\1091\1076\1100",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1099",Space,RawInline "latex" "\\In{OpenGL}",Space,Str "\1074\1086",Space,Str "\1074\1088\1077\1084\1103",Space,Str "\1088\1080\1089\1086\1074\1072\1085\1080\1103",Str ".",Space,Str "\1054\1073\1088\1072\1090\1080\1090\1077",Space,Str "\1074\1085\1080\1084\1072\1085\1080\1077",Space,Str "\1085\1072",Space,Str "\1090\1086",Str ",",Space,Str "\1082\1072\1082",Space,Str "\1084\1099",Space,Str "\1080\1079\1084\1077\1085\1103\1077\1084",Space,Str "\1094\1074\1077\1090",Space,Str "\1087\1088\1080\1084\1080\1090\1080\1074\1072",Str ".",Space,Str "\1055\1077\1088\1077\1076",Space,Str "\1090\1077\1084",Space,Str "\1082\1072\1082",Space,Str "\1088\1080\1089\1086\1074\1072\1090\1100",Space,Str "\1087\1088\1080\1084\1080\1090\1080\1074",Space,Str "\1084\1099",Space,Str "\1091\1089\1090\1072\1085\1072\1074\1083\1080\1074\1072\1077\1084",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1094\1074\1077\1090\1072",Space,Str "(",RawInline "latex" "\\In{color}",Str ")",Str "."]
,Header 4 [Str "\1040\1085\1080\1084\1072\1094\1080\1103"]
,Para [Str "\1054\1078\1080\1074\1080\1084",Space,Str "\1085\1072\1096\1091",Space,Str "\1082\1072\1088\1090\1080\1085\1082\1091",Str ".",Space,Str "\1055\1088\1080",Space,Str "\1082\1083\1080\1082\1077",Space,Str "\1084\1099\1096\1082\1086\1081",Space,Str "\1096\1072\1088\1080\1082",Space,Str "\1080\1075\1088\1086\1082\1072",Space,Str "\1087\1086\1089\1083\1077\1076\1091\1077\1090",Space,Str "\1074",Space,Str "\1085\1072\1087\1088\1072\1074\1083\1077\1085\1080\1080",Space,Str "\1082\1091\1088\1089\1086\1088\1072",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1090\1086\1075\1086",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1082\1072\1088\1090\1080\1085\1082\1072",Space,Str "\1079\1072\1076\1074\1080\1075\1072\1083\1072\1089\1100",Space,Str "\1085\1072\1084",Space,Str "\1085\1077\1086\1073\1093\1086\1076\1080\1084\1086",Space,Str "\1086\1073\1085\1086\1074\1083\1103\1090\1100",Space,Str "\1088\1080\1089\1091\1085\1086\1082",Space,Str "\1089",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1105\1085\1085\1086\1081",Space,Str "\1095\1072\1089\1090\1086\1090\1086\1081",Str ".",Space,Str "\1052\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1088\1077\1075\1091\1083\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1095\1072\1089\1090\1086\1090\1091",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1103",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{sleep}",Str ",",Space,Str "\1089",Space,Str "\1077\1105",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1079\1072\1076\1077\1088\1078\1072\1090\1100",Space,Str "\1074\1099\1087\1086\1083\1085\1077\1085\1080\1077",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1099",Space,Str "(",Str "\1074\1088\1077\1084\1103",Space,Str "\1080\1079\1084\1077\1088\1103\1077\1090\1089\1103",Space,Str "\1074",Space,Str "\1089\1077\1082\1091\1085\1076\1072\1093",Str ")",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nsleep :: Double -> IO ()\n\\end{code}\n"
,Para [Str "\1047\1072",Space,Str "\1087\1077\1088\1077\1093\1074\1072\1090",Space,Str "\1076\1077\1081\1089\1090\1074\1080\1081",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1077\1083\1103",Space,Str "\1086\1090\1074\1077\1095\1072\1077\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ngetMouseButton  :: MouseButton -> IO KeyButtonState\nmousePos        :: StateVar Position\n\\end{code}\n"
,Para [Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{getMouseButton}",Space,Str "\1089\1086\1086\1073\1097\1072\1077\1090",Space,Str "\1090\1077\1082\1091\1097\1077\1077",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1077",Space,Str "\1082\1085\1086\1087\1086\1082",Space,Str "\1084\1099\1096\1080",Str ",",Space,Str "\1084\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1087\1077\1088\1077\1093\1074\1072\1090\1099\1074\1072\1090\1100",Space,Str "\1087\1086\1083\1086\1078\1077\1085\1080\1077",Space,Str "\1084\1099\1096\1080",Space,Str "\1074\1086",Space,Str "\1074\1088\1077\1084\1103",Space,Str "\1085\1072\1078\1072\1090\1080\1103",Space,Str "\1083\1077\1074\1086\1081",Space,Str "\1082\1085\1086\1087\1082\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nonMouse ball = do\n    mb <- getMouseButton ButtonLeft\n    when (mb == Press) (get mousePos >>= updateVel ball)\n\\end{code}\n"
,Para [Str "\1057\1090\1072\1085\1076\1072\1088\1090\1085\1072\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{when}",Space,Str "\1080\1079",Space,Str "\1084\1086\1076\1091\1083\1103",Space,RawInline "latex" "\\In{Control.Monad}",Space,Str "\1074\1099\1087\1086\1083\1085\1103\1077\1090",Space,Str "\1076\1077\1081\1089\1090\1074\1080\1077",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1074",Space,Str "\1090\1086\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Str ",",Space,Str "\1077\1089\1083\1080",Space,Str "\1087\1077\1088\1074\1099\1081",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090",Space,Str "\1088\1072\1074\1077\1085",Space,RawInline "latex" "\\In{True}",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1103",Space,Str "\1087\1086\1083\1086\1078\1077\1085\1080\1103",Space,Str "\1080",Space,Str "\1085\1072\1087\1088\1072\1074\1083\1077\1085\1080\1103",Space,Str "\1089\1082\1086\1088\1086\1089\1090\1080",Space,Str "\1096\1072\1088\1080\1082\1072",Space,Str "\1085\1072\1084",Space,Str "\1087\1088\1080\1076\1105\1090\1089\1103",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100\1089\1103",Space,Str "\1075\1083\1086\1073\1072\1083\1100\1085\1086\1081",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1086\1081",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{IORef Ball}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndata Ball = Ball\n    { ballPos :: Vec2d\n    , ballVel :: Vec2d\n    }\n\\end{code}\n"
,Para [Str "\1050\1086\1076",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1099",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nmodule Main where\n\nimport Control.Applicative\nimport Data.IORef\nimport Graphics.UI.GLFW\nimport Graphics.Rendering.OpenGL\nimport System.Exit\nimport Control.Monad\n\ntype Time = Double\n\ntitle = \"Hello OpenGL\"\n\nwidth, height :: GLsizei\n\nfps :: Int\nfps = 60\n\nframeTime :: Time\nframeTime = 1000 * ((1::Double) / fromIntegral fps)\n\nwidth   = 700\nheight  = 600\n    \nw2, h2 :: GLfloat\n\nw2 = (fromIntegral $ width) / 2\nh2 = (fromIntegral $ height)  / 2\n\ndw2, dh2 :: GLdouble\n\ndw2 = fromRational $ toRational w2\ndh2 = fromRational $ toRational h2\n\ntype Vec2d = (GLfloat, GLfloat)\n\ndata Ball = Ball\n    { ballPos :: Vec2d\n    , ballVel :: Vec2d\n    }\n\ninitBall = Ball (0, 0) (0, 0)\n\ndt :: GLfloat\ndt = 0.3\n\nminVel = 10\n\nmain = do\n    initialize\n    openWindow (Size width height) [] Window\n    windowTitle $= title\n\n    clearColor $= Color4 1 1 1 1\n    ortho (-dw2) (dw2) (-dh2) (dh2) (-1) 1\n    \n    ball <- newIORef initBall\n\n    windowCloseCallback $= exitWith ExitSuccess\n    windowSizeCallback  $= (\\size -> viewport $= (Position 0 0, size))\n\n    loop ball\n\nloop :: IORef Ball -> IO ()\nloop ball = do    \n    display ball\n    onMouse ball\n    sleep frameTime\n    loop ball\n\ndisplay ball = do\n    (px, py) <- ballPos <$> get ball\n    (vx, vy) <- ballVel <$> get ball\n    ball $= Ball (px + dt*vx, py + dt*vy) (vx, vy)\n\n    clear [ColorBuffer]\n\n    color black\n    line (-ow2) (-oh2) (-ow2) oh2\n    line (-ow2) oh2    ow2    oh2\n    line ow2    oh2    ow2    (-oh2)\n    line ow2   (-oh2)  (-ow2) (-oh2)\n\n    color red\n    circle px py 10\n\n    swapBuffers\n    where ow2 = w2 - 50 \n          oh2 = h2 - 50  \n    \nonMouse ball = do\n    mb <- getMouseButton ButtonLeft\n    when (mb == Press) (get mousePos >>= updateVel ball)\n   \nupdateVel ball pos = do\n    (p0x, p0y) <- ballPos <$> get ball\n    v0  <- ballVel <$> get ball\n    size <- get windowSize\n    let (p1x, p1y) = mouse2canvas size pos \n        v1 = scaleV (max minVel $ len v0) $ norm (p1x - p0x, p1y - p0y)\n    ball $= Ball (p0x, p0y) v1\n    where norm v@(x, y) = (x / len v, y / len v)\n          len  (x, y) = sqrt (x*x + y*y) \n          scaleV k (x, y) = (k*x, k*y)\n\nmouse2canvas :: Size -> Position -> (GLfloat, GLfloat)\nmouse2canvas (Size sx sy) (Position mx my) = (x, y)\n    where d a b  = fromIntegral a / fromIntegral b\n          x  = fromIntegral width * (d mx sx - 0.5)\n          y  = fromIntegral height * (negate $ d my sy - 0.5)\n\nvertex2f :: GLfloat -> GLfloat -> IO ()\nvertex2f a b = vertex (Vertex3 a b 0)\n\n-- colors\n... white, black, red  \n\n-- primitives\nline    :: GLfloat -> GLfloat -> GLfloat -> GLfloat -> IO ()\ncircle  :: GLfloat -> GLfloat -> GLfloat -> IO ()\n\\end{code}\n"
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{display}",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1089\1089\1099\1083\1082\1091",Space,Str "\1085\1072",Space,Str "\1075\1083\1086\1073\1072\1083\1100\1085\1091\1102",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1091\1102",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1086\1090\1074\1077\1095\1072\1077\1090",Space,Str "\1079\1072",Space,Str "\1076\1074\1080\1078\1077\1085\1080\1077",Space,Str "\1096\1072\1088\1080\1082\1072",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{mouse2canvas}",Space,Str "\1087\1077\1088\1077\1074\1086\1076\1080\1090",Space,Str "\1082\1086\1086\1088\1076\1080\1085\1072\1090\1099",Space,Str "\1074",Space,Str "\1086\1082\1085\1077",Space,RawInline "latex" "\\In{GLFW}",Space,Str "\1074",Space,Str "\1082\1086\1086\1088\1076\1080\1085\1072\1090\1099",Space,RawInline "latex" "\\In{OpenGL}",Str ".",Space,Str "\1042",Space,RawInline "latex" "\\In{GLFW}",Space,Str "\1085\1072\1095\1072\1083\1086",Space,Str "\1082\1086\1086\1088\1076\1080\1085\1072\1090",Space,Str "\1083\1077\1078\1080\1090",Space,Str "\1074",Space,Str "\1083\1077\1074\1086\1084",Space,Str "\1074\1077\1088\1093\1085\1077\1084",Space,Str "\1091\1075\1083\1091",Space,Str "\1086\1082\1085\1072",Space,Str "\1080",Space,Str "\1086\1089\1100",Space,RawInline "latex" "\\In{Oy}",Space,Str "\1085\1072\1087\1088\1072\1074\1083\1077\1085\1072",Space,Str "\1074\1085\1080\1079",Str ".",Space,Str "\1052\1099",Space,Str "\1078\1077",Space,Str "\1087\1077\1088\1077\1084\1077\1089\1090\1080\1083\1080",Space,Str "\1085\1072\1095\1072\1083\1086",Space,Str "\1082\1086\1086\1088\1076\1080\1085\1072\1090",Space,Str "\1074",Space,Str "\1094\1077\1085\1090\1088",Space,Str "\1086\1082\1085\1072",Space,Str "\1080",Space,Str "\1086\1089\1100",Space,Str "Oy",Space,Str "\1085\1072\1087\1088\1072\1074\1083\1077\1085\1072",Space,Str "\1074\1074\1077\1088\1093",Str "."]
,Para [Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1095\1090\1086",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1087\1086\1083\1091\1095\1080\1083\1086\1089\1100",Str ":"]
,RawBlock "latex" "\n\\begin{verbatim}\n$ ghc --make Animation.hs\n$ ./Animation\n\\end{verbatim}\n"
,Header 3 [Str "Chipmunk"]
,Para [Str "\1050\1072\1088\1090\1080\1085\1082\1072",Space,Str "\1086\1078\1080\1083\1072",Str ",",Space,Str "\1085\1086",Space,Str "\1096\1072\1088\1080\1082",Space,Str "\1076\1074\1080\1078\1077\1090\1089\1103",Space,Str "\1085\1077",Space,Str "\1088\1077\1072\1083\1080\1089\1090\1080\1095\1085\1086",Str ".",Space,Str "\1054\1085",Space,Str "\1087\1088\1086\1093\1086\1076\1080\1090",Space,Str "\1089\1082\1074\1086\1079\1100",Space,Str "\1089\1090\1077\1085\1099",Str ".",Space,Str "\1044\1086\1073\1072\1074\1080\1084",Space,Str "\1074",Space,Str "\1085\1072\1096\1091",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1091",Space,Str "\1085\1077\1084\1085\1086\1075\1086",Space,Str "\1092\1080\1079\1080\1082\1080",Str ".",Space,Str "\1042\1086\1089\1087\1086\1083\1100\1079\1091\1077\1084\1089\1103",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1086\1081",Space,RawInline "latex" "\\In{Hipmunk}"]
,RawBlock "latex" "\n\\begin{code}\ncabal install Hipmunk\n\\end{code}\n"
,Para [Str "\1054\1085\1072",Space,Str "\1076\1072\1105\1090",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1086\1089\1090\1100",Space,Str "\1074\1099\1079\1099\1074\1072\1090\1100",Space,Str "\1080\1079",Space,Str "Haskell",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1057",Str "-",Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1080",Space,RawInline "latex" "\\In{Chipmunk}",Str ".",Space,Str "\1069\1090\1072",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1072",Space,Str "\1087\1086\1079\1074\1086\1083\1103\1077\1090",Space,Str "\1089\1090\1088\1086\1080\1090\1100",Space,Str "\1076\1074\1091\1093\1084\1077\1088\1085\1099\1077",Space,Str "\1092\1080\1079\1080\1095\1077\1089\1082\1080\1077",Space,Str "\1084\1086\1076\1077\1083\1080",Str ".",Space,Str "\1054\1089\1085\1086\1074\1085\1099\1084",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1086\1084",Space,Str "\1084\1086\1076\1077\1083\1080",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1087\1088\1086\1089\1090\1088\1072\1085\1089\1090\1074\1086",Space,Str "(",RawInline "latex" "\\In{Space}",Str ")",Str ".",Space,Str "\1050",Space,Str "\1085\1077\1084\1091",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1076\1086\1073\1072\1074\1083\1103\1090\1100",Space,Str "\1088\1072\1079\1083\1080\1095\1085\1099\1077",Space,Str "\1086\1073\1098\1077\1082\1090\1099",Str ".",Space,Str "\1054\1073\1098\1077\1082\1090",Space,Str "\1089\1086\1089\1090\1086\1080\1090",Space,Str "\1080\1079",Space,Str "\1076\1074\1091\1093",Space,Str "\1082\1086\1084\1087\1086\1085\1077\1085\1090",Str ":",Space,Str "\1090\1077\1083\1072",Space,Str "(",RawInline "latex" "\\In{Body}",Str ")",Space,Str "\1080",Space,Str "\1092\1086\1088\1084\1099",Space,Str "(",RawInline "latex" "\\In{Shape}",Str ")",Str ".",Space,Str "\1058\1077\1083\1086",Space,Str "\1086\1090\1074\1077\1095\1072\1077\1090",Space,Str "\1079\1072",Space,Str "\1090\1072\1082\1080\1077",Space,Str "\1092\1080\1079\1080\1095\1077\1089\1082\1080\1077",Space,Str "\1093\1072\1088\1072\1082\1090\1077\1088\1080\1089\1090\1080\1082\1080",Space,Str "\1082\1072\1082",Space,Str "\1084\1072\1089\1089\1072",Str ",",Space,Str "\1084\1086\1084\1077\1085\1090",Space,Str "\1080\1085\1077\1088\1094\1080\1080",Str ",",Space,Str "\1074\1086\1089\1087\1088\1080\1080\1084\1095\1080\1074\1086\1089\1090\1100",Space,Str "\1082",Space,Str "\1089\1080\1083\1072\1084",Str ".",Space,Str "\1055\1086",Space,Str "\1092\1086\1088\1084\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1102\1090\1089\1103",Space,Str "\1084\1086\1084\1077\1085\1090\1099",Space,Str "\1089\1090\1086\1083\1082\1085\1086\1074\1077\1085\1080\1103",Space,Str "\1090\1077\1083",Str ".",Space,Str "\1060\1086\1088\1084\1072",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1089\1086\1089\1090\1086\1103\1090\1100",Space,Str "\1080\1079",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1080\1093",Space,Str "\1087\1088\1080\1084\1080\1090\1080\1074\1086\1074",Str ":",Space,Str "\1086\1082\1088\1091\1078\1085\1086\1089\1090\1077\1081",Str ",",Space,Str "\1083\1080\1085\1080\1081",Space,Str "\1080",Space,Str "\1074\1099\1087\1091\1082\1083\1099\1093",Space,Str "\1084\1085\1086\1075\1086\1091\1075\1086\1083\1100\1085\1080\1082\1086\1074",Str ".",Space,Str "\1058\1072\1082\1078\1077",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1076\1086\1073\1072\1074\1083\1103\1090\1100",Space,Str "\1088\1072\1079\1083\1080\1095\1085\1099\1077",Space,Str "\1086\1075\1088\1072\1085\1080\1095\1077\1085\1080\1103",Space,Str "(",RawInline "latex" "\\In{Constraint}",Str ")",Space,Str "\1086\1085\1080",Space,Str "\1080\1084\1080\1090\1080\1088\1091\1102\1090",Space,Str "\1087\1088\1091\1078\1080\1085\1082\1080",Str ",",Space,Str "\1096\1072\1088\1085\1080\1088\1099",Str ".",Space,Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1085\1072\1079\1085\1072\1095\1072\1090\1100",Space,Str "\1074\1099\1087\1086\1083\1085\1077\1085\1080\1077",Space,RawInline "latex" "\\In{IO}",Str "-",Str "\1076\1077\1081\1089\1090\1074\1080\1081",Space,Str "\1085\1072",Space,Str "\1089\1090\1086\1083\1082\1085\1086\1074\1077\1085\1080\1103",Str "."]
,Para [Str "\1054\1087\1080\1096\1077\1084",Space,Str "\1074",Space,RawInline "latex" "\\In{Hipmunk}",Space,Str "\1084\1086\1076\1077\1083\1100",Space,Str "\1096\1072\1088\1080\1082\1072",Space,Str "\1073\1077\1075\1072\1102\1097\1077\1075\1086",Space,Str "\1074",Space,Str "\1079\1072\1084\1082\1085\1091\1090\1086\1081",Space,Str "\1082\1086\1088\1086\1073\1082\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nmodule Main where \n\nimport Data.StateVar\nimport Physics.Hipmunk\n\nmain = do\n    initChipmunk\n    space <- newSpace\n    initWalls space\n    ball <- initBall space initPos initVel\n    loop 100 space ball\n\nloop :: Int -> Space -> Body -> IO ()\nloop 0 _     _    = return ()     \nloop n space ball = do\n    showPosition ball\n    step space 0.5\n    loop (n-1) space ball\n  \nshowPosition :: Body -> IO ()\nshowPosition ball = do\n    pos <- get $ position ball\n    print pos\n\ninitWalls :: Space -> IO ()\ninitWalls space = mapM_ (uncurry $ initWall space) wallPoints\n\ninitWall :: Space -> Position -> Position -> IO ()\ninitWall space a b = do\n    body    <- newBody infinity infinity\n    shape   <- newShape body (LineSegment a b wallThickness) 0\n    elasticity shape $= nearOne\n    spaceAdd space body\n    spaceAdd space shape\n\ninitBall :: Space -> Position -> Velocity -> IO Body\ninitBall space pos vel = do\n    body    <- newBody ballMass ballMoment \n    shape   <- newShape body (Circle ballRadius) 0\n    position body $= pos\n    velocity body $= vel\n    elasticity shape $= nearOne\n    spaceAdd space body\n    spaceAdd space shape\n    return body\n    \n----------------------------\n-- inits\n\nnearOne = 0.9999\nballMass = 20\nballMoment = momentForCircle ballMass (0, ballRadius) 0\nballRadius = 10\n    \ninitPos = Vector 0 0\ninitVel = Vector 10 5\n\nwallThickness = 1\n\nwallPoints = fmap (uncurry f) [\n    ((-w2, -h2), (-w2, h2)),\n    ((-w2, h2),  (w2, h2)),\n    ((w2, h2),   (w2, -h2)),\n    ((w2, -h2),  (-w2, -h2))]\n    where f a b = (g a, g b) \n          g (a, b) = H.Vector a b  \n\nh2 = 100\nw2 = 100\n\\end{code}\n"
,Para [Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{initChipmunk}",Space,Str "\1080\1085\1080\1094\1080\1072\1083\1080\1079\1080\1088\1091\1077\1090",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1091",Space,RawInline "latex" "\\In{Chipmunk}",Str ".",Space,Str "\1054\1085\1072",Space,Str "\1076\1086\1083\1078\1085\1072",Space,Str "\1073\1099\1090\1100",Space,Str "\1074\1099\1079\1074\1072\1085\1072",Space,Str "\1086\1076\1080\1085",Space,Str "\1088\1072\1079",Space,Str "\1076\1086",Space,Str "\1083\1102\1073\1086\1081",Space,Str "\1080\1079",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1080",Space,RawInline "latex" "\\In{Hipmunk}",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{new[Body|Shape|Space]}",Space,Str "\1089\1086\1079\1076\1072\1102\1090",Space,Str "\1086\1073\1098\1077\1082\1090\1099",Space,Str "\1084\1086\1076\1077\1083\1080",Str ".",Space,Str "\1052\1099",Space,Str "\1089\1076\1077\1083\1072\1083\1080",Space,Str "\1089\1090\1077\1085\1099",Space,Str "\1085\1077\1087\1086\1076\1074\1080\1078\1085\1099\1084\1080",Str ",",Space,Str "\1087\1088\1080\1089\1074\1086\1080\1074",Space,Str "\1080\1084",Space,Str "\1073\1077\1089\1082\1086\1085\1077\1095\1085\1091\1102",Space,Str "\1084\1072\1089\1089\1091",Space,Str "\1080",Space,Str "\1084\1086\1084\1077\1085\1090",Space,Str "\1080\1085\1077\1088\1094\1080\1080",Space,Str "(",RawInline "latex" "\\In{initWall}",Str ")",Str ".",Space,Str "\1059\1087\1088\1091\1075\1086\1089\1090\1100",Space,Str "\1091\1076\1072\1088\1072",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1077\1090\1089\1103",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1086\1081",Space,RawInline "latex" "\\In{elasticity}",Str ",",Space,Str "\1086\1085\1072",Space,Str "\1085\1077",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1073\1099\1090\1100",Space,Str "\1073\1086\1083\1100\1096\1077",Space,Str "\1077\1076\1080\1085\1080\1094\1099",Str ".",Space,Str "\1045\1076\1080\1085\1080\1094\1072",Space,Str "\1086\1073\1086\1079\1085\1072\1095\1072\1077\1090",Space,Str "\1072\1073\1089\1086\1083\1102\1090\1085\1086",Space,Str "\1091\1087\1088\1091\1075\1086\1077",Space,Str "\1089\1090\1086\1083\1082\1085\1086\1074\1077\1085\1080\1077",Str ".",Space,Str "\1042",Space,Str "\1076\1086\1082\1091\1084\1077\1085\1090\1072\1094\1080\1080",Space,Str "\1082",Space,RawInline "latex" "\\In{Hipmunk}",Space,Str "\1085\1077",Space,Str "\1088\1077\1082\1086\1084\1077\1085\1076\1091\1102\1090",Space,Str "\1087\1088\1080\1089\1074\1072\1080\1074\1072\1090\1100",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1088\1072\1074\1085\1086\1077",Space,Str "\1077\1076\1080\1085\1080\1094\1077",Space,Str "\1080\1079",Str "-",Str "\1079\1072",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1099\1093",Space,Str "\1087\1086\1075\1088\1077\1096\1085\1086\1089\1090\1077\1081",Space,Str "\1086\1082\1088\1091\1075\1083\1077\1085\1080\1103",Str ",",Space,Str "\1087\1086\1101\1090\1086\1084\1091",Space,Str "\1084\1099",Space,Str "\1074\1099\1073\1080\1088\1072\1077\1084",Space,Str "\1095\1080\1089\1083\1086",Space,Str "\1073\1083\1080\1079\1082\1086\1077",Space,Str "\1082",Space,Str "\1077\1076\1080\1085\1080\1094\1077",Str ".",Space,Str "\1055\1086\1089\1083\1077",Space,Str "\1080\1085\1080\1094\1080\1072\1083\1080\1079\1072\1094\1080\1080",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1086\1074",Space,Str "\1084\1086\1076\1077\1083\1080",Space,Str "\1084\1099",Space,Str "\1079\1072\1087\1091\1089\1082\1072\1077\1084",Space,Str "\1094\1080\1082\1083",Str ",",Space,Str "\1074",Space,Str "\1082\1086\1090\1086\1088\1086\1084",Space,Str "\1087\1088\1086\1080\1089\1093\1086\1076\1080\1090",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1077",Space,Str "\1084\1086\1076\1077\1083\1080",Space,Str "(",RawInline "latex" "\\In{step}",Str ")",Space,Str "\1080",Space,Str "\1087\1077\1095\1072\1090\1100",Space,Str "\1087\1086\1083\1086\1078\1077\1085\1080\1103",Space,Str "\1096\1072\1088\1080\1082\1072",Str ".",Space,Str "\1054\1073\1088\1072\1090\1080\1090\1077",Space,Str "\1074\1085\1080\1084\1072\1085\1080\1077",Space,Str "\1085\1072",Space,Str "\1090\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1082\1086\1086\1088\1076\1080\1085\1072\1090\1099",Space,Str "\1096\1072\1088\1080\1082\1072",Space,Str "\1085\1080\1082\1086\1075\1076\1072",Space,Str "\1085\1077",Space,Str "\1074\1099\1081\1076\1091\1090",Space,Str "\1079\1072",Space,Str "\1091\1089\1090\1072\1085\1086\1074\1083\1077\1085\1085\1099\1077",Space,Str "\1088\1072\1084\1082\1080",Str "."]
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1086\1073\1098\1077\1076\1080\1085\1080\1084",Space,Str "OpenGL",Space,Str "\1080",Space,Str "Hipmunk",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nmodule Main where\n\nimport Control.Applicative\n\nimport Control.Applicative\nimport Data.StateVar\nimport Data.IORef\nimport Graphics.UI.GLFW\nimport System.Exit\nimport Control.Monad\n\nimport qualified Physics.Hipmunk  as H\nimport qualified Graphics.UI.GLFW as G\nimport qualified Graphics.Rendering.OpenGL as G\n  \ntitle = \"in the box\"\n\n----------------------------\n-- inits\n\ntype Time = Double\n\n-- frames per second\nfps :: Int\nfps = 60\n\n-- frame time in milliseconds\nframeTime :: Time\nframeTime = 1000 * ((1::Double) / fromIntegral fps)\n\n\nnearOne = 0.9999\nballMass = 20\nballMoment = H.momentForCircle ballMass (0, ballRadius) 0\nballRadius = 10\n    \ninitPos = H.Vector 0 0\ninitVel = H.Vector 0 0\n\nwallThickness = 1\n\nwallPoints = fmap (uncurry f) [\n    ((-ow2, -oh2), (-ow2, oh2)),\n    ((-ow2, oh2),  (ow2, oh2)),\n    ((ow2, oh2),  (ow2, -oh2)),\n    ((ow2, -oh2),   (-ow2, -oh2))]\n    where f a b = (g a, g b) \n          g (a, b) = H.Vector a b  \n\ndt :: Double\ndt = 0.5\n\nminVel :: Double\nminVel = 10\n\nwidth, height :: Double\n\nheight = 500\nwidth = 700\n\nw2, h2 :: Double\n\nh2 = height / 2\nw2 = width / 2\n\now2, oh2 :: Double\n    \now2 = w2 - 50 \noh2 = h2 - 50  \n\ndata State = State \n    { stateBall     :: H.Body\n    , stateSpace    :: H.Space\n    }\n\nballPos :: State -> StateVar H.Position\nballPos = H.position . stateBall\n\nballVel :: State -> StateVar H.Velocity\nballVel = H.velocity . stateBall\n\n\nmain = do\n    H.initChipmunk\n    initGLFW\n    state <- newIORef =<< initState\n    loop state\n\nloop :: IORef State -> IO ()\nloop state = do    \n    display state\n    onMouse state\n    sleep frameTime\n    loop state\n\nsimulate :: State -> IO Time\nsimulate a = do\n    t0 <- get G.time\n    H.step (stateSpace a) dt \n    t1 <- get G.time\n    return (t1 - t0)\n\ninitGLFW :: IO ()\ninitGLFW = do\n    G.initialize\n    G.openWindow (G.Size (d2gli width) (d2gli height)) [] G.Window\n    G.windowTitle $= title\n    G.windowCloseCallback $= exitWith ExitSuccess\n    G.windowSizeCallback  $= (\\size -> G.viewport $= (G.Position 0 0, size))\n    G.clearColor $= G.Color4 1 1 1 1\n    G.ortho (-dw2) (dw2) (-dh2) (dh2) (-1) 1\n    where dw2 = realToFrac w2\n          dh2 = realToFrac h2  \n\ninitState :: IO State\ninitState = do\n    space <- H.newSpace \n    initWalls space\n    ball <- initBall space initPos initVel\n    return $ State ball space\n\ninitWalls :: H.Space -> IO ()\ninitWalls space = mapM_ (uncurry $ initWall space) wallPoints\n\ninitWall :: H.Space -> H.Position -> H.Position -> IO ()\ninitWall space a b = do\n    body    <- H.newBody H.infinity H.infinity\n    shape   <- H.newShape body (H.LineSegment a b wallThickness) 0\n    H.elasticity shape $= nearOne\n    H.spaceAdd space body\n    H.spaceAdd space shape\n\ninitBall :: H.Space -> H.Position -> H.Velocity -> IO H.Body\ninitBall space pos vel = do\n    body    <- H.newBody ballMass ballMoment \n    shape   <- H.newShape body (H.Circle ballRadius) 0\n    H.position body $= pos\n    H.velocity body $= vel\n    H.elasticity shape $= nearOne\n    H.spaceAdd space body\n    H.spaceAdd space shape\n    return body\n\n-------------------------------\n-- graphics\n\ndisplay state = do\n    drawState =<< get state\n    simTime <- simulate =<< get state    \n    sleep (max 0 $ frameTime - simTime) \n    \n\ndrawState :: State -> IO ()\ndrawState st = do\n    pos <- get $ ballPos st\n    G.clear [G.ColorBuffer]\n    drawWalls\n    drawBall pos\n    G.swapBuffers\n\ndrawBall :: H.Position -> IO ()\ndrawBall pos = do\n    G.color red\n    circle x y $ d2gl ballRadius\n    where (x, y) = vec2gl pos\n\ndrawWalls :: IO ()\ndrawWalls = do\n    G.color black\n    line (-dow2) (-doh2) (-dow2) doh2\n    line (-dow2) doh2    dow2    doh2\n    line dow2    doh2    dow2    (-doh2)\n    line dow2   (-doh2)  (-dow2) (-doh2)\n    where dow2 = d2gl ow2 \n          doh2 = d2gl oh2  \n\n\nonMouse state = do    \n    mb <- G.getMouseButton ButtonLeft\n    when (mb == Press) (get G.mousePos >>= updateVel state)\n   \nupdateVel state pos = do   \n    size <- get G.windowSize\n    st <- get state\n    p0 <- get $ ballPos st\n    v0 <- get $ ballVel st\n    let p1 = mouse2canvas size pos\n    ballVel st $= \n        H.scale (H.normalize $ p1 - p0) (max minVel $ H.len v0)\n\nmouse2canvas :: G.Size -> G.Position -> H.Vector\nmouse2canvas (G.Size sx sy) (G.Position mx my) = H.Vector x y\n    where d a b  = fromIntegral a / fromIntegral b\n          x  = width * (d mx sx - 0.5)\n          y  = height * (negate $ d my sy - 0.5)\n\n\nvertex2f :: G.GLfloat -> G.GLfloat -> IO ()\nvertex2f a b = G.vertex (G.Vertex3 a b 0)\n\nvec2gl :: H.Vector -> (G.GLfloat, G.GLfloat)\nvec2gl (H.Vector x y) = (d2gl x, d2gl y)\n\nd2gl :: Double -> G.GLfloat\nd2gl = realToFrac\n\nd2gli :: Double -> G.GLsizei\nd2gli = toEnum . fromEnum . d2gl\n\n...\n\\end{code}\n"
,Para [Str "\1060\1091\1085\1082\1094\1080\1080",Space,Str "\1085\1077",Space,Str "\1087\1088\1077\1090\1077\1088\1087\1077\1074\1096\1080\1077",Space,Str "\1086\1089\1086\1073\1099\1093",Space,Str "\1080\1079\1084\1077\1085\1077\1085\1080\1081",Space,Str "\1087\1088\1086\1087\1091\1097\1077\1085\1099",Str ".",Space,Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1085\1072\1096\1077",Space,Str "\1075\1083\1086\1073\1072\1083\1100\1085\1086\1077",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1077",Space,Str "(",RawInline "latex" "\\In{State}",Str ")",Space,Str "\1089\1086\1076\1077\1088\1078\1080\1090",Space,Str "\1090\1077\1083\1086",Space,Str "\1096\1072\1088\1072",Space,Str "(",Str "\1086\1085\1086",Space,Str "\1087\1088\1080\1075\1086\1076\1080\1090\1089\1103",Space,Str "\1085\1072\1084",Space,Str "\1076\1083\1103",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Space,Str "\1077\1075\1086",Space,Str "\1087\1086\1083\1086\1078\1077\1085\1080\1103",Str ")",Space,Str "\1080",Space,Str "\1087\1088\1086\1089\1090\1088\1072\1085\1089\1090\1074\1086",Str ",",Space,Str "\1074",Space,Str "\1082\1086\1090\1086\1088\1086\1084",Space,Str "\1078\1080\1074\1105\1090",Space,Str "\1085\1072\1096\1072",Space,Str "\1084\1086\1076\1077\1083\1100",Str ".",Space,Str "\1057\1090\1086\1080\1090",Space,Str "\1086\1090\1084\1077\1090\1080\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{simulate}",Str ".",Space,Str "\1042",Space,Str "\1085\1077\1081",Space,Str "\1087\1088\1086\1080\1089\1093\1086\1076\1080\1090",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1077",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1103",Space,Str "\1084\1086\1076\1077\1083\1080",Str ".",Space,Str "\1055\1088\1080",Space,Str "\1101\1090\1086\1084",Space,Str "\1084\1099",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1084",Space,Str "\1074\1088\1077\1084\1103",Str ",",Space,Str "\1082\1086\1090\1086\1088\1086\1077",Space,Str "\1091\1096\1083\1086",Space,Str "\1085\1072",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1077",Space,Str "\1101\1090\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ".",Space,Str "\1054\1085\1086",Space,Str "\1085\1091\1078\1085\1086",Space,Str "\1085\1072\1084",Space,Str "\1076\1083\1103",Space,Str "\1090\1086\1075\1086",Str ",",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1087\1086\1082\1072\1079\1099\1074\1072\1090\1100",Space,Str "\1085\1086\1074\1099\1077",Space,Str "\1082\1072\1076\1088\1099",Space,Str "\1088\1072\1074\1085\1086\1084\1077\1088\1085\1086",Str ".",Space,Str "\1052\1099",Space,Str "\1074\1099\1095\1090\1077\1084",Space,Str "\1074\1088\1077\1084\1103",Space,Str "\1089\1080\1084\1091\1083\1103\1094\1080\1080",Space,Str "\1080\1079",Space,Str "\1086\1073\1097\1077\1075\1086",Space,Str "\1074\1088\1077\1084\1077\1085\1080",Str ",",Space,Str "\1082\1086\1090\1086\1088\1086\1077",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1087\1086\1090\1088\1072\1090\1080\1090\1100",Space,Str "\1085\1072",Space,Str "\1086\1076\1080\1085",Space,Str "\1082\1072\1076\1088",Space,Str "(",RawInline "latex" "\\In{frameTime}",Str ")",Str "."]
,Header 2 [Str "\1041\1086\1088\1077\1084\1089\1103",Space,Str "\1089",Space,Str "IO"]
,Para [Str "\1050\1072\1078\1077\1090\1089\1103",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1099",Space,Str "\1087\1086\1087\1072\1083\1080",Space,Str "\1074",Space,Str "\1082\1072\1082\1086\1081",Str "-",Str "\1090\1086",Space,Str "\1076\1088\1091\1075\1086\1081",Space,Str "\1103\1079\1099\1082",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1089\1086\1074\1089\1077\1084",Space,Str "\1085\1077",Space,Str "\1090\1086\1090",Space,Str "\1101\1083\1077\1075\1072\1085\1090\1085\1099\1081",Space,Str "Haskell",Str ",",Space,Str "\1079\1085\1072\1082\1086\1084\1099\1081",Space,Str "\1085\1072\1084",Space,Str "\1087\1086",Space,Str "\1087\1088\1077\1076\1099\1076\1091\1097\1080\1084",Space,Str "\1075\1083\1072\1074\1072\1084",Str ".",Space,Str "\1057\1090\1086\1083\1100\1082\1086",Space,RawInline "latex" "\\In{do}",Space,Str "\1080",Space,RawInline "latex" "\\In{IO}",Space,Str "\1088\1072\1079\1073\1088\1086\1089\1072\1085\1086",Space,Str "\1087\1086",Space,Str "\1074\1089\1077\1084\1091",Space,Str "\1082\1086\1076\1091",Str ".",Space,Str "\1048",Space,Str "\1090\1072\1082\1086\1081",Space,Str "\1087\1088\1080\1084\1080\1090\1080\1074\1085\1099\1081",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090",Space,Str "\1074",Space,Str "\1080\1090\1086\1075\1077",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1090\1072\1082",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1087\1088\1086\1076\1086\1083\1078\1072\1090\1100\1089\1103",Space,Str "\1080",Space,Str "\1076\1072\1083\1100\1096\1077",Str ",",Space,Str "\1090\1086",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1085\1077",Space,Str "\1074\1099\1090\1077\1088\1087\1077\1090\1100",Space,Str "\1080",Space,Str "\1073\1088\1086\1089\1080\1090\1100",Space,Str "\1080",Space,Str "\1085\1072\1096\1091",Space,Str "\1079\1072\1076\1072\1095\1091",Space,Str "\1080",Space,Str "Haskell",Str "\8230"]
,Para [Str "\1053\1077",Space,Str "\1086\1090\1095\1072\1080\1074\1072\1081\1090\1077\1089\1100",Str "!"]
,Para [Str "\1044\1072\1074\1072\1081\1090\1077",Space,Str "\1083\1091\1095\1096\1077",Space,Str "\1087\1086\1076\1091\1084\1072\1077\1084",Space,Str "\1082\1072\1082",Space,Str "\1089\1074\1077\1089\1090\1080",Space,Str "\1101\1090\1086\1090",Space,Str "\1087\1089\1077\1074\1076\1086",Str "-",Str "Haskell",Space,Str "\1082",Space,Str "\1084\1080\1085\1080\1084\1091\1084\1091",Str ".",Space,Str "\1055\1086\1076\1091\1084\1072\1077\1084",Space,Str "\1082\1072\1082\1080\1077",Space,Str "\1080\1089\1090\1086\1095\1085\1080\1082\1080",Space,RawInline "latex" "\\In{IO}",Space,Str "\1090\1086\1095\1085\1086",Space,Str "\1073\1091\1076\1091\1090",Space,Str "\1074",Space,Str "\1085\1072\1096\1077\1081",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1077",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1080\1085\1080\1094\1080\1072\1083\1080\1079\1072\1094\1080\1103",Space,RawInline "latex" "\\In{GLFW}",Space,Str "\1080",Space,RawInline "latex" "\\In{Hipmunk}",Str ",",Space,Str "\1082\1083\1080\1082\1080",Space,Str "\1084\1099\1096\1100\1102",Str ",",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1077",Space,Str "\1084\1086\1076\1077\1083\1080",Space,Str "\1074",Space,RawInline "latex" "\\In{Hipmunk}",Str ",",Space,Str "\1090\1072\1082\1078\1077",Space,Str "\1076\1083\1103",Space,Str "\1088\1080\1089\1086\1074\1072\1085\1080\1103",Space,Str "\1085\1072\1084",Space,Str "\1087\1088\1080\1076\1105\1090\1089\1103",Space,Str "\1089\1095\1080\1090\1099\1074\1072\1090\1100",Space,Str "\1087\1086\1083\1086\1078\1077\1085\1080\1103",Space,Str "\1096\1072\1088\1086\1074",Str ".",Space,Str "\1053\1072\1084",Space,Str "\1087\1088\1080\1076\1105\1090\1089\1103",Space,Str "\1091\1076\1072\1083\1103\1090\1100",Space,Str "\1080",Space,Str "\1089\1086\1079\1076\1072\1074\1072\1090\1100",Space,Str "\1085\1086\1074\1099\1077",Space,Str "\1096\1072\1088\1099",Str ",",Space,Str "\1076\1086\1073\1072\1074\1083\1103\1103",Space,Str "\1080\1093",Space,Str "\1082",Space,Str "\1087\1088\1086\1089\1090\1088\1072\1085\1089\1090\1074\1091",Space,Str "\1084\1086\1076\1077\1083\1080",Str ".",Space,Str "\1058\1072\1082\1078\1077",Space,Str "\1074",Space,RawInline "latex" "\\In{IO}",Space,Str "\1087\1088\1086\1080\1089\1093\1086\1076\1080\1090",Space,Str "\1086\1090\1088\1080\1089\1086\1074\1082\1072",Space,Str "\1080\1075\1088\1099",Str ".",Space,RawInline "latex" "\\In{Hipmunk}",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1082\1086\1085\1090\1088\1086\1083\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1089\1090\1086\1083\1082\1085\1086\1074\1077\1085\1080\1103",Space,Str "\1096\1072\1088\1086\1074",Str ",",Space,Str "\1080",Space,Str "\1101\1090\1080",Space,Str "\1076\1072\1085\1085\1099\1077",Space,Str "\1085\1072\1084",Space,Str "\1090\1086\1078\1077",Space,Str "\1085\1072\1076\1086",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1089\1095\1080\1090\1099\1074\1072\1090\1100",Space,Str "\1080\1079",Space,Str "\1075\1083\1086\1073\1072\1083\1100\1085\1099\1093",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1099\1093",Str ".",Space,Str "\1057\1082\1086\1083\1100\1082\1086",Space,Str "\1074\1089\1077\1075\1086",Str "!",Space,Str "\1043\1086\1083\1086\1074\1072",Space,Str "\1080\1076\1105\1090",Space,Str "\1082\1088\1091\1075\1086\1084",Str "."]
,Para [Str "\1053\1086",Space,Str "\1087\1086\1084\1080\1084\1086",Space,Str "\1074\1089\1077\1075\1086",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1077\1089\1090\1100",Space,Str "\1083\1086\1075\1080\1082\1072",Space,Str "\1080\1075\1088\1099",Str ".",Space,Str "\1051\1086\1075\1080\1082\1072",Space,Str "\1080\1075\1088\1099",Space,Str "\1086\1090\1074\1077\1095\1072\1077\1090",Space,Str "\1079\1072",Space,Str "\1088\1077\1072\1082\1094\1080\1102",Space,Str "\1080\1075\1088\1086\1074\1086\1075\1086",Space,Str "\1084\1080\1088\1072",Space,Str "\1085\1072",Space,Str "\1088\1072\1079\1083\1080\1095\1085\1099\1077",Space,Str "\1089\1086\1073\1099\1090\1080\1103",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1089\1090\1086\1083\1082\1085\1086\1074\1077\1085\1080\1077",Space,Str "\1089",Space,Quoted DoubleQuote [Str "\1087\1083\1086\1093\1080\1084"],Space,Str "\1096\1072\1088\1086\1084",Space,Str "\1074\1083\1077\1095\1105\1090",Space,Str "\1082",Space,Str "\1091\1084\1077\1085\1100\1096\1077\1085\1080\1102",Space,Str "\1078\1080\1079\1085\1077\1081",Str ",",Space,Str "\1077\1089\1083\1080",Space,Str "\1080\1075\1088\1086\1082",Space,Str "\1089\1090\1072\1083\1082\1080\1074\1072\1077\1090\1089\1103",Space,Str "\1089",Space,Str "\1073\1086\1085\1091\1089\1085\1099\1084",Space,Str "\1096\1072\1088\1086\1084",Str ",",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1105\1085\1085\1099\1077",Space,Str "\1096\1072\1088\1099",Space,Str "\1085\1077\1086\1073\1093\1086\1076\1080\1084\1086",Space,Str "\1091\1076\1072\1083\1080\1090\1100",Str ".",Space,Str "\1055\1088\1080\1093\1086\1076\1080\1090",Space,Str "\1084\1086\1084\1077\1085\1090",Space,Str "\1080",Space,Str "\1084\1099",Space,Str "\1074\1099\1087\1091\1089\1090\1082\1072\1077\1084",Space,Str "\1085\1086\1074\1099\1081",Space,Str "\1096\1072\1088",Space,Str "\1080\1079",Space,Str "\1083\1091\1079\1099",Space,Str "\1085\1086\1074\1099\1081",Space,Str "\1096\1072\1088",Str ".",Space,Str "\1044\1072\1074\1072\1081\1090\1077",Space,Str "\1087\1086\1076\1091\1084\1072\1077\1084",Space,Str "\1082\1072\1082",Space,Str "\1089\1086\1093\1088\1072\1085\1080\1090\1100",Space,Str "\1083\1086\1075\1080\1082\1091",Space,Str "\1080\1075\1088\1099",Space,Str "\1074",Space,Str "\1095\1080\1089\1090\1086\1090\1077",Str "."]
,Para [Str "\1058\1080\1087",Space,RawInline "latex" "\\In{IO}",Space,Str "\1086\1073\1099\1095\1085\1086",Space,Str "\1086\1090\1074\1077\1095\1072\1077\1090",Space,Str "\1079\1072",Space,Str "\1089\1074\1103\1079\1100",Space,Str "\1089",Space,Str "\1074\1085\1077\1096\1085\1080\1084",Space,Str "\1084\1080\1088\1086\1084",Str ",",Space,Str "\1101\1090\1086",Space,Str "\1075\1083\1072\1079\1072",Str ",",Space,Str "\1091\1096\1080",Str ",",Space,Str "\1088\1091\1082\1080",Space,Str "\1080",Space,Str "\1085\1086\1075\1080",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1099",Str ".",Space,Str "\1063\1077\1088\1077\1079",Space,RawInline "latex" "\\In{IO}",Space,Str "\1084\1099",Space,Str "\1087\1086\1083\1091\1095\1072\1077\1084",Space,Str "\1080\1085\1092\1086\1088\1084\1072\1094\1080\1102",Space,Str "\1080\1079",Space,Str "\1074\1085\1077\1096\1085\1077\1075\1086",Space,Str "\1084\1080\1088\1072",Space,Str "\1080",Space,Str "\1086\1090\1087\1088\1072\1074\1083\1103\1077\1084",Space,Str "\1077\1105",Space,Str "\1086\1073\1088\1072\1090\1085\1086",Str ".",Space,Str "\1053\1086",Space,Str "\1074",Space,Str "\1085\1072\1096\1077\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1086\1085",Space,Str "\1087\1088\1086\1085\1080\1082",Space,Str "\1074",Space,Str "\1089\1077\1088\1076\1094\1077",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1099",Str ".",Space,Str "\1047\1072",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1077",Space,Str "\1086\1073\1098\1077\1082\1090\1086\1074",Space,Str "\1086\1090\1074\1077\1095\1072\1077\1090",Space,Str "\1085\1072\1089\1099\1097\1077\1085\1085\1072\1103",Space,RawInline "latex" "\\In{IO}",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1072",Space,RawInline "latex" "\\In{Hipmunk}",Str "."]
,Para [Str "\1052\1099",Space,Str "\1087\1086\1089\1090\1072\1088\1072\1077\1084\1089\1103",Space,Str "\1087\1086\1073\1086\1088\1086\1090\1100\1089\1103",Space,Str "\1089",Space,RawInline "latex" "\\In{IO}",Str "-",Str "\1082\1086\1076\1086\1084",Space,Str "\1090\1072\1082",Str ".",Space,Str "\1057\1085\1072\1095\1072\1083\1072",Space,Str "\1084\1099",Space,Str "\1074\1099\1076\1077\1083\1077\1084",Space,Str "\1090\1077",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1099",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1084\1086\1075\1091\1090",Space,Str "\1073\1099\1090\1100",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1099",Space,Str "\1095\1080\1089\1090\1099\1084\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1103\1084\1080",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1074\1089\1077",Space,Str "\1090\1077",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1099",Str ",",Space,Str "\1076\1083\1103",Space,Str "\1082\1086\1090\1086\1088\1099\1093",Space,Str "\1085\1077",Space,Str "\1085\1091\1078\1077\1085",Space,RawInline "latex" "\\In{Hipmunk}",Str ".",Space,Str "\1069\1090\1086\1090",Space,Str "\1096\1072\1075",Space,Str "\1088\1072\1079\1073\1080\1074\1072\1077\1090",Space,Str "\1085\1072\1096",Space,Str "\1084\1080\1088",Space,Str "\1085\1072",Space,Str "\1076\1074\1072",Space,Str "\1083\1072\1075\1077\1088\1103",Str ":",Space,Quoted DoubleQuote [Str "\1095\1080\1089\1090\1099\1081"],Space,Str "\1080",Space,Quoted DoubleQuote [Str "\1075\1088\1103\1079\1085\1099\1081"],Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndata World = World \n    { worldPure   :: Pure\n    , worldDirty  :: Dirty }\n\\end{code}\n"
,Para [Str "\1063\1080\1089\1090\1099\1077",Space,Str "\1076\1072\1085\1085\1099\1077",Space,Str "\1093\1086\1090\1103\1090",Space,Str "\1082\1072\1082",Str "-",Str "\1090\1086",Space,Str "\1091\1079\1085\1072\1090\1100",Space,Str "\1086",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1087\1088\1086\1080\1089\1093\1086\1076\1080\1090",Space,Str "\1074",Space,Str "\1075\1088\1103\1079\1085\1099\1093",Space,Str "\1076\1072\1085\1085\1099\1093",Str ".",Space,Str "\1058\1072\1082\1078\1077",Space,Str "\1095\1080\1089\1090\1099\1077",Space,Str "\1076\1072\1085\1085\1099\1077",Space,Str "\1084\1086\1075\1091\1090",Space,Str "\1088\1072\1089\1089\1082\1072\1079\1072\1090\1100",Space,Str "\1075\1088\1103\1079\1085\1099\1084",Str ",",Space,Str "\1082\1072\1082",Space,Str "\1080\1084",Space,Str "\1085\1091\1078\1085\1086",Space,Str "\1080\1079\1084\1077\1085\1080\1090\1100\1089\1103",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1087\1088\1080\1074\1086\1076\1080\1090",Space,Str "\1085\1072\1089",Space,Str "\1082",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1102",Space,Str "\1076\1074\1091\1093",Space,Str "\1103\1079\1099\1082\1086\1074",Space,Str "\1079\1072\1087\1088\1086\1089\1086\1074",Str ",",Space,Str "\1085\1072",Space,Str "\1082\1086\1090\1086\1088\1099\1093",Space,Str "\1095\1080\1089\1090\1099\1081",Space,Str "\1080",Space,Str "\1075\1088\1103\1079\1085\1099\1081",Space,Str "\1084\1080\1088",Space,Str "\1086\1073\1097\1072\1102\1090\1089\1103",Space,Str "\1084\1077\1078\1076\1091",Space,Str "\1089\1086\1073\1086\1081",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndata Query = Remove Ball | HeroVelocity H.Velocity | MakeBall Freq\n\ndata Event = Touch Ball | UserClick H.Position\n\ndata Sense = Sense \n    { senseHero     :: HeroBall\n    , senseBalls    :: [Ball]  }\n\\end{code}\n"
,Para [Str "\1063\1077\1088\1077\1079",Space,RawInline "latex" "\\In{Query}",Space,Str "\1095\1080\1089\1090\1099\1077",Space,Str "\1076\1072\1085\1085\1099\1077",Space,Str "\1084\1086\1075\1091\1090",Space,Str "\1088\1072\1089\1089\1082\1072\1079\1072\1090\1100",Space,Str "\1075\1088\1103\1079\1085\1099\1084",Space,Str "\1086",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1085\1077\1086\1073\1093\1086\1076\1080\1084\1086",Space,Str "\1091\1076\1072\1083\1080\1090\1100",Space,Str "\1096\1072\1088",Space,Str "\1080\1079",Space,Str "\1080\1075\1088\1099",Str ",",Space,Str "\1086\1073\1085\1086\1074\1080\1090\1100",Space,Str "\1089\1082\1086\1088\1086\1089\1090\1100",Space,Str "\1096\1072\1088\1072",Space,Str "\1080\1075\1088\1086\1082\1072",Space,Str "\1080\1083\1080",Space,Str "\1089\1086\1079\1076\1072\1090\1100",Space,Str "\1085\1086\1074\1099\1081",Space,Str "\1096\1072\1088",Space,Str "(",RawInline "latex" "\\In{Freq}",Space,Str "\1086\1090\1074\1077\1095\1072\1077\1090",Space,Str "\1079\1072",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1099",Space,Str "\1089\1086\1079\1076\1072\1085\1080\1103",Space,Str "\1096\1072\1088\1072",Str ")",Str ".",Space,Str "\1043\1088\1103\1079\1085\1099\1077",Space,Str "\1076\1072\1085\1085\1099\1077",Space,Str "\1084\1086\1075\1091\1090",Space,Str "\1088\1072\1089\1089\1082\1072\1079\1072\1090\1100",Space,Str "\1095\1080\1089\1090\1099\1084",Space,Str "\1085\1072",Space,Str "\1103\1079\1099\1082\1077",Space,RawInline "latex" "\\In{Event}",Space,Str "\1080",Space,RawInline "latex" "\\In{Sense}",Space,Str "\1086",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1086\1076\1080\1085",Space,Str "\1080\1079",Space,Str "\1096\1072\1088\1086\1074",Space,Str "\1082\1086\1089\1085\1091\1083\1089\1103",Space,Str "\1076\1086",Space,Str "\1096\1072\1088\1072",Space,Str "\1080\1075\1088\1086\1082\1072",Str ",",Space,Str "\1080\1083\1080",Space,Str "\1080\1075\1088\1086\1082",Space,Str "\1082\1083\1080\1082\1085\1091\1083",Space,Str "\1084\1099\1096\1082\1086\1081",Space,Str "\1074",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1105\1085\1085\1086\1081",Space,Str "\1090\1086\1095\1082\1077",Str ".",Space,Str "\1058\1072\1082\1078\1077",Space,Str "\1084\1099",Space,Str "\1089\1086\1086\1073\1097\1072\1077\1084",Space,Str "\1074\1089\1077",Space,Str "\1086\1073\1085\1086\1074\1083\1105\1085\1085\1099\1077",Space,Str "\1087\1086\1083\1086\1078\1077\1085\1080\1103",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1099",Space,Str "\1096\1072\1088\1086\1074",Space,Str "\1074",Space,Str "\1090\1080\1087\1077",Space,RawInline "latex" "\\In{Sense}",Str ".",Space,Str "\1058\1080\1087",Space,RawInline "latex" "\\In{Event}",Space,Str "\1086\1090\1074\1077\1095\1072\1077\1090",Space,Str "\1079\1072",Space,Str "\1089\1086\1073\1099\1090\1080\1103",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1087\1088\1086\1080\1089\1093\1086\1076\1103\1090",Space,Str "\1080\1085\1086\1075\1076\1072",Str ",",Space,Str "\1072",Space,Str "\1090\1080\1087",Space,RawInline "latex" "\\In{Sense}",Space,Str "\1079\1072",Space,Str "\1090\1077",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1099",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1084\1099",Space,Str "\1085\1072\1073\1083\1102\1076\1072\1077\1084",Space,Str "\1085\1077\1087\1088\1077\1088\1099\1074\1085\1086",Space,Str "(",Str "\1101\1090\1086",Space,Str "\1090\1080\1087\1099",Space,Str "\1075\1083\1072\1079\1072\1088\1091\1082",Str ")",Str ",",Space,RawInline "latex" "\\In{Query}",Space,Str "\8211",Space,Str "\1101\1090\1086",Space,Str "\1103\1079\1099\1082",Space,Str "\1076\1077\1081\1089\1090\1074\1080\1081",Space,Str "(",Str "\1101\1090\1086",Space,Str "\1090\1080\1087",Space,Str "\1088\1091\1082\1086\1085\1086\1075",Str ")",Str ".",Space,Str "\1053\1072\1084",Space,Str "\1087\1086\1085\1072\1076\1086\1073\1080\1090\1089\1103",Space,Str "\1077\1097\1105",Space,Str "\1086\1076\1080\1085",Space,Str "\1084\1072\1083\1077\1085\1100\1082\1080\1081",Space,Str "\1103\1079\1099\1082",Str ",",Space,Str "\1085\1072",Space,Str "\1082\1086\1090\1086\1088\1086\1084",Space,Str "\1084\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1086\1073\1098\1103\1089\1085\1103\1090\1100\1089\1103",Space,Str "\1089",Space,RawInline "latex" "\\In{OpenGL}",Str "."]
,RawBlock "latex" "\n\\begin{code}\ndata Picture = Prim Color Primitive\n             | Join Picture Picture\n\ndata Primitive = Line Point Point | Circle Point Radius\n\ndata Point  = Point Double Double\ntype Radius = Double   \n\ndata Color = Color Double Double Double\n\\end{code}\n"
,Para [Str "\1069\1090\1080",Space,Str "\1090\1088\1080",Space,Str "\1103\1079\1099\1082\1072",Space,Str "\1089\1090\1072\1085\1091\1090",Space,Str "\1073\1072\1088\1100\1077\1088\1086\1084",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1084",Space,Str "\1084\1099",Space,Str "\1086\1075\1088\1072\1085\1080\1095\1080\1084",Space,Str "\1074\1083\1080\1103\1085\1080\1077",Space,RawInline "latex" "\\In{IO}",Str ".",Space,Str "\1059",Space,Str "\1085\1072\1089",Space,Str "\1073\1091\1076\1091\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\npercept     :: Dirty -> IO (Sense, [Event])\nupdatePure  :: Sense -> [Event] -> Pure -> (Pure, [Query])\nreact       :: [Query] -> Dirty -> IO Dirty\nupdateDirty :: Dirty -> IO Dirty\npicture     :: Pure -> Picture\ndraw        :: Picture -> IO ()\n\\end{code}\n"
,Para [Str "\1042\1089\1103",Space,Str "\1083\1086\1075\1080\1082\1072",Space,Str "\1080\1075\1088\1099",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1087\1088\1086\1080\1089\1093\1086\1076\1080\1090\1100",Space,Str "\1074",Space,Str "\1095\1080\1089\1090\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{updatePure}",Str ",",Space,Str "\1086\1073\1085\1086\1074\1083\1103\1090\1100",Space,Str "\1084\1086\1076\1077\1083\1100",Space,Str "\1084\1080\1088\1072",Space,Str "\1084\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1074",Space,RawInline "latex" "\\In{updateDirty}",Str ".",Space,Str "\1044\1072\1074\1072\1081\1090\1077",Space,Str "\1086\1087\1103\1090\1100",Space,Str "\1085\1072\1095\1085\1105\1084",Space,Str "\1087\1088\1086\1077\1082\1090\1080\1088\1086\1074\1072\1072\1085\1080\1077",Space,Str "\1089\1074\1077\1088\1093\1091",Str "-",Str "\1074\1085\1080\1079",Str ".",Space,Str "\1057",Space,Str "\1101\1090\1080\1084\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1103\1084\1080",Space,Str "\1084\1099",Space,Str "\1091\1078\1077",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1085\1072\1087\1080\1089\1072\1090\1100",Space,Str "\1086\1089\1085\1086\1074\1085\1091\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1094\1080\1082\1083\1072",Space,Str "\1080\1075\1088\1099",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nloop :: IORef World -> IO ()\nloop worldRef = do\n    world <- get worldRef\n    drawWorld world\n    (world, dt) <- updateWorld world\n    worldRef $= world\n    G.addTimerCallback (max 0 $ frameTime - dt) $ loop worldRef\n\nupdateWorld :: World -> IO (World, Time)\nupdateWorld world = do\n    t0 <- get G.elapsedTime\n    (sense, events) <- percept dirty\n    let (pure', queries) = updatePure sense events pure\n    dirty' <- updateDirty =<< react queries dirty    \n    t1 <- get G.elapsedTime\n    return (World pure' dirty', t1 - t0)\n    where dirty = worldDirty world\n          pure  = worldPure  world  \n\ndrawWorld :: World -> IO ()\ndrawWorld = draw . picture . worldPure\n\\end{code}\n"
,Header 2 [Str "\1054\1087\1088\1077\1076\1077\1083\1103\1077\1084\1089\1103",Space,Str "\1089",Space,Str "\1090\1080\1087\1072\1084\1080"]
,Para [Str "\1044\1072\1074\1072\1081\1090\1077",Space,Str "\1087\1086\1076\1091\1084\1072\1077\1084",Str ",",Space,Str "\1080\1079",Space,Str "\1095\1077\1075\1086",Space,Str "\1089\1086\1089\1090\1086\1103\1090",Space,Str "\1090\1080\1087\1099",Space,RawInline "latex" "\\In{Dirty}",Space,Str "\1080",Space,RawInline "latex" "\\In{Pure}",Str ".",Space,Str "\1053\1072\1095\1085\1105\1084",Space,Str "\1089",Space,RawInline "latex" "\\In{Pure}",Str ".",Space,Str "\1058\1072\1084",Space,Str "\1090\1086\1095\1085\1086",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1074\1089\1103",Space,Str "\1080\1085\1092\1086\1088\1084\1072\1094\1080\1103",Space,Str "\1085\1077\1086\1073\1093\1086\1076\1080\1084\1072\1103",Space,Str "\1085\1072\1084",Space,Str "\1076\1083\1103",Space,Str "\1088\1080\1089\1086\1074\1072\1085\1080\1103",Space,Str "\1082\1072\1088\1090\1080\1085\1082\1080",Space,Str "(",Str "\1074\1077\1076\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{picture}",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1072",Space,Str "\1085\1072",Space,RawInline "latex" "\\In{Pure}",Str ")",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1088\1080\1089\1086\1074\1072\1085\1080\1103",Space,Str "\1085\1072\1084",Space,Str "\1085\1077\1086\1073\1093\1086\1076\1080\1084\1086",Space,Str "\1079\1085\1072\1090\1100",Space,Str "\1087\1086\1083\1086\1078\1077\1085\1080\1103",Space,Str "\1074\1089\1077\1093",Space,Str "\1096\1072\1088\1086\1074",Space,Str "\1080",Space,Str "\1080\1093",Space,Str "\1090\1080\1087\1099",Space,Str "(",Str "\1086\1085\1080",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1102\1090",Space,Str "\1094\1074\1077\1090",Str ")",Str ".",Space,Str "\1053\1072",Space,Str "\1082\1072\1088\1090\1080\1085\1082\1077",Space,Str "\1084\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1087\1086\1082\1072\1079\1099\1074\1072\1090\1100",Space,Str "\1088\1072\1079\1085\1091\1102",Space,Str "\1089\1090\1072\1090\1080\1089\1090\1080\1082\1091",Space,Str "(",Str "\1076\1072\1085\1085\1099\1077",Space,Str "\1086",Space,Str "\1078\1080\1079\1085\1103\1093",Str ",",Space,Str "\1073\1086\1085\1091\1089\1085\1099\1077",Space,Str "\1086\1095\1082\1080",Str ")",Str ".",Space,Str "\1058\1072\1082\1078\1077",Space,Str "\1080\1079",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Pure}",Space,Str "\1084\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1091\1087\1088\1072\1074\1083\1103\1090\1100",Space,Str "\1089\1086\1079\1076\1072\1085\1080\1077\1084",Space,Str "\1096\1072\1088\1086\1074",Str ".",Space,Str "\1058\1072\1082",Space,Str "\1084\1099",Space,Str "\1087\1088\1080\1093\1086\1076\1080\1084",Space,Str "\1082",Space,Str "\1090\1080\1087\1091",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndata Pure = Pure\n    { pureScores     :: Scores\n    , pureHero       :: HeroBall\n    , pureBalls      :: [Ball]\n    , pureStat       :: Stat\n    , pureCreation   :: Creation\n    }\n\\end{code}\n"
,Para [Str "\1063\1090\1086",Space,Str "\1085\1072\1084",Space,Str "\1085\1091\1078\1085\1086",Space,Str "\1079\1085\1072\1090\1100",Space,Str "\1086",Space,Str "\1096\1072\1088\1077",Space,Str "\1075\1077\1088\1086\1103",Str "?",Space,Str "\1053\1072\1084",Space,Str "\1085\1091\1078\1085\1086",Space,Str "\1077\1075\1086",Space,Str "\1087\1086\1083\1086\1078\1077\1085\1080\1077",Space,Str "\1076\1083\1103",Space,Str "\1086\1090\1088\1080\1089\1086\1074\1082\1080",Space,Str "\1080",Space,Str "\1084\1086\1076\1091\1083\1100",Space,Str "\1074\1077\1082\1090\1086\1088\1072",Space,Str "\1089\1082\1086\1088\1086\1089\1090\1080",Space,Str "(",Str "\1086\1085",Space,Str "\1087\1086\1085\1072\1076\1086\1073\1080\1090\1089\1103",Space,Str "\1085\1072\1084",Space,Str "\1087\1088\1080",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1080",Space,Str "\1074\1077\1082\1090\1086\1088\1072",Space,Str "\1089\1082\1086\1088\1086\1089\1090\1080",Space,Str "\1096\1072\1088\1072",Space,Str "\1080\1075\1088\1086\1082\1072",Str ")",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndata HeroBall = HeroBall\n    { heroPos   :: H.Position\n    , heroVel   :: H.CpFloat\n    }\n\\end{code}\n"
,Para [Str "\1044\1083\1103",Space,Str "\1086\1089\1090\1072\1083\1100\1085\1099\1093",Space,Str "\1096\1072\1088\1086\1074",Space,Str "\1085\1072\1084",Space,Str "\1085\1091\1078\1085\1086",Space,Str "\1079\1085\1072\1090\1100",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1090\1080\1087",Space,Str "\1096\1072\1088\1072",Str ",",Space,Str "\1077\1075\1086",Space,Str "\1087\1086\1083\1086\1078\1077\1085\1080\1077",Space,Str "\1080",Space,Str "\1080\1076\1077\1085\1090\1080\1092\1080\1082\1072\1090\1086\1088",Space,Str "\1096\1072\1088\1072",Str ".",Space,Str "\1055\1086",Space,Str "\1080\1076\1077\1085\1090\1080\1092\1080\1082\1072\1090\1086\1088\1091",Space,Str "\1087\1086\1090\1086\1084",Space,Str "\1084\1099",Space,Str "\1089\1084\1086\1078\1077\1084",Space,Str "\1087\1086\1085\1103\1090\1100",Space,Str "\1082\1072\1082\1086\1081",Space,Str "\1096\1072\1088",Space,Str "\1091\1076\1072\1083\1080\1090\1100",Space,Str "\1080\1079",Space,Str "\1075\1088\1103\1079\1085\1099\1093",Space,Str "\1076\1072\1085\1085\1099\1093",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndata Ball = Ball\n    { ballType      :: BallType\n    , ballPos       :: H.Position\n    , ballId        :: Id\n    }\n\ndata BallType = Hero | Good | Bad | Bonus\n    deriving (Show, Eq, Enum)\n\ntype Id = Int\n\\end{code}\n"
,Para [Str "\1057\1090\1072\1090\1080\1089\1090\1080\1082\1072",Space,Str "\1080\1075\1088\1099",Space,Str "\1089\1086\1089\1090\1086\1080\1090",Space,Str "\1080\1079",Space,Str "\1095\1080\1089\1083\1072",Space,Str "\1078\1080\1079\1085\1077\1081",Space,Str "\1080",Space,Str "\1073\1086\1085\1091\1089\1085\1099\1093",Space,Str "\1086\1095\1082\1086\1074",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndata Scores = Scores \n    { scoresLives :: Int\n    , scoresBonus :: Int\n    } \n\\end{code}\n"
,Para [Str "\1050\1072\1082",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1087\1088\1086\1080\1089\1093\1086\1076\1080\1090\1100",Space,Str "\1089\1086\1079\1076\1072\1085\1080\1077",Space,Str "\1085\1086\1074\1099\1093",Space,Str "\1096\1072\1088\1086\1074",Str "?",Space,Str "\1045\1089\1083\1080",Space,Str "\1087\1083\1086\1093\1080\1093",Space,Str "\1096\1072\1088\1086\1074",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1089\1083\1080\1096\1082\1086\1084",Space,Str "\1084\1085\1086\1075\1086",Str ",",Space,Str "\1090\1086",Space,Str "\1080\1075\1088\1072\1090\1100",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1085\1077",Space,Str "\1080\1085\1090\1077\1088\1077\1089\1085\1086",Str ",",Space,Str "\1080\1075\1088\1086\1082",Space,Str "\1089\1083\1080\1096\1082\1086\1084",Space,Str "\1073\1099\1089\1090\1088\1086",Space,Str "\1087\1088\1086\1080\1075\1088\1072\1077\1090",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1093\1086\1088\1086\1096\1080\1093",Space,Str "\1096\1072\1088\1086\1074",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1089\1083\1080\1096\1082\1086\1084",Space,Str "\1084\1085\1086\1075\1086",Str ",",Space,Str "\1090\1086",Space,Str "\1080\1075\1088\1086\1082\1091",Space,Str "\1090\1072\1082\1078\1077",Space,Str "\1073\1099\1089\1090\1088\1086",Space,Str "\1085\1072\1076\1086\1077\1089\1090",Str ".",Space,Str "\1041\1091\1076\1077\1090",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1083\1077\1075\1082\1086",Str ".",Space,Str "\1053\1072\1084",Space,Str "\1085\1077\1086\1073\1093\1086\1076\1080\1084\1086",Space,Str "\1087\1086\1076\1076\1077\1088\1078\1080\1074\1072\1090\1100",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1105\1085\1085\1099\1081",Space,Str "\1073\1072\1083\1072\1085\1089",Space,Str "\1096\1072\1088\1086\1074",Str ".",Space,Str "\1057\1086\1079\1076\1072\1085\1080\1077",Space,Str "\1096\1072\1088\1086\1074",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1087\1088\1086\1080\1089\1093\1086\1076\1080\1090\1100",Space,Str "\1089\1083\1091\1095\1072\1081\1085\1099\1084",Space,Str "\1086\1073\1088\1072\1079\1086\1084",Space,Str "\1095\1077\1088\1077\1079",Space,Str "\1088\1072\1074\1085\1099\1077",Space,Str "\1087\1088\1086\1084\1077\1078\1091\1090\1082\1080",Space,Str "\1074\1088\1077\1084\1077\1085\1080",Str ",",Space,Str "\1085\1086",Space,Str "\1089\1086\1079\1076\1072\1085\1080\1077",Space,Str "\1085\1086\1074\1086\1075\1086",Space,Str "\1096\1072\1088\1072",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1079\1072\1074\1080\1089\1077\1090\1100",Space,Str "\1086\1090",Space,Str "\1087\1088\1086\1087\1086\1088\1094\1080\1080",Space,Str "\1096\1072\1088\1086\1074",Space,Str "\1085\1072",Space,Str "\1076\1086\1089\1082\1077",Space,Str "\1074",Space,Str "\1076\1072\1085\1085\1099\1081",Space,Str "\1084\1086\1084\1077\1085\1090",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1089\1083\1080\1096\1082\1086\1084",Space,Str "\1084\1085\1086\1075\1086",Space,Str "\1087\1083\1086\1093\1080\1093",Space,Str "\1096\1072\1088\1086\1074",Str ",",Space,Str "\1090\1086",Space,Str "\1089\1082\1086\1088\1077\1077",Space,Str "\1074\1089\1077\1075\1086",Space,Str "\1084\1099",Space,Str "\1089\1086\1079\1076\1072\1076\1080\1084",Space,Str "\1093\1086\1088\1086\1096\1080\1081",Space,Str "\1096\1072\1088",Space,Str "\1080",Space,Str "\1085\1072\1086\1073\1086\1088\1086\1090",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1086\1073\1097\1077\1077",Space,Str "\1095\1080\1089\1083\1086",Space,Str "\1096\1072\1088\1086\1074",Space,Str "\1074\1077\1083\1080\1082\1086",Str ",",Space,Str "\1090\1086",Space,Str "\1084\1099",Space,Str "\1085\1077",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1091\1089\1083\1086\1078\1085\1103\1090\1100",Space,Str "\1080\1075\1088\1086\1082\1091",Space,Str "\1078\1080\1079\1085\1100",Space,Str "\1085\1086\1074\1099\1084\1080",Space,Str "\1096\1072\1088\1072\1084\1080",Str ",",Space,Str "\1076\1086\1078\1076\1105\1084\1089\1103",Space,Str "\1087\1086\1082\1072",Space,Str "\1082\1072\1082\1080\1077",Str "-",Str "\1085\1080\1073\1091\1076\1100",Space,Str "\1096\1072\1088\1099",Space,Str "\1085\1077",Space,Str "\1087\1086\1082\1080\1085\1091\1090",Space,Str "\1087\1088\1077\1076\1077\1083\1099",Space,Str "\1087\1086\1083\1103",Space,Str "\1080\1083\1080",Space,Str "\1085\1077",Space,Str "\1073\1091\1076\1091\1090",Space,Str "\1091\1085\1080\1095\1090\1086\1078\1077\1085\1099",Space,Str "\1080\1075\1088\1086\1082\1086\1084",Str ".",Space,Str "\1069\1090\1080",Space,Str "\1088\1072\1089\1089\1091\1078\1076\1077\1085\1080\1103",Space,Str "\1087\1088\1080\1074\1086\1076\1103\1090",Space,Str "\1085\1072\1089",Space,Str "\1082",Space,Str "\1090\1080\1087\1072\1084",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndata Creation = Creation \n    { creationStat      :: Stat\n    , creationGoalStat  :: Stat\n    , creationTick      :: Int\n    }\n\ndata Stat = Stat\n    { goodCount     :: Int\n    , badCount      :: Int\n    , bonusCount    :: Int\n    } \n\ndata Freq = Freq \n    { freqGood      :: Float\n    , freqBad       :: Float\n    , freqBonus     :: Float\n    } \n\\end{code}\n"
,Para [Str "\1055\1086\1083\1077",Space,RawInline "latex" "\\In{creationStat}",Space,Str "\1089\1086\1076\1077\1088\1078\1080\1090",Space,Str "\1090\1077\1082\1091\1097\1077\1077",Space,Str "\1095\1080\1089\1083\1086",Space,Str "\1096\1072\1088\1086\1074",Space,Str "\1085\1072",Space,Str "\1087\1086\1083\1077",Str ",",Space,Str "\1087\1086\1083\1077",Space,RawInline "latex" "\\In{creationGoalStat}",Space,Str "\8211",Space,Str "\1095\1080\1089\1083\1086",Space,Str "\1096\1072\1088\1086\1074",Str ",",Space,Str "\1082",Space,Str "\1082\1086\1090\1086\1088\1086\1084\1091",Space,Str "\1084\1099",Space,Str "\1089\1090\1088\1077\1084\1080\1084\1089\1103",Str ".",Space,Str "\1047\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Freq}",Space,Str "\1089\1086\1076\1077\1088\1078\1080\1090",Space,Str "\1074\1077\1089\1072",Space,Str "\1074\1077\1088\1086\1103\1090\1085\1086\1089\1090\1077\1081",Space,Str "\1089\1086\1079\1076\1072\1085\1080\1103",Space,Str "\1085\1086\1074\1086\1075\1086",Space,Str "\1096\1072\1088\1072",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1105\1085\1085\1086\1075\1086",Space,Str "\1090\1080\1087\1072",Str ".",Space,Str "\1053\1072",Space,Str "\1082\1072\1078\1076\1086\1084",Space,Str "\1096\1072\1075\1077",Space,Str "\1084\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1087\1088\1080\1073\1072\1074\1083\1103\1090\1100",Space,Str "\1077\1076\1080\1085\1080\1094\1091",Space,Str "\1082",Space,RawInline "latex" "\\In{creationTi\1089k}",Str ",",Space,Str "\1082\1072\1082",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1086\1085\1086",Space,Str "\1076\1086\1089\1090\1080\1075\1085\1077\1090",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1105\1085\1085\1086\1075\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1084\1099",Space,Str "\1087\1086\1087\1088\1086\1073\1091\1077\1084",Space,Str "\1089\1086\1079\1076\1072\1090\1100",Space,Str "\1085\1086\1074\1099\1081",Space,Str "\1096\1072\1088",Str "."]
,Para [Str "\1055\1077\1088\1077\1081\1076\1105\1084",Space,Str "\1082",Space,Str "\1075\1088\1103\1079\1085\1099\1084",Space,Str "\1076\1072\1085\1085\1099\1084",Str ".",Space,Str "\1058\1072\1084",Space,Str "\1084\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1093\1088\1072\1085\1080\1090\1100",Space,Str "\1080\1085\1092\1086\1088\1084\1072\1094\1080\1102",Str ",",Space,Str "\1085\1077\1086\1073\1093\1086\1076\1080\1084\1091\1102",Space,Str "\1076\1083\1103",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1103",Space,Str "\1084\1086\1076\1077\1083\1080",Space,Str "\1074",Space,RawInline "latex" "\\In{Hipmunk}",Str ",",Space,Str "\1080",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Str ",",Space,Str "\1074",Space,Str "\1082\1086\1090\1086\1088\1086\1077",Space,RawInline "latex" "\\In{GLFW}",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1079\1072\1087\1080\1089\1099\1074\1072\1090\1100",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1077",Space,Str "\1084\1099\1096\1080",Str ",",Space,Str "\1090\1072\1082\1078\1077",Space,Str "\1084\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1089\1083\1077\1076\1080\1090\1100",Space,Str "\1079\1072",Space,Str "\1090\1077\1084",Str ",",Space,Str "\1082\1090\1086",Space,Str "\1089\1090\1086\1083\1082\1085\1091\1083\1089\1103",Space,Str "\1089",Space,Str "\1096\1072\1088\1086\1084",Space,Str "\1080\1075\1088\1086\1082\1072",Space,Str "\1074",Space,Str "\1076\1072\1085\1085\1099\1081",Space,Str "\1084\1086\1084\1077\1085\1090",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndata Dirty = Dirty \n    { dirtyHero     :: Obj\n    , dirtyObjs     :: IxMap Obj\n    , dirtySpace    :: H.Space\n    , dirtyTouchVar :: Sensor H.Shape\n    , dirtyMouse    :: Sensor H.Position\n    }\n\ndata Obj = Obj \n    { objType     :: BallType\n    , objShape    :: H.Shape\n    , objBody     :: H.Body\n    } \n\ntype Sensor a = IORef (Maybe a)\n\\end{code}\n"
,Para [Str "\1054\1089\1086\1073\1072\1103",Space,Str "\1089\1090\1088\1091\1082\1090\1091\1088\1072",Space,RawInline "latex" "\\In{IxMap}",Space,Str "\1086\1090\1074\1077\1095\1072\1077\1090",Space,Str "\1079\1072",Space,Str "\1093\1088\1072\1085\1077\1085\1080\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Space,Str "\1074\1084\1077\1089\1090\1077",Space,Str "\1089",Space,Str "\1080\1085\1076\1077\1082\1089\1072\1084\1080",Str ".",Space,Str "\1055\1086\1082\1072",Space,Str "\1086\1089\1090\1072\1085\1086\1074\1080\1084\1089\1103",Space,Str "\1085\1072",Space,Str "\1089\1072\1084\1086\1084",Space,Str "\1087\1088\1086\1089\1090\1086\1084",Space,Str "\1087\1088\1077\1076\1089\1090\1072\1074\1083\1077\1085\1080\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ntype IxMap a = [(Id, a)]\n\\end{code}\n"
,Header 2 [Str "\1057\1090\1088\1091\1082\1090\1091\1088\1072",Space,Str "\1087\1088\1086\1077\1082\1090\1072"]
,Para [Str "\1053\1072\1084\1077\1090\1080\1084",Space,Str "\1089\1090\1088\1091\1082\1090\1091\1088\1091",Space,Str "\1087\1088\1086\1077\1082\1090\1072",Str ".",Space,Str "\1059",Space,Str "\1085\1072\1089",Space,Str "\1091\1078\1077",Space,Str "\1077\1089\1090\1100",Space,Str "\1084\1086\1076\1091\1083\1100",Space,RawInline "latex" "\\In{Types.hs}",Str ".",Space,Str "\1054\1089\1085\1086\1074\1085\1086\1081",Space,Str "\1094\1080\1082\1083",Space,Str "\1080\1075\1088\1099",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1086\1087\1080\1089\1072\1085",Space,Str "\1074",Space,Str "\1084\1086\1076\1091\1083\1077",Space,RawInline "latex" "\\In{Loop.hs}",Str ".",Space,Str "\1054\1073\1097\1080\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1103",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1103",Space,Str "\1073\1091\1076\1091\1090",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1099",Space,Str "\1074",Space,RawInline "latex" "\\In{World.hs}",Str ",",Space,Str "\1090\1072\1082\1078\1077",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1076\1074\1072",Space,Str "\1084\1086\1076\1091\1083\1103",Space,Str "\1086\1090\1074\1077\1095\1072\1102\1097\1080\1077",Space,Str "\1079\1072",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1077",Space,Str "\1095\1080\1089\1090\1099\1093",Space,Str "\1080",Space,Str "\1075\1088\1103\1079\1085\1099\1093",Space,Str "\1076\1072\1085\1085\1099\1093",Space,Str "\8211",Space,RawInline "latex" "\\In{Pure.hs}",Space,Str "\1080",Space,RawInline "latex" "\\In{Dirty.hs}",Str ".",Space,Str "\1052\1099",Space,Str "\1074\1099\1076\1077\1083\1080\1084",Space,Str "\1086\1090\1076\1077\1083\1100\1085\1099\1081",Space,Str "\1084\1086\1076\1091\1083\1100",Space,Str "\1076\1083\1103",Space,Str "\1086\1087\1080\1089\1072\1085\1080\1103",Space,Str "\1074\1089\1077\1093",Space,Str "\1082\1086\1085\1089\1090\1072\1085\1090",Space,Str "\1080\1075\1088\1099",Space,Str "(",RawInline "latex" "\\In{Inits.hs}",Str ")",Str ".",Space,Str "\1058\1072\1082",Space,Str "\1085\1072\1084",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1091\1076\1086\1073\1085\1086",Space,Str "\1085\1072\1089\1090\1088\1086\1080\1090\1100",Space,Str "\1080\1075\1088\1091",Str ",",Space,Str "\1082\1086\1075\1076\1072",Space,Str "\1084\1099",Space,Str "\1079\1072\1082\1086\1085\1095\1080\1084",Space,Str "\1089",Space,Str "\1082\1086\1076\1086\1084",Str ".",Space,Str "\1054\1090\1076\1077\1083\1100\1085\1099\1081",Space,Str "\1084\1086\1076\1091\1083\1100",Space,RawInline "latex" "\\In{Utils}",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1089\1086\1076\1077\1088\1078\1072\1090\1100",Space,Str "\1074\1089\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1086\1073\1097\1077\1075\1086",Space,Str "\1085\1072\1079\1085\1072\1095\1077\1085\1080\1103",Str ",",Space,Str "\1087\1088\1077\1086\1073\1088\1072\1079\1086\1074\1072\1085\1080\1103",Space,Str "\1084\1077\1078\1076\1091",Space,Str "\1090\1080\1087\1072\1084\1080",Space,RawInline "latex" "\\In{OpenGL}",Space,Str "\1080",Space,RawInline "latex" "\\In{Hipmunk}",Str "."]
,Header 2 [Str "\1044\1077\1090\1072\1083\1080\1079\1080\1088\1091\1077\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1086\1073\1085\1086\1074\1083\1077\1085\1080\1103",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1103",Space,Str "\1080\1075\1088\1099"]
,Para [Str "\1053\1072\1095\1085\1105\1084",Space,Str "\1089",Space,Str "\1074\1086\1089\1087\1088\1080\1103\1090\1080\1103",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nmodule World where\n\nimport qualified Physics.Hipmunk as H\n\nimport Data.Maybe\nimport Types\nimport Utils\n\nimport Pure\nimport Dirty\n\npercept :: Dirty -> IO (Sense, [Event])\npercept a = do\n    hero    <- obj2hero $ dirtyHero a\n    balls   <- mapM (uncurry obj2ball) $ setIds dirtyObjs a\n    evts1   <- fmap maybeToList $ getTouch (dirtyTouchVar a) $ dirtyObjs a\n    evts2   <- fmap maybeToList $ getClick $ dirtyMouse a\n    return $ (Sense hero balls, evts1 ++ evts2)\n    where setIds = zip [0..]\n\n-- \1074 Dirty.hs\nobj2hero    :: Obj -> IO HeroBall\nobj2ball    :: Id -> Obj -> IO Ball\ngetTouch    :: Sensor H.Shape -> IxMap Obj -> IO (Maybe Event)\ngetClick    :: Sensor H.Position -> IO (Maybe Event)\n\\end{code}\n"
,Para [Str "\1044\1072\1083\1077\1077",Space,Str "\1084\1099",Space,Str "\1085\1077",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1082\1072\1078\1076\1099\1081",Space,Str "\1088\1072\1079",Space,Str "\1074\1099\1087\1080\1089\1099\1074\1072\1090\1100",Space,Str "\1085\1086\1074\1099\1077",Space,Str "\1085\1077\1086\1087\1088\1077\1076\1077\1083\1105\1085\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1084\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1087\1088\1086\1089\1090\1086",Space,Str "\1086\1089\1090\1072\1074\1083\1103\1090\1100",Space,Str "\1086\1073\1098\1103\1074\1083\1077\1085\1080\1103",Space,Str "\1090\1080\1087\1086\1074",Space,Str "\1073\1077\1079",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1081",Str ".",Space,Str "\1048\1090\1072\1082",Space,Str "\1084\1099",Space,Str "\1085\1072\1087\1080\1089\1072\1083\1080",Space,Str "\1086\1076\1085\1091",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ",",Space,Str "\1080",Space,Str "\1087\1086\1083\1091\1095\1080\1083\1080",Space,Str "\1077\1097\1105",Space,Str "\1095\1077\1090\1099\1088\1077",Space,Str "\1085\1086\1074\1099\1093",Str "."]
,Para [Str "\1052\1099",Space,Str "\1089\1076\1077\1083\1072\1077\1084",Space,Str "\1087\1088\1077\1076\1087\1086\1083\1086\1078\1077\1085\1080\1077",Space,Str "\1086",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1089\1085\1072\1095\1072\1083\1072",Space,Str "\1084\1099",Space,Str "\1088\1077\1072\1075\1080\1088\1091\1077\1084",Space,Str "\1085\1072",Space,Str "\1085\1077\1087\1088\1077\1088\1099\1074\1085\1099\1077",Space,Str "\1089\1086\1073\1099\1090\1080\1103",Str ",",Space,Str "\1072",Space,Str "\1079\1072\1090\1077\1084",Space,Str "\1085\1072",Space,Str "\1076\1080\1089\1082\1088\1077\1090\1085\1099\1077",Str ".",Space,Str "\1055\1088\1080\1095\1105\1084",Space,Str "\1082",Space,Str "\1079\1072\1087\1088\1086\1089\1072\1084",Space,Str "\1085\1072",Space,Str "\1088\1077\1072\1082\1094\1080\1080",Space,Str "\1084\1086\1075\1091\1090",Space,Str "\1087\1088\1080\1074\1077\1089\1090\1080",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1076\1080\1089\1082\1088\1077\1090\1085\1099\1077",Space,Str "\1089\1086\1073\1099\1090\1080\1103",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nupdatePure :: Sense -> [Event] -> Pure -> (Pure, [Query])\nupdatePure s evts = updateEvents evts . updateSenses s \n\n-- \1074 Pure.hs\nupdateSenses :: Sense -> Pure -> Pure\nupdateEvents :: [Event] -> Pure -> (Pure, [Query])\n\\end{code}\n"
,Para [Str "\1042",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{react}",Space,Str "\1084\1099",Space,Str "\1087\1088\1077\1076\1087\1086\1083\1072\1075\1072\1077\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1088\1077\1072\1082\1094\1080\1080",Space,Str "\1084\1080\1088\1072",Space,Str "\1085\1072",Space,Str "\1089\1086\1073\1099\1090\1080\1103",Space,Str "\1085\1077\1079\1072\1074\1080\1089\1080\1084\1099",Space,Str "\1076\1088\1091\1075",Space,Str "\1086\1090",Space,Str "\1076\1088\1091\1075\1072",Str ".",Space,RawInline "latex" "\\In{foldQuery}",Str "~",Str "\8211",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1089\1074\1105\1088\1090\1082\1080",Space,Str "\1076\1083\1103",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Query}",Str "."]
,RawBlock "latex" "\n\\begin{code}\nimport Control.Monad\n...\n\nreact :: [Query] -> Dirty -> IO Dirty\nreact = foldr (<=<) return   \n    . fmap (foldQuery removeBall heroVelocity makeBall)\n\n-- \1074 Dirty.hs\nremoveBall      :: Ball         -> Dirty -> IO Dirty\nheroVelocity    :: H.Velocity   -> Dirty -> IO Dirty\nmakeBall        :: Freq         -> Dirty -> IO Dirty\n\\end{code}\n"
,Para [Str "\1054\1073\1088\1072\1090\1080\1090\1077",Space,Str "\1074\1085\1080\1084\1072\1085\1080\1077",Space,Str "\1085\1072",Space,Str "\1090\1086",Str ",",Space,Str "\1082\1072\1082",Space,Str "\1084\1099",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1086\1074\1072\1083\1080\1089\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1103\1084\1080",Space,RawInline "latex" "\\In{foldr}",Str ",",Space,RawInline "latex" "\\In{return}",Space,Str "\1080",Space,RawInline "latex" "\\In{<=<}",Space,Str "\1076\1083\1103",Space,Str "\1090\1086\1075\1086",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1085\1072\1085\1080\1079\1072\1090\1100",Space,Str "\1076\1088\1091\1075",Space,Str "\1085\1072",Space,Str "\1076\1088\1091\1075\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Dirty -> IO Dirty}",Str ".",Space,Str "\1053\1072\1087\1086\1084\1085\1102",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{<=<}",Str "~",Str "\8211",Space,Str "\1101\1090\1086",Space,Str "\1072\1085\1072\1083\1086\1075",Space,Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1080",Space,Str "\1076\1083\1103",Space,Str "\1084\1086\1085\1072\1076\1085\1099\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str "."]
,Para [Str "\1054\1073\1085\1086\1074\1083\1077\1085\1080\1077",Space,Str "\1084\1086\1076\1077\1083\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nupdateDirty :: Dirty -> IO Dirty\nupdateDirty = stepDirty dt\n\n-- \1074 Dirty.hs\nstepDirty :: H.Time -> Dirty -> IO Dirty\n\n-- \1074 Inits.hs\ndt :: H.Time\ndt = 0.5\n\\end{code}\n"
,Para [Str "\1060\1091\1085\1082\1094\1080\1080",Space,Str "\1088\1080\1089\1086\1074\1072\1085\1080\1103",Space,Str "\1087\1086\1084\1077\1089\1090\1080\1084",Space,Str "\1074",Space,Str "\1086\1090\1076\1077\1083\1100\1085\1099\1081",Space,Str "\1084\1086\1076\1091\1083\1100",Space,RawInline "latex" "\\In{Graphics.hs}"]
,RawBlock "latex" "\n\\begin{code}\n-- \1087\1077\1088\1077\1084\1077\1089\1090\1080\1084 \1080\1079 Loop.hs \1074 World.hs \ndrawWorld :: World -> IO ()\ndrawWorld = draw . picture . worldPure\n\n-- \1074 Graphics.hs\ndraw :: Picture -> IO ()\n\n-- \1074 Pure.hs\npicture     :: Pure -> Picture\n\\end{code}\n"
,Para [Str "\1044\1086\1073\1072\1074\1080\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1080\1085\1080\1094\1080\1072\1083\1080\1079\1072\1094\1080\1080",Space,Str "\1080\1075\1088\1099",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ninitWorld :: IO World\ninitWorld = do\n    dirty   <- initDirty\n    (sense, events) <- percept dirty\n    return $ World (initPure sense events) dirty\n\n-- \1074 Dirty.hs\ninitDirty :: IO Dirty\n-- \1074 Pure.hs\ninitPure :: Sense -> [Event] -> Pure\n\\end{code}\n"
,Header 2 [Str "\1044\1077\1090\1072\1083\1080\1079\1080\1088\1091\1077\1084",Space,Str "\1076\1072\1083\1100\1096\1077"]
,Para [Str "\1042\1086\1090",Space,Str "\1090\1072\1082",Space,Str "\1085\1072",Space,Str "\1089\1072\1084\1086\1084",Space,Str "\1080\1085\1090\1077\1088\1077\1089\1085\1086\1084",Space,Str "\1084\1077\1089\1090\1077",Str "\8230",Space,Str "\1052\1099",Space,Str "\1074\1099\1085\1091\1078\1076\1077\1085\1099",Space,Str "\1087\1088\1077\1088\1074\1072\1090\1100\1089\1103",Str ".",Space,Str "\1071",Space,Str "\1085\1072\1076\1077\1102\1089\1100",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1074\1099",Space,Str "\1091\1083\1086\1074\1080\1083\1080",Space,Str "\1086\1089\1085\1086\1074\1085\1091\1102",Space,Str "\1080\1076\1077\1102",Space,Str "\1084\1077\1090\1086\1076\1072",Space,Str "\1080",Space,Str "\1089\1084\1086\1078\1077\1090\1077",Space,Str "\1079\1072\1082\1086\1085\1095\1080\1090\1100",Space,Str "\1101\1090\1091",Space,Str "\1080\1075\1088\1091",Space,Str "\1089\1072\1084\1086\1089\1090\1086\1103\1090\1077\1083\1100\1085\1086",Str ".",Space,Str "\1042\1089\1103",Space,Str "\1083\1086\1075\1080\1082\1072",Space,Str "\1080\1075\1088\1099",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1086\1087\1080\1089\1072\1085\1072",Space,Str "\1074",Space,Str "\1084\1086\1076\1091\1083\1077",Space,RawInline "latex" "\\In{Pure.hs}",Str ".",Space,Str "\1055\1088\1080\1095\1105\1084",Space,Str "\1074",Space,Str "\1101\1090\1086\1084",Space,Str "\1084\1086\1076\1091\1083\1077",Space,Str "\1073\1091\1076\1091\1090",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1095\1080\1089\1090\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ".",Space,Str "\1054\1089\1090\1072\1083\1086\1089\1100",Space,Str "\1087\1088\1080\1084\1077\1088\1085\1086",Space,Str "1000",Space,Str "\1089\1090\1088\1086\1082",Space,Str "\1082\1086\1076\1072",Str ".",Space,Str "\1071",Space,Str "\1085\1077",Space,Str "\1073\1091\1076\1091",Space,Str "\1074\1099\1087\1080\1089\1099\1074\1072\1090\1100",Space,Str "\1089\1074\1086\1105",Space,Str "\1088\1077\1096\1077\1085\1080\1077",Str ",",Space,Str "\1077\1089\1083\1080",Space,Str "\1074\1099",Space,Str "\1075\1076\1077",Str "-",Str "\1090\1086",Space,Str "\1079\1072\1087\1085\1105\1090\1077\1089\1100",Space,Str "\1080\1083\1080",Space,Str "\1091",Space,Str "\1074\1072\1089",Space,Str "\1095\1090\1086",Str "-",Str "\1090\1086",Space,Str "\1085\1077",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1087\1086\1083\1091\1095\1072\1090\1100\1089\1103",Str ",",Space,Str "\1074\1099",Space,Str "\1084\1086\1078\1077\1090\1077",Space,Str "\1089\1074\1077\1088\1080\1090\1100\1089\1103",Space,Str "\1089",Space,Str "\1085\1080\1084",Space,Str "(",Str "\1086\1085\1086",Space,Str "\1074\1093\1086\1076\1080\1090",Space,Str "\1074",Space,Str "\1082\1086\1076",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1087\1088\1080\1083\1072\1075\1072\1077\1090\1089\1103",Space,Str "\1089",Space,Str "\1082\1085\1080\1075\1086\1081",Str ")",Str "."]
,Header 2 [Str "\1050\1088\1072\1090\1082\1086\1077",Space,Str "\1089\1086\1076\1077\1088\1078\1072\1085\1080\1077"]
,Para [Str "\1042",Space,Str "\1101\1090\1086\1081",Space,Str "\1075\1083\1072\1074\1077",Space,Str "\1084\1099",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1077\1083\1080",Space,Str "\1085\1072",Space,Str "\1076\1074\1077",Space,Str "\1080\1085\1090\1077\1088\1077\1089\1085\1099\1077",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1080",Str ".",Space,Str "\1060\1080\1079\1080\1095\1077\1089\1082\1080\1081",Space,Str "\1076\1074\1080\1078\1086\1082",Space,RawInline "latex" "\\In{Hipmunk}",Space,Str "\1080",Space,Str "\1075\1088\1072\1092\1080\1095\1077\1089\1082\1091\1102",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1091",Space,RawInline "latex" "\\In{OpenGL}",Space,Str "\1080",Space,Str "\1091\1079\1085\1072\1083\1080",Space,Str "\1084\1077\1090\1086\1076",Space,Str "\1091\1082\1088\1086\1097\1077\1085\1080\1103",Space,Str "\1080\1084\1087\1077\1088\1072\1090\1080\1074\1085\1086\1075\1086",Space,Str "\1082\1086\1076\1072",Str ".",Space,Str "\1052\1099",Space,Str "\1088\1072\1079\1076\1077\1083\1080\1083\1080",Space,Str "\1089\1086\1089\1090\1086\1103\1085\1080\1077",Space,Str "\1080\1075\1088\1099",Space,Str "\1085\1072",Space,Str "\1076\1074\1077",Space,Str "\1095\1072\1089\1090\1080",Str ".",Space,Str "\1042",Space,Str "\1086\1076\1085\1091",Space,Str "\1087\1086\1084\1077\1089\1090\1080\1083\1080",Space,Str "\1074\1089\1077",Space,Str "\1090\1077",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1099",Str ",",Space,Str "\1076\1083\1103",Space,Str "\1082\1086\1090\1086\1088\1099\1093",Space,Str "\1085\1077\1074\1086\1079\1084\1086\1078\1085\1086",Space,Str "\1086\1073\1086\1081\1090\1080\1089\1100",Space,Str "\1073\1077\1079",Space,RawInline "latex" "\\In{IO}",Str "-",Str "\1092\1091\1085\1082\1094\1080\1081",Str ",",Space,Str "\1072",Space,Str "\1074",Space,Str "\1076\1088\1091\1075\1086\1081",Space,Str "\1090\1077",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1099",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1085\1077\1086\1073\1093\1086\1076\1080\1084\1099",Space,Str "\1076\1083\1103",Space,Str "\1088\1077\1072\1083\1080\1079\1072\1094\1080\1080",Space,Str "\1083\1086\1075\1080\1082\1080",Space,Str "\1080\1075\1088\1099",Str ".",Space,Str "\1042\1089\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1086\1090\1074\1077\1095\1072\1102\1097\1080\1077",Space,Str "\1079\1072",Space,Str "\1083\1086\1075\1080\1082\1091",Space,Str "\1080\1075\1088\1099",Space,Str "\1103\1074\1083\1103\1102\1090\1089\1103",Space,Str "\1095\1080\1089\1090\1099\1084\1080",Str ".",Space,Str "\1055\1072\1088\1072\1084\1077\1090\1088\1099",Space,Str "\1080\1084\1087\1077\1088\1072\1090\1080\1074\1085\1086\1081",Space,Str "\1095\1072\1089\1090\1080",Space,Str "\1085\1077",Space,Str "\1086\1073\1085\1086\1074\1083\1103\1102\1090\1089\1103",Space,Str "\1089\1088\1072\1079\1091",Str ",",Space,Str "\1089\1085\1072\1095\1072\1083\1072",Space,Str "\1084\1099",Space,Str "\1076\1077\1083\1072\1077\1084",Space,Str "\1089",Space,Str "\1085\1080\1093",Space,Str "\1089\1085\1080\1084\1086\1082",Str ",",Space,Str "\1087\1086\1090\1086\1084",Space,Str "\1087\1077\1088\1077\1076\1072\1105\1084",Space,Str "\1101\1090\1086\1090",Space,Str "\1089\1085\1080\1084\1086\1082",Space,Str "\1074",Space,Str "\1095\1080\1089\1090\1091\1102",Space,Str "\1095\1072\1089\1090\1100",Str ",",Space,Str "\1080",Space,Str "\1086\1085\1072",Space,Str "\1088\1072\1079\1073\1080\1088\1072\1077\1090\1089\1103",Space,Str "\1089",Space,Str "\1090\1077\1084",Space,Str "\1082\1072\1082",Space,Str "\1080\1093",Space,Str "\1086\1073\1085\1086\1074\1083\1103\1090\1100",Str ".",Space,Str "\1063\1072\1089\1090\1080",Space,Str "\1086\1073\1097\1072\1102\1090\1089\1103",Space,Str "\1084\1077\1078\1076\1091",Space,Str "\1089\1086\1073\1086\1081",Space,Str "\1085\1072",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1099\1093",Space,Str "\1084\1072\1083\1077\1085\1100\1082\1080\1093",Space,Str "\1103\1079\1099\1082\1072\1093",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1079\1072\1082\1086\1076\1080\1088\1086\1074\1072\1085\1099",Space,Str "\1074",Space,Str "\1090\1080\1087\1072\1093",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1103\1079\1099\1082",Space,Str "\1085\1072\1073\1083\1102\1076\1077\1085\1080\1081",Space,Str "(",RawInline "latex" "\\In{Event}",Str ")",Str ",",Space,Str "\1103\1079\1099\1082",Space,Str "\1088\1077\1072\1082\1094\1080\1081",Space,Str "(",RawInline "latex" "\\In{Query}",Str ")",Space,Str "\1080",Space,Str "\1103\1079\1099\1082",Space,Str "\1086\1090\1088\1080\1089\1086\1074\1082\1080",Space,Str "\1080\1075\1088\1086\1074\1086\1075\1086",Space,Str "\1084\1080\1088\1072",Space,Str "(",RawInline "latex" "\\In{Picture}",Str ")",Str "."]
,Header 2 [Str "\1059\1087\1088\1072\1078\1085\1077\1085\1080\1103"]
,Para [Str "\1047\1072\1082\1086\1085\1095\1080\1090\1077",Space,Str "\1082\1086\1076",Space,Str "\1080\1075\1088\1099",Str ".",Space,Str "\1048\1083\1080",Str ",",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1086",Str ",",Space,Str "\1087\1088\1080",Space,Str "\1079\1085\1072\1082\1086\1084\1089\1090\1074\1077",Space,Str "\1089",Space,RawInline "latex" "\\In{Hipmunk}",Space,Str "\1091",Space,Str "\1074\1072\1089",Space,Str "\1087\1086\1103\1074\1080\1083\1072\1089\1100",Space,Str "\1080\1076\1077\1103",Space,Str "\1085\1086\1074\1086\1081",Space,Str "\1080\1075\1088\1099",Space,Str "\1089",Space,Str "\1085\1077\1074\1077\1088\1086\1103\1090\1085\1086\1081",Space,Str "\1076\1080\1085\1072\1084\1080\1082\1086\1081",Str ".",Space,Str "\1045\1097\1105",Space,Str "\1083\1091\1095\1096\1077",Str "!",Space,Str "\1053\1072\1087\1080\1096\1080\1090\1077",Space,Str "\1077\1105",Str ".",Space,Str "\1055\1088\1080",Space,Str "\1101\1090\1086\1084",Space,Str "\1087\1088\1086\1076\1091\1084\1072\1081\1090\1077",Space,Str "\1087\1088\1086\1077\1082\1090",Space,Str "\1080\1075\1088\1099",Space,Str "\1090\1072\1082",Str ",",Space,Str "\1095\1090\1086\1073\1099",Space,RawInline "latex" "\\In{IO}",Str "-",Str "\1090\1080\1087\1099",Space,Str "\1085\1077",Space,Str "\1088\1072\1079\1073\1077\1078\1072\1083\1080\1089\1100",Space,Str "\1087\1086",Space,Str "\1074\1089\1077\1081",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1077",Str "."]]