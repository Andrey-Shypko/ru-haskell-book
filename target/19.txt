[Header 1 [Str "\1054\1088\1080\1077\1085\1090\1080\1088\1091\1077\1084\1089\1103",Space,Str "\1087\1086",Space,Str "\1082\1072\1088\1090\1077"]
,Para [Str "\1056\1072\1089\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1079\1072\1076\1072\1095\1091",Space,Str "\1087\1086\1080\1089\1082\1072",Space,Str "\1084\1072\1088\1096\1088\1091\1090\1072",Space,Str "\1085\1072",Space,Str "\1082\1072\1088\1090\1077",Str ".",Space,Str "\1059",Space,Str "\1085\1072\1089",Space,Str "\1077\1089\1090\1100",Space,Str "\1082\1072\1088\1090\1072",Space,Str "\1084\1077\1090\1088\1086",Space,Str "\1080",Space,Str "\1085\1072\1084",Space,Str "\1085\1091\1078\1085\1086",Space,Str "\1087\1088\1086\1083\1086\1078\1080\1090\1100",Space,Str "\1084\1072\1088\1096\1088\1091\1090",Space,Str "\1086\1090",Space,Str "\1086\1076\1085\1086\1081",Space,Str "\1089\1090\1072\1085\1094\1080\1080",Space,Str "\1082",Space,Str "\1076\1088\1091\1075\1086\1081",Str ".",Space,Str "\1050\1072\1088\1090\1072",Space,Str "\1084\1077\1090\1088\1086",Str "~",Str "\8211",Space,Str "\1101\1090\1086",Space,Str "\1075\1088\1072\1092",Str ",",Space,Str "\1091\1079\1083\1099",Space,Str "\1086\1073\1086\1079\1085\1072\1095\1072\1102\1090",Space,Str "\1089\1090\1072\1085\1094\1080\1080",Str ",",Space,Str "\1072",Space,Str "\1088\1105\1073\1088\1072",Space,Str "\1089\1086\1077\1076\1080\1085\1103\1102\1090",Space,Str "\1089\1086\1089\1077\1076\1085\1080\1077",Space,Str "\1089\1090\1072\1085\1094\1080\1080",Str ".",Space,Str "\1055\1088\1077\1076\1087\1086\1083\1086\1078\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1099",Space,Str "\1079\1085\1072\1077\1084",Space,Str "\1088\1072\1089\1089\1090\1086\1103\1085\1080\1103",Space,Str "\1084\1077\1078\1076\1091",Space,Str "\1074\1089\1077\1084\1080",Space,Str "\1089\1090\1072\1085\1094\1080\1103\1084\1080",Space,Str "\1080",Space,Str "\1085\1072\1084",Space,Str "\1085\1072\1076\1086",Space,Str "\1085\1072\1081\1090\1080",Space,Str "\1082\1088\1072\1090\1095\1072\1081\1096\1080\1081",Space,Str "\1087\1091\1090\1100",Space,Str "\1086\1090",Space,Str "\1089\1090\1072\1085\1094\1080\1080",Space,Str "\1087\1083\1086\1097\1072\1076\1100",Space,Str "\1041\1072\1093\1072",Space,Str "\1076\1086",Space,Str "\1089\1090\1072\1085\1094\1080\1080",Space,Str "\1058\1072\1080\1085\1089\1090\1074\1077\1085\1085\1099\1081",Space,Str "\1083\1077\1089",Str "\160",Str "(",RawInline "tex" "\\RefFig{metro}",Str ")",Str "."]
,Para [RawInline "tex" "\\Fig{\1057\1093\1077\1084\1072 \1084\1077\1090\1088\1086\1087\1086\1083\1080\1090\1077\1085\1072}{../pic/19/metro.ps}{metro}{0.9}"]
,Para [Str "\1044\1072\1074\1072\1081\1090\1077",Space,Str "\1087\1077\1088\1077\1074\1077\1076\1105\1084",Space,Str "\1101\1090\1086\1090",Space,Str "\1088\1080\1089\1091\1085\1086\1082",Space,Str "\1085\1072",Space,Str "Haskell",Str ".",Space,Str "\1057\1085\1072\1095\1072\1083\1072",Space,Str "\1086\1087\1080\1096\1077\1084",Space,Str "\1080\1084\1077\1085\1072",Space,Str "\1083\1080\1085\1080\1081",Space,Str "\1080",Space,Str "\1089\1090\1072\1085\1094\1080\1081",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nmodule Metro where\n\ndata Station = St Way Name\n    deriving (Show, Eq)\n\ndata Way = Blue | Black | Green | Red | Orange\n    deriving (Show, Eq)\n\ndata Name = Kosmodrom | UlBylichova | Zvezda \n          | Zapad | Ineva | De | Krest | Rodnik | Vostok \n          | Yug | Sirius | Til | TrollevMost | Prizrak | TainstvenniyLes \n          | DnoBolota | PlBakha | Lao | Sever\n          | PlShekspira\n    deriving (Show, Eq)\n\\end{code}\n"
,Para [Str "\1055\1088\1077\1076\1087\1086\1083\1086\1078\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1085\1072\1084",Space,Str "\1080\1079\1074\1077\1089\1090\1085\1099",Space,Str "\1082\1086\1086\1088\1076\1080\1085\1072\1090\1099",Space,Str "\1082\1072\1078\1076\1086\1081",Space,Str "\1080\1079",Space,Str "\1089\1090\1072\1085\1094\1080\1081",Str ".",Space,Str "\1055\1086",Space,Str "\1085\1080\1084",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1074\1099\1095\1080\1089\1083\1103\1090\1100",Space,Str "\1088\1072\1089\1089\1090\1086\1103\1085\1080\1077",Space,Str "\1084\1077\1078\1076\1091",Space,Str "\1089\1090\1072\1085\1094\1080\1103\1084\1080",Space,Str "\1087\1086",Space,Str "\1087\1088\1103\1084\1086\1081",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndata Point = Point \n    { px :: Double\n    , py :: Double\n    } deriving (Show, Eq)\n\nplace :: Name -> Point\nplace x = uncurry Point $ case x of\n    Kosmodrom           -> (-3,7)\n    UlBylichova         -> (-2,4) \n    Zvezda              -> (0,1)\n    Zapad               -> (1,7)\n    Ineva               -> (0.5, 4)\n    De                  -> (0,-1)\n    Krest               -> (0,-3)\n    Rodnik              -> (0,-5)\n    Vostok              -> (-1,-7)\n    Yug                 -> (-7,-1)\n    Sirius              -> (-3,0)\n    Til                 -> (3,2)\n    TrollevMost         -> (5,4)\n    Prizrak             -> (8,6)\n    TainstvenniyLes     -> (11,7)\n    DnoBolota           -> (-7,-4)\n    PlBakha             -> (-3,-3)\n    Lao                 -> (3.5,0)\n    Sever               -> (6,1)\n    PlShekspira         -> (3,-3)\n\n\ndist :: Point -> Point -> Double\ndist a b = sqrt $ (px a - px b)^2 + (py a - py b)^2\n\nstationDist :: Station -> Station -> Double\nstationDist (St n a) (St m b)\n    | n /= m && a == b  = penalty\n    | otherwise         = dist (place a) (place b)\n    where penalty = 1\n\\end{code}\n"
,Para [Str "\1056\1072\1089\1089\1090\1086\1103\1085\1080\1077",Space,Str "\1084\1077\1078\1076\1091",Space,Str "\1090\1086\1095\1082\1072\1084\1080",Space,Str "\1074\1099\1095\1080\1089\1083\1103\1077\1090\1089\1103",Space,Str "\1087\1086",Space,Str "\1092\1086\1088\1084\1091\1083\1077",Space,Str "\1045\1074\1082\1083\1080\1076\1072",Space,Str "(",RawInline "latex" "\\In{dist}",Str ")",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1091",Space,Str "\1089\1090\1072\1085\1094\1080\1081",Space,Str "\1086\1076\1080\1085\1072\1082\1086\1074\1099\1077",Space,Str "\1080\1084\1077\1085\1072",Str ",",Space,Str "\1085\1086",Space,Str "\1086\1085\1080",Space,Str "\1088\1072\1089\1087\1086\1083\1086\1078\1077\1085\1099",Space,Str "\1085\1072",Space,Str "\1088\1072\1079\1085\1099\1093",Space,Str "\1083\1080\1085\1080\1103\1093",Space,Str "\1084\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1089\1095\1080\1090\1072\1090\1100",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1088\1072\1089\1089\1090\1086\1103\1085\1080\1077",Space,Str "\1084\1077\1078\1076\1091",Space,Str "\1085\1080\1084\1080",Space,Str "\1088\1072\1074\1085\1086",Space,Str "\1077\1076\1080\1085\1080\1094\1077",Str ".",Space,Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1085\1072\1084",Space,Str "\1085\1077\1086\1073\1093\1086\1076\1080\1084\1086",Space,Str "\1086\1087\1080\1089\1072\1090\1100",Space,Str "\1089\1074\1103\1079\1085\1086\1089\1090\1100",Space,Str "\1089\1090\1072\1085\1094\1080\1081",Str ".",Space,Str "\1052\1099",Space,Str "\1086\1087\1080\1096\1077\1084",Space,Str "\1089\1074\1103\1079\1085\1086\1089\1090\1100",Space,Str "\1074",Space,Str "\1074\1080\1076\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1076\1083\1103",Space,Str "\1076\1072\1085\1085\1086\1081",Space,Str "\1089\1090\1072\1085\1094\1080\1080",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1074\1089\1077\1093",Space,Str "\1089\1086\1089\1077\1076\1085\1080\1093",Space,Str "\1089",Space,Str "\1085\1077\1081",Space,Str "\1089\1090\1072\1085\1094\1080\1081",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nmetroMap :: Station -> [Station]\nmetroMap x = case x of\n    St Black Kosmodrom          -> [St Black UlBylichova]\n    St Black UlBylichova        -> \n            [St Black Kosmodrom, St Black Zvezda, St Red UlBylichova]  \n    St Black  Zvezda            -> \n            [St Black UlBylichova, St Blue  Zvezda, St Green Zvezda]\n    ...\n\\end{code}\n"
,Para [Str "\1055\1088\1080\1074\1077\1076\1105\1085",Space,Str "\1087\1088\1080\1084\1077\1088",Space,Str "\1079\1072\1087\1086\1083\1085\1077\1085\1080\1103",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1076\1083\1103",Space,Str "\1086\1076\1085\1086\1081",Space,Str "\1083\1080\1085\1080\1080",Str ".",Space,Str "\1054\1089\1090\1072\1083\1100\1085\1099\1077",Space,Str "\1083\1080\1085\1080\1080",Space,Str "\1079\1072\1087\1086\1083\1085\1103\1102\1090\1089\1103",Space,Str "\1072\1085\1072\1083\1086\1075\1080\1095\1085\1086",Str ".",Space,Str "\1054\1073\1088\1072\1090\1080\1090\1077",Space,Str "\1074\1085\1080\1084\1072\1085\1080\1077",Space,Str "\1085\1072",Space,Str "\1090\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1085\1077\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1089\1090\1072\1085\1094\1080\1080",Space,Str "\1080\1084\1077\1102\1090",Space,Str "\1086\1076\1080\1085\1072\1082\1086\1074\1099\1077",Space,Str "\1080\1084\1077\1085\1072",Str ",",Space,Str "\1085\1086",Space,Str "\1085\1072\1093\1086\1076\1103\1090\1089\1103",Space,Str "\1085\1072",Space,Str "\1088\1072\1079\1085\1099\1093",Space,Str "\1083\1080\1085\1080\1103\1093",Str "."]
,Para [Str "\1042\1089\1105",Space,Str "\1075\1086\1090\1086\1074\1086",Space,Str "\1076\1083\1103",Space,Str "\1090\1086\1075\1086",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1085\1072\1087\1080\1089\1072\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1087\1086\1080\1089\1082\1072",Space,Str "\1084\1072\1088\1096\1088\1091\1090\1072",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1084\1099",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1091\1077\1084\1089\1103",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084\1086\1084",Space,Str "A",Str "*",Str "."]
,Header 2 [Str "\1040\1083\1075\1086\1088\1080\1090\1084",Space,Str "\1101\1074\1088\1080\1089\1090\1080\1095\1077\1089\1082\1086\1075\1086",Space,Str "\1087\1086\1080\1089\1082\1072",Space,Str "\1040",Str "*"]
,Para [Str "\1053\1072\1096\1072",Space,Str "\1079\1072\1076\1072\1095\1072",Space,Str "\1086\1090\1085\1086\1089\1080\1090\1089\1103",Space,Str "\1082",Space,Str "\1079\1072\1076\1072\1095\1072\1084",Space,Str "\1087\1086\1080\1089\1082\1072",Space,Str "\1087\1091\1090\1077\1081",Space,Str "\1085\1072",Space,Str "\1075\1088\1072\1092\1077",Str ".",Space,Str "\1055\1091\1090\1105\1084",Space,Str "\1085\1072",Space,Str "\1075\1088\1072\1092\1077",Space,Str "\1085\1072\1079\1099\1074\1072\1102\1090",Space,Str "\1090\1072\1082\1091\1102",Space,Str "\1087\1086\1089\1083\1077\1076\1086\1074\1072\1090\1077\1083\1100\1085\1086\1089\1090\1100",Space,Str "\1091\1079\1083\1086\1074",Str ",",Space,Str "\1074",Space,Str "\1082\1086\1090\1086\1088\1086\1081",Space,Str "\1076\1083\1103",Space,Str "\1083\1102\1073\1099\1093",Space,Str "\1076\1074\1091\1093",Space,Str "\1089\1086\1089\1077\1076\1085\1080\1093",Space,Str "\1091\1079\1083\1086\1074",Space,Str "\1089\1091\1097\1077\1089\1090\1074\1091\1077\1090",Space,Str "\1088\1077\1073\1088\1086",Str ",",Space,Str "\1082\1086\1090\1086\1088\1086\1077",Space,Str "\1080\1093",Space,Str "\1089\1086\1077\1076\1080\1085\1103\1077\1090",Str ".",Space,Str "\1042",Space,Str "\1085\1072\1096\1077\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1075\1088\1072\1092\1086\1084",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1082\1072\1088\1090\1072",Space,Str "\1084\1077\1090\1088\1086",Str ",",Space,Str "\1091\1079\1083\1072\1084\1080",Str "~",Str "\8211",Space,Str "\1089\1090\1072\1085\1094\1080\1080",Str ",",Space,Str "\1088\1105\1073\1088\1072\1084\1080",Str "~",Str "\8211",Space,Str "\1083\1080\1085\1080\1080",Space,Str "\1084\1077\1078\1076\1091",Space,Str "\1089\1090\1072\1085\1094\1080\1103\1084\1080",Str ",",Space,Str "\1072",Space,Str "\1087\1091\1090\1103\1084\1080",Str "~",Str "\8211",Space,Str "\1084\1072\1088\1096\1088\1091\1090\1099",Str "."]
,Para [Str "\1055\1088\1077\1076\1089\1090\1072\1074\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1099",Space,Str "\1085\1072\1093\1086\1076\1080\1084\1089\1103",Space,Str "\1074",Space,Str "\1091\1079\1083\1077",Space,RawInline "latex" "\\In{A}",Space,Str "\1080",Space,Str "\1085\1072\1084",Space,Str "\1085\1077\1086\1073\1093\1086\1076\1080\1084\1086",Space,Str "\1087\1086\1087\1072\1089\1090\1100",Space,Str "\1074",Space,Str "\1091\1079\1077\1083",Space,RawInline "latex" "\\In{B}",Space,Str "\1080",Space,Str "\1077\1076\1080\1085\1089\1090\1074\1077\1085\1085\1086\1077",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1085\1072\1084",Space,Str "\1080\1079\1074\1077\1089\1090\1085\1086",Str "~",Str "\8211",Space,Str "\1101\1090\1086",Space,Str "\1074\1089\1077",Space,Str "\1089\1086\1089\1077\1076\1085\1080\1077",Space,Str "\1091\1079\1083\1099",Space,Str "\1089",Space,Str "\1090\1077\1084",Str ",",Space,Str "\1074",Space,Str "\1082\1086\1090\1086\1088\1086\1084",Space,Str "\1084\1099",Space,Str "\1085\1072\1093\1086\1076\1080\1084\1089\1103",Str ".",Space,Str "\1059",Space,Str "\1085\1072\1089",Space,Str "\1077\1089\1090\1100",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1086\1089\1090\1100",Space,Str "\1087\1077\1088\1077\1081\1090\1080",Space,Str "\1074",Space,Str "\1086\1076\1080\1085",Space,Str "\1080\1079",Space,Str "\1089\1086\1089\1077\1076\1085\1080\1093",Space,Str "\1091\1079\1083\1086\1074",Space,Str "\1080",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1077\1090\1100",Space,Str "\1085\1077\1090",Space,Str "\1083\1080",Space,Str "\1089\1088\1077\1076\1080",Space,Str "\1080\1093",Space,Str "\1089\1086\1089\1077\1076\1077\1081",Space,Str "\1091\1079\1083\1072",Space,RawInline "latex" "\\In{B}",Str ".",Space,Str "\1042",Space,Str "\1101\1090\1086\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1085\1072\1084",Space,Str "\1085\1080\1095\1077\1075\1086",Space,Str "\1085\1077",Space,Str "\1086\1089\1090\1072\1105\1090\1089\1103",Space,Str "\1082\1088\1086\1084\1077",Space,Str "\1090\1086\1075\1086",Space,Str "\1082\1072\1082",Space,Str "\1073\1088\1086\1076\1080\1090\1100",Space,Str "\1087\1086",Space,Str "\1082\1072\1088\1090\1077",Space,Str "\1086\1090",Space,Str "\1089\1090\1072\1085\1094\1080\1080",Space,Str "\1082",Space,Str "\1089\1090\1072\1085\1094\1080\1080",Space,Str "\1074",Space,Str "\1089\1083\1091\1095\1072\1081\1085\1086\1084",Space,Str "\1087\1086\1088\1103\1076\1082\1077",Str ",",Space,Str "\1087\1086\1082\1072",Space,Str "\1084\1099",Space,Str "\1085\1077",Space,Str "\1085\1072\1090\1086\1083\1082\1085\1105\1084\1089\1103",Space,Str "\1085\1072",Space,Str "\1091\1079\1077\1083",Space,RawInline "latex" "\\In{B}",Space,Str "\1080\1083\1080",Space,Str "\1074\1089\1077",Space,Str "\1091\1079\1083\1099",Space,Str "\1085\1077",Space,Str "\1082\1086\1085\1095\1072\1090\1089\1103",Str ".",Space,Str "\1058\1072\1082\1086\1081",Space,Str "\1087\1086\1080\1089\1082",Space,Str "\1085\1072\1079\1099\1074\1072\1102\1090",Space,Str "\1089\1083\1077\1087\1099\1084",Str "."]
,Para [Str "\1042\1086\1090",Space,Str "\1077\1089\1083\1080",Space,Str "\1073\1099",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1073\1099\1083",Space,Str "\1082\1086\1084\1087\1072\1089",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1074",Space,Str "\1082\1072\1078\1076\1086\1081",Space,Str "\1090\1086\1095\1082\1077",Space,Str "\1091\1082\1072\1079\1099\1074\1072\1083",Space,Str "\1074",Space,Str "\1089\1090\1086\1088\1086\1085\1091",Space,Str "\1094\1077\1083\1080",Space,Str "\1085\1072\1084",Space,Str "\1073\1099\1083\1086",Space,Str "\1073\1099",Space,Str "\1075\1086\1088\1072\1079\1076\1086",Space,Str "\1087\1088\1086\1097\1077",Str ".",Space,Str "\1058\1072\1082\1086\1081",Space,Str "\1082\1086\1084\1087\1072\1089",Space,Str "\1087\1088\1080\1085\1103\1090\1086",Space,Str "\1085\1072\1079\1099\1074\1072\1090\1100",Space,Emph [Str "\1101\1074\1088\1080\1089\1090\1080\1082\1086\1081"],Str ".",Space,Str "\1069\1090\1086",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1091\1079\1077\1083",Space,Str "\1080",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1095\1080\1089\1083\1086",Str ".",Space,Str "\1063\1077\1084",Space,Str "\1084\1077\1085\1100\1096\1077",Space,Str "\1095\1080\1089\1083\1086",Str ",",Space,Str "\1090\1077\1084",Space,Str "\1073\1083\1080\1078\1077",Space,Str "\1091\1079\1077\1083",Space,Str "\1082",Space,Str "\1094\1077\1083\1080",Str ".",Space,Str "\1054\1073\1099\1095\1085\1086",Space,Str "\1101\1074\1088\1080\1089\1090\1080\1082\1072",Space,Str "\1091\1082\1072\1079\1099\1074\1072\1077\1090",Space,Str "\1085\1077",Space,Str "\1090\1086\1095\1085\1086\1077",Space,Str "\1088\1072\1089\1089\1090\1086\1103\1085\1080\1077",Space,Str "\1076\1086",Space,Str "\1094\1077\1083\1080",Str ",",Space,Str "\1087\1086\1089\1082\1086\1083\1100\1082\1091",Space,Str "\1084\1099",Space,Str "\1085\1077",Space,Str "\1079\1085\1072\1077\1084",Space,Str "\1075\1076\1077",Space,Str "\1094\1077\1083\1100",Str ",",Space,Str "\1072",Space,Str "\1087\1088\1080\1073\1083\1080\1079\1080\1090\1077\1083\1100\1085\1091\1102",Space,Str "\1086\1094\1077\1085\1082\1091",Str ".",Space,Str "\1052\1099",Space,Str "\1085\1077",Space,Str "\1079\1085\1072\1077\1084",Space,Str "\1088\1072\1089\1089\1090\1086\1103\1085\1080\1077",Space,Str "\1076\1086",Space,Str "\1094\1077\1083\1080",Str ",",Space,Str "\1085\1086",Space,Str "\1076\1086\1075\1072\1076\1099\1074\1072\1077\1084\1089\1103",Str ",",Space,Str "\1085\1072\1084",Space,Str "\1082\1072\1078\1077\1090\1089\1103",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1086\1085\1072",Space,Str "\1075\1076\1077",Str "-",Str "\1090\1086",Space,Str "\1090\1072\1084",Str ",",Space,Str "\1077\1097\1105",Space,Str "\1095\1091\1090\1100",Str "-",Str "\1095\1091\1090\1100",Space,Str "\1080",Space,Str "\1084\1099",Space,Str "\1085\1072\1081\1076\1105\1084",Space,Str "\1077\1105",Str ".",Space,Str "\1055\1088\1080\1084\1077\1088\1086\1084",Space,Str "\1101\1074\1088\1080\1089\1090\1080\1082\1080",Space,Str "\1076\1083\1103",Space,Str "\1087\1086\1080\1089\1082\1072",Space,Str "\1087\1086",Space,Str "\1082\1072\1088\1090\1077",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1073\1099\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1074\1099\1095\1080\1089\1083\1103\1077\1090",Space,Str "\1088\1072\1089\1089\1090\1086\1103\1085\1080\1077",Space,Str "\1087\1086",Space,Str "\1087\1088\1103\1084\1086\1081",Space,Str "\1076\1086",Space,Str "\1094\1077\1083\1080",Str ".",Space,Str "\1055\1088\1077\1076\1087\1086\1083\1086\1078\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1099",Space,Str "\1085\1077",Space,Str "\1079\1085\1072\1077\1084",Space,Str "\1075\1076\1077",Space,Str "\1085\1072\1093\1086\1076\1080\1090\1089\1103",Space,Str "\1094\1077\1083\1100",Space,Str "(",Str "\1082\1072\1082\1072\1103",Space,Str "\1076\1086\1088\1086\1075\1072",Space,Str "\1082",Space,Str "\1085\1077\1081",Space,Str "\1074\1077\1076\1105\1090",Str ")",Str ",",Space,Str "\1085\1086",Space,Str "\1084\1099",Space,Str "\1079\1085\1072\1077\1084",Space,Str "\1077\1105",Space,Str "\1082\1086\1086\1088\1076\1080\1085\1072\1090\1099",Str ".",Space,Str "\1058\1072\1082\1078\1077",Space,Str "\1084\1099",Space,Str "\1079\1085\1072\1077\1084",Space,Str "\1082\1086\1086\1088\1076\1080\1085\1072\1090\1099",Space,Str "\1082\1072\1078\1076\1086\1081",Space,Str "\1074\1077\1088\1096\1080\1085\1099",Str ",",Space,Str "\1074",Space,Str "\1082\1086\1090\1086\1088\1086\1081",Space,Str "\1084\1099",Space,Str "\1085\1072\1093\1086\1076\1080\1084\1089\1103",Str ".",Space,Str "\1058\1086\1075\1076\1072",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1083\1077\1075\1082\1086",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1090\1100",Space,Str "\1088\1072\1089\1089\1090\1086\1103\1085\1080\1077",Space,Str "\1087\1086",Space,Str "\1087\1088\1103\1084\1086\1081",Space,Str "\1076\1086",Space,Str "\1094\1077\1083\1080",Space,Str "\1080",Space,Str "\1085\1072\1096",Space,Str "\1087\1086\1080\1089\1082",Space,Str "\1089\1090\1072\1085\1077\1090",Space,Str "\1075\1086\1088\1072\1079\1076\1086",Space,Str "\1073\1086\1083\1077\1077",Space,Str "\1086\1089\1084\1099\1089\1083\1077\1085\1085\1099\1084",Str "."]
,Para [Str "\1058\1072\1082",Space,Str "\1085\1072\1093\1086\1076\1103\1089\1100",Space,Str "\1074",Space,Str "\1090\1086\1095\1082\1077",Space,RawInline "latex" "\\In{A}",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1089\1088\1072\1079\1091",Space,Str "\1087\1086\1081\1090\1080",Space,Str "\1074",Space,Str "\1090\1086\1090",Space,Str "\1089\1086\1089\1077\1076\1085\1080\1081",Space,Str "\1091\1079\1077\1083",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1073\1083\1080\1078\1077",Space,Str "\1074\1089\1077\1093",Space,Str "\1082",Space,Str "\1094\1077\1083\1080",Str ".",Space,Str "\1058\1072\1082\1086\1081",Space,Str "\1087\1086\1080\1089\1082",Space,Str "\1085\1072\1079\1099\1074\1072\1102\1090",Space,Str "\1087\1086\1080\1089\1082\1086\1084",Space,Str "\1087\1086",Space,Str "\1087\1077\1088\1074\1086\1084\1091",Space,Str "\1083\1091\1095\1096\1077\1084\1091",Space,Str "\1087\1088\1080\1073\1083\1080\1078\1077\1085\1080\1102",Str ".",Space,Str "\1042",Space,Str "\1087\1086\1080\1089\1082\1077",Space,Str "A",Str "*",Space,Str "\1091\1095\1080\1090\1099\1074\1072\1077\1090\1089\1103",Space,Str "\1085\1077",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1088\1072\1089\1089\1090\1086\1103\1085\1080\1077",Space,Str "\1076\1086",Space,Str "\1094\1077\1083\1080",Str ",",Space,Str "\1085\1086",Space,Str "\1080",Space,Str "\1090\1086",Space,Str "\1088\1072\1089\1089\1090\1086\1103\1085\1080\1077",Str ",",Space,Str "\1082\1086\1090\1086\1088\1086\1077",Space,Str "\1084\1099",Space,Str "\1091\1078\1077",Space,Str "\1087\1088\1086\1096\1083\1080",Str ".",Space,Str "\1052\1099",Space,Str "\1074\1099\1073\1080\1088\1072\1077\1084",Space,Str "\1085\1077",Space,Str "\1090\1091",Space,Str "\1074\1077\1088\1096\1080\1085\1091",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1073\1083\1080\1078\1077",Space,Str "\1082",Space,Str "\1094\1077\1083\1080",Str ",",Space,Str "\1072",Space,Str "\1090\1091",Space,Str "\1076\1083\1103",Space,Str "\1082\1086\1090\1086\1088\1086\1081",Space,Str "\1087\1086\1083\1085\1099\1081",Space,Str "\1087\1091\1090\1100",Space,Str "\1076\1086",Space,Str "\1094\1077\1083\1080",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1084\1080\1085\1080\1084\1072\1083\1100\1085\1099\1084",Str ".",Space,Str "\1042\1077\1076\1100",Space,Str "\1087\1086\1082\1072",Space,Str "\1084\1099",Space,Str "\1080\1076\1105\1084",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1079\1072\1087\1086\1084\1080\1085\1072\1090\1100",Space,Str "\1082\1072\1082\1086\1077",Space,Str "\1088\1072\1089\1089\1090\1086\1103\1085\1080\1077",Space,Str "\1084\1099",Space,Str "\1091\1078\1077",Space,Str "\1087\1088\1086\1096\1083\1080",Str ".",Space,Str "\1055\1088\1080\1073\1072\1074\1080\1074",Space,Str "\1082",Space,Str "\1101\1090\1086\1084\1091",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1102",Str ",",Space,Str "\1090\1086",Space,Str "\1082\1086\1090\1086\1088\1086\1077",Space,Str "\1084\1099",Space,Str "\1087\1086\1083\1091\1095\1080\1084",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1101\1074\1088\1080\1089\1090\1080\1082\1080",Space,Str "\1084\1099",Space,Str "\1087\1086\1083\1091\1095\1080\1084",Space,Str "\1087\1086\1083\1085\1099\1081",Space,Str "(",Str "\1087\1088\1077\1076\1087\1086\1083\1072\1075\1072\1077\1084\1099\1081",Str ")",Space,Str "\1087\1091\1090\1100",Space,Str "\1076\1086",Space,Str "\1094\1077\1083\1080",Str "."]
,Para [Str "\1055\1086\1080\1089\1082",Space,Str "\1040",Str "*",Space,Str "\1075\1086\1088\1072\1079\1076\1086",Space,Str "\1083\1091\1095\1096\1077",Space,Str "\1087\1086\1080\1089\1082\1072",Space,Str "\1087\1086",Space,Str "\1087\1077\1088\1074\1086\1084\1091",Space,Str "\1083\1091\1095\1096\1077\1084\1091",Space,Str "\1087\1088\1080\1073\1083\1080\1078\1077\1085\1080\1102",Str ".",Space,Str "\1045\1075\1086",Space,Str "\1095\1072\1089\1090\1086",Space,Str "\1087\1088\1080\1084\1077\1085\1103\1102\1090",Space,Str "\1074",Space,Str "\1082\1086\1084\1087\1100\1102\1090\1077\1088\1085\1099\1093",Space,Str "\1080\1075\1088\1072\1093",Space,Str "\1076\1083\1103",Space,Str "\1087\1086\1080\1089\1082\1072",Space,Str "\1087\1091\1090\1080",Space,Str "\1080\1083\1080",Space,Str "\1087\1088\1080\1085\1103\1090\1080\1103",Space,Str "\1088\1077\1096\1077\1085\1080\1081",Str "."]
,Para [Str "\1055\1088\1080\1085\1103\1090\1086",Space,Str "\1088\1072\1079\1076\1077\1083\1103\1090\1100",Space,Str "\1087\1086\1080\1089\1082",Space,Str "\1085\1072",Space,Str "\1075\1088\1072\1092\1077",Space,Str "\1080",Space,Str "\1087\1086\1080\1089\1082",Space,Str "\1085\1072",Space,Str "\1076\1077\1088\1077\1074\1077",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1084\1099",Space,Str "\1080\1076\1105\1084",Space,Str "\1087\1086",Space,Str "\1075\1088\1072\1092\1091",Str ",",Space,Str "\1090\1086",Space,Str "\1074\1077\1088\1096\1080\1085\1099",Space,Str "\1084\1086\1075\1091\1090",Space,Str "\1087\1086\1074\1090\1086\1088\1103\1090\1089\1103",Space,Str "(",Str "\1086\1085\1080",Space,Str "\1086\1073\1088\1072\1079\1091\1102\1090",Space,Str "\1094\1080\1082\1083\1099",Str ")",Str ".",Space,Str "\1042",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1087\1086\1080\1089\1082\1072",Space,Str "\1085\1072",Space,Str "\1076\1077\1088\1077\1074\1077",Space,Str "\1084\1099",Space,Str "\1089\1095\1080\1090\1072\1077\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1074\1089\1077",Space,Str "\1074\1077\1088\1096\1080\1085\1099",Space,Str "\1091\1085\1080\1082\1072\1083\1100\1085\1099",Str ".",Space,Str "\1055\1088\1080",Space,Str "\1087\1086\1080\1089\1082\1077",Space,Str "\1085\1072",Space,Str "\1075\1088\1072\1092\1077",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1074\1072\1078\1085\1086",Space,Str "\1079\1072\1087\1086\1084\1080\1085\1072\1090\1100",Space,Str "\1090\1077",Space,Str "\1074\1077\1088\1096\1080\1085\1099",Str ",",Space,Str "\1074",Space,Str "\1082\1086\1090\1086\1088\1099\1093",Space,Str "\1084\1099",Space,Str "\1091\1078\1077",Space,Str "\1087\1086\1073\1099\1074\1072\1083\1080",Str ".",Space,Str "\1048\1085\1072\1095\1077",Space,Str "\1084\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1095\1072\1089\1090\1086",Space,Str "\1093\1086\1076\1080\1090\1100",Space,Str "\1082\1088\1091\1075\1072\1084\1080",Str "."]
,Para [Str "\1042",Space,Str "Haskell",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1091\1076\1086\1073\1085\1086",Space,Str "\1088\1072\1073\1086\1090\1072\1090\1100",Space,Str "\1089",Space,Str "\1076\1072\1085\1085\1099\1084\1080",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1080\1084\1077\1102\1090",Space,Str "\1080\1077\1088\1072\1088\1093\1080\1095\1077\1089\1082\1091\1102",Space,Str "\1089\1090\1088\1091\1082\1090\1091\1088\1091",Str ".",Space,Str "\1048\1093",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1087\1088\1077\1076\1089\1090\1072\1074\1080\1090\1100",Space,Str "\1074",Space,Str "\1074\1080\1076\1077",Space,Str "\1076\1077\1088\1077\1074\1072",Str ",",Space,Str "\1086\1073\1099\1095\1085\1086",Space,Str "\1074",Space,Str "\1090\1072\1082\1080\1093",Space,Str "\1090\1080\1087\1072\1093",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1077\1089\1090\1100",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088\1099",Str "-",Str "\1082\1086\1085\1089\1090\1072\1085\1090\1099",Space,Str "\1080",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088\1099",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1089\1086\1073\1080\1088\1072\1102\1090",Space,Str "\1089\1086\1089\1090\1072\1074\1085\1099\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str ".",Space,Str "\1043\1088\1072\1092",Space,Str "\1074\1099\1093\1086\1076\1080\1090",Space,Str "\1079\1072",Space,Str "\1088\1072\1084\1082\1080",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1082\1083\1072\1089\1089\1072",Space,Str "\1076\1072\1085\1085\1099\1093",Str ",",Space,Str "\1087\1086\1090\1086\1084\1091",Space,Str "\1095\1090\1086",Space,Str "\1088\1105\1073\1088\1072",Space,Str "\1075\1088\1072\1092\1086\1074",Space,Str "\1084\1086\1075\1091\1090",Space,Str "\1086\1073\1088\1072\1079\1086\1074\1099\1074\1072\1090\1100",Space,Str "\1094\1080\1082\1083\1099",Str ".",Space,Str "\1053\1086",Space,Str "\1084\1099",Space,Str "\1089\1093\1080\1090\1088\1080\1084",Space,Str "\1080",Space,Str "\1087\1088\1077\1076\1089\1090\1072\1074\1080\1084",Space,Str "\1075\1088\1072\1092",Space,Str "\1087\1086\1080\1089\1082\1072",Space,Str "\1074",Space,Str "\1074\1080\1076\1077",Space,Str "\1076\1077\1088\1077\1074\1072",Str ".",Space,Str "\1050\1086\1088\1085\1077\1084",Space,Str "\1085\1072\1096\1077\1075\1086",Space,Str "\1076\1077\1088\1077\1074\1072",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1085\1072\1095\1072\1083\1100\1085\1072\1103",Space,Str "\1090\1086\1095\1082\1072",Space,Str "\1087\1086\1080\1089\1082\1072",Str ",",Space,Str "\1072",Space,Str "\1087\1086\1076\1076\1077\1088\1077\1074\1100\1103\1084\1080",Space,Str "\1076\1083\1103",Space,Str "\1076\1072\1085\1085\1086\1081",Space,Str "\1074\1077\1088\1096\1080\1085\1099",Space,Str "\1091\1079\1083\1072",Space,Str "\1073\1091\1076\1091\1090",Space,Str "\1074\1089\1077",Space,Str "\1074\1077\1088\1096\1080\1085\1099",Str "-",Str "\1089\1086\1089\1077\1076\1080",Str ".",Space,Str "\1042",Space,Str "\1090\1072\1082\1086\1084",Space,Str "\1076\1077\1088\1077\1074\1077",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1084\1085\1086\1075\1086",Space,Str "\1087\1086\1074\1090\1086\1088\1103\1102\1097\1080\1093\1089\1103",Space,Str "\1091\1079\1083\1086\1074",Str ",",Space,Str "\1090\1072\1082",Space,Str "\1085\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1087\1086\1081\1090\1080",Space,Str "\1074",Space,Str "\1089\1086\1089\1077\1076\1085\1102\1102",Space,Str "\1074\1077\1088\1096\1080\1085\1091",Str ",",Space,Str "\1087\1086\1090\1086\1084",Space,Str "\1074\1077\1088\1085\1091\1090\1100\1089\1103",Space,Str "\1086\1073\1088\1072\1090\1085\1086",Str ",",Space,Str "\1086\1087\1103\1090\1100",Space,Str "\1087\1086\1081\1090\1080",Space,Str "\1074",Space,Str "\1090\1091\1078\1077",Space,Str "\1089\1086\1089\1077\1076\1085\1102\1102",Space,Str "\1074\1077\1088\1096\1080\1085\1091",Str ",",Space,Str "\1080",Space,Str "\1090\1072\1082",Space,Str "\1076\1086",Space,Str "\1073\1077\1089\1082\1086\1085\1077\1095\1085\1086\1089\1090\1080",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1090\1086\1075\1086",Str ",",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1080\1079\1073\1077\1078\1072\1090\1100",Space,Str "\1087\1086\1076\1086\1073\1085\1099\1093",Space,Str "\1089\1080\1090\1091\1072\1094\1080\1081",Space,Str "\1084\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1079\1072\1087\1086\1084\1080\1085\1072\1090\1100",Space,Str "\1090\1077",Space,Str "\1074\1077\1088\1096\1080\1085\1099",Str ",",Space,Str "\1074",Space,Str "\1082\1086\1090\1086\1088\1099\1093",Space,Str "\1084\1099",Space,Str "\1091\1078\1077",Space,Str "\1087\1086\1073\1099\1074\1072\1083\1080",Space,Str "\1080",Space,Str "\1085\1077",Space,Str "\1088\1072\1089\1089\1084\1072\1090\1088\1080\1074\1072\1090\1100",Space,Str "\1080\1093",Str ",",Space,Str "\1077\1089\1083\1080",Space,Str "\1086\1085\1080",Space,Str "\1074\1089\1090\1088\1077\1090\1103\1090\1089\1103",Space,Str "\1085\1072\1084",Space,Str "\1077\1097\1105",Space,Str "\1088\1072\1079",Str "."]
,Para [Str "\1057\1092\1086\1088\1084\1091\1083\1080\1088\1091\1077\1084",Space,Str "\1079\1072\1076\1072\1095\1091",Space,Str "\1087\1086\1080\1089\1082\1072",Space,Str "\1074",Space,Str "\1090\1080\1087\1072\1093",Str ".",Space,Str "\1059",Space,Str "\1085\1072\1089",Space,Str "\1077\1089\1090\1100",Space,Str "\1076\1077\1088\1077\1074\1086",Space,Str "\1087\1086\1080\1089\1082\1072",Str ",",Space,Str "\1082\1086\1090\1086\1088\1086\1077",Space,Str "\1089\1086\1076\1077\1088\1078\1080\1090",Space,Str "\1074\1089\1077",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1099\1077",Space,Str "\1088\1072\1079\1074\1077\1090\1074\1083\1077\1085\1080\1103",Str ",",Space,Str "\1090\1072\1082\1078\1077",Space,Str "\1082\1072\1078\1076\1072\1103",Space,Str "\1074\1077\1088\1096\1080\1085\1072",Space,Str "\1089\1086\1076\1077\1088\1078\1080\1090",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1101\1074\1088\1080\1089\1090\1080\1082\1080",Str ",",Space,Str "\1087\1086",Space,Str "\1085\1077\1084\1091",Space,Str "\1084\1099",Space,Str "\1079\1085\1072\1077\1084",Space,Str "\1085\1072\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1073\1083\1080\1079\1082\1072",Space,Str "\1076\1072\1085\1085\1072\1103",Space,Str "\1074\1077\1088\1096\1080\1085\1072",Space,Str "\1082",Space,Str "\1094\1077\1083\1080",Str ".",Space,Str "\1058\1072\1082\1078\1077",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1077\1089\1090\1100",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1099\1081",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1105\1085",Space,Str "\1085\1072",Space,Str "\1074\1077\1088\1096\1080\1085\1072\1093",Str ",",Space,Str "\1087\1086",Space,Str "\1085\1077\1084\1091",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1091\1079\1085\1072\1090\1100",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1083\1080",Space,Str "\1076\1072\1085\1085\1072\1103",Space,Str "\1074\1077\1088\1096\1080\1085\1072",Space,Str "\1094\1077\1083\1100\1102",Str ".",Space,Str "\1053\1072\1084",Space,Str "\1085\1091\1078\1085\1086",Space,Str "\1087\1086\1083\1091\1095\1080\1090\1100",Space,Str "\1087\1091\1090\1100",Str ",",Space,Str "\1080\1083\1080",Space,Str "\1094\1077\1087\1086\1095\1082\1091",Space,Str "\1074\1077\1088\1096\1080\1085",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1085\1072\1095\1080\1085\1072\1090\1100\1089\1103",Space,Str "\1074",Space,Str "\1082\1086\1088\1085\1077",Space,Str "\1076\1077\1088\1077\1074\1072",Space,Str "\1087\1086\1080\1089\1082\1072",Space,Str "\1080",Space,Str "\1079\1072\1082\1072\1085\1095\1080\1074\1072\1090\1100\1089\1103",Space,Str "\1074",Space,Str "\1094\1077\1083\1077\1074\1086\1081",Space,Str "\1074\1077\1088\1096\1080\1085\1077",Str "."]
,RawBlock "latex" "\n\\begin{code}\nsearch :: Ord h => (a -> Bool) -> Tree (a, h) -> Maybe [a]\n\\end{code}\n"
,Para [Str "\1047\1076\1077\1089\1100",Space,RawInline "latex" "\\In{a}",Space,Str "\8211",Space,Str "\1101\1090\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1074\1077\1088\1096\1080\1085\1099",Space,Str "\1080",Space,RawInline "latex" "\\In{h}",Space,Str "\8211",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1101\1074\1088\1080\1089\1090\1080\1082\1080",Str ".",Space,Str "\1054\1073\1088\1072\1090\1080\1090\1077",Space,Str "\1074\1085\1080\1084\1072\1085\1080\1077",Space,Str "\1085\1072",Space,Str "\1079\1072\1074\1080\1089\1080\1084\1086\1089\1090\1100",Space,RawInline "latex" "\\In{Ord h}",Space,Str "\1074",Space,Str "\1082\1086\1085\1090\1077\1082\1089\1090\1077",Str ",",Space,Str "\1074\1077\1076\1100",Space,Str "\1084\1099",Space,Str "\1089\1086\1073\1080\1088\1072\1077\1084\1089\1103",Space,Str "\1089\1088\1072\1074\1085\1080\1074\1072\1090\1100",Space,Str "\1101\1090\1080",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1087\1086",Space,Str "\1073\1083\1080\1079\1086\1089\1090\1080",Space,Str "\1082",Space,Str "\1094\1077\1083\1080",Str ".",Space,Str "\1055\1088\1080",Space,Str "\1086\1073\1093\1086\1076\1077",Space,Str "\1076\1077\1088\1077\1074\1072",Space,Str "\1084\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1079\1072\1087\1086\1084\1080\1085\1072\1090\1100",Space,Str "\1087\1086\1074\1090\1086\1088\1103\1102\1097\1080\1077\1089\1103",Space,Str "\1074\1077\1088\1096\1080\1085\1099",Str ",",Space,Str "\1076\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1084\1099",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1091\1077\1084\1089\1103",Space,Str "\1090\1080\1087\1086\1084",Space,Str "\1084\1085\1086\1078\1077\1089\1090\1074\1086",Space,Str "\1080\1079",Space,Str "\1089\1090\1072\1085\1076\1072\1088\1090\1085\1086\1075\1086",Space,Str "\1084\1086\1076\1091\1083\1103",Space,RawInline "latex" "\\In{Data.Set}",Str ".",Space,Str "\1042\1085\1091\1090\1088\1080",Space,RawInline "latex" "\\In{Set}",Space,Str "\1084\1086\1075\1091\1090",Space,Str "\1093\1088\1072\1085\1080\1090\1089\1103",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str ",",Space,Str "\1076\1083\1103",Space,Str "\1082\1086\1090\1086\1088\1099\1093",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1099",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Space,Str "\1089\1088\1072\1074\1085\1077\1085\1080\1103",Str ",",Space,Str "\1087\1086\1101\1090\1086\1084\1091",Space,Str "\1085\1072\1084",Space,Str "\1087\1088\1080\1076\1105\1090\1089\1103",Space,Str "\1076\1086\1073\1072\1074\1080\1090\1100",Space,Str "\1074",Space,Str "\1082\1086\1085\1090\1077\1082\1089\1090",Space,Str "\1077\1097\1105",Space,Str "\1086\1076\1085\1091",Space,Str "\1079\1072\1074\1080\1089\1080\1084\1086\1089\1090\1100",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nimport Data.Tree\nimport qualified Data.Set as S\n\nsearch :: (Ord h, Ord a) => (a -> Bool) -> Tree (a, h) -> Maybe [a]\n\\end{code}\n"
,Para [Str "\1055\1086\1080\1089\1082",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1079\1072\1082\1083\1102\1095\1072\1090\1100\1089\1103",Space,Str "\1074",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1086\1073\1093\1086\1076\1080\1090\1100",Space,Str "\1076\1077\1088\1077\1074\1086",Space,Str "\1086\1090",Space,Str "\1082\1086\1088\1085\1103",Space,Str "\1082",Space,Str "\1091\1079\1083\1072\1084",Str ".",Space,Str "\1055\1088\1080",Space,Str "\1101\1090\1086\1084",Space,Str "\1089\1088\1077\1076\1080",Space,Str "\1074\1089\1077\1093",Space,Str "\1091\1079\1083\1086\1074",Str "-",Str "\1072\1083\1100\1090\1077\1088\1085\1072\1090\1080\1074",Space,Str "\1084\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1087\1088\1086\1089\1084\1072\1090\1088\1080\1074\1072\1090\1100",Space,Str "\1091\1079\1083\1099",Space,Str "\1089",Space,Str "\1085\1072\1080\1084\1077\1085\1100\1096\1080\1084",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077\1084",Space,Str "\1101\1074\1088\1080\1089\1090\1080\1082\1080",Str ".",Space,Str "\1042",Space,Str "\1101\1090\1086\1084",Space,Str "\1085\1072\1084",Space,Str "\1087\1086\1084\1086\1078\1077\1090",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1072\1103",Space,Str "\1089\1090\1088\1091\1082\1090\1091\1088\1072",Space,Str "\1076\1072\1085\1085\1099\1093",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1085\1072\1079\1099\1074\1072\1077\1090\1089\1103",Space,Emph [Str "\1086\1095\1077\1088\1077\1076\1100\1102",Space,Str "\1089",Space,Str "\1087\1088\1080\1086\1088\1080\1090\1077\1090\1086\1084"],Space,Str "(",Str "priority",Space,Str "queue",Str ")",Str ".",Space,Str "\1069\1090\1072",Space,Str "\1086\1095\1077\1088\1077\1076\1100",Space,Str "\1093\1088\1072\1085\1080\1090",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1099",Space,Str "\1089",Space,Str "\1091\1095\1105\1090\1086\1084",Space,Str "\1080\1093",Space,Str "\1089\1090\1072\1088\1096\1080\1085\1089\1090\1074\1072",Space,Str "(",Str "\1087\1088\1080\1086\1088\1080\1090\1077\1090\1072",Str ")",Str ".",Space,Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1076\1086\1073\1072\1074\1083\1103\1090\1100",Space,Str "\1074",Space,Str "\1085\1077\1105",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1099",Space,Str "\1080",Space,Str "\1080\1079\1074\1083\1077\1082\1072\1090\1100",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1099",Str ".",Space,Str "\1055\1088\1080",Space,Str "\1101\1090\1086\1084",Space,Str "\1084\1099",Space,Str "\1074\1089\1077\1075\1076\1072",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1080\1079\1074\1083\1077\1082\1072\1090\1100",Space,Str "\1101\1083\1077\1084\1077\1085\1090",Space,Str "\1089",Space,Str "\1085\1072\1080\1084\1077\1085\1100\1096\1080\1084",Space,Str "\1087\1088\1080\1086\1088\1080\1090\1077\1090\1086\1084",Str ".",Space,Str "\1052\1099",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1091\1077\1084\1089\1103",Space,Str "\1086\1095\1077\1088\1077\1076\1103\1084\1080",Space,Str "\1080\1079",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1080",Space,RawInline "latex" "\\In{fingertree}",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1085\1072\1095\1072\1083\1072",Space,Str "\1091\1089\1090\1072\1085\1086\1074\1080\1084",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1091",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ncabal install fingertree\n\\end{code}\n"
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1074",Space,Str "\1076\1086\1082\1091\1084\1077\1085\1090\1072\1094\1080\1102",Space,Str "\1080",Space,Str "\1091\1079\1085\1072\1077\1084",Space,Str "\1082\1072\1082\1080\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1085\1072\1084",Space,Str "\1076\1086\1089\1090\1091\1087\1085\1099",Str ".",Space,Str "\1044\1086\1082\1091\1084\1077\1085\1090\1072\1094\1080\1102",Space,Str "\1082",Space,Str "\1087\1072\1082\1077\1090\1091",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1085\1072\1081\1090\1080",Space,Str "\1085\1072",Space,Str "\1089\1072\1081\1090\1077",Space,Link [Code ("",["url"],[]) "http://hackage.haskell.org/package/fingertree"] ("http://hackage.haskell.org/package/fingertree",""),Str ".",Space,Str "\1055\1086\1082\1072",Space,Str "\1086\1090\1083\1086\1078\1080\1084",Space,Str "\1076\1077\1090\1072\1083\1100\1085\1086\1077",Space,Str "\1080\1079\1091\1095\1077\1085\1080\1077",Space,Str "\1080\1085\1090\1077\1088\1092\1077\1081\1089\1072",Str ",",Space,Str "\1086\1090\1084\1077\1090\1080\1084",Space,Str "\1083\1080\1096\1100",Space,Str "\1090\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1076\1086\1073\1072\1074\1083\1103\1090\1100",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1099",Space,Str "\1082",Space,Str "\1086\1095\1077\1088\1077\1076\1080",Space,Str "\1080",Space,Str "\1080\1079\1074\1083\1077\1082\1072\1090\1100",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1099",Space,Str "\1089",Space,Str "\1091\1095\1105\1090\1086\1084",Space,Str "\1087\1088\1080\1086\1088\1080\1090\1077\1090\1072",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ninsert  :: Ord k => k -> v -> PQueue k v -> PQueue k v\nminView :: Ord k => PQueue k v -> Maybe (v, PQueue k v)\n\\end{code}\n"
,Para [Str "\1042\1077\1088\1085\1105\1084\1089\1103",Space,Str "\1082",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{search}",Str ".",Space,Str "\1071",Space,Str "\1073\1099",Space,Str "\1093\1086\1090\1077\1083",Space,Str "\1086\1073\1088\1072\1090\1080\1090\1100",Space,Str "\1074\1072\1096\1077",Space,Str "\1074\1085\1080\1084\1072\1085\1080\1077",Space,Str "\1085\1072",Space,Str "\1090\1086",Str ",",Space,Str "\1082\1072\1082",Space,Str "\1084\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1088\1072\1079\1088\1072\1073\1072\1090\1099\1074\1072\1090\1100",Space,Str "\1101\1090\1091",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ".",Space,Str "\1042\1089\1087\1086\1084\1085\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "Haskell",Space,Str "\8211",Space,Str "\1083\1077\1085\1080\1074\1099\1081",Space,Str "\1103\1079\1099\1082",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1086\1079\1085\1072\1095\1072\1077\1090",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1087\1088\1080",Space,Str "\1086\1073\1088\1072\1073\1086\1090\1082\1077",Space,Str "\1088\1077\1082\1091\1088\1089\1080\1074\1085\1099\1093",Space,Str "\1090\1080\1087\1086\1074",Space,Str "\1076\1072\1085\1085\1099\1093",Str ",",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Quoted DoubleQuote [Str "\1091\1075\1083\1091\1073\1083\1103\1077\1090\1089\1103"],Space,Str "\1074",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1083\1080\1096\1100",Space,Str "\1090\1086\1075\1076\1072",Str ",",Space,Str "\1082\1086\1075\1076\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1074\1099\1079\1074\1072\1083\1072",Space,Str "\1101\1090\1091",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1087\1086\1087\1088\1086\1089\1080\1090",Space,Str "\1077\1105",Space,Str "\1086\1073",Space,Str "\1101\1090\1086\1084",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1076\1072\1105\1090",Space,Str "\1085\1072\1084",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1086\1089\1090\1100",Space,Str "\1088\1072\1073\1086\1090\1072\1090\1100",Space,Str "\1089",Space,Str "\1087\1086\1090\1077\1085\1094\1080\1072\1083\1100\1085\1086",Space,Str "\1073\1077\1089\1082\1086\1085\1077\1095\1085\1099\1084\1080",Space,Str "\1089\1090\1088\1091\1082\1090\1091\1088\1072\1084\1080",Space,Str "\1076\1072\1085\1085\1099\1093",Space,Str "\1080",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1073\1086\1083\1077\1077",Space,Str "\1074\1072\1078\1085\1086",Str ",",Space,Str "\1088\1072\1079\1076\1077\1083\1103\1090\1100",Space,Str "\1089\1083\1086\1078\1085\1099\1081",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084",Space,Str "\1085\1072",Space,Str "\1085\1077\1079\1072\1074\1080\1089\1080\1084\1099\1077",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1102\1097\1080\1077",Str "."]
,Para [Str "\1042",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{search}",Space,Str "\1085\1072\1084",Space,Str "\1085\1077\1086\1073\1093\1086\1076\1080\1084\1086",Space,Str "\1086\1073\1086\1081\1090\1080",Space,Str "\1074\1089\1077",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1099",Space,Str "\1074",Space,Str "\1087\1086\1088\1103\1076\1082\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1101\1074\1088\1080\1089\1090\1080\1082\1080",Space,Str "\1080",Space,Str "\1086\1089\1090\1072\1085\1086\1074\1080\1090\1100\1089\1103",Space,Str "\1074",Space,Str "\1074\1077\1088\1096\1080\1085\1077",Str ",",Space,Str "\1085\1072",Space,Str "\1082\1086\1090\1086\1088\1086\1081",Space,Str "\1094\1077\1083\1077\1074\1086\1081",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090",Space,Str "\1074\1077\1088\1085\1105\1090",Space,RawInline "latex" "\\In{True}",Str ".",Space,Str "\1053\1086",Space,Str "\1076\1083\1103",Space,Str "\1085\1072\1095\1072\1083\1072",Space,Str "\1084\1099",Space,Str "\1076\1086\1073\1072\1074\1080\1084",Space,Str "\1082",Space,Str "\1074\1077\1088\1096\1080\1085\1072\1084",Space,Str "\1080\1093",Space,Str "\1087\1091\1090\1080",Space,Str "\1080\1079",Space,Str "\1082\1086\1088\1085\1103",Str ",",Space,Str "\1076\1083\1103",Space,Str "\1090\1086\1075\1086",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1074",Space,Str "\1082\1086\1085\1094\1077",Space,Str "\1084\1099",Space,Str "\1089\1084\1086\1075\1083\1080",Space,Str "\1091\1079\1085\1072\1090\1100",Space,Str "\1082\1072\1082",Space,Str "\1084\1099",Space,Str "\1087\1086\1087\1072\1083\1080",Space,Str "\1074",Space,Str "\1090\1077\1082\1091\1097\1091\1102",Space,Str "\1074\1077\1088\1096\1080\1085\1091",Str ".",Space,Str "\1048\1090\1072\1082",Space,Str "\1085\1072\1096\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1088\1072\1079\1073\1080\1074\1072\1077\1090\1089\1103",Space,Str "\1085\1072",Space,Str "\1090\1088\1080",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1102\1097\1080\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nsearch :: (Ord h, Ord a) => (a -> Bool) -> Tree (a, h) -> Maybe [a]\nsearch isGoal =  findPath isGoal . flattenTree . addPath \n\\end{code}\n"
,Para [Str "\1074\1099\1087\1080\1096\1077\1084",Space,Str "\1090\1080\1087\1099",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1102\1097\1080\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1080",Space,Str "\1087\1088\1086\1074\1077\1088\1080\1084",Space,Str "\1082\1086\1076",Space,Str "\1074",Space,Str "\1080\1085\1090\1077\1088\1087\1088\1077\1090\1072\1090\1086\1088\1077",Str "."]
,RawBlock "latex" "\n\\begin{code}\nun = undefined\n\nfindPath :: (a -> Bool) -> [Path a] -> Maybe [a]\nfindPath = un\n\nflattenTree :: (Ord h, Ord a) => Tree (Path a, h) -> [Path a]\nflattenTree = un\n\naddPath :: Tree (a, h) -> Tree (Path a, h)\naddPath = un\n\ndata Path a = Path \n\t{ pathEnd   :: a\n\t, path      :: [a]\n\t}\n\\end{code}\n"
,Para [Str "\1054\1073\1088\1072\1090\1080\1090\1077",Space,Str "\1074\1085\1080\1084\1072\1085\1080\1077",Space,Str "\1085\1072",Space,Str "\1090\1086",Space,Str "\1082\1072\1082",Space,Str "\1087\1086\1089\1090\1091\1087\1072\1102\1097\1080\1077",Space,Str "\1085\1072",Space,Str "\1074\1093\1086\1076",Space,Str "\1076\1072\1085\1085\1099\1077",Space,Str "\1088\1072\1079\1076\1077\1083\1080\1083\1080\1089\1100",Space,Str "\1084\1077\1078\1076\1091",Space,Str "\1092\1091\1085\1082\1094\1080\1103\1084\1080",Str ".",Space,Str "\1048\1085\1092\1086\1088\1084\1072\1094\1080\1103",Space,Str "\1086",Space,Str "\1087\1088\1080\1086\1088\1080\1090\1077\1090\1077",Space,Str "\1074\1077\1088\1096\1080\1085",Space,Str "\1085\1077",Space,Str "\1080\1076\1105\1090",Space,Str "\1076\1072\1083\1100\1096\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{flattenTree}",Str ",",Space,Str "\1072",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090",Space,RawInline "latex" "\\In{isGoal}",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1091\1077\1090\1089\1103",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1074",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{findPath}",Str ".",Space,Str "\1052\1086\1076\1091\1083\1100",Space,Str "\1087\1088\1086\1096\1105\1083",Space,Str "\1087\1088\1086\1074\1077\1088\1082\1091",Space,Str "\1090\1080\1087\1086\1074",Space,Str "\1080",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1076\1077\1090\1072\1083\1080\1079\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1076\1072\1083\1100\1096\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\naddPath :: Tree (a, h) -> Tree (Path a, h)\naddPath = iter []\n    where iter ps t = Node (Path val (reverse ps'), h) $ \n            iter ps' <$> subForest t\n            where (val, h)  = rootLabel t\n                  ps'       = val : ps\n\\end{code}\n"
,Para [Str "\1042",Space,Str "\1101\1090\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1084\1099",Space,Str "\1087\1088\1086\1089\1090\1086",Space,Str "\1087\1088\1080\1089\1086\1077\1076\1080\1085\1103\1077\1084",Space,Str "\1082",Space,Str "\1076\1072\1085\1085\1086\1081",Space,Str "\1074\1077\1088\1096\1080\1085\1077",Space,Str "\1074\1089\1077",Space,Str "\1088\1086\1076\1080\1090\1077\1083\1100\1089\1082\1080\1077",Space,Str "\1074\1077\1088\1096\1080\1085\1099",Str ",",Space,Str "\1090\1072\1082",Space,Str "\1084\1099",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1077\1084",Space,Str "\1084\1072\1088\1096\1088\1091\1090",Space,Str "\1086\1090",Space,Str "\1076\1072\1085\1085\1086\1081",Space,Str "\1074\1077\1088\1096\1080\1085\1099",Space,Str "\1076\1086",Space,Str "\1085\1072\1095\1072\1083\1100\1085\1086\1081",Str ",",Space,Str "\1087\1086\1089\1082\1086\1083\1100\1082\1091",Space,Str "\1084\1099",Space,Str "\1074\1089\1105",Space,Str "\1074\1088\1077\1084\1103",Space,Str "\1076\1086\1073\1072\1074\1083\1103\1077\1084",Space,Str "\1085\1086\1074\1099\1077",Space,Str "\1074\1077\1088\1096\1080\1085\1099",Space,Str "\1074",Space,Str "\1085\1072\1095\1072\1083\1086",Space,Str "\1089\1087\1080\1089\1082\1072",Str ",",Space,Str "\1074",Space,Str "\1080\1090\1086\1075\1077",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1087\1086\1083\1091\1095\1072\1102\1090\1089\1103",Space,Str "\1087\1077\1088\1077\1074\1105\1088\1085\1091\1090\1099\1077",Space,Str "\1084\1072\1088\1096\1088\1091\1090\1099",Str ",",Space,Str "\1087\1086\1101\1090\1086\1084\1091",Space,Str "\1087\1077\1088\1077\1076",Space,Str "\1090\1077\1084",Space,Str "\1082\1072\1082",Space,Str "\1086\1073\1077\1088\1085\1091\1090\1100",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1074",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088",Space,RawInline "latex" "\\In{Path}",Space,Str "\1084\1099",Space,Str "\1087\1077\1088\1077\1074\1086\1088\1072\1095\1080\1074\1072\1077\1084",Space,Str "\1089\1087\1080\1089\1086\1082",Str ".",Space,Str "\1053\1072",Space,Str "\1089\1072\1084\1086\1084",Space,Str "\1076\1077\1083\1077",Space,Str "\1085\1072\1084",Space,Str "\1085\1091\1078\1085\1086",Space,Str "\1087\1077\1088\1077\1074\1077\1088\1085\1091\1090\1100",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1086\1076\1080\1085",Space,Str "\1087\1091\1090\1100",Str ".",Space,Str "\1055\1091\1090\1100",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1074\1077\1076\1105\1090",Space,Str "\1082",Space,Str "\1094\1077\1083\1080",Str ",",Space,Str "\1085\1086",Space,Str "\1079\1072",Space,Str "\1089\1095\1105\1090",Space,Str "\1090\1086\1075\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1103\1079\1099\1082",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1083\1077\1085\1080\1074\1099\1081",Str ",",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{reverse}",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1072",Space,Str "\1085\1077",Space,Str "\1089\1088\1072\1079\1091",Str ",",Space,Str "\1072",Space,Str "\1083\1080\1096\1100",Space,Str "\1090\1086\1075\1076\1072",Str ",",Space,Str "\1082\1086\1075\1076\1072",Space,Str "\1085\1072\1084",Space,Str "\1076\1077\1081\1089\1090\1074\1080\1090\1077\1083\1100\1085\1086",Space,Str "\1087\1086\1085\1072\1076\1086\1073\1080\1090\1089\1103",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1087\1091\1090\1080",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1082\1072\1082",Space,Str "\1088\1072\1079",Space,Str "\1080",Space,Str "\1087\1088\1086\1080\1079\1086\1081\1076\1105\1090",Space,Str "\1083\1080\1096\1100",Space,Str "\1086\1076\1080\1085",Space,Str "\1088\1072\1079",Str ",",Space,Str "\1074",Space,Str "\1089\1072\1084\1086\1084",Space,Str "\1082\1086\1085\1094\1077",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1099",Str ",",Space,Str "\1083\1080\1096\1100",Space,Str "\1076\1083\1103",Space,Str "\1086\1076\1085\1086\1075\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str "!"]
,Para [Str "\1044\1072\1074\1072\1081\1090\1077",Space,Str "\1087\1086\1082\1072",Space,Str "\1087\1088\1086\1087\1091\1089\1090\1080\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{flattenTree}",Space,Str "\1080",Space,Str "\1089\1085\1072\1095\1072\1083\1072",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{findPath}",Str ".",Space,Str "\1069\1090\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1074\1089\1077",Space,Str "\1074\1077\1088\1096\1080\1085\1099",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1084\1099",Space,Str "\1086\1073\1086\1096\1083\1080",Space,Str "\1077\1089\1083\1080",Space,Str "\1073\1099",Space,Str "\1096\1083\1080",Space,Str "\1073\1077\1079",Space,Str "\1094\1077\1083\1080",Space,Str "(",Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{isGoal}",Str ")",Space,Str "\1080",Space,Str "\1080\1097\1077\1090",Space,Str "\1089\1088\1077\1076\1080",Space,Str "\1085\1080\1093",Space,Str "\1087\1077\1088\1074\1091\1102",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1091\1076\1086\1074\1083\1077\1090\1074\1086\1088\1103\1077\1090",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090\1091",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1084\1099",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1091\1077\1084\1089\1103",Space,Str "\1089\1090\1072\1085\1076\1072\1088\1090\1085\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1077\1081",Space,RawInline "latex" "\\In{find}",Space,Str "\1080\1079",Space,Str "\1084\1086\1076\1091\1083\1103",Space,RawInline "latex" "\\In{Data.List}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nfindPath :: (a -> Bool) -> [Path a] -> Maybe [a]\nfindPath isGoal =  fmap path . find (isGoal . pathEnd)\n\\end{code}\n"
,Para [Str "\1053\1072\1087\1086\1084\1085\1102",Space,Str "\1090\1080\1087",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{find}",Str ",",Space,Str "\1086\1085\1072",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090",Space,Str "\1080",Space,Str "\1089\1087\1080\1089\1086\1082",Str ",",Space,Str "\1072",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1087\1077\1088\1074\1086\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1089\1087\1080\1089\1082\1072",Str ",",Space,Str "\1085\1072",Space,Str "\1082\1086\1090\1086\1088\1086\1084",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090",Space,Str "\1074\1077\1088\1085\1105\1090",Space,RawInline "latex" "\\In{True}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nfind :: (a -> Bool) -> [a] -> Maybe a\n\\end{code}\n"
,Para [Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{fmap}",Space,Str "\1087\1088\1080\1084\1077\1085\1103\1077\1090\1089\1103",Space,Str "\1080\1079",Str "-",Str "\1079\1072",Space,Str "\1090\1086\1075\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{find}",Space,Str "\1079\1072\1074\1105\1088\1085\1091\1090",Space,Str "\1074",Space,RawInline "latex" "\\In{Maybe}",Str ",",Space,Str "\1101\1090\1086",Space,Str "\1095\1072\1089\1090\1080\1095\1085\1086",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1105\1085\1085\1072\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Str ".",Space,Str "\1042",Space,Str "\1089\1072\1084\1086\1084",Space,Str "\1076\1077\1083\1077",Space,Str "\1074\1077\1076\1100",Space,Str "\1074",Space,Str "\1089\1087\1080\1089\1082\1077",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1080",Space,Str "\1085\1077",Space,Str "\1086\1082\1072\1079\1072\1090\1100\1089\1103",Space,Str "\1087\1086\1076\1093\1086\1076\1103\1097\1077\1075\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str "."]
,Para [Str "\1054\1089\1090\1072\1083\1086\1089\1100",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{flattenTree}",Str ".",Space,Str "\1041\1099\1083\1086",Space,Str "\1073\1099",Space,Str "\1093\1086\1088\1086\1096\1086",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1077\1105",Space,Str "\1090\1072\1082",Str ",",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1086\1085\1072",Space,Str "\1073\1099\1083\1072",Space,Str "\1088\1072\1079\1074\1105\1088\1090\1082\1086\1081",Space,Str "\1076\1083\1103",Space,Str "\1089\1087\1080\1089\1082\1072",Str ".",Space,Str "\1055\1086\1089\1082\1086\1083\1100\1082\1091",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{find}",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1089\1074\1105\1088\1090\1082\1086\1081",Space,Str "(",Str "\1084\1086\1078\1077\1090",Space,Str "\1073\1099\1090\1100",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1072",Space,Str "\1095\1077\1088\1077\1079",Space,RawInline "latex" "\\In{fold}",Str ")",Str ",",Space,Str "\1074\1084\1077\1089\1090\1077",Space,Str "\1101\1090\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1088\1072\1073\1086\1090\1072\1083\1080",Space,Str "\1073\1099",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1101\1092\1092\1077\1082\1090\1080\1074\1085\1086",Str ".",Space,Str "\1052\1099",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{flattenTree}",Space,Str "\1095\1077\1088\1077\1079",Space,Str "\1074\1079\1072\1080\1084\1085\1091\1102",Space,Str "\1088\1077\1082\1091\1088\1089\1080\1102",Str ".",Space,Str "\1044\1074\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1073\1091\1076\1091\1090",Space,Str "\1087\1086",Space,Str "\1086\1095\1077\1088\1077\1076\1080",Space,Str "\1074\1099\1079\1099\1074\1072\1090\1100",Space,Str "\1076\1088\1091\1075",Space,Str "\1076\1088\1091\1075\1072",Str ".",Space,Str "\1054\1076\1085\1072",Space,Str "\1080\1079",Space,Str "\1085\1080\1093",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1080\1079\1074\1083\1077\1082\1072\1090\1100",Space,Str "\1089\1083\1077\1076\1091\1102\1097\1077\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1080\1079",Space,Str "\1086\1095\1077\1088\1077\1076\1080",Str ",",Space,Str "\1072",Space,Str "\1076\1088\1091\1075\1072\1103",Space,Str "\8211",Space,Str "\1087\1088\1086\1074\1077\1088\1103\1090\1100",Space,Str "\1085\1077",Space,Str "\1074\1089\1090\1088\1077\1095\1072\1083\1086\1089\1100",Space,Str "\1083\1080",Space,Str "\1085\1072\1084",Space,Str "\1091\1078\1077",Space,Str "\1090\1072\1082\1086\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Str ",",Space,Str "\1080",Space,Str "\1076\1086\1073\1072\1074\1083\1103\1090\1100",Space,Str "\1085\1086\1074\1099\1077",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1099",Space,Str "\1074",Space,Str "\1086\1095\1077\1088\1077\1076\1100",Str "."]
,RawBlock "latex" "\n\\begin{code}\nflattenTree :: (Ord h, Ord a) => Tree (Path a, h) -> [Path a]\nflattenTree a = ping none (singleton a) \n\nping :: (Ord h, Ord a) => Visited a -> ToVisit a h -> [Path a]\nping visited toVisit \n    | isEmpty toVisit = []\n    | otherwise       = pong visited toVisit' a\n    where (a, toVisit') = next toVisit\n\n\npong :: (Ord h, Ord a) \n    => Visited a -> ToVisit a h -> Tree (Path a, h) -> [Path a]\npong visited toVisit a \n    | inside a visited  = ping visited toVisit\n    | otherwise         = getPath a : \n        ping (insert a visited) (schedule (subForest a) toVisit)\n\\end{code}\n"
,Para [Str "\1058\1080\1087\1099",Space,RawInline "latex" "\\In{Visited}",Space,Str "\1080",Space,RawInline "latex" "\\In{ToVisit}",Space,Str "\1086\1073\1086\1079\1085\1072\1095\1072\1102\1090",Space,Str "\1085\1072\1073\1086\1088\1099",Space,Str "\1074\1077\1088\1096\1080\1085",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1084\1099",Space,Str "\1091\1078\1077",Space,Str "\1087\1086\1089\1077\1090\1080\1083\1080",Space,Str "\1080",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1089\1086\1073\1080\1088\1072\1077\1084\1089\1103",Space,Str "\1087\1086\1089\1077\1090\1080\1090\1100",Str ".",Space,Str "\1053\1077",Space,Str "\1074\1076\1072\1074\1072\1103\1089\1100",Space,Str "\1074",Space,Str "\1087\1086\1076\1088\1086\1073\1085\1086\1089\1090\1080",Space,Str "\1080\1085\1090\1077\1088\1092\1077\1081\1089\1072",Space,Str "\1101\1090\1080\1093",Space,Str "\1090\1080\1087\1086\1074",Str ",",Space,Str "\1076\1072\1074\1072\1081\1090\1077",Space,Str "\1087\1088\1080\1089\1084\1086\1090\1088\1080\1084\1089\1103",Space,Str "\1082",Space,Str "\1092\1091\1085\1082\1094\1080\1103\1084",Space,RawInline "latex" "\\In{ping}",Space,Str "\1080",Space,RawInline "latex" "\\In{pong}",Space,Str "\1089",Space,Str "\1090\1086\1095\1082\1080",Space,Str "\1079\1088\1077\1085\1080\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1080\1093",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1074\1099\1079\1099\1074\1072\1090\1100",Str ",",Space,Str "\1072",Space,Str "\1080\1084\1077\1085\1085\1086",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{findPath}",Str ".",Space,Str "\1069\1090\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1086\1078\1080\1076\1072\1077\1090",Space,Str "\1085\1072",Space,Str "\1074\1093\1086\1076\1077",Space,Str "\1089\1087\1080\1089\1086\1082",Str ".",Space,Str "\1042\1085\1091\1090\1088\1080",Space,Str "\1086\1085\1072",Space,Str "\1086\1073\1093\1086\1076\1080\1090",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1074",Space,Str "\1087\1086\1080\1089\1082\1072\1093",Space,Str "\1085\1091\1078\1085\1086\1075\1086",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1072",Str ",",Space,Str "\1087\1086\1101\1090\1086\1084\1091",Space,Str "\1086\1085\1072",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1087\1088\1080\1084\1077\1085\1103\1090\1100",Space,Str "\1089\1086\1087\1086\1089\1090\1072\1074\1083\1077\1085\1080\1077",Space,Str "\1089",Space,Str "\1086\1073\1088\1072\1079\1094\1086\1084",Str ",",Space,Str "\1088\1072\1079\1073\1080\1088\1072\1103",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1085\1072",Space,Str "\1095\1072\1089\1090\1080",Str ".",Space,Str "\1057\1085\1072\1095\1072\1083\1072",Space,Str "\1086\1085\1072",Space,Str "\1079\1072\1087\1088\1086\1089\1080\1090",Space,Str "\1089\1086\1087\1086\1089\1090\1072\1074\1083\1077\1085\1080\1077",Space,Str "\1089",Space,Str "\1087\1091\1089\1090\1099\1084",Space,Str "\1089\1087\1080\1089\1082\1086\1084",Str ",",Space,Str "\1079\1072\1087\1091\1089\1090\1080\1090\1089\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{ping}",Space,Str "\1089",Space,Str "\1087\1091\1089\1090\1099\1084",Space,Str "\1084\1085\1086\1078\1077\1089\1090\1074\1086\1084",Space,Str "\1087\1086\1089\1077\1097\1105\1085\1085\1099\1093",Space,Str "\1074\1077\1088\1096\1080\1085",Space,Str "(",RawInline "latex" "\\In{none}",Str ")",Space,Str "\1080",Space,Str "\1086\1076\1085\1080\1084",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1086\1084",Space,Str "\1074",Space,Str "\1086\1095\1077\1088\1077\1076\1080",Space,Str "\1074\1077\1088\1096\1080\1085",Space,Str "(",RawInline "latex" "\\In{singleton a}",Str ")",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1087\1088\1077\1076\1089\1090\1086\1080\1090",Space,Str "\1087\1086\1089\1077\1090\1080\1090\1100",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{ping}",Space,Str "\1087\1088\1086\1074\1077\1088\1080\1090",Space,Str "\1085\1077",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1083\1080",Space,Str "\1086\1095\1077\1088\1077\1076\1100",Space,Str "\1087\1091\1089\1090\1086\1081",Str ",",Space,Str "\1086\1095\1077\1088\1077\1076\1100",Space,Str "\1089\1086\1076\1077\1088\1078\1080\1090",Space,Str "\1086\1076\1080\1085",Space,Str "\1101\1083\1077\1084\1077\1085\1090",Str ",",Space,Str "\1087\1086\1101\1090\1086\1084\1091",Space,Str "\1086\1085\1072",Space,Str "\1087\1077\1088\1077\1081\1076\1105\1090",Space,Str "\1082",Space,Str "\1089\1083\1077\1076\1091\1102\1097\1077\1084\1091",Space,Str "\1089\1083\1091\1095\1072\1102",Space,Str "\1080",Space,Str "\1080\1079\1074\1083\1077\1095\1105\1090",Space,Str "\1080\1079",Space,Str "\1086\1095\1077\1088\1077\1076\1080",Space,Str "\1086\1076\1080\1085",Space,Str "\1101\1083\1077\1084\1077\1085\1090",Space,Str "(",RawInline "latex" "\\In{next}",Str ")",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1087\1077\1088\1077\1076\1072\1085",Space,Str "\1074",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{pong}",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{pong}",Space,Str "\1087\1088\1086\1074\1077\1088\1080\1090",Space,Str "\1085\1077\1090",Space,Str "\1083\1080",Space,Str "\1074",Space,Str "\1089\1087\1080\1089\1082\1077",Space,Str "\1091\1078\1077",Space,Str "\1087\1086\1089\1077\1097\1105\1085\1085\1099\1093",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1086\1074",Space,Str "\1090\1086\1075\1086",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1073\1099\1083",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1095\1090\1086",Space,Str "\1080\1079\1074\1083\1077\1095\1105\1085",Space,Str "(",RawInline "latex" "\\In{inside a visited}",Str ")",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1101\1090\1086",Space,Str "\1086\1082\1072\1078\1077\1090\1089\1103",Space,Str "\1090\1072\1082",Str ",",Space,Str "\1090\1086",Space,Str "\1086\1085\1072",Space,Str "\1079\1072\1087\1088\1086\1089\1080\1090",Space,Str "\1089\1083\1077\1076\1091\1102\1097\1080\1081",Space,Str "\1101\1083\1077\1084\1077\1085\1090",Space,Str "\1091",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{ping}",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1078\1077",Space,Str "\1080\1089\1093\1086\1076\1085\1099\1081",Space,Str "\1101\1083\1077\1084\1077\1085\1090",Space,Str "\1086\1082\1072\1078\1077\1090\1089\1103",Space,Str "\1085\1086\1074\1099\1084",Str ",",Space,Str "\1086\1085\1072",Space,Str "\1076\1086\1073\1072\1074\1080\1090",Space,Str "\1077\1075\1086",Space,Str "\1074",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "(",RawInline "latex" "\\In{getPath a : ...}",Str ")",Space,Str "\1080",Space,Str "\1079\1072\1087\1083\1072\1085\1080\1088\1091\1077\1090",Space,Str "\1086\1073\1093\1086\1076",Space,Str "\1074\1089\1077\1093",Space,Str "\1076\1086\1095\1077\1088\1085\1080\1093",Space,Str "\1076\1077\1088\1077\1074\1100\1077\1074",Space,Str "\1076\1072\1085\1085\1086\1075\1086",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1072",Space,Str "(",RawInline "latex" "\\In{schedule (subForest a) toVisit}",Str ")",Str ".",Space,Str "\1055\1088\1080",Space,Str "\1087\1077\1088\1074\1086\1084",Space,Str "\1079\1072\1093\1086\1076\1077",Space,Str "\1080\1089\1093\1086\1076\1085\1099\1081",Space,Str "\1101\1083\1077\1084\1077\1085\1090",Space,Str "\1086\1082\1072\1078\1077\1090\1089\1103",Space,Str "\1085\1086\1074\1099\1084",Space,Str "\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{findPath}",Space,Str "\1087\1086\1081\1084\1105\1090",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1085\1077",Space,Str "\1087\1091\1089\1090\1086\1081",Space,Str "\1080",Space,Str "\1086\1089\1090\1072\1085\1086\1074\1080\1090",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1077",Str ".",Space,Str "\1054\1085\1072",Space,Str "\1085\1077\1084\1085\1086\1075\1086",Space,Str "\1087\1077\1088\1077\1076\1086\1093\1085\1105\1090",Space,Str "\1080",Space,Str "\1087\1088\1080\1084\1077\1090\1089\1103",Space,Str "\1079\1072",Space,Str "\1089\1083\1077\1076\1091\1102\1097\1080\1081",Space,Str "\1089\1083\1091\1095\1072\1081",Str ".",Space,Str "\1058\1072\1084",Space,Str "\1086\1085\1072",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1080\1079\1074\1083\1077\1082\1072\1090\1100",Space,Str "\1087\1077\1088\1074\1099\1081",Space,Str "\1101\1083\1077\1084\1077\1085\1090",Space,Str "\1089\1087\1080\1089\1082\1072",Space,Str "\1080",Space,Str "\1089\1086\1087\1086\1089\1090\1072\1074\1083\1103\1090\1100",Space,Str "\1077\1075\1086",Space,Str "\1089",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090\1086\1084",Str ".",Space,Str "\1055\1088\1080",Space,Str "\1101\1090\1086\1084",Space,Str "\1087\1077\1088\1074\1099\1081",Space,Str "\1101\1083\1077\1084\1077\1085\1090",Space,Str "\1091\1078\1077",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085",Str ".",Space,Str "\1052\1099",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1091\1077\1084\1089\1103",Space,Str "\1101\1090\1080\1084",Str ",",Space,Str "\1091\1073\1077\1076\1080\1084\1089\1103",Space,Str "\1074",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1086\1085",Space,Str "\1085\1077",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1094\1077\1083\1100\1102",Space,Str "\1080",Space,Str "\1088\1077\1082\1091\1088\1089\1080\1074\1085\1086",Space,Str "\1074\1099\1079\1086\1074\1077\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{find}",Space,Str "\1085\1072",Space,Str "\1093\1074\1086\1089\1090\1077",Space,Str "\1089\1087\1080\1089\1082\1072",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{findPath}",Space,Str "\1079\1072\1087\1088\1086\1089\1080\1090",Space,Str "\1089\1083\1077\1076\1091\1102\1097\1077\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1080",Space,Str "\1090\1072\1082",Space,Str "\1076\1072\1083\1077\1077",Str "."]
,Para [Str "\1053\1072\1096\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{flattenPath}",Space,Str "\1085\1077",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1088\1072\1079\1074\1105\1088\1090\1082\1086\1081",Str ",",Space,Str "\1085\1086",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1087\1086\1093\1086\1078\1072",Space,Str "\1085\1072",Space,Str "\1085\1077\1105",Space,Str "\1090\1077\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1087\1086\1079\1074\1086\1083\1103\1077\1090",Space,Str "\1074\1099\1095\1080\1089\1083\1103\1090\1100",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1080\1088\1091\1102\1097\1080\1081",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1095\1072\1089\1090\1080\1095\1085\1086",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{length}",Space,Str "\1090\1088\1077\1073\1091\1077\1090",Space,Str "\1087\1086\1083\1085\1086\1075\1086",Space,Str "\1086\1073\1093\1086\1076\1072",Space,Str "\1089\1087\1080\1089\1082\1072",Str ".",Space,Str "\1052\1099",Space,Str "\1085\1077",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100",Space,Str "\1077\1105",Space,Str "\1089",Space,Str "\1073\1077\1089\1082\1086\1085\1077\1095\1085\1099\1084\1080",Space,Str "\1089\1087\1080\1089\1082\1072\1084\1080",Str ".",Space,Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1076\1072\1074\1072\1081\1090\1077",Space,Str "\1088\1072\1079\1073\1077\1088\1105\1084\1089\1103",Space,Str "\1089",Space,Str "\1087\1086\1076\1095\1080\1085\1105\1085\1085\1099\1084\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1103\1084\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ngetPath :: Tree (Path a, h) -> Path a\ngetPath = fst . rootLabel\n\\end{code}\n"
,Para [Str "\1060\1091\1085\1082\1094\1080\1080",Space,Str "\1076\1083\1103",Space,Str "\1084\1085\1086\1078\1077\1089\1090\1074\1072",Space,Str "\1074\1077\1088\1096\1080\1085",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1084\1099",Space,Str "\1091\1078\1077",Space,Str "\1087\1086\1089\1077\1090\1080\1083\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nimport qualified Data.Set as S\n...\n\ntype Visited a   = S.Set a\n\nnone :: Ord a => Visited a\nnone = S.empty\n\ninsert :: Ord a => Tree (Path a, h) -> Visited a -> Visited a\ninsert = S.insert . pathEnd . getPath\n\ninside :: Ord a => Tree (Path a, h) -> Visited a -> Bool\ninside = S.member . pathEnd . getPath\n\\end{code}\n"
,Para [Str "\1060\1091\1085\1082\1094\1080\1080",Space,Str "\1076\1083\1103",Space,Str "\1086\1095\1077\1088\1077\1076\1080",Space,Str "\1090\1077\1093",Space,Str "\1074\1077\1088\1096\1080\1085",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1099",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1089\1086\1073\1080\1088\1072\1077\1084\1089\1103",Space,Str "\1087\1086\1089\1077\1090\1080\1090\1100",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nimport Data.Maybe\nimport qualified Data.PriorityQueue.FingerTree as Q\n...\n\ntype ToVisit a h = Q.PQueue h (Tree (Path a, h))\n\npriority t = (snd $ rootLabel t, t)\n\nsingleton :: Ord h => Tree (Path a, h) -> ToVisit a h\nsingleton = uncurry Q.singleton . priority \n\nnext :: Ord h => ToVisit a h -> (Tree (Path a, h), ToVisit a h)\nnext = fromJust . Q.minView\n\nisEmpty :: Ord h => ToVisit a h -> Bool\nisEmpty = Q.null\n\nschedule :: Ord h => [Tree (Path a, h)] -> ToVisit a h -> ToVisit a h\nschedule = Q.union . Q.fromList . fmap priority\n\\end{code}\n"
,Para [Str "\1069\1090\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1087\1088\1086\1089\1090\1099\1077",Str ",",Space,Str "\1086\1085\1080",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1080\1079\1080\1088\1091\1102\1090",Space,Str "\1073\1086\1083\1077\1077",Space,Str "\1086\1073\1097\1080\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1076\1083\1103",Space,Str "\1090\1080\1087\1086\1074",Space,RawInline "latex" "\\In{Set}",Space,Str "\1080",Space,RawInline "latex" "\\In{PQueue}",Str ",",Space,Str "\1074\1099",Space,Str "\1085\1072\1074\1077\1088\1085\1103\1082\1072",Space,Str "\1083\1077\1075\1082\1086",Space,Str "\1088\1072\1079\1073\1077\1088\1105\1090\1077\1089\1100",Space,Str "\1089",Space,Str "\1085\1080\1084\1080",Str ",",Space,Str "\1079\1072\1075\1083\1103\1085\1091\1074",Space,Str "\1074",Space,Str "\1076\1086\1082\1091\1084\1077\1085\1090\1072\1094\1080\1102",Space,Str "\1082",Space,Str "\1084\1086\1076\1091\1083\1103\1084",Space,RawInline "latex" "\\In{Data.Set}",Space,Str "\1080",Space,RawInline "latex" "\\In{Data.PriorityQueue.FingerTree}",Str "."]
,Para [Str "\1054\1089\1090\1072\1083\1086\1089\1100",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1085\1072\1087\1080\1089\1072\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1090\1100",Space,Str "\1076\1077\1088\1077\1074\1086",Space,Str "\1087\1086\1080\1089\1082\1072",Space,Str "\1076\1083\1103",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084\1072",Space,Str "A",Str "*",Str ".",Space,Str "\1054\1085\1072",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1074\1077\1090\1074\1083\1077\1085\1080\1103",Str ",",Space,Str "\1072",Space,Str "\1090\1072\1082\1078\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1088\1072\1089\1089\1090\1086\1103\1085\1080\1103",Space,Str "\1076\1086",Space,Str "\1094\1077\1083\1080",Space,Str "\1080",Space,Str "\1089\1090\1088\1086\1080\1090",Space,Str "\1087\1086",Space,Str "\1085\1080\1084",Space,Str "\1076\1077\1088\1077\1074\1086",Space,Str "\1087\1086\1080\1089\1082\1072",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nastarTree :: (Num h, Ord h) \n    => (a -> [(a, h)]) -> (a -> h) -> a -> Tree (a, h)\nastarTree alts distToGoal s0 = unfoldTree f (s0, 0)\n    where f (s, h) = ((s, heur h s), next h <$> alts s)\n          heur h s = h + distToGoal s  \n          next h (a, d) = (a, d + h)\n\\end{code}\n"
,Header 3 [Str "\1055\1086\1080\1089\1082",Space,Str "\1084\1072\1088\1096\1088\1091\1090\1086\1074",Space,Str "\1074",Space,Str "\1084\1077\1090\1088\1086"]
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1076\1072\1074\1072\1081\1090\1077",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1082\1072\1082",Space,Str "\1085\1072\1096\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1089\1087\1088\1072\1074\1080\1090\1089\1103",Space,Str "\1089",Space,Str "\1079\1072\1076\1072\1095\1077\1081",Space,Str "\1087\1086\1080\1089\1082\1072",Space,Str "\1084\1072\1088\1096\1088\1091\1090\1086\1074",Space,Str "\1074",Space,Str "\1084\1077\1090\1088\1086",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nmetroTree :: Station -> Station -> Tree (Station, Double)\nmetroTree init goal = astarTree distMetroMap (stationDist goal) init\n\nconnect :: Station -> Station -> Maybe [Station]\nconnect a b = search (== b) $ metroTree a b\n\nmain = print $ connect (St Red Sirius) (St Green Prizrak)\n\\end{code}\n"
,Para [Str "\1050",Space,Str "\1087\1088\1080\1084\1077\1088\1091",Space,Str "\1085\1072\1081\1076\1105\1084",Space,Str "\1084\1072\1088\1096\1088\1091\1090",Space,Str "\1086\1090",Space,Str "\1089\1090\1072\1085\1094\1080\1080",Space,Quoted DoubleQuote [Str "\1044\1085\1086",Space,Str "\1041\1086\1083\1086\1090\1072"],Space,Str "\1076\1086",Space,Str "\1089\1090\1072\1085\1094\1080\1080",Space,Quoted DoubleQuote [Str "\1055\1088\1080\1079\1088\1072\1082"],Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Metro> connect (St Orange DnoBolota) (St Green Prizrak)\nJust [St Orange DnoBolota,St Orange PlBakha,\n    St Red PlBakha,St Red Sirius,St Green Sirius,\n    St Green Zvezda,St Green Til,\n    St Green TrollevMost,St Green Prizrak]\n*Metro> connect (St Red PlShekspira) (St Blue De)\nJust [St Red PlShekspira,St Red Rodnik,St Blue Rodnik,\n    St Blue Krest,St Blue De]\n*Metro> connect (St Red PlShekspira) (St Orange De)\nNothing\n\\end{code}\n"
,Para [Str "\1042",Space,Str "\1090\1088\1077\1090\1100\1077\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1084\1072\1088\1096\1088\1091\1090",Space,Str "\1085\1077",Space,Str "\1073\1099\1083",Space,Str "\1085\1072\1081\1076\1077\1085",Str ",",Space,Str "\1087\1086\1089\1082\1086\1083\1100\1082\1091",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1085\1077\1090",Space,Str "\1089\1090\1072\1085\1094\1080\1080",Space,RawInline "latex" "\\In{De}",Space,Str "\1085\1072",Space,Str "\1086\1088\1072\1085\1078\1077\1074\1086\1081",Space,Str "\1074\1077\1090\1082\1077",Str "."]
,Header 2 [Str "\1058\1077\1089\1090\1080\1088\1086\1074\1072\1085\1080\1077",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "QuickCheck"]
,Para [Str "\1052\1099",Space,Str "\1087\1088\1086\1074\1077\1088\1080\1083\1080",Space,Str "\1090\1088\1080",Space,Str "\1089\1083\1091\1095\1072\1103",Str ",",Space,Str "\1077\1097\1105",Space,Str "\1090\1088\1080",Space,Str "\1089\1083\1091\1095\1072\1103",Str ",",Space,Str "\1077\1097\1105",Space,Str "\1090\1088\1080",Space,Str "\1089\1083\1091\1095\1072\1103",Str ",",Space,Str "\1086\1078\1080\1076\1072\1077\1084\1099\1081",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090",Space,Str "\1089\1093\1086\1076\1080\1090\1089\1103",Space,Str "\1089",Space,Str "\1090\1077\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1085\1072\1084",Space,Str "\1080\1085\1090\1077\1088\1087\1088\1077\1090\1072\1090\1086\1088",Str ",",Space,Str "\1085\1086",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1083\1080",Space,Str "\1084\1099",Space,Str "\1073\1099\1090\1100",Space,Str "\1091\1074\1077\1088\1077\1085\1099",Space,Str "\1074",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084",Space,Str "\1076\1077\1081\1089\1090\1074\1080\1090\1077\1083\1100\1085\1086",Space,Str "\1088\1072\1073\1086\1090\1072\1077\1090",Str "?",Space,Str "\1044\1083\1103",Space,Str "Haskell",Space,Str "\1073\1099\1083\1072",Space,Str "\1088\1072\1079\1088\1072\1073\1086\1090\1072\1085\1072",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1072\1103",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1072",Space,Str "\1090\1077\1089\1090\1080\1088\1086\1074\1072\1085\1080\1103",Space,RawInline "latex" "\\In{QuickCheck}",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1091\1087\1088\1086\1097\1072\1077\1090",Space,Str "\1087\1088\1086\1094\1077\1089\1089",Space,Str "\1087\1088\1086\1074\1077\1088\1082\1080",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084",Str ".",Space,Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1089\1092\1086\1088\1084\1091\1083\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1089\1074\1086\1081\1089\1090\1074\1072",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1086\1073\1103\1079\1072\1090\1077\1083\1100\1085\1086",Space,Str "\1076\1086\1083\1078\1085\1099",Space,Str "\1074\1099\1087\1086\1083\1085\1103\1090\1100\1089\1103",Str ",",Space,Str "\1072",Space,RawInline "latex" "\\In{QuickCheck}",Space,Str "\1089\1075\1077\1085\1077\1088\1080\1088\1091\1077\1090",Space,Str "\1089\1083\1091\1095\1072\1081\1085\1099\1081",Space,Str "\1085\1072\1073\1086\1088",Space,Str "\1076\1072\1085\1085\1099\1093",Space,Str "\1080",Space,Str "\1087\1088\1086\1074\1077\1088\1080\1090",Space,Str "\1085\1072\1096\1080",Space,Str "\1089\1074\1086\1081\1089\1090\1074\1072",Space,Str "\1085\1072",Space,Str "\1085\1080\1093",Str "."]
,Para [Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1074",Space,Str "\1085\1072\1096\1077\1081",Space,Str "\1079\1072\1076\1072\1095\1077",Space,Str "\1087\1091\1090\1100",Space,Str "\1080\1079",Space,RawInline "latex" "\\In{A}",Space,Str "\1074",Space,RawInline "latex" "\\In{B}",Space,Str "\1076\1086\1083\1078\1077\1085",Space,Str "\1089\1086\1074\1087\1072\1076\1072\1090\1100",Space,Str "\1089",Space,Str "\1087\1077\1088\1077\1074\1105\1088\1085\1091\1090\1099\1084",Space,Str "\1087\1091\1090\1105\1084",Space,Str "\1080\1079",Space,RawInline "latex" "\\In{B}",Space,Str "\1074",Space,RawInline "latex" "\\In{A}",Str ".",Space,Str "\1058\1072\1082\1078\1077",Space,Str "\1074\1089\1077",Space,Str "\1089\1090\1072\1085\1094\1080\1080",Space,Str "\1074",Space,Str "\1084\1072\1088\1096\1088\1091\1090\1077",Space,Str "\1076\1086\1083\1078\1085\1099",Space,Str "\1073\1099\1090\1100",Space,Str "\1089\1086\1089\1077\1076\1085\1080\1084\1080",Str ".",Space,Str "\1044\1072\1074\1072\1081\1090\1077",Space,Str "\1087\1088\1086\1074\1077\1088\1080\1084",Space,Str "\1101\1090\1080",Space,Str "\1089\1074\1086\1081\1089\1090\1074\1072",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1085\1072\1084",Space,Str "\1085\1091\1078\1085\1086",Space,Str "\1089\1092\1086\1088\1084\1091\1083\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1080\1093",Space,Str "\1074",Space,Str "\1074\1080\1076\1077",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090\1086\1074",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nmodule Test where\n\nimport Control.Applicative \n\nimport Metro\n\nprop1 :: Station -> Station -> Bool\nprop1 a b = connect a b == (fmap reverse $ connect b a)\n\nprop2 :: Station -> Station -> Bool\nprop2 a b = maybe True (all (uncurry near) . pairs) $ connect a b\n\npairs :: [a] -> [(a, a)]\npairs xs = zip xs (drop 1 xs)\n\nnear :: Station -> Station -> Bool\nnear a b = a `elem` (fst <$> distMetroMap b)\n\\end{code}\n"
,Para [Str "\1059\1089\1090\1072\1085\1086\1074\1080\1084",Space,RawInline "latex" "\\In{QuickCheck}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ncabal install QuickCheck\n\\end{code}\n"
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1085\1072\1084",Space,Str "\1085\1091\1078\1085\1086",Space,Str "\1087\1086\1076\1089\1082\1072\1079\1072\1090\1100",Space,RawInline "latex" "\\In{QuickCheck}",Space,Str "\1082\1072\1082",Space,Str "\1075\1077\1085\1077\1088\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1089\1083\1091\1095\1072\1081\1085\1099\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Station}",Str ".",Space,RawInline "latex" "\\In{QuickCheck}",Space,Str "\1090\1077\1089\1090\1080\1088\1091\1077\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1102\1090",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1080\1079",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Arbitrary}",Space,Str "\1080",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1102\1090",Space,RawInline "latex" "\\In{Bool}",Str ".",Space,Str "\1050\1083\1072\1089\1089",Space,RawInline "latex" "\\In{Arbitrary}",Space,Str "\1086\1090\1074\1077\1095\1072\1077\1090",Space,Str "\1079\1072",Space,Str "\1075\1077\1085\1077\1088\1072\1094\1080\1102",Space,Str "\1089\1083\1091\1095\1072\1081\1085\1099\1093",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Str "."]
,Para [Str "\1054\1089\1085\1086\1074\1085\1086\1081",Space,Str "\1084\1077\1090\1086\1076",Space,RawInline "latex" "\\In{arbitrary}",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1075\1077\1085\1077\1088\1072\1090\1086\1088",Space,Str "\1089\1083\1091\1095\1072\1081\1085\1099\1093",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nclass Arbitrary a where\n    arbitrary :: Gen a\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1091\1077\1084\1089\1103",Space,Str "\1090\1077\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1101\1090\1086\1090",Space,Str "\1082\1083\1072\1089\1089",Space,Str "\1091\1078\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1105\1085",Space,Str "\1076\1083\1103",Space,Str "\1084\1085\1086\1075\1080\1093",Space,Str "\1089\1090\1072\1085\1076\1072\1088\1090\1085\1099\1093",Space,Str "\1090\1080\1087\1086\1074",Str ".",Space,Str "\1050\1088\1086\1084\1077",Space,Str "\1090\1086\1075\1086",Space,Str "\1082\1083\1072\1089\1089",Space,RawInline "latex" "\\In{Gen}",Space,Str "\1103\1074\1103\1083\1077\1090\1089\1103",Space,Str "\1084\1086\1085\1072\1076\1086\1081",Str ".",Space,Str "\1052\1099",Space,Str "\1089\1075\1077\1085\1077\1088\1080\1088\1091\1077\1084",Space,Str "\1089\1083\1091\1095\1072\1081\1085\1086\1077",Space,Str "\1094\1077\1083\1086\1077",Space,Str "\1095\1080\1089\1083\1086",Space,Str "\1080",Space,Str "\1086\1090\1086\1073\1088\1072\1079\1080\1084",Space,Str "\1077\1075\1086",Space,Str "\1074",Space,Str "\1086\1076\1085\1091",Space,Str "\1080\1079",Space,Str "\1089\1090\1072\1085\1094\1080\1081",Str ".",Space,Str "\1057\1076\1077\1083\1072\1090\1100",Space,Str "\1101\1090\1086",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1088\1072\1079\1085\1099\1084\1080",Space,Str "\1089\1087\1086\1089\1086\1073\1072\1084\1080",Str ",",Space,Str "\1084\1099",Space,Str "\1085\1072\1095\1085\1105\1084",Space,Str "\1080\1079",Space,Str "\1086\1076\1085\1086\1081",Space,Str "\1089\1090\1072\1085\1094\1080\1080",Space,Str "\1080",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1089\1083\1091\1095\1072\1081\1085\1086",Space,Str "\1073\1083\1091\1078\1076\1072\1090\1100",Space,Str "\1087\1086",Space,Str "\1082\1072\1088\1090\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nimport Test.QuickCheck\n...\n\ninstance Arbitrary Station where\n    arbitrary = ($ s0) . foldr (.) id . fmap select <$> ints\n        where ints = vector =<< choose (0, 100)\n              s0 = St Blue De\n\nselect :: Int -> Station -> Station\nselect i s = as !! mod i (length as)\n    where as = fst <$> distMetroMap s\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1086\1074\1072\1083\1080\1089\1100",Space,Str "\1076\1074\1091\1084\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1103\1084\1080",Space,Str "\1080\1079",Space,Str "\1073\1080\1073\1080\1083\1086\1090\1077\1082\1080",Space,RawInline "latex" "\\In{QuickCheck}",Str ".",Space,Str "\1069\1090\1086",Space,RawInline "latex" "\\In{vector}",Space,Str "\1080",Space,RawInline "latex" "\\In{choose}",Str ".",Space,Str "\1055\1077\1088\1074\1072\1103",Space,Str "\1089\1090\1088\1086\1080\1090",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1089\1083\1091\1095\1072\1081\1085\1099\1093",Space,Str "\1095\1080\1089\1077\1083",Space,Str "\1079\1072\1076\1072\1085\1085\1086\1081",Space,Str "\1076\1083\1080\1085\1099",Str ",",Space,Str "\1072",Space,Str "\1074\1090\1086\1088\1072\1103",Space,Str "\1074\1099\1073\1080\1088\1072\1077\1090",Space,Str "\1089\1083\1091\1095\1072\1081\1085\1086\1077",Space,Str "\1095\1080\1089\1083\1086",Space,Str "\1080\1079",Space,Str "\1079\1072\1076\1072\1085\1085\1086\1075\1086",Space,Str "\1076\1080\1072\1087\1072\1079\1086\1085\1072",Str ".",Space,Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1087\1088\1086\1090\1077\1090\1089\1090\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1085\1072\1096\1080",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090\1099",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{quickCheck}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Test Prelude> quickCheck prop1\n+++ OK, passed 100 tests.\n*Test Prelude> quickCheck prop2\n+++ OK, passed 100 tests.\n*Test Prelude> \n\\end{code}\n"
,Para [Str "\1057\1074\1086\1081\1089\1090\1074\1072",Space,Str "\1087\1088\1086\1096\1083\1080",Space,Str "\1090\1077\1089\1090\1080\1088\1086\1074\1072\1085\1080\1077",Space,Str "\1085\1072",Space,Str "\1074\1099\1073\1086\1088\1082\1077",Space,Str "\1080\1079",Space,Str "100",Space,Str "\1082\1086\1084\1073\1080\1085\1072\1094\1080\1081",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1074",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1085\1072\1084",Space,Str "\1080\1085\1090\1077\1088\1077\1089\1085\1086",Str ",",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{verboseCheck}",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1077\1090\1100",Space,Str "\1085\1072",Space,Str "\1082\1072\1082\1080\1093",Space,Str "\1080\1084\1077\1085\1085\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103\1093",Space,Str "\1087\1088\1086\1074\1086\1076\1080\1083\1086\1089\1100",Space,Str "\1090\1077\1089\1090\1080\1088\1086\1074\1072\1085\1080\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Test Prelude> verboseCheck prop2\nPassed:  \nSt Black Kosmodrom\nSt Red UlBylichova\nPassed: \nSt Black UlBylichova\nSt Orange Sever\nPassed:  \nSt Red Sirius\nSt Blue Krest\n...\n\\end{code}\n"
,Para [Str "\1045\1089\1083\1080",Space,Str "\1073\1099",Space,Str "\1089\1074\1086\1081\1089\1090\1074\1086",Space,Str "\1085\1077",Space,Str "\1074\1099\1087\1086\1083\1085\1080\1083\1086\1089\1100",Str ",",Space,RawInline "latex" "\\In{QuickCheck}",Space,Str "\1089\1086\1086\1073\1097\1080\1083",Space,Str "\1073\1099",Space,Str "\1085\1072\1084",Space,Str "\1086\1073",Space,Str "\1101\1090\1086\1084",Space,Str "\1080",Space,Str "\1087\1086\1082\1072\1079\1072\1083",Space,Str "\1073\1099",Space,Str "\1090\1077",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1099",Str ",",Space,Str "\1076\1083\1103",Space,Str "\1082\1086\1090\1086\1088\1099\1093",Space,Str "\1089\1074\1086\1081\1089\1090\1074\1086",Space,Str "\1085\1077",Space,Str "\1074\1099\1087\1086\1083\1085\1080\1083\1086\1089\1100",Str ".",Space,Str "\1044\1072\1074\1072\1081\1090\1077",Space,Str "\1089\1086\1089\1090\1072\1074\1080\1084",Space,Str "\1090\1072\1082\1086\1077",Space,Str "\1089\1074\1086\1081\1089\1090\1074\1086",Space,Str "\1080\1089\1082\1091\1089\1089\1090\1074\1077\1085\1085\1086",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Str ",",Space,Str "\1087\1088\1086\1074\1077\1088\1080\1084",Str ",",Space,Str "\1085\1072\1093\1086\1076\1103\1090\1089\1103",Space,Str "\1083\1080",Space,Str "\1074\1089\1077",Space,Str "\1089\1090\1072\1085\1094\1080\1080",Space,Str "\1085\1072",Space,Str "\1086\1076\1085\1086\1081",Space,Str "\1083\1080\1085\1080\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nfakeProp :: Station -> Station -> Bool\nfakeProp (St a _) (St b _) = a == b\n\\end{code}\n"
,Para [Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1085\1072",Space,Str "\1101\1090\1086",Space,Str "\1089\1082\1072\1078\1077\1090",Space,RawInline "latex" "\\In{QuickCheck}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Test Prelude> quickCheck fakeProp\n*** Failed! Falsifiable (after 1 test):  \nSt Green Sirius\nSt Blue Rodnik\n\\end{code}\n"
,Para [Str "\1055\1086",Space,Str "\1091\1084\1086\1083\1095\1072\1085\1080\1102",Space,RawInline "latex" "\\In{QuickCheck}",Space,Str "\1087\1088\1086\1074\1077\1088\1080\1090",Space,Str "\1089\1074\1086\1081\1089\1090\1074\1086",Space,Str "\1089\1090\1086",Space,Str "\1088\1072\1079",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1080\1079\1084\1077\1085\1077\1085\1080\1103",Space,Str "\1101\1090\1080\1093",Space,Str "\1085\1072\1089\1090\1088\1086\1077\1082",Str ",",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100\1089\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1077\1081",Space,RawInline "latex" "\\In{quickCheckWith}",Str ",",Space,Str "\1076\1086\1087\1086\1083\1085\1080\1090\1077\1083\1100\1085\1099\1084",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1086\1084",Space,Str "\1086\1085\1072",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Arg}",Str ",",Space,Str "\1082\1086\1090\1086\1088\1086\1077",Space,Str "\1089\1086\1076\1077\1088\1078\1080\1090",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1099",Space,Str "\1090\1077\1089\1090\1080\1088\1086\1074\1072\1085\1080\1103",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1087\1088\1086\1090\1077\1089\1090\1080\1088\1091\1077\1084",Space,Str "\1087\1077\1088\1074\1086\1077",Space,Str "\1089\1074\1086\1081\1089\1090\1074\1086",Space,Str "500",Space,Str "\1088\1072\1079",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Test> quickCheckWith (stdArgs{ maxSuccess = 500 }) prop1\n+++ OK, passed 500 tests.\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1086\1074\1072\1083\1080\1089\1100",Space,Str "\1089\1090\1072\1085\1076\1072\1088\1090\1085\1099\1084\1080",Space,Str "\1085\1072\1089\1090\1088\1086\1081\1082\1072\1084\1080",Space,Str "(",RawInline "latex" "\\In{stdArgs}",Str ")",Space,Str "\1080",Space,Str "\1080\1079\1084\1077\1085\1080\1083\1080",Space,Str "\1086\1076\1080\1085",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088",Str "."]
,Header 3 [Str "\1060\1086\1088\1084\1080\1088\1086\1074\1072\1085\1080\1077",Space,Str "\1090\1077\1089\1090\1086\1074\1086\1081",Space,Str "\1074\1099\1073\1086\1088\1082\1080"]
,Para [Str "\1055\1088\1077\1076\1087\1086\1083\1086\1078\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1099",Space,Str "\1091\1074\1077\1088\1077\1085\1099",Space,Str "\1074",Space,Str "\1087\1088\1072\1074\1080\1083\1100\1085\1086\1081",Space,Str "\1088\1072\1073\1086\1090\1077",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084\1072",Space,Str "\1076\1083\1103",Space,Str "\1075\1086\1083\1091\1073\1086\1081",Space,Str "\1080",Space,Str "\1095\1105\1088\1085\1086\1081",Space,Str "\1074\1077\1090\1082\1080",Space,Str "\1084\1077\1090\1088\1086",Str ",",Space,Str "\1085\1086",Space,Str "\1089\1086\1084\1085\1077\1074\1072\1077\1084\1089\1103",Space,Str "\1074",Space,Str "\1086\1089\1090\1072\1083\1100\1085\1099\1093",Str ".",Space,Str "\1050\1072\1082",Space,Str "\1088\1072\1079",Space,Str "\1076\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1089\1083\1091\1095\1072\1103",Space,Str "\1074",Space,RawInline "latex" "\\In{QuickCheck}",Space,Str "\1087\1088\1077\1076\1091\1089\1084\1086\1090\1088\1077\1085\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{a==>b}",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1086\1073\1086\1079\1085\1072\1095\1072\1077\1090",Space,Str "\1091\1089\1083\1086\1074\1085\1091\1102",Space,Str "\1087\1088\1086\1074\1077\1088\1082\1091",Str ",",Space,Str "\1089\1074\1086\1081\1089\1090\1074\1086",Space,RawInline "latex" "\\In{b}",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1087\1088\1086\1090\1077\1089\1090\1080\1088\1086\1074\1072\1085\1086",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1074",Space,Str "\1090\1086\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Str ",",Space,Str "\1077\1089\1083\1080",Space,Str "\1089\1074\1086\1081\1089\1090\1074\1086",Space,RawInline "latex" "\\In{a}",Space,Str "\1086\1082\1072\1078\1077\1090\1089\1103",Space,Str "\1074\1077\1088\1085\1099\1084",Str ".",Space,Str "\1048\1085\1072\1095\1077",Space,Str "\1090\1077\1089\1090\1086\1074\1099\1077",Space,Str "\1076\1072\1085\1085\1099\1077",Space,Str "\1073\1091\1076\1091\1090",Space,Str "\1086\1090\1073\1088\1086\1096\1077\1085\1099",Str "."]
,RawBlock "latex" "\n\\begin{code}\nnotBlueAndBlack a b = cond a && cond b ==> prop1 a b \n    where cond (St a _) = a /= Blue && a /= Black\n\\end{code}\n"
,Para [Str "\1044\1072\1083\1077\1077",Space,Str "\1090\1077\1089\1090\1080\1088\1091\1077\1084",Space,Str "\1082\1072\1082",Space,Str "\1086\1073\1099\1095\1085\1086",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Test> quickCheck notBlueAndBlack \n+++ OK, passed 100 tests.\n\\end{code}\n"
,Para [Str "\1058\1072\1082\1078\1077",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{forAll}",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1087\1086\1076\1089\1082\1072\1079\1072\1090\1100",Space,RawInline "latex" "\\In{QuickCheck}",Space,Str "\1085\1072",Space,Str "\1082\1072\1082\1080\1093",Space,Str "\1076\1072\1085\1085\1099\1093",Space,Str "\1090\1077\1089\1090\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1089\1074\1086\1081\1089\1090\1074\1086",Str "."]
,RawBlock "latex" "\n\\begin{code}\nforAll :: (Show a, Testable prop) => Gen a -> (a -> prop) -> Property\n\\end{code}\n"
,Para [Str "\1069\1090\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1075\1077\1085\1077\1088\1072\1090\1086\1088",Space,Str "\1089\1083\1091\1095\1072\1081\1085\1099\1093",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Space,Str "\1080",Space,Str "\1089\1074\1086\1081\1089\1090\1074\1086",Str ",",Space,Str "\1082\1086\1090\1086\1088\1086\1077",Space,Str "\1079\1072\1074\1080\1089\1080\1090",Space,Str "\1086\1090",Space,Str "\1090\1077\1093",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1089\1086\1079\1076\1072\1102\1090\1089\1103",Space,Str "\1101\1090\1080\1084",Space,Str "\1075\1077\1085\1077\1088\1072\1090\1086\1088\1086\1084",Str ".",Space,Str "\1050",Space,Str "\1087\1088\1080\1084\1077\1088\1091",Str ",",Space,Str "\1087\1091\1089\1090\1100",Space,Str "\1085\1072\1089",Space,Str "\1080\1085\1090\1077\1088\1077\1089\1091\1102\1090",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1074\1089\1077",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1099\1077",Space,Str "\1087\1091\1090\1080",Space,Str "\1084\1077\1078\1076\1091",Space,Str "\1095\1077\1090\1099\1088\1100\1084\1103",Space,Str "\1089\1090\1072\1085\1094\1080\1103\1084\1080",Str ":",Space,RawInline "latex" "\\In{(St Blue De)}",Str ",",Space,RawInline "latex" "\\In{(St Red Lao)}",Str ",",Space,RawInline "latex" "\\In{(St Green Til)}",Space,Str "\1080",Space,RawInline "latex" "\\In{(St Orange Sever)}",Str ".",Space,Str "\1042\1086\1089\1087\1086\1083\1100\1079\1091\1077\1084\1089\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1077\1081",Space,RawInline "latex" "\\In{elements :: [a] -> Gen a}",Str ",",Space,Str "\1086\1085\1072",Space,Str "\1082\1072\1082",Space,Str "\1088\1072\1079",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Str ",",Space,Str "\1080",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1075\1077\1085\1077\1088\1072\1090\1086\1088",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1089\1083\1091\1095\1072\1081\1085\1099\1084",Space,Str "\1086\1073\1088\1072\1079\1086\1084",Space,Str "\1074\1099\1073\1080\1088\1072\1077\1090",Space,Str "\1083\1102\1073\1086\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1080\1079",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1089\1087\1080\1089\1082\1072",Str "."]
,RawBlock "latex" "\n\\begin{code}\ntestFor = forAll (liftA2 (,) gen gen) $ uncurry prop1\n    where gen = elements [St Blue De, St Red Lao, \n                    St Green Til, St Orange Sever]\n\\end{code}\n"
,Para [Str "\1055\1088\1086\1074\1077\1088\1080\1084",Str ",",Space,Str "\1090\1077",Space,Str "\1083\1080",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1087\1086\1087\1072\1083\1080",Space,Str "\1074",Space,Str "\1074\1099\1073\1086\1088\1082\1091",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Test> verboseCheckWith (stdArgs{ maxSuccess = 3 }) testFor\nPassed:  \n(St Blue De,St Orange Sever)\nPassed: \n(St Orange Sever,St Red Lao)\nPassed:  \n(St Red Lao,St Red Lao)\n+++ OK, passed 3 tests.\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1085\1072\1089\1090\1088\1086\1080\1090\1100",Space,Str "\1092\1086\1088\1084\1080\1088\1086\1074\1072\1085\1080\1077",Space,Str "\1074\1099\1073\1086\1088\1082\1080",Space,Str "\1077\1097\1105",Space,Str "\1086\1076\1085\1080\1084",Space,Str "\1089\1087\1086\1089\1086\1073\1086\1084",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1084\1099",Space,Str "\1089\1076\1077\1083\1072\1077\1084",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1099\1081",Space,Str "\1090\1080\1087",Space,Str "\1086\1073\1105\1088\1090\1082\1091",Space,Str "\1085\1072\1076",Space,RawInline "latex" "\\In{Station}",Space,Str "\1080",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1076\1083\1103",Space,Str "\1085\1077\1085\1075\1086",Space,Str "\1089\1074\1086\1081",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Arbitrary}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nnewtype OnlyOrange = OnlyOrange Station\nnewtype Only4      = Only4       Station\n\ninstance Arbitrary OnlyOrange where\n    arbitrary = OnlyOrange . St Orange <$> \n        elements [DnoBolota, PlBakha, Krest, Lao, Sever]\n\ninstance Arbitrary Only4 where\n    arbitrary = Only4 <$> elements [St Blue De, St Red Lao, \n                    St Green Til, St Orange Sever]\n\\end{code}\n"
,Para [Str "\1055\1086\1089\1083\1077",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1083\1077\1075\1082\1086",Space,Str "\1082\1086\1084\1073\1080\1085\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1088\1072\1079\1083\1080\1095\1085\1099\1077",Space,Str "\1074\1099\1073\1086\1088\1082\1080",Space,Str "\1087\1088\1080",Space,Str "\1090\1077\1089\1090\1080\1088\1086\1074\1072\1085\1080\1080",Str "."]
,RawBlock "latex" "\n\\begin{code}\n*Test> quickCheck $ \\(Only4 a) (Only4 b) -> prop1 a b\n+++ OK, passed 100 tests.\n*Test> quickCheck $ \\(Only4 a) (OnlyOrange b) -> prop1 a b\n+++ OK, passed 100 tests.\n*Test> quickCheck $ \\a (OnlyOrange b) -> prop2 a b\n+++ OK, passed 100 tests.\n\\end{code}\n"
,Header 3 [Str "\1050\1083\1072\1089\1089\1080\1092\1080\1082\1072\1094\1080\1103",Space,Str "\1090\1077\1089\1090\1086\1074\1099\1093",Space,Str "\1089\1083\1091\1095\1072\1077\1074"]
,Para [Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1087\1086\1087\1088\1086\1089\1080\1090\1100",Space,Str "\1091",Space,RawInline "latex" "\\In{QuickCheck}",Str ",",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1086\1085",Space,Str "\1088\1072\1079\1073\1080\1083",Space,Str "\1090\1077\1089\1090\1086\1074\1091\1102",Space,Str "\1074\1099\1073\1086\1088\1082\1091",Space,Str "\1085\1072",Space,Str "\1082\1083\1072\1089\1089\1099",Space,Str "\1080",Space,Str "\1074",Space,Str "\1082\1086\1085\1094\1077",Space,Str "\1090\1077\1089\1090\1080\1088\1086\1074\1072\1085\1080\1103",Space,Str "\1089\1086\1086\1073\1097\1080\1083",Space,Str "\1073\1099",Space,Str "\1085\1072\1084",Space,Str "\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1086\1074",Space,Str "\1074",Space,Str "\1082\1072\1082\1086\1081",Space,Str "\1082\1083\1072\1089\1089",Space,Str "\1087\1086\1087\1072\1083\1080",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1076\1077\1083\1072\1077\1090\1089\1103",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{classify}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nclassify :: Testable prop => Bool -> String -> prop -> Property\n\\end{code}\n"
,Para [Str "\1054\1085\1072",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1091\1089\1083\1086\1074\1080\1077",Space,Str "\1082\1083\1072\1089\1089\1080\1092\1080\1082\1072\1094\1080\1080",Str ",",Space,Str "\1084\1077\1090\1082\1091",Space,Str "\1082\1083\1072\1089\1089\1072",Space,Str "\1080",Space,Str "\1089\1074\1086\1081\1089\1090\1074\1086",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1090\1072\1082",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1088\1072\1079\1073\1080\1090\1100",Space,Str "\1074\1099\1073\1086\1088\1082\1091",Space,Str "\1087\1086",Space,Str "\1090\1080\1087\1072\1084",Space,Str "\1083\1080\1085\1080\1081",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nprop3 :: Station -> Station -> Property\nprop3 a@(St wa _) b@(St wb _) = \n    classify (wa == Orange || wb == Orange) \"Orange\" $\n    classify (wa == Black  || wb == Black)  \"Black\"  $\n    classify (wa == Red    || wb == Red)    \"Red\"    $ prop1 a b\n\\end{code}\n"
,Para [Str "\1055\1088\1086\1090\1077\1089\1090\1080\1088\1091\1077\1084",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Test> quickCheck prop3\n+++ OK, passed 100 tests:\n34% Red\n15% Orange\n 9% Black\n 8% Orange, Red\n 6% Black, Red\n 5% Orange, Black\n\\end{code}\n"
,Header 2 [Str "\1054\1094\1077\1085\1082\1072",Space,Str "\1073\1099\1089\1090\1088\1086\1076\1077\1081\1089\1090\1074\1080\1103",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "criterion"]
,Para [Str "\1053\1077\1076\1072\1074\1085\1086",Space,Str "\1087\1086\1103\1074\1080\1083\1072\1089\1100",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1072",Space,RawInline "latex" "\\In{unordered-containers}",Str ".",Space,Str "\1054\1085\1072",Space,Str "\1087\1088\1077\1076\1083\1072\1075\1072\1077\1090",Space,Str "\1073\1086\1083\1077\1077",Space,Str "\1101\1092\1092\1077\1082\1090\1080\1074\1085\1091\1102",Space,Str "\1088\1077\1072\1083\1080\1079\1072\1094\1080\1102",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1080\1093",Space,Str "\1089\1090\1088\1091\1082\1090\1091\1088",Space,Str "\1080\1079",Space,Str "\1089\1090\1072\1085\1076\1072\1088\1090\1085\1086\1081",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1080",Space,RawInline "latex" "\\In{containers}",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1090\1072\1084",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1085\1072\1081\1090\1080",Space,Str "\1090\1080\1087",Space,RawInline "latex" "\\In{HashSet}",Str ".",Space,Str "\1055\1086\1095\1077\1084\1091",Space,Str "\1073\1099",Space,Str "\1085\1072\1084",Space,Str "\1085\1077",Space,Str "\1079\1072\1084\1077\1085\1080\1090\1100",Space,Str "\1085\1072",Space,Str "\1085\1077\1075\1086",Space,Str "\1089\1090\1072\1085\1076\1072\1088\1090\1085\1099\1081",Space,Str "\1090\1080\1087",Space,RawInline "latex" "\\In{Set}",Str "?"]
,RawBlock "latex" "\n\\begin{code}\ncabal install unordered-containers\n\\end{code}\n"
,Para [Str "\1048\1079\1084\1077\1085\1077\1085\1080\1103",Space,Str "\1086\1090\1088\1072\1079\1103\1090\1089\1103",Space,Str "\1083\1080\1096\1100",Space,Str "\1085\1072",Space,Str "\1082\1086\1085\1090\1077\1082\1089\1090\1072\1093",Space,Str "\1086\1073\1098\1103\1074\1083\1077\1085\1080\1081",Space,Str "\1090\1080\1087\1086\1074",Str ".",Space,Str "\1069\1083\1077\1084\1077\1085\1090\1099",Space,Str "\1087\1088\1080\1085\1072\1076\1083\1078\1077\1078\1072\1097\1080\1077",Space,Str "\1084\1085\1086\1078\1077\1089\1090\1074\1091",Space,RawInline "latex" "\\In{HashSet}",Space,Str "\1076\1086\1083\1078\1085\1099",Space,Str "\1073\1099\1090\1100",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1072\1084\1080",Space,Str "\1082\1083\1072\1089\1089\1086\1074",Space,RawInline "latex" "\\In{Eq}",Space,Str "\1080",Space,RawInline "latex" "\\In{Hashable}",Str ".",Space,Str "\1053\1086\1074\1099\1081",Space,Str "\1082\1083\1072\1089\1089",Space,RawInline "latex" "\\In{Hashable}",Space,Str "\1085\1091\1078\1077\1085",Space,Str "\1076\1083\1103",Space,Str "\1091\1089\1082\1086\1088\1077\1085\1080\1103",Space,Str "\1088\1072\1073\1086\1090\1099",Space,Str "\1089",Space,Str "\1076\1072\1085\1085\1099\1084\1080",Str ".",Space,Str "\1044\1072\1074\1072\1081\1090\1077",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1101\1090\1086\1090",Space,Str "\1082\1083\1072\1089\1089",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nPrelude> :m Data.Hashable\nPrelude Data.Hashable> :i Hashable\nclass Hashable a where\n  hash :: a -> Int\n  hashWithSalt :: Int -> a -> Int\n  \t-- Defined in `Data.Hashable'\n...\n... \1084\1085\1086\1075\1086 \1101\1082\1079\1077\1084\1087\1083\1103\1088\1086\1074\n\\end{code}\n"
,Para [Str "\1054\1073\1103\1079\1072\1090\1077\1083\1100\1085\1099\1081",Space,Str "\1084\1077\1090\1086\1076",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{hash}",Space,Str "\1076\1072\1105\1090",Space,Str "\1085\1072\1084",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1086\1089\1090\1100",Space,Str "\1087\1088\1077\1086\1073\1088\1072\1079\1086\1074\1072\1090\1100",Space,Str "\1101\1083\1077\1084\1077\1085\1090",Space,Str "\1074",Space,Str "\1094\1077\1083\1086\1077",Space,Str "\1095\1080\1089\1083\1086",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1095\1080\1089\1083\1086",Space,Str "\1085\1072\1079\1099\1074\1072\1102\1090",Space,Str "\1093\1077\1096",Str "-",Str "\1082\1083\1102\1095\1086\1084",Str ".",Space,Str "\1061\1077\1096",Str "-",Str "\1082\1083\1102\1095\1080",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1091\1077\1102\1090\1089\1103",Space,Str "\1076\1083\1103",Space,Str "\1093\1088\1072\1085\1077\1085\1080\1103",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1086\1074",Space,Str "\1074",Space,Str "\1093\1077\1096",Str "-",Str "\1090\1072\1073\1083\1080\1094\1072\1093",Str ".",Space,Str "\1052\1099",Space,Str "\1085\1077",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1087\1086\1076\1088\1086\1073\1085\1086",Space,Str "\1085\1072",Space,Str "\1085\1080\1093",Space,Str "\1086\1089\1090\1072\1085\1072\1074\1083\1080\1074\1072\1090\1100\1089\1103",Str ",",Space,Str "\1086\1090\1084\1077\1090\1080\1084",Space,Str "\1083\1080\1096\1100",Space,Str "\1090\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1086\1085\1080",Space,Str "\1087\1086\1079\1074\1086\1083\1103\1102\1090",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1073\1099\1089\1090\1088\1086",Space,Str "\1080\1079\1074\1083\1077\1082\1072\1090\1100",Space,Str "\1076\1072\1085\1085\1099\1077",Space,Str "\1080\1079",Space,Str "\1082\1086\1085\1090\1077\1081\1085\1077\1088\1086\1074",Space,Str "\1080",Space,Str "\1086\1073\1085\1086\1074\1083\1103\1090\1100",Space,Str "\1076\1072\1085\1085\1099\1077",Str "."]
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1087\1088\1086\1089\1090\1086",Space,Str "\1089\1082\1086\1087\1080\1088\1091\1081\1090\1077",Space,Str "\1084\1086\1076\1091\1083\1100",Space,RawInline "latex" "\\In{Astar.hs}",Space,Str "\1080\1079\1084\1077\1085\1080\1090\1077",Space,Str "\1086\1076\1085\1091",Space,Str "\1089\1090\1088\1086\1095\1082\1091",Str ",",Space,Str "\1080",Space,Str "\1076\1086\1073\1072\1074\1100\1090\1077",Space,Str "\1077\1097\1105",Space,Str "\1086\1076\1085\1091",Space,Str "(",Str "\1074",Space,Str "\1096\1072\1087\1082\1077",Space,Str "\1084\1086\1076\1091\1083\1103",Str ")",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nimport qualified Data.HashSet as S\nimport Data.Hashable\n\\end{code}\n"
,Para [Str "\1055\1086\1087\1088\1086\1073\1091\1081\1090\1077",Space,Str "\1079\1072\1075\1088\1091\1079\1080\1090\1100",Space,Str "\1084\1086\1076\1091\1083\1100",Space,Str "\1074",Space,Str "\1080\1085\1090\1077\1088\1087\1088\1077\1090\1072\1090\1086\1088",Str ".",Space,RawInline "latex" "\\In{ghci}",Space,Str "\1074\1099\1076\1072\1089\1090",Space,Str "\1076\1083\1080\1085\1085\1099\1081",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1086\1096\1080\1073\1086\1082",Str ",",Space,Str "\1101\1090\1086",Space,Str "\8211",Space,Str "\1093\1086\1088\1086\1096\1086",Str ".",Space,Str "\1055\1086",Space,Str "\1085\1080\1084",Space,Str "\1074\1099",Space,Str "\1089\1084\1086\1078\1077\1090\1077",Space,Str "\1083\1077\1075\1082\1086",Space,Str "\1076\1086\1075\1072\1076\1072\1090\1100",Space,Str "\1074",Space,Str "\1082\1072\1082\1080\1093",Space,Str "\1084\1077\1089\1090\1072\1093",Space,Str "\1085\1077\1086\1073\1093\1086\1076\1080\1084\1086",Space,Str "\1079\1072\1084\1077\1085\1080\1090\1100",Space,RawInline "latex" "\\In{Ord a}",Space,Str "\1085\1072",Space,RawInline "latex" "\\In{(Hashable a, Eq a)}",Str "."]
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1076\1083\1103",Space,Str "\1087\1086\1080\1089\1082\1072",Space,Str "\1084\1072\1088\1096\1088\1091\1090\1086\1074",Space,Str "\1085\1072\1084",Space,Str "\1085\1077\1086\1073\1093\1086\1076\1080\1084\1086",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Hashable}",Space,Str "\1076\1083\1103",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Station}",Str ".",Space,Str "\1042",Space,Str "\1084\1086\1076\1091\1083\1077",Space,RawInline "latex" "\\In{Data.Hashable}",Space,Str "\1091\1078\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1099",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1099",Space,Str "\1076\1083\1103",Space,Str "\1084\1085\1086\1075\1080\1093",Space,Str "\1089\1090\1072\1085\1076\1072\1088\1090\1085\1099\1093",Space,Str "\1090\1080\1087\1086\1074",Str ".",Space,Str "\1052\1099",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1091\1077\1084\1089\1103",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1086\1084",Space,Str "\1076\1083\1103",Space,Str "\1094\1077\1083\1099\1093",Space,Str "\1095\1080\1089\1077\1083",Str "."]
,Para [Str "\1044\1086\1073\1072\1074\1080\1084",Space,Str "\1074",Space,RawInline "latex" "\\In{driving}",Space,Str "\1087\1086\1076\1095\1080\1085\1105\1085\1085\1099\1093",Space,Str "\1090\1080\1087\1086\1074",Space,Str "\1082\1083\1072\1089\1089",Space,RawInline "latex" "\\In{Enum}",Space,Str "\1080",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1091\1077\1084\1089\1103",Space,Str "\1080\1084",Space,Str "\1074",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1077",Space,Str "\1076\1083\1103",Space,RawInline "latex" "\\In{Hashable}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ninstance Hashable Station where\n    hash (St a b) = hash (fromEnum a, fromEnum b)\n\\end{code}\n"
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1076\1074\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1103",Space,Str "\1084\1072\1088\1096\1088\1091\1090\1072",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nimport qualified AstarSet       as S\nimport qualified AstarHashSet   as H\n...\n\nconnectSet :: Station -> Station -> Maybe [Station]\nconnectSet a b = S.search (== b) $ metroTree a b\n\nconnectHashSet :: Station -> Station -> Maybe [Station]\nconnectHashSet a b = H.search (== b) $ metroTree a b\n\\end{code}\n"
,Para [Str "\1050\1072\1082",Space,Str "\1085\1072\1084",Space,Str "\1089\1088\1072\1074\1085\1080\1090\1100",Space,Str "\1073\1099\1089\1090\1088\1086\1076\1077\1081\1089\1090\1074\1080\1077",Space,Str "\1076\1074\1091\1093",Space,Str "\1072\1083\1075\1086\1088\1080\1084\1090\1086\1074",Str "?",Space,Str "\1054\1094\1077\1085\1082\1072",Space,Str "\1073\1099\1089\1090\1088\1086\1076\1077\1081\1089\1090\1074\1080\1103",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084",Str ",",Space,Str "\1085\1072\1087\1080\1089\1072\1085\1085\1099\1093",Space,Str "\1085\1072",Space,Str "Haskell",Str ",",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1090\1072\1080\1090\1100",Space,Str "\1074",Space,Str "\1089\1077\1073\1077",Space,Str "\1087\1086\1076\1074\1086\1093\1080",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1077\1089\1083\1080",Space,Str "\1084\1099",Space,Str "\1079\1072\1087\1091\1089\1090\1080\1084",Space,Str "\1086\1073\1072",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084\1072",Space,Str "\1074",Space,Str "\1086\1076\1085\1086\1081",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1077",Str ",",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1086",Space,Str "\1089\1083\1091\1095\1080\1090\1089\1103",Space,Str "\1090\1072\1082\1072\1103",Space,Str "\1089\1080\1090\1091\1072\1094\1080\1103",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1095\1072\1089\1090\1100",Space,Str "\1076\1072\1085\1085\1099\1093",Str ",",Space,Str "\1086\1076\1080\1085\1072\1082\1086\1074\1072\1103",Space,Str "\1076\1083\1103",Space,Str "\1082\1072\1078\1076\1086\1075\1086",Space,Str "\1080\1079",Space,Str "\1084\1077\1090\1086\1076\1086\1074",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1072",Space,Str "\1086\1076\1080\1085",Space,Str "\1088\1072\1079",Str ",",Space,Str "\1072",Space,Str "\1074\1086",Space,Str "\1074\1090\1086\1088\1086\1084",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084\1077",Space,Str "\1087\1077\1088\1077\1080\1089\1087\1086\1083\1100\1079\1086\1074\1072\1085\1072",Str ",",Space,Str "\1080",Space,Str "\1085\1072\1084",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1087\1086\1082\1072\1079\1072\1090\1100\1089\1103",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1074\1090\1086\1088\1086\1081",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084",Space,Str "\1075\1086\1088\1072\1079\1076\1086",Space,Str "\1073\1099\1089\1090\1088\1077\1077",Space,Str "\1087\1077\1088\1074\1086\1075\1086",Str ".",Space,Str "\1058\1072\1082\1078\1077",Space,Str "\1085\1077\1086\1073\1093\1086\1076\1080\1084\1086",Space,Str "\1091\1095\1080\1090\1099\1074\1072\1090\1100",Space,Str "\1074\1085\1077\1096\1085\1080\1077",Space,Str "\1092\1072\1082\1090\1086\1088\1099",Str ".",Space,Str "\1058\1077\1089\1090\1086\1074\1072\1103",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1072",Space,Str "\1074\1099\1095\1080\1089\1083\1103\1077\1090\1089\1103",Space,Str "\1085\1072",Space,Str "\1086\1076\1085\1086\1084",Space,Str "\1082\1086\1084\1087\1100\1102\1090\1077\1088\1077",Str ",",Space,Str "\1080",Space,Str "\1077\1089\1083\1080",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084\1099",Space,Str "\1090\1077\1089\1090\1080\1088\1091\1102\1090\1089\1103",Space,Str "\1074",Space,Str "\1088\1072\1079\1085\1086\1077",Space,Str "\1074\1088\1077\1084\1103",Str ",",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1089\1090\1072\1090\1100\1089\1103",Space,Str "\1090\1072\1082",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1099",Space,Str "\1089\1080\1076\1077\1083\1080",Str "-",Str "\1089\1080\1076\1077\1083\1080",Space,Str "\1080",Space,Str "\1078\1076\1072\1083\1080",Space,Str "\1087\1086\1082\1072",Space,Str "\1090\1077\1089\1090",Space,Str "\1079\1072\1074\1077\1088\1096\1080\1090\1089\1103",Str ",",Space,Str "\1074",Space,Str "\1101\1090\1086",Space,Str "\1074\1088\1077\1084\1103",Space,Str "\1088\1072\1073\1086\1090\1072\1083",Space,Str "\1087\1077\1088\1074\1099\1081",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084",Str ",",Space,Str "\1087\1086\1090\1086\1084",Space,Str "\1085\1072\1084",Space,Str "\1085\1072\1076\1086\1077\1083\1086",Space,Str "\1078\1076\1072\1090\1100",Str ",",Space,Str "\1084\1099",Space,Str "\1088\1077\1096\1080\1083\1080",Space,Str "\1074\1082\1083\1102\1095\1080\1090\1100",Space,Str "\1084\1091\1079\1099\1082\1091",Str ",",Space,Str "\1087\1088\1086\1074\1077\1088\1080\1090\1100",Space,Str "\1087\1086\1095\1090\1091",Str ",",Space,Str "\1080",Space,Str "\1074\1090\1086\1088\1086\1084\1091",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084\1082\1091",Space,Str "\1076\1086\1089\1090\1072\1083\1086\1089\1100",Space,Str "\1084\1077\1085\1100\1096\1077",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1090\1077\1083\1100\1085\1099\1093",Space,Str "\1088\1077\1089\1091\1088\1089\1086\1074",Str ".",Space,Str "\1042\1089\1077",Space,Str "\1101\1090\1080",Space,Str "\1092\1072\1082\1090\1086\1088\1099",Space,Str "\1085\1077\1086\1073\1093\1086\1076\1080\1084\1086",Space,Str "\1091\1095\1080\1090\1099\1074\1072\1090\1100",Space,Str "\1087\1088\1080",Space,Str "\1090\1077\1089\1090\1080\1088\1086\1074\1072\1085\1080\1080",Str ".",Space,Str "\1050\1072\1082",Space,Str "\1088\1072\1079",Space,Str "\1076\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1080",Space,Str "\1089\1091\1097\1077\1089\1090\1074\1091\1077\1090",Space,Str "\1079\1072\1084\1077\1095\1072\1090\1077\1083\1100\1085\1072\1103",Space,Str "\1073\1080\1073\1080\1083\1080\1086\1090\1077\1082\1072",Space,RawInline "latex" "\\In{criterion}",Str "."]
,Para [Str "\1054\1085\1072",Space,Str "\1087\1088\1086\1074\1086\1076\1080\1090",Space,Str "\1089\1077\1088\1080\1102",Space,Str "\1090\1077\1089\1090\1086\1074",Space,Str "\1080",Space,Str "\1087\1086",Space,Str "\1085\1080\1084",Space,Str "\1086\1094\1077\1085\1080\1074\1072\1077\1090",Space,Str "\1087\1086\1082\1072\1079\1072\1090\1077\1083\1080",Space,Str "\1073\1099\1089\1090\1088\1086\1076\1077\1081\1089\1090\1074\1080\1103",Str ".",Space,Str "\1055\1088\1080",Space,Str "\1101\1090\1086\1084",Space,Str "\1091\1095\1080\1090\1099\1074\1072\1077\1090\1089\1103",Space,Str "\1076\1086\1089\1090\1086\1074\1077\1088\1085\1086\1089\1090\1100",Space,Str "\1090\1077\1089\1090\1086\1074",Str ".",Space,Str "\1055\1086",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1072\1084",Space,Str "\1090\1077\1089\1090\1080\1088\1086\1074\1072\1085\1080\1103",Space,Str "\1087\1086\1082\1072\1079\1072\1090\1077\1083\1080",Space,Str "\1089\1074\1077\1088\1103\1102\1090\1089\1103",Space,Str "\1084\1077\1078\1076\1091",Space,Str "\1089\1086\1073\1086\1081",Str ",",Space,Str "\1080",Space,Str "\1077\1089\1083\1080",Space,Str "\1088\1072\1079\1073\1088\1086\1089",Space,Str "\1086\1082\1072\1079\1099\1074\1072\1077\1090\1089\1103",Space,Str "\1089\1083\1080\1096\1082\1086\1084",Space,Str "\1073\1086\1083\1100\1096\1080\1084",Str ",",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1072",Space,Str "\1089\1086\1086\1073\1097\1072\1077\1090",Space,Str "\1085\1072\1084",Str ":",Space,Str "\1095\1090\1086",Str "-",Str "\1090\1086",Space,Str "\1090\1091\1090",Space,Str "\1085\1077",Space,Str "\1095\1080\1089\1090\1086",Str ",",Space,Str "\1076\1072\1085\1085\1099\1084",Space,Str "\1085\1077",Space,Str "\1089\1090\1086\1080\1090",Space,Str "\1076\1086\1074\1077\1088\1103\1090\1100",Str ".",Space,Str "\1041\1086\1083\1077\1077",Space,Str "\1090\1086\1075\1086",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1099",Space,Str "\1086\1092\1086\1088\1084\1083\1103\1102\1090\1089\1103",Space,Str "\1074",Space,Str "\1085\1072\1075\1083\1103\1076\1085\1099\1077",Space,Str "\1075\1088\1072\1092\1080\1082\1080",Str ",",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1085\1072",Space,Str "\1075\1083\1072\1079",Space,Str "\1086\1094\1077\1085\1080\1090\1100",Space,Str "\1088\1072\1089\1087\1088\1077\1076\1077\1083\1077\1085\1080\1103",Space,Str "\1080",Space,Str "\1088\1072\1079\1073\1088\1086\1089",Space,Str "\1087\1086\1082\1072\1079\1072\1090\1077\1083\1077\1081",Str "."]
,Header 3 [Str "\1054\1089\1085\1086\1074\1085\1099\1077",Space,Str "\1090\1080\1087\1099",Space,Str "criterion"]
,Para [Str "\1062\1077\1085\1090\1088\1072\1083\1100\1085\1099\1084",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1086\1084",Space,Str "\1073\1080\1073\1080\1083\1080\1086\1090\1077\1082\1080",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1082\1083\1072\1089\1089",Space,RawInline "latex" "\\In{Benchmarkable}",Str ".",Space,Str "\1054\1085",Space,Str "\1086\1073\1098\1077\1076\1080\1085\1103\1077\1090",Space,Str "\1076\1072\1085\1085\1099\1077",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1090\1077\1089\1090\1080\1088\1086\1074\1072\1090\1100",Str ".",Space,Str "\1057\1088\1077\1076\1080",Space,Str "\1085\1080\1093",Space,Str "\1095\1080\1089\1090\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "(",Str "\1090\1080\1087",Space,RawInline "latex" "\\In{Pure}",Str ")",Space,Str "\1080",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1089",Space,Str "\1087\1086\1073\1086\1095\1085\1099\1084\1080",Space,Str "\1101\1092\1092\1077\1082\1090\1072\1084\1080",Space,Str "(",Str "\1090\1080\1087",Space,RawInline "latex" "\\In{IO a}",Str ")",Str "."]
,Para [Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1087\1088\1077\1074\1088\1072\1097\1072\1090\1100",Space,Str "\1076\1072\1085\1085\1099\1077",Space,Str "\1074",Space,Str "\1090\1077\1089\1090\1099",Space,Str "(",Str "\1090\1080\1087",Space,RawInline "latex" "\\In{Benchmark}",Str ")",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{bench}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nbenchSource :: Benchmarkable b => String -> b -> Benchmark\n\\end{code}\n"
,Para [Str "\1054\1085\1072",Space,Str "\1076\1086\1073\1072\1074\1083\1103\1077\1090",Space,Str "\1082",Space,Str "\1076\1072\1085\1085\1099\1084",Space,Str "\1082\1086\1084\1084\1077\1085\1090\1072\1088\1080\1081",Space,Str "\1080",Space,Str "\1087\1088\1077\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1080\1093",Space,Str "\1074",Space,Str "\1090\1077\1089\1090\1099",Str ".",Space,Str "\1050\1072\1082",Space,Str "\1073\1099\1083\1086",Space,Str "\1086\1090\1084\1077\1095\1077\1085\1086",Str ",",Space,Str "\1089\1091\1097\1077\1089\1090\1074\1091\1077\1090",Space,Str "\1086\1076\1085\1072",Space,Str "\1090\1086\1085\1082\1086\1089\1090\1100",Space,Str "\1087\1088\1080",Space,Str "\1090\1077\1089\1090\1080\1088\1086\1074\1072\1085\1080\1080",Space,Str "\1095\1080\1089\1090\1099\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str ":",Space,Str "\1095\1080\1089\1090\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1074",Space,RawInline "latex" "\\In{Haskell}",Space,Str "\1084\1086\1075\1091\1090",Space,Str "\1088\1072\1079\1076\1077\1083\1103\1090\1100",Space,Str "\1076\1072\1085\1085\1099\1077",Space,Str "\1084\1077\1078\1076\1091",Space,Str "\1089\1086\1073\1086\1081",Str ",",Space,Str "\1087\1086\1101\1090\1086\1084\1091",Space,Str "\1076\1083\1103",Space,Str "\1085\1077\1079\1072\1074\1080\1089\1080\1084\1086\1075\1086",Space,Str "\1090\1077\1089\1090\1080\1088\1086\1074\1072\1085\1080\1103",Space,Str "\1084\1099",Space,Str "\1086\1073\1086\1088\1072\1095\1080\1074\1072\1077\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1074",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1099\1081",Space,Str "\1090\1080\1087",Space,RawInline "latex" "\\In{Pure}",Str ".",Space,Str "\1059",Space,Str "\1085\1072\1089",Space,Str "\1077\1089\1090\1100",Space,Str "\1076\1074\1072",Space,Str "\1074\1072\1088\1080\1072\1085\1090\1072",Space,Str "\1090\1077\1089\1090\1080\1088\1086\1074\1072\1085\1080\1103",Str ":"]
,Para [Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1087\1088\1086\1090\1077\1089\1090\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1087\1088\1080\1074\1077\1076\1077\1085\1080\1077",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1072",Space,Str "\1082",Space,Str "\1079\1072\1075\1086\1083\1086\1074\1086\1095\1085\1086\1081",Space,Str "\1085\1086\1088\1084\1072\1083\1100\1085\1086\1081",Space,Str "\1092\1086\1088\1084\1077",Space,Str "(",Str "\1074\1089\1087\1086\1084\1085\1080\1090\1077",Space,Str "\1075\1083\1072\1074\1091",Space,Str "\1086",Space,Str "\1083\1077\1085\1080\1074\1099\1093",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103\1093",Str ")",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nnf :: NFData b => (a -> b) -> a -> Pure\n\\end{code}\n"
,Para [Str "\1080\1083\1080",Space,Str "\1082",Space,Str "\1089\1083\1072\1073\1086\1081",Space,Str "\1079\1072\1075\1086\1083\1086\1074\1086\1095\1085\1086\1081",Space,Str "\1085\1086\1088\1084\1072\1083\1100\1085\1086\1081",Space,Str "\1092\1086\1088\1084\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nwhnf :: (a -> b) -> a -> Pure\n\\end{code}\n"
,Para [Str "\1040\1085\1072\1083\1086\1075\1080\1095\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "(",RawInline "latex" "\\In{nfIO}",Str ",",Space,RawInline "latex" "\\In{whnfIO}",Str ")",Space,Str "\1077\1089\1090\1100",Space,Str "\1080",Space,Str "\1076\1083\1103",Space,Str "\1076\1072\1085\1085\1099\1093",Space,Str "\1089",Space,Str "\1087\1086\1073\1086\1095\1085\1099\1084\1080",Space,Str "\1101\1092\1092\1077\1082\1090\1072\1084\1080",Str ".",Space,Str "\1050\1083\1072\1089\1089",Space,RawInline "latex" "\\In{NFData}",Space,Str "\1086\1073\1086\1079\1085\1072\1095\1072\1077\1090",Space,Str "\1074\1089\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str ",",Space,Str "\1076\1083\1103",Space,Str "\1082\1086\1090\1086\1088\1099\1093",Space,Str "\1079\1072\1075\1086\1083\1086\1074\1086\1095\1085\1072\1103",Space,Str "\1085\1086\1088\1084\1072\1083\1100\1085\1072\1103",Space,Str "\1092\1086\1088\1084\1072",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1072",Str ".",Space,Str "\1069\1090\1086\1090",Space,Str "\1082\1083\1072\1089\1089",Space,Str "\1087\1088\1080\1096\1105\1083",Space,Str "\1074",Space,Str "\1073\1080\1073\1080\1083\1080\1086\1090\1077\1082\1091",Space,RawInline "latex" "\\In{criterion}",Space,Str "\1080\1079",Space,Str "\1073\1080\1073\1083\1080\1086\1090\1077\1082\1080",Space,RawInline "latex" "\\In{deepseq}",Str ".",Space,Str "\1057\1090\1086\1080\1090",Space,Str "\1086\1090\1084\1077\1090\1080\1090\1100",Space,Str "\1101\1090\1091",Space,Str "\1073\1080\1073\1080\1083\1086\1090\1077\1082\1091",Str ".",Space,Str "\1042",Space,Str "\1085\1077\1081",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1105\1085",Space,Str "\1072\1085\1072\1083\1086\1075",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{seq}",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{seq}",Space,Str "\1087\1088\1080\1074\1086\1076\1080\1090",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1082",Space,Str "\1089\1083\1072\1073\1086\1081",Space,Str "\1079\1072\1075\1086\1083\1086\1074\1086\1095\1085\1086\1081",Space,Str "\1085\1086\1088\1084\1072\1083\1100\1085\1086\1081",Space,Str "\1092\1086\1088\1084\1077",Space,Str "(",Str "\1084\1099",Space,Str "\1079\1072\1075\1083\1103\1076\1099\1074\1072\1077\1084",Space,Str "\1074\1075\1083\1102\1073\1100",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1083\1080\1096\1100",Space,Str "\1085\1072",Space,Str "\1086\1076\1080\1085",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088",Str ")",Str ",",Space,Str "\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{deepseq}",Space,Str "\1087\1088\1086\1074\1086\1076\1080\1090",Space,Str "\1087\1086\1083\1085\1086\1077",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str ".",Space,Str "\1047\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1087\1088\1080\1074\1086\1076\1080\1090\1089\1103",Space,Str "\1082",Space,Str "\1079\1072\1075\1086\1083\1086\1074\1086\1095\1085\1086\1081",Space,Str "\1085\1086\1088\1084\1072\1083\1100\1085\1086\1081",Space,Str "\1092\1086\1088\1084\1077",Str "."]
,Para [Str "\1058\1072\1082\1078\1077",Space,Str "\1085\1072\1084",Space,Str "\1087\1088\1080\1075\1086\1076\1080\1090\1089\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1075\1088\1091\1087\1087\1080\1088\1086\1074\1082\1080",Space,Str "\1090\1077\1089\1090\1086\1074",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nbgroup :: String -> [Benchmark] -> Benchmark\n\\end{code}\n"
,Para [Str "\1057",Space,Str "\1077\1105",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1084\1099",Space,Str "\1086\1073\1098\1077\1076\1080\1085\1103\1077\1084",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1090\1077\1089\1090\1086\1074",Space,Str "\1074",Space,Str "\1086\1076\1080\1085",Str ",",Space,Str "\1087\1086\1076",Space,Str "\1085\1077\1082\1086\1090\1086\1088\1099\1084",Space,Str "\1080\1084\1077\1085\1077\1084",Str ".",Space,Str "\1058\1077\1089\1090\1080\1088\1086\1074\1072\1085\1080\1077",Space,Str "\1087\1088\1086\1074\1086\1076\1080\1090\1089\1103",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{defaultMain}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndefaultMain :: [Benchmark] -> IO ()\n\\end{code}\n"
,Para [Str "\1054\1085\1072",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1090\1077\1089\1090\1086\1074",Space,Str "\1080",Space,Str "\1074\1099\1087\1086\1083\1085\1103\1077\1090",Space,Str "\1080\1093",Str ".",Space,Str "\1042\1099\1087\1086\1083\1085\1077\1085\1080\1077",Space,Str "\1090\1077\1089\1090\1086\1074",Space,Str "\1079\1072\1082\1083\1102\1095\1072\1077\1090\1089\1103",Space,Str "\1074",Space,Str "\1082\1086\1084\1087\1080\1083\1103\1094\1080\1080",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1099",Str ".",Space,Str "\1055\1086\1089\1083\1077",Space,Str "\1082\1086\1084\1087\1080\1083\1103\1094\1080\1080",Space,Str "\1084\1099",Space,Str "\1087\1086\1083\1091\1095\1080\1084",Space,Str "\1080\1089\1087\1086\1083\1085\1103\1077\1084\1099\1081",Space,Str "\1092\1072\1081\1083",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1087\1088\1086\1074\1086\1076\1080\1090",Space,Str "\1090\1077\1089\1090\1080\1088\1086\1074\1072\1085\1080\1077",Space,Str "\1074",Space,Str "\1079\1072\1074\1080\1089\1080\1084\1086\1089\1090\1080",Space,Str "\1086\1090",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1086\1074",Str ",",Space,Str "\1091\1082\1072\1079\1099\1074\1072\1077\1084\1099\1093",Space,Str "\1092\1083\1072\1085\1072\1084\1080",Str ".",Space,Str "\1044\1086",Space,Str "\1085\1080\1093",Space,Str "\1084\1099",Space,Str "\1077\1097\1105",Space,Str "\1076\1086\1073\1077\1088\1105\1084\1089\1103",Str ",",Space,Str "\1072",Space,Str "\1087\1086\1082\1072",Space,Str "\1086\1087\1080\1096\1077\1084",Space,Str "\1085\1072\1096\1080",Space,Str "\1090\1077\1089\1090\1099",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n-- | Module: Speed.hs\nmodule Main where\n\nimport Criterion.Main\nimport Control.DeepSeq\n\nimport Metro\n\ninstance NFData Station where\n    rnf (St a b) = rnf (rnf a, rnf b)\n\ninstance NFData Way  where\ninstance NFData Name where\n\npair1 = (St Orange DnoBolota, St Green Prizrak)\npair2 = (St Red Lao, St Blue De)\n\ntest name search = bgroup name $ [\n            bench \"1\" $ nf (uncurry search) pair1,\n            bench \"2\" $ nf (uncurry search) pair2]\n\nmain = defaultMain [        \n        test \"Set\"  connectSet,\n        test \"Hash\" connectHashSet]\n\\end{code}\n"
,Para [Str "\1069\1082\1079\1077\1084\1087\1083\1103\1088",Space,Str "\1076\1083\1103",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{NFData}",Space,Str "\1087\1086\1093\1086\1078",Space,Str "\1085\1072",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088",Space,Str "\1076\1083\1103",Space,RawInline "latex" "\\In{Hashable}",Str ".",Space,Str "\1052\1099",Space,Str "\1090\1072\1082\1078\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1083\1080",Space,Str "\1084\1077\1090\1086\1076",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1095\1077\1088\1077\1079",Space,Str "\1084\1077\1090\1086\1076\1099",Space,Str "\1076\1083\1103",Space,Str "\1090\1080\1087\1086\1074",Str ",",Space,Str "\1080\1079",Space,Str "\1082\1086\1090\1086\1088\1099\1093",Space,Str "\1086\1085",Space,Str "\1089\1086\1089\1090\1086\1080\1090",Str ".",Space,Str "\1050\1083\1072\1089\1089",Space,RawInline "latex" "\\In{NFData}",Space,Str "\1091\1089\1090\1088\1086\1077\1085",Space,Str "\1090\1072\1082",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1076\1083\1103",Space,Str "\1090\1080\1087\1086\1074",Space,Str "\1080\1079",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Enum}",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100\1089\1103",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077\1084",Space,Str "\1087\1086",Space,Str "\1091\1084\1086\1083\1095\1072\1085\1080\1102",Space,Str "(",Str "\1082\1072\1082",Space,Str "\1074",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1076\1083\1103",Space,RawInline "latex" "\\In{Way}",Space,Str "\1080",Space,RawInline "latex" "\\In{Name}",Str ")",Str "."]
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1087\1077\1088\1077\1081\1076\1105\1084",Space,Str "\1074",Space,Str "\1082\1086\1084\1072\1085\1076\1085\1091\1102",Space,Str "\1089\1090\1088\1086\1082\1091",Str ",",Space,Str "\1087\1077\1088\1077\1082\1083\1102\1095\1080\1084\1089\1103",Space,Str "\1085\1072",Space,Str "\1076\1080\1088\1077\1082\1090\1086\1088\1080\1102",Space,Str "\1089",Space,Str "\1085\1072\1096\1080\1084",Space,Str "\1084\1086\1076\1091\1083\1077\1084",Space,Str "\1080",Space,Str "\1089\1082\1086\1084\1087\1080\1083\1080\1088\1091\1077\1084",Space,Str "\1077\1075\1086",Str ":"]
,RawBlock "latex" "\n\\begin{verbatim}\n$ ghc -O --make Speed.hs\n\\end{verbatim}\n"
,Para [Str "\1060\1083\1072\1075",Space,RawInline "latex" "\\In{-O}",Space,Str "\1075\1086\1074\1086\1088\1080\1090",Space,RawInline "latex" "\\In{ghc}",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1085\1077",Space,Str "\1086\1073\1093\1086\1076\1080\1084\1086",Space,Str "\1087\1088\1086\1074\1077\1089\1090\1080",Space,Str "\1086\1087\1090\1080\1084\1080\1079\1072\1094\1080\1102",Space,Str "\1082\1086\1076\1072",Str ".",Space,Str "\1055\1086\1103\1074\1080\1090\1089\1103",Space,Str "\1080\1089\1087\1086\1083\1085\1103\1077\1084\1099\1081",Space,Str "\1092\1072\1081\1083",Space,RawInline "latex" "\\In{Speed}",Str ".",Space,Str "\1063\1090\1086",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1076\1077\1083\1072\1090\1100",Space,Str "\1089",Space,Str "\1101\1090\1080\1084",Space,Str "\1092\1072\1081\1083\1086\1084",Str "?",Space,Str "\1059\1079\1085\1072\1090\1100",Space,Str "\1101\1090\1086",Space,Str "\1084\1086\1078\1085\1086",Str ",",Space,Str "\1079\1072\1087\1091\1089\1090\1080\1074",Space,Str "\1077\1075\1086",Space,Str "\1089",Space,Str "\1092\1083\1072\1075\1086\1084",Space,RawInline "latex" "\\In{--help}",Str ":"]
,Para [Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1091\1079\1085\1072\1090\1100",Space,Str "\1082\1072\1082\1080\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1085\1072\1084",Space,Str "\1076\1086\1089\1090\1091\1087\1085\1099",Str ",",Space,Str "\1085\1072\1073\1088\1072\1074",Str ":"]
,RawBlock "latex" "\n\\begin{verbatim}\n$ ./Speed --help\nI don't know what version I am.\nUsage: Speed [OPTIONS] [BENCHMARKS]\n  -h, -?       --help               print help, then exit\n  -G           --no-gc              do not collect garbage between iterations\n  -g           --gc                 collect garbage between iterations\n  -I CI        --ci=CI              bootstrap confidence interval\n  -l           --list               print only a list of benchmark names\n  -o FILENAME  --output=FILENAME    report file to write to\n  -q           --quiet              print less output\n               --resamples=N        number of bootstrap resamples to perform\n  -s N         --samples=N          number of samples to collect\n  -t FILENAME  --template=FILENAME  template file to use\n  -u FILENAME  --summary=FILENAME   produce a summary CSV file of all results\n  -V           --version            display version, then exit\n  -v           --verbose            print more output\nIf no benchmark names are given, all are run\nOtherwise, benchmarks are run by prefix match\n\\end{verbatim}\n"
,Para [Str "\1048\1079",Space,Str "\1101\1090\1080\1093",Space,Str "\1085\1072\1089\1090\1088\1086\1077\1082",Space,Str "\1089\1072\1084\1099\1077",Space,Str "\1080\1085\1090\1088\1077\1089\1085\1099\1077",Str ",",Space,Str "\1101\1090\1086",Space,RawInline "latex" "\\In{-s}",Space,Str "\1080",Space,RawInline "latex" "\\In{-o}",Str ".",Space,RawInline "latex" "\\In{-s}",Space,Str "\1091\1082\1072\1079\1099\1074\1072\1077\1090",Space,Str "\1095\1080\1089\1083\1086",Space,Str "\1089\1101\1084\1087\1083\1086\1074",Space,Str "\1074\1099\1073\1086\1088\1082\1077",Space,Str "(",Str "\1089\1090\1086\1083\1100\1082\1086",Space,Str "\1088\1072\1079",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1079\1072\1087\1091\1097\1077\1085",Space,Str "\1082\1072\1078\1076\1099\1081",Space,Str "\1090\1077\1089\1090",Str ")",Str ".",Space,Str "\1072",Space,RawInline "latex" "\\In{-o}",Space,Str "\1075\1086\1074\1086\1088\1080\1090",Str ",",Space,Str "\1086",Space,Str "\1090\1086\1084",Space,Str "\1074",Space,Str "\1082\1072\1082\1086\1081",Space,Str "\1092\1072\1081\1083",Space,Str "\1087\1086\1084\1077\1089\1090\1080\1090\1100",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1099",Str ".",Space,Str "\1056\1077\1079\1091\1083\1100\1090\1072\1090\1099",Space,Str "\1087\1088\1077\1076\1089\1090\1072\1074\1083\1077\1085\1099",Space,Str "\1074",Space,Str "\1074\1080\1076\1077",Space,Str "\1075\1088\1072\1092\1080\1082\1086\1074",Str ",",Space,Str "\1092\1086\1088\1084\1080\1088\1091\1077\1090\1089\1103",Space,Str "\1092\1072\1081\1083",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1086\1090\1082\1088\1099\1090\1100",Space,Str "\1074",Space,Str "\1083\1102\1073\1086\1084",Space,Str "\1073\1088\1072\1091\1079\1077\1088\1077",Str ".",Space,Str "\1047\1072\1087\1080\1089\1072\1090\1100",Space,Str "\1076\1072\1085\1085\1099\1077",Space,Str "\1074",Space,Str "\1090\1072\1073\1083\1080\1094\1091",Space,Str "(",Str "\1085\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1076\1083\1103",Space,Str "\1086\1090\1095\1105\1090\1072",Str ")",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1092\1083\1072\1075\1072",Space,RawInline "latex" "\\In{-u}",Str "."]
,Para [Str "\1055\1088\1086\1074\1077\1088\1080\1084",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1099",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n./Speed -o res.html -s 100 \n\\end{code}\n"
,Para [Str "\1054\1090\1082\1088\1086\1077\1084",Space,Str "\1092\1072\1081\1083",Space,RawInline "latex" "\\In{res.html}",Space,Str "\1080",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1075\1088\1072\1092\1080\1082\1080",Str ".",Space,Str "\1054\1082\1072\1079\1072\1083\1086\1089\1100",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1076\1083\1103",Space,Str "\1076\1072\1085\1085\1099\1093",Space,Str "\1076\1074\1091\1093",Space,Str "\1089\1083\1091\1095\1072\1077\1074",Space,Str "\1087\1077\1088\1074\1099\1081",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084",Space,Str "\1088\1072\1073\1086\1090\1072\1083",Space,Str "\1085\1077\1084\1085\1086\1075\1086",Space,Str "\1083\1091\1095\1096\1077",Str ".",Space,Str "\1053\1086",Space,Str "\1074\1099\1073\1086\1088\1082\1091",Space,Str "\1080\1079",Space,Str "\1076\1074\1091\1093",Space,Str "\1074\1072\1088\1080\1072\1085\1090\1086\1074",Space,Str "\1074\1088\1103\1076",Space,Str "\1083\1080",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1089\1095\1080\1090\1072\1090\1100",Space,Str "\1091\1073\1077\1076\1080\1090\1077\1083\1100\1085\1086\1081",Str ".",Space,Str "\1044\1072\1074\1072\1081\1090\1077",Space,Str "\1088\1072\1089\1096\1080\1088\1080\1084",Space,Str "\1074\1099\1073\1086\1088\1082\1091",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,RawInline "latex" "\\In{QuickCheck}",Str ".",Space,Str "\1052\1099",Space,Str "\1079\1072\1087\1091\1089\1090\1080\1084",Space,Str "\1087\1088\1086\1074\1077\1088\1082\1091",Space,Str "\1082\1072\1082\1086\1075\1086",Str "-",Str "\1085\1080\1073\1091\1076\1100",Space,Str "\1089\1074\1086\1081\1089\1090\1074\1072",Space,Str "\1090\1077\1084",Space,Str "\1080",Space,Str "\1076\1088\1091\1075\1080\1084",Space,Str "\1084\1077\1090\1086\1076\1086\1084",Str ".",Space,Str "\1042",Space,Str "\1080\1090\1086\1075\1077",Space,RawInline "latex" "\\In{QuickCheck}",Space,Str "\1089\1072\1084",Space,Str "\1089\1075\1077\1085\1077\1088\1080\1088\1091\1077\1090",Space,Str "\1076\1086\1089\1090\1072\1090\1086\1095\1085\1086\1077",Space,Str "\1095\1080\1089\1083\1086",Space,Str "\1089\1083\1091\1095\1072\1081\1085\1099\1093",Space,Str "\1076\1072\1085\1085\1099\1093",Str ",",Space,Str "\1072",Space,RawInline "latex" "\\In{criterion}",Space,Str "\1086\1094\1077\1085\1080\1090",Space,Str "\1073\1099\1089\1090\1088\1086\1076\1077\1081\1089\1090\1074\1080\1077",Str ".",Space,Str "\1052\1099",Space,Str "\1087\1088\1086\1074\1077\1088\1080\1084",Space,Str "\1089\1072\1084\1086\1077",Space,Str "\1087\1077\1088\1074\1086\1077",Space,Str "\1089\1074\1086\1081\1089\1090\1074\1086",Space,Str "(",Str "\1086",Space,Str "\1087\1077\1088\1077\1074\1105\1088\1085\1091\1090\1099\1093",Space,Str "\1084\1072\1088\1096\1088\1091\1090\1072\1093",Str ")",Space,Str "\1085\1072",Space,Str "\1090\1086\1084",Space,Str "\1080",Space,Str "\1076\1088\1091\1075\1086\1084",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084\1077",Str "."]
,RawBlock "latex" "\n\\begin{code}\nmodule Main where\n\nimport Control.Applicative\n\nimport Test.QuickCheck\nimport Metro\n\ninstance Arbitrary Station where\n    arbitrary = ($ s0) . foldr (.) id . fmap select <$> ints\n        where ints = vector =<< choose (0, 100)\n              s0 = St Blue De\n\nselect :: Int -> Station -> Station\nselect i s = as !! mod i (length as)\n    where as = fst <$> distMetroMap s\n\nprop :: (Station -> Station -> Maybe [Station]) \n\t-> Station -> Station -> Bool\nprop search a b = search a b == (reverse <$> search b a)\n\nmain = defaultMain [\n\tbench \"Set\"  $ quickCheck (prop connectSet),\n\tbench \"Hash\" $ quickCheck (prop connectHashSet)]\n\\end{code}\n"
,Para [Str "\1042",Space,Str "\1101\1090\1086\1084",Space,Str "\1090\1077\1089\1090\1077",Space,Str "\1084\1077\1090\1086\1076",Space,RawInline "latex" "\\In{Set}",Space,Str "\1090\1072\1082\1078\1077",Space,Str "\1086\1082\1072\1079\1072\1083\1089\1103",Space,Str "\1089\1086\1074\1089\1077\1084",Space,Str "\1085\1077\1084\1085\1086\1075\1086",Space,Str "\1073\1099\1089\1090\1088\1077\1077",Str "."]
,Para [Str "\1050\1072\1082",Space,Str "\1080\1085\1090\1077\1088\1087\1088\1077\1090\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1099",Str "?",Space,Str "\1057",Space,Str "\1083\1077\1074\1086\1081",Space,Str "\1089\1090\1086\1088\1086\1085\1099",Space,Str "\1084\1099",Space,Str "\1074\1080\1076\1080\1084",Space,Str "\1086\1094\1077\1085\1082\1091",Space,Str "\1087\1083\1086\1090\1085\1086\1089\1090\1080",Space,Str "\1074\1077\1088\1086\1103\1090\1085\1086\1089\1090\1080",Space,Str "\1088\1072\1089\1087\1088\1077\1076\1077\1083\1077\1085\1080\1103",Space,Str "\1073\1099\1089\1090\1088\1086\1076\1077\1081\1089\1090\1074\1080\1103",Str ".",Space,Str "\1055\1086\1076",Space,Str "\1075\1088\1072\1092\1080\1082\1086\1084",Space,Str "\1084\1099",Space,Str "\1074\1080\1076\1080\1084",Space,Str "\1089\1088\1077\1076\1085\1077\1077",Space,Str "(",Str "mean",Str ")",Space,Str "\1080",Space,Str "\1076\1080\1089\1087\1077\1088\1089\1080\1102",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "(",Str "std",Space,Str "dev",Str ")",Str ".",Space,Str "\1055\1086\1082\1072\1079\1072\1085\1099",Space,Str "\1090\1088\1080",Space,Str "\1095\1080\1089\1083\1072",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1085\1080\1078\1085\1103\1103",Space,Str "\1075\1088\1072\1085\1100",Space,Str "\1076\1086\1074\1077\1088\1080\1090\1077\1083\1100\1085\1086\1075\1086",Space,Str "\1080\1085\1090\1077\1088\1074\1072\1083\1072",Str ",",Space,Str "\1086\1094\1077\1085\1082\1072",Space,Str "\1074\1077\1083\1080\1095\1080\1085\1099",Space,Str "\1080",Space,Str "\1074\1077\1088\1093\1085\1103\1103",Space,Str "\1075\1088\1072\1085\1100",Space,Str "\1076\1086\1074\1077\1088\1080\1090\1077\1083\1100\1085\1086\1075\1086",Space,Str "\1080\1085\1090\1077\1088\1074\1072\1083\1072",Space,Str "(",Str "ci",Str ",",Space,Str "confidence",Space,Str "interval",Str ")",Str ".",Space,Str "\1057\1088\1077\1076\1085\1077\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1087\1086\1082\1072\1079\1099\1074\1072\1077\1090",Space,Str "\1086\1094\1077\1085\1082\1091",Space,Str "\1074\1077\1083\1080\1095\1080\1085\1099",Str ",",Space,Str "\1084\1099",Space,Str "\1075\1086\1074\1086\1088\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084",Space,Str "\1088\1072\1073\1086\1090\1072\1077\1090",Space,Str "\1087\1088\1080\1084\1077\1088\1085\1086",Space,Str "100",Space,Str "\1084\1080\1083\1083\1080\1089\1077\1082\1091\1085\1076",Str ".",Space,Str "\1044\1080\1089\1087\1077\1088\1089\1080\1103",Space,Str "\8211",Space,Str "\1101\1090\1086",Space,Str "\1088\1072\1079\1073\1088\1086\1089",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1086\1074",Space,Str "\1074\1086\1082\1088\1091\1075",Space,Str "\1089\1088\1077\1076\1085\1077\1075\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str ".",Space,Str "\1057",Space,Str "\1087\1088\1072\1074\1086\1081",Space,Str "\1089\1090\1086\1088\1086\1085\1099",Space,Str "\1084\1099",Space,Str "\1074\1080\1076\1080\1084",Space,Str "\1075\1088\1072\1092\1080\1082\1080",Space,Str "\1089",Space,Str "\1090\1086\1095\1082\1072\1084\1080",Str ".",Space,Str "\1050\1072\1078\1076\1072\1103",Space,Str "\1090\1086\1095\1082\1072",Space,Str "\1086\1073\1086\1079\1085\1072\1095\1072\1077\1090",Space,Str "\1086\1090\1076\1077\1083\1100\1085\1099\1081",Space,Str "\1079\1072\1087\1091\1089\1082",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084\1072",Str ".",Space,Str "\1050\1086\1083\1080\1095\1077\1089\1090\1074\1086",Space,Str "\1079\1072\1087\1091\1089\1082\1086\1074",Space,Str "\1089\1086\1086\1090\1074\1077\1090\1089\1090\1074\1091\1077\1090",Space,Str "\1092\1083\1072\1075\1091",Space,RawInline "latex" "\\In{-s}",Str ".",Space,Str "\1042",Space,Str "\1087\1086\1089\1083\1077\1076\1085\1077\1105",Space,Str "\1089\1090\1088\1086\1082\1077",Space,Str "\1087\1086\1076",Space,Str "\1075\1088\1072\1092\1080\1082\1086\1084",Space,RawInline "latex" "\\In{criterion}",Space,Str "\1089\1086\1086\1073\1097\1072\1077\1090",Space,Str "\1089\1090\1077\1087\1077\1085\1100",Space,Str "\1085\1077\1076\1086\1074\1077\1088\1080\1103",Space,Str "\1082",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1072\1084",Str ".",Space,Str "\1042",Space,Str "\1087\1086\1089\1083\1077\1076\1085\1077\1084",Space,Str "\1086\1087\1099\1090\1077",Space,Str "\1101\1090\1086\1090",Space,Str "\1087\1086\1082\1072\1079\1072\1090\1077\1083\1100",Space,Str "\1076\1086\1089\1090\1072\1090\1086\1095\1085\1086",Space,Str "\1074\1099\1089\1086\1082",Str ".",Space,Str "\1042\1086\1079\1084\1086\1078\1085\1086",Space,Str "\1101\1090\1086",Space,Str "\1089\1074\1103\1079\1072\1085\1086",Space,Str "\1089",Space,Str "\1090\1077\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1085\1072\1096",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084",Space,Str "\1074\1099\1073\1086\1088\1072",Space,Str "\1089\1083\1091\1095\1072\1081\1085\1099\1093",Space,Str "\1089\1090\1072\1085\1094\1080\1081",Space,Str "\1080\1084\1077\1077\1090",Space,Str "\1089\1080\1083\1100\1085\1099\1081",Space,Str "\1088\1072\1079\1073\1088\1086\1089",Space,Str "\1087\1086",Space,Str "\1074\1088\1077\1084\1077\1085\1080",Str ".",Space,Str "\1042\1077\1076\1100",Space,Str "\1089\1085\1072\1095\1072\1083\1072",Space,Str "\1084\1099",Space,Str "\1075\1077\1085\1077\1088\1080\1088\1091\1077\1084",Space,Str "\1089\1083\1091\1072\1081\1085\1086\1077",Space,Str "\1095\1080\1089\1083\1086",Space,RawInline "latex" "\\In{n}",Space,Str "\1086\1090",Space,Str "0",Space,Str "\1076\1086",Space,Str "100",Str ",",Space,Str "\1080",Space,Str "\1079\1072\1090\1077\1084",Space,Str "\1085\1072\1095\1080\1085\1072\1077\1084",Space,Str "\1073\1083\1091\1078\1076\1072\1090\1100",Space,Str "\1087\1086",Space,Str "\1082\1072\1088\1090\1077",Space,Str "\1086\1090",Space,Str "\1085\1072\1095\1072\1083\1100\1085\1086\1081",Space,Str "\1090\1086\1095\1082\1077",Space,RawInline "latex" "\\In{n}",Space,Str "\1088\1072\1079",Str ".",Space,Str "\1058\1072\1082\1078\1077",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1074\1083\1080\1103\1090\1100",Space,Str "\1090\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1074\1088\1077\1084\1103",Space,Str "\1088\1072\1073\1086\1090\1099",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084\1072",Space,Str "\1079\1072\1074\1080\1089\1080\1090",Space,Str "\1086\1090",Space,Str "\1087\1086\1083\1086\1078\1077\1085\1080\1103",Space,Str "\1089\1090\1072\1085\1094\1080\1081",Str "."]
,Header 2 [Str "\1050\1088\1072\1090\1082\1086\1077",Space,Str "\1089\1086\1076\1077\1088\1078\1072\1085\1080\1077"]
,Para [Str "\1042",Space,Str "\1101\1090\1086\1081",Space,Str "\1075\1083\1072\1074\1077",Space,Str "\1084\1099",Space,Str "\1088\1077\1072\1083\1080\1079\1086\1074\1072\1083\1080",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084",Space,Str "\1101\1074\1088\1080\1089\1090\1080\1095\1077\1089\1082\1086\1075\1086",Space,Str "\1087\1086\1080\1089\1082\1072",Space,Str "\1040",Str "*",Str ".",Space,Str "\1058\1072\1082\1078\1077",Space,Str "\1084\1099",Space,Str "\1091\1079\1085\1072\1083\1080",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1089\1090\1072\1085\1076\1072\1088\1090\1085\1099\1093",Space,Str "\1089\1090\1088\1091\1082\1090\1091\1088",Space,Str "\1076\1072\1085\1085\1099\1093",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1084\1085\1086\1078\1077\1089\1090\1074\1072",Space,Str "\1080",Space,Str "\1086\1095\1077\1088\1077\1076\1080",Space,Str "\1089",Space,Str "\1087\1088\1080\1086\1088\1080\1090\1077\1090\1086\1084",Space,Str "\1080",Space,Str "\1086\1089\1074\1077\1078\1080\1083\1080",Space,Str "\1074",Space,Str "\1087\1072\1084\1103\1090\1080",Space,Str "\1083\1077\1085\1080\1074\1099\1077",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Str "."]
,Para [Str "\1052\1099",Space,Str "\1085\1072\1091\1095\1080\1083\1080\1089\1100",Space,Str "\1087\1088\1086\1074\1077\1088\1103\1090\1100",Space,Str "\1089\1074\1086\1081\1089\1090\1074\1072",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084",Space,Str "(",RawInline "latex" "\\In{QuickCheck}",Str ")",Str ",",Space,Str "\1072",Space,Str "\1090\1072\1082\1078\1077",Space,Str "\1086\1094\1077\1085\1080\1074\1072\1090\1100",Space,Str "\1073\1099\1089\1090\1088\1086\1076\1077\1081\1089\1090\1074\1080\1077",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084",Space,Str "(",RawInline "latex" "\\In{criterion}",Str ")",Str "."]
,Header 2 [Str "\1059\1087\1088\1072\1078\1085\1077\1085\1080\1103"]
,BulletList
 [[Para [Str "\1071",Space,Str "\1075\1086\1074\1086\1088\1080\1083",Space,Str "\1086",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1076\1074\1072",Space,Str "\1074\1072\1088\1080\1072\1085\1090\1072",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084\1086\1074",Space,Str "\1076\1072\1102\1090",Space,Str "\1086\1076\1080\1085\1072\1082\1086\1074\1099\1077",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1099",Str ",",Space,Str "\1085\1086",Space,Str "\1090\1072\1082",Space,Str "\1083\1080",Space,Str "\1101\1090\1086",Space,Str "\1085\1072",Space,Str "\1089\1072\1084\1086\1084",Space,Str "\1076\1077\1083\1077",Str "?",Space,Str "\1055\1088\1086\1074\1077\1088\1100\1090\1077",Space,Str "\1101\1090\1086",Space,Str "\1074",Space,RawInline "latex" "\\In{QuickCheck}",Str "."]]
 ,[Para [Str "\1040\1083\1075\1086\1088\1080\1090\1084",Space,Str "\1101\1074\1088\1080\1089\1090\1080\1095\1077\1089\1082\1086\1075\1086",Space,Str "\1087\1086\1080\1089\1082\1072",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1087\1088\1080\1084\1077\1085\1103\1090\1089\1103",Space,Str "\1085\1077",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1076\1083\1103",Space,Str "\1087\1086\1080\1089\1082\1072",Space,Str "\1084\1072\1088\1096\1088\1091\1090\1086\1074",Space,Str "\1085\1072",Space,Str "\1082\1072\1088\1090\1077",Str ".",Space,Str "\1063\1072\1089\1090\1086",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084",Space,Str "\1040",Str "*",Space,Str "\1087\1088\1080\1084\1077\1085\1103\1077\1090\1089\1103",Space,Str "\1074",Space,Str "\1080\1075\1088\1072\1093",Str ".",Space,Str "\1042\1089\1090\1088\1086\1081\1090\1077",Space,Str "\1101\1090\1086\1090",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084",Space,Str "\1074",Space,Str "\1080\1075\1088\1091",Space,Str "\1087\1103\1090\1085\1072\1096\1082\1080",Space,Str "(",Str "\1075\1083\1072\1074\1072",Space,Str "13",Str ")",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1080\1075\1088\1086\1082",Space,Str "\1079\1072\1087\1091\1090\1072\1083\1089\1103",Space,Str "\1080",Space,Str "\1085\1077",Space,Str "\1079\1085\1072\1077\1090",Space,Str "\1082\1072\1082",Space,Str "\1093\1086\1076\1080\1090\1100",Str ",",Space,Str "\1086\1085",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1087\1086\1087\1088\1086\1089\1080\1090\1100",Space,Str "\1091",Space,Str "\1082\1086\1084\1087\1100\1102\1090\1077\1088\1072",Space,Str "\1089\1086\1074\1077\1090",Str ".",Space,Str "\1042",Space,Str "\1101\1090\1086\1081",Space,Str "\1079\1072\1076\1072\1095\1077",Space,Str "\1072\1083\1100\1090\1077\1088\1085\1072\1090\1080\1074\1099",Str "~",Str "\8211",Space,Str "\1101\1090\1086",Space,Str "\1074\1077\1088\1096\1080\1085\1099",Space,Str "\1075\1088\1072\1092\1072",Str ",",Space,Str "\1089\1086\1089\1077\1076\1085\1080\1077",Space,Str "\1074\1077\1088\1096\1080\1085\1099",Str "~",Str "\8211",Space,Str "\1101\1090\1086",Space,Str "\1090\1077",Space,Str "\1074\1077\1088\1096\1080\1085\1099",Str ",",Space,Str "\1074",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1087\1086\1087\1072\1089\1090\1100",Space,Str "\1079\1072",Space,Str "\1086\1076\1080\1085",Space,Str "\1093\1086\1076",Str "."]
  ,Para [Str "\1055\1086\1076\1089\1082\1072\1079\1082\1072",Str ":",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1091\1081\1090\1077\1089\1100",Space,Str "\1084\1072\1085\1093\1101\1090\1090\1077\1085\1089\1082\1080\1084",Space,Str "\1088\1072\1089\1089\1090\1086\1103\1085\1080\1077\1084",Str "."]]
 ,[Para [Str "\1054\1094\1077\1085\1080\1090\1077",Space,Str "\1101\1092\1092\1077\1082\1090\1080\1074\1085\1086\1089\1090\1100",Space,Str "\1076\1074\1091\1093",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084\1086\1074",Space,Str "\1087\1086\1080\1089\1082\1072",Space,Str "\1074",Space,Str "\1080\1075\1088\1077",Space,Str "\1087\1103\1090\1085\1072\1096\1082\1080",Str ".",Space,Str "\1056\1072\1089\1089\1084\1086\1090\1088\1080\1090\1077",Space,Str "\1079\1072\1074\1080\1089\1080\1084\1086\1089\1090\1100",Space,Str "\1073\1099\1089\1090\1088\1086\1076\1077\1081\1089\1090\1074\1080\1103",Space,Str "\1086\1090",Space,Str "\1089\1090\1077\1087\1077\1085\1080",Space,Str "\1089\1083\1086\1078\1085\1086\1089\1090\1080",Space,Str "\1080\1075\1088\1099",Str "."]]]]