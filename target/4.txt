[Header 1 [Str "\1044\1077\1082\1083\1072\1088\1072\1090\1080\1074\1085\1099\1081",Space,Str "\1080",Space,Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1086\1085\1085\1099\1081",Space,Str "\1089\1090\1080\1083\1100"]
,Para [Str "\1042",Space,Str "Haskell",Space,Str "\1089\1091\1097\1077\1089\1090\1074\1091\1077\1090",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1074\1089\1090\1088\1086\1077\1085\1085\1099\1093",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1081",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1086\1073\1083\1077\1075\1095\1072\1102\1090",Space,Str "\1087\1086\1089\1090\1088\1086\1077\1085\1080\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1080",Space,Str "\1076\1077\1083\1072\1102\1090",Space,Str "\1082\1086\1076",Space,Str "\1073\1086\1083\1077\1077",Space,Str "\1085\1072\1075\1083\1103\1076\1085\1099\1084",Str ".",Space,Str "\1048\1093",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1088\1072\1079\1076\1077\1083\1080\1090\1100",Space,Str "\1085\1072",Space,Str "\1076\1074\1072",Space,Str "\1074\1080\1076\1072",Str ":",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1087\1086\1076\1076\1077\1088\1078\1080\1074\1072\1102\1090",Space,Emph [Str "\1076\1077\1082\1083\1072\1088\1072\1090\1080\1074\1085\1099\1081",Space,Str "\1089\1090\1080\1083\1100"],Space,Str "(",Str "declarative",Space,Str "style",Str ")",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str ",",Space,Str "\1080",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1087\1086\1076\1076\1077\1088\1078\1080\1074\1072\1102\1090",Space,Emph [Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1086\1085\1085\1099\1081",Space,Str "\1089\1090\1080\1083\1100"],Space,Str "(",Str "expression",Space,Str "style",Str ")",Str "."]
,Para [Str "\1063\1090\1086",Space,Str "\1101\1090\1086",Space,Str "\1079\1072",Space,Str "\1089\1090\1080\1083\1080",Str "?",Space,Str "\1042",Space,Str "\1076\1077\1082\1083\1072\1088\1072\1090\1080\1074\1085\1086\1084",Space,Str "\1089\1090\1080\1083\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1073\1086\1083\1100\1096\1077",Space,Str "\1087\1086\1093\1086\1078\1080",Space,Str "\1085\1072",Space,Str "\1084\1072\1090\1077\1084\1072\1090\1080\1095\1077\1089\1082\1091\1102",Space,Str "\1085\1086\1090\1072\1094\1080\1102",Str ",",Space,Str "\1089\1083\1086\1074\1085\1086",Space,Str "\1101\1090\1086",Space,Str "\1087\1088\1077\1076\1083\1086\1078\1077\1085\1080\1103",Space,Str "\1103\1079\1099\1082\1072",Str ".",Space,Str "\1042",Space,Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1086\1085\1085\1086\1084",Space,Str "\1089\1090\1080\1083\1077",Space,Str "\1084\1099",Space,Str "\1089\1090\1088\1086\1080\1084",Space,Str "\1080\1079",Space,Str "\1084\1072\1083\1077\1085\1100\1082\1080\1093",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1081",Space,Str "\1073\1086\1083\1077\1077",Space,Str "\1089\1083\1086\1078\1085\1099\1077",Str ",",Space,Str "\1087\1088\1080\1084\1077\1085\1103\1077\1084",Space,Str "\1082",Space,Str "\1101\1090\1080\1084",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103\1084",Space,Str "\1076\1088\1091\1075\1080\1077",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Space,Str "\1080",Space,Str "\1089\1090\1088\1086\1080\1084",Space,Str "\1077\1097\1105",Space,Str "\1073\1086\1083\1100\1096\1080\1077",Str "."]
,Para [Str "\1042",Space,Str "Haskell",Space,Str "\1077\1089\1090\1100",Space,Str "\1087\1086\1083\1085\1086\1094\1077\1085\1085\1072\1103",Space,Str "\1087\1086\1076\1076\1077\1088\1078\1082\1072",Space,Str "\1080",Space,Str "\1090\1086\1075\1086",Space,Str "\1080",Space,Str "\1076\1088\1091\1075\1086\1075\1086",Space,Str "\1089\1090\1080\1083\1103",Str ",",Space,Str "\1087\1086\1101\1090\1086\1084\1091",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1094\1080\1080",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1084\1099",Space,Str "\1088\1072\1089\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1074",Space,Str "\1101\1090\1086\1081",Space,Str "\1075\1083\1072\1074\1077",Space,Str "\1073\1091\1076\1091\1090",Space,Str "\1087\1086",Space,Str "\1089\1084\1099\1089\1083\1091",Space,Str "\1076\1091\1073\1083\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1076\1088\1091\1075",Space,Str "\1076\1088\1091\1075\1072",Str ".",Space,Str "\1042\1099\1073\1086\1088",Space,Str "\1089\1090\1080\1083\1103",Space,Str "\1089\1082\1086\1088\1077\1077",Space,Str "\1076\1077\1083\1086",Space,Str "\1074\1082\1091\1089\1072",Str ",",Space,Str "\1089\1091\1097\1077\1089\1090\1074\1091\1102\1090",Space,Str "\1087\1088\1080\1074\1077\1088\1078\1077\1085\1094\1099",Space,Str "\1080",Space,Str "\1090\1086\1075\1086",Space,Str "\1080",Space,Str "\1076\1088\1091\1075\1086\1075\1086",Space,Str "\1089\1090\1080\1083\1103",Str ",",Space,Str "\1087\1086\1101\1090\1086\1084\1091",Space,Str "\1088\1072\1079\1088\1072\1073\1086\1090\1095\1080\1082\1080",Space,Str "Haskell",Space,Str "\1085\1077",Space,Str "\1093\1086\1090\1077\1083\1080",Space,Str "\1085\1080\1082\1086\1075\1086",Space,Str "\1086\1075\1088\1072\1085\1080\1095\1080\1074\1072\1090\1100",Str "."]
,Header 2 [Str "\1051\1086\1082\1072\1083\1100\1085\1099\1077",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1099\1077"]
,Para [Str "\1042\1089\1087\1086\1084\1085\1080\1084",Space,Str "\1092\1086\1088\1084\1091\1083\1091",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Space,Str "\1087\1083\1086\1097\1072\1076\1080",Space,Str "\1090\1088\1077\1091\1075\1086\1083\1100\1085\1080\1082\1072",Space,Str "\1087\1086",Space,Str "\1090\1088\1105\1084",Space,Str "\1089\1090\1086\1088\1086\1085\1072\1084",Str ":"]
,Para [Math DisplayMath "S = \\sqrt{p \\cdot (p - a) \\cdot (p - b) \\cdot (p - c)}"]
,Para [Str "\1043\1076\1077",Space,Math InlineMath "a",Str ",",Space,Math InlineMath "b",Space,Str "\1080",Space,Math InlineMath "c",Space,Str "\8211",Space,Str "\1076\1083\1080\1085\1099",Space,Str "\1089\1090\1086\1088\1086\1085",Space,Str "\1090\1088\1077\1091\1075\1086\1083\1100\1085\1080\1082\1072",Str ",",Space,Str "\1072",Space,Math InlineMath "p",Space,Str "\1101\1090\1086",Space,Str "\1087\1086\1083\1091\1087\1077\1088\1080\1084\1077\1090\1088",Str "."]
,Para [Str "\1050\1072\1082",Space,Str "\1073\1099",Space,Str "\1084\1099",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1083\1080",Space,Str "\1101\1090\1091",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1090\1077\1084\1080",Space,Str "\1089\1088\1077\1076\1089\1090\1074\1072\1084\1080",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1077\1089\1090\1100",Str "?",Space,Str "\1053\1072\1074\1077\1088\1085\1086\1077",Str ",",Space,Str "\1084\1099",Space,Str "\1073\1099",Space,Str "\1085\1072\1087\1080\1089\1072\1083\1080",Space,Str "\1090\1072\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nsquare a b c = sqrt (p a b c * (p a b c - a) * (p a b c - b) * (p a b c - c))\n\np a b c = (a + b + c) / 2\n\\end{code}\n"
,Para [Str "\1057\1086\1075\1083\1072\1089\1080\1090\1077\1089\1100",Space,Str "\1101\1090\1086",Space,Str "\1085\1077",Space,Str "\1084\1085\1086\1075\1080\1084",Space,Str "\1083\1091\1095\1096\1077",Space,Str "\1095\1077\1084",Space,Str "\1088\1077\1096\1077\1085\1080\1077",Space,Str "\1074",Space,Str "\1083\1086\1073",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nsquare a b c = sqrt ((a+b+c)/2 * ((a+b+c)/2 - a) * ((a+b+c)/2 - b) * ((a+b+c)/2 - c))\n\\end{code}\n"
,Para [Str "\1048",Space,Str "\1074",Space,Str "\1090\1086\1084",Space,Str "\1080",Space,Str "\1074",Space,Str "\1076\1088\1091\1075\1086\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1085\1072\1084",Space,Str "\1087\1088\1080\1093\1086\1076\1080\1090\1089\1103",Space,Str "\1076\1091\1073\1083\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Str ",",Space,Str "\1085\1072\1084",Space,Str "\1073\1099",Space,Str "\1093\1086\1090\1077\1083\1086\1089\1100",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1074\1099\1075\1083\1103\1076\1077\1083\1086",Space,Str "\1090\1072\1082",Space,Str "\1078\1077",Str ",",Space,Str "\1082\1072\1082",Space,Str "\1080",Space,Str "\1086\1073\1099\1095\1085\1086\1077",Space,Str "\1084\1072\1090\1077\1084\1072\1090\1080\1095\1077\1089\1082\1086\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nsquare a b c = sqrt (p * (p - a) * (p - b) * (p - c))\n\np = (a + b + c) / 2\n\\end{code}\n"
,Para [Str "\1053\1072\1084",Space,Str "\1085\1091\1078\1085\1086",Str ",",Space,Str "\1095\1090\1086\1073\1099",Space,RawInline "latex" "\\In{p}",Space,Str "\1079\1085\1072\1083\1086",Str ",",Space,Str "\1095\1090\1086",Space,RawInline "latex" "\\In{a}",Str ",",Space,RawInline "latex" "\\In{b}",Space,Str "\1080",Space,RawInline "latex" "\\In{c}",Space,Str "\1073\1077\1088\1091\1090\1089\1103",Space,Str "\1080\1079",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1074",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{square}",Str ".",Space,Str "\1042",Space,Str "\1101\1090\1086\1084",Space,Str "\1085\1072\1084",Space,Str "\1087\1086\1084\1086\1075\1091\1090",Space,Str "\1083\1086\1082\1072\1083\1100\1085\1099\1077",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1099\1077",Str "."]
,Header 3 [Str "where",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103"]
,Para [Str "\1042",Space,Str "\1076\1077\1082\1083\1072\1088\1072\1090\1080\1074\1085\1086\1084",Space,Str "\1089\1090\1080\1083\1077",Space,Str "\1076\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1087\1088\1077\1076\1091\1089\1084\1086\1090\1088\1077\1085\1099",Space,RawInline "tex" "\\KeyWord{where}",Space,RawInline "latex" "\\In{where}",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Str ".",Space,Str "\1054\1085\1080",Space,Str "\1087\1080\1096\1091\1090\1089\1103",Space,Str "\1090\1072\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nsquare a b c = sqrt (p * (p - a) * (p - b) * (p - c))\n    where p = (a + b + c) / 2\n\\end{code}\n"
,Para [Str "\1048\1083\1080",Space,Str "\1090\1072\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nsquare a b c = sqrt (p * (p - a) * (p - b) * (p - c)) where \n    p = (a + b + c) / 2\n\\end{code}\n"
,Para [Str "\1047\1072",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1089\1083\1077\1076\1091\1077\1090",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1086\1077",Space,Str "\1089\1083\1086\1074\1086",Space,RawInline "latex" "\\In{where}",Str ",",Space,Str "\1082\1086\1090\1086\1088\1086\1077",Space,Str "\1074\1074\1086\1076\1080\1090",Space,Str "\1083\1086\1082\1072\1083\1100\1085\1099\1077",Space,Str "\1080\1084\1077\1085\1072",Str "-",Str "\1089\1080\1085\1086\1085\1080\1084\1099",Str ".",Space,Str "\1055\1088\1080",Space,Str "\1101\1090\1086\1084",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1099",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1074\1082\1083\1102\1095\1077\1085\1099",Space,Str "\1074",Space,Str "\1086\1073\1083\1072\1089\1090\1100",Space,Str "\1074\1080\1076\1080\1084\1086\1089\1090\1080",Space,Str "\1080\1084\1105\1085",Str ".",Space,Str "\1057\1080\1085\1086\1085\1080\1084\1086\1074",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1073\1099\1090\1100",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nsquare a b c = sqrt (p * pa * pb * pc)\n    where p  = (a + b + c) / 2\n          pa = p - a\n          pb = p - b\n          pc = p - c\n\\end{code}\n"
,Para [Str "\1054\1090\1084\1077\1090\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1086\1090\1089\1090\1091\1087\1099",Space,Str "\1086\1073\1103\1079\1072\1090\1077\1083\1100\1085\1099",Str ".",Space,Str "Haskell",Space,Str "\1087\1086",Space,Str "\1086\1090\1089\1090\1091\1087\1072\1084",Space,Str "\1087\1086\1085\1080\1084\1072\1077\1090",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1101\1090\1080",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Space,Str "\1086\1090\1085\1086\1089\1103\1090\1089\1103",Space,Str "\1082",Space,RawInline "latex" "\\In{where}",Str "."]
,Para [Str "\1050\1072\1082",Space,Str "\1080",Space,Str "\1074",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1086\1073\1098\1103\1074\1083\1077\1085\1080\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1087\1086\1088\1103\1076\1086\1082",Space,Str "\1089\1083\1077\1076\1086\1074\1072\1085\1080\1103",Space,Str "\1083\1086\1082\1072\1083\1100\1085\1099\1093",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1099\1093",Space,Str "\1074",Space,RawInline "latex" "\\In{where}",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1080",Space,Str "\1085\1077",Space,Str "\1074\1072\1078\1077\1085",Str ".",Space,Str "\1043\1083\1072\1074\1085\1086\1077",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1074",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103\1093",Space,Str "\1089\1087\1088\1072\1074\1072",Space,Str "\1086\1090",Space,Str "\1079\1085\1072\1082\1072",Space,Str "\1088\1072\1074\1085\1086",Space,Str "\1084\1099",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1083\1080\1089\1100",Space,Str "\1080\1084\1077\1085\1072\1084\1080",Space,Str "\1080\1079",Space,Str "\1089\1087\1080\1089\1082\1072",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1074",Space,Str "\1080\1089\1093\1086\1076\1085\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1080\1083\1080",Space,Str "\1076\1088\1091\1075\1080\1084\1080",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1105\1085\1085\1099\1084\1080",Space,Str "\1080\1084\1077\1085\1072\1084\1080",Str ".",Space,Str "\1051\1086\1082\1072\1083\1100\1085\1099\1077",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1099\1077",Space,Str "\1074\1080\1076\1085\1099",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1074",Space,Str "\1087\1088\1077\1076\1077\1083\1072\1093",Space,Str "\1090\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1074",Space,Str "\1082\1086\1090\1086\1088\1086\1081",Space,Str "\1086\1085\1080",Space,Str "\1074\1074\1086\1076\1103\1090\1089\1103",Str "."]
,Para [Str "\1063\1090\1086",Space,Str "\1080\1085\1090\1077\1088\1077\1089\1085\1086",Str ",",Space,Str "\1089\1083\1077\1074\1072",Space,Str "\1086\1090",Space,Str "\1079\1085\1072\1082\1072",Space,Str "\1088\1072\1074\1085\1086",Space,Str "\1074",Space,RawInline "latex" "\\In{where}",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103\1093",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1087\1088\1086\1074\1086\1076\1080\1090\1100",Space,Str "\1076\1077\1082\1086\1084\1087\1086\1079\1080\1094\1080\1102",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Str ",",Space,Str "\1090\1072\1082\1078\1077",Space,Str "\1082\1072\1082",Space,Str "\1080",Space,Str "\1074",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1072\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\npred :: Nat -> Nat\npred x = y\n    where (Succ y) = x\n\\end{code}\n"
,Para [Str "\1069\1090\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1076\1077\1083\1072\1077\1090",Space,Str "\1090\1086\1078\1077",Space,Str "\1089\1072\1084\1086\1077",Space,Str "\1095\1090\1086",Space,Str "\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1103"]
,RawBlock "latex" "\n\\begin{code}\npred :: Nat -> Nat\npred (Succ y) = y\n\\end{code}\n"
,Para [Str "\1042",Space,RawInline "latex" "\\In{where}",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103\1093",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1090\1100",Space,Str "\1085\1086\1074\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1072",Space,Str "\1090\1072\1082\1078\1077",Space,Str "\1074\1099\1087\1080\1089\1099\1074\1072\1090\1100",Space,Str "\1080\1093",Space,Str "\1090\1080\1087\1099",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nadd2 x = succ (succ x)\n    where succ :: Int -> Int\n          succ x = x + 1\n\\end{code}\n"
,Para [Str "\1040",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1080",Space,Str "\1085\1077",Space,Str "\1074\1099\1087\1080\1089\1099\1074\1072\1090\1100",Str ",",Space,Str "\1082\1086\1084\1087\1080\1083\1103\1090\1086\1088",Space,Str "\1076\1086\1075\1072\1076\1072\1077\1090\1089\1103",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nadd2 x = succ (succ x)\n    where succ x = x + 1\n\\end{code}\n"
,Para [Str "\1053\1086",Space,Str "\1080\1085\1086\1075\1076\1072",Space,Str "\1101\1090\1086",Space,Str "\1073\1099\1074\1072\1077\1090",Space,Str "\1087\1086\1083\1077\1079\1085\1086",Str ",",Space,Str "\1087\1088\1080",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1086\1074\1072\1085\1080\1080",Space,Str "\1082\1083\1072\1089\1089\1086\1074",Space,Str "\1090\1080\1087\1086\1074",Str ",",Space,Str "\1076\1083\1103",Space,Str "\1080\1079\1073\1077\1078\1072\1085\1080\1103",Space,Str "\1085\1077\1086\1087\1088\1077\1076\1077\1083\1105\1085\1085\1086\1089\1090\1080",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1103",Str "."]
,Para [Str "\1055\1088\1080\1074\1077\1076\1105\1084",Space,Str "\1077\1097\1105",Space,Str "\1086\1076\1080\1085",Space,Str "\1087\1088\1080\1084\1077\1088",Str ".",Space,Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1092\1080\1083\1100\1090\1088\1072\1094\1080\1080",Space,Str "\1089\1087\1080\1089\1082\1086\1074",Str ",",Space,Str "\1086\1085\1072",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1072",Space,Str "\1074",Space,RawInline "latex" "\\In{Prelude}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nfilter :: (a -> Bool) -> [a] -> [a]\nfilter  p  []     = []\nfilter  p  (x:xs) = if p x then x : rest else rest\n    where rest = filter p xs\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1083\1080",Space,Str "\1083\1086\1082\1072\1083\1100\1085\1091\1102",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1091\1102",Space,RawInline "latex" "\\In{rest}",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1091\1082\1072\1079\1099\1074\1072\1077\1090",Space,Str "\1085\1072",Space,Str "\1088\1077\1082\1091\1088\1089\1080\1074\1085\1099\1081",Space,Str "\1074\1099\1079\1086\1074",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1085\1072",Space,Str "\1086\1089\1090\1072\1074\1096\1077\1081\1089\1103",Space,Str "\1095\1072\1089\1090\1080",Space,Str "\1089\1087\1080\1089\1082\1072",Str "."]
,Para [RawInline "latex" "\\In{where}",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1102\1090\1089\1103",Space,Str "\1076\1083\1103",Space,Str "\1082\1072\1078\1076\1086\1075\1086",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1103",Space,Str "\1074",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\neven :: Nat -> Bool\neven Zero        = res\n    where res = True\neven (Succ Zero) = res\n    where res = False\neven x = even res\n    where (Succ (Succ res)) = x\n\\end{code}\n"
,Para [Str "\1050\1086\1085\1077\1095\1085\1086",Space,Str "\1074",Space,Str "\1101\1090\1086\1084",Space,Str "\1087\1088\1080\1084\1077\1088\1077",Space,RawInline "latex" "\\In{where}",Space,Str "\1085\1077",Space,Str "\1085\1091\1078\1085\1099",Str ",",Space,Str "\1085\1086",Space,Str "\1079\1076\1077\1089\1100",Space,Str "\1086\1085\1080",Space,Str "\1087\1088\1080\1074\1077\1076\1077\1085\1099",Space,Str "\1076\1083\1103",Space,Str "\1080\1083\1083\1102\1089\1090\1088\1072\1094\1080\1080",Space,Str "\1087\1088\1080\1074\1103\1079\1082\1080",Space,RawInline "latex" "\\In{where}",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Space,Str "\1082",Space,Str "\1076\1072\1085\1085\1086\1084\1091",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1102",Str ".",Space,Str "\1052\1099",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1083\1080",Space,Str "\1090\1088\1080",Space,Str "\1083\1086\1082\1072\1083\1100\1085\1099\1093",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1099\1093",Space,Str "\1089",Space,Str "\1086\1076\1085\1080\1084",Space,Str "\1080",Space,Str "\1090\1077\1084",Space,Str "\1078\1077",Space,Str "\1080\1084\1077\1085\1077\1084",Str "."]
,Para [RawInline "latex" "\\In{where}",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Space,Str "\1084\1086\1075\1091\1090",Space,Str "\1073\1099\1090\1100",Space,Str "\1080",Space,Str "\1091",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1102\1090\1089\1103",Space,Str "\1074\1085\1091\1090\1088\1080",Space,RawInline "latex" "\\In{where}",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1081",Str ".",Space,Str "\1053\1086",Space,Str "\1083\1091\1095\1096\1077",Space,Str "\1080\1079\1073\1077\1075\1072\1090\1100",Space,Str "\1089\1080\1083\1100\1085\1086",Space,Str "\1074\1083\1086\1078\1077\1085\1085\1099\1093",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1081",Str "."]
,Header 3 [Str "let",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103"]
,Para [Str "\1042",Space,Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1086\1085\1085\1086\1084",Space,Str "\1089\1090\1080\1083\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Space,Str "\1087\1083\1086\1097\1072\1076\1080",Space,Str "\1090\1088\1077\1091\1075\1086\1083\1100\1085\1080\1082\1072",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1074\1099\1075\1083\1103\1076\1077\1090\1100",Space,Str "\1090\1072\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nsquare a b c = let p = (a + b + c) / 2\n               in  sqrt (p * (p - a) * (p - b) * (p - c)) \n\\end{code}\n"
,Para [Str "\1057\1083\1086\1074\1072",Space,RawInline "tex" "\\KeyWord{let in}",Space,RawInline "latex" "\\In{let}",Space,Str "\1080",Space,RawInline "latex" "\\In{in}",Space,Str "\8211",Space,Str "\1082\1083\1102\1095\1077\1074\1099\1077",Str ".",Space,Str "\1042\1099\1075\1086\1076\1085\1099\1084",Space,Str "\1086\1090\1083\1080\1095\1080\1077\1084",Space,RawInline "latex" "\\In{let}",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1081",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1090\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1086\1085\1080",Space,Str "\1103\1074\1083\1103\1102\1090\1089\1103",Space,Str "\1086\1073\1099\1095\1085\1099\1084\1080",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103\1084\1080",Space,Str "\1080",Space,Str "\1085\1077",Space,Str "\1087\1088\1080\1074\1103\1079\1072\1085\1099",Space,Str "\1082",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1105\1085\1085\1086\1084\1091",Space,Str "\1084\1077\1089\1090\1091",Space,Str "\1082\1072\1082",Space,RawInline "latex" "\\In{where}",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Str ".",Space,Str "\1054\1085\1080",Space,Str "\1084\1086\1075\1091\1090",Space,Str "\1091\1095\1072\1089\1090\1074\1086\1074\1072\1090\1100",Space,Str "\1074",Space,Str "\1083\1102\1073\1086\1081",Space,Str "\1095\1072\1089\1090\1080",Space,Str "\1086\1073\1099\1095\1085\1086\1075\1086",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nsquare a b c = let p = (a + b + c) / 2\n               in  sqrt ((let pa = p - a in p * pa) * \n                         (let pb = p - b\n                              pc = p - c  \n                          in  pb * pc)) \n\\end{code}\n"
,Para [Str "\1042",Space,Str "\1101\1090\1086\1084",Space,Str "\1087\1088\1086\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1080\1093",Space,Str "\1087\1088\1080\1085\1072\1076\1083\1077\1078\1085\1086\1089\1090\1100",Space,Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1086\1085\1085\1086\1084\1091",Space,Str "\1089\1090\1080\1083\1102",Str ".",Space,RawInline "latex" "\\In{let}",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Space,Str "\1084\1086\1075\1091\1090",Space,Str "\1091\1095\1072\1089\1090\1074\1086\1074\1072\1090\1100",Space,Str "\1074",Space,Str "\1083\1102\1073\1086\1084",Space,Str "\1087\1086\1076\1074\1099\1088\1072\1078\1077\1085\1080\1080",Str ",",Space,Str "\1086\1085\1080",Space,Str "\1090\1072\1082\1078\1077",Space,Str "\1075\1088\1091\1087\1087\1080\1088\1091\1102\1090\1089\1103",Space,Str "\1089\1082\1086\1073\1082\1072\1084\1080",Str ".",Space,Str "\1040",Space,RawInline "latex" "\\In{where}",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Space,Str "\1087\1088\1080\1074\1103\1079\1072\1085\1099",Space,Str "\1082",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1103\1084",Space,Str "\1074",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str "."]
,Para [Str "\1058\1072\1082\1078\1077",Space,Str "\1082\1072\1082",Space,Str "\1080",Space,Str "\1074",Space,RawInline "latex" "\\In{where}",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103\1093",Str ",",Space,Str "\1074",Space,RawInline "latex" "\\In{let}",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103\1093",Space,Str "\1089\1083\1077\1074\1072",Space,Str "\1086\1090",Space,Str "\1079\1085\1072\1082\1072",Space,Str "\1088\1072\1074\1085\1086",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1087\1088\1086\1074\1086\1076\1080\1090\1100",Space,Str "\1076\1077\1082\1086\1084\1087\1086\1079\1080\1094\1080\1102",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Str "."]
,RawBlock "latex" "\n\\begin{code}\npred :: Nat -> Nat\npred x = let (Succ y) = x\n         in  y\n\\end{code}\n"
,Para [Str "\1054\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1092\1080\1083\1100\1090\1088\1072\1094\1080\1080",Space,Str "\1089\1087\1080\1089\1082\1086\1074",Space,Str "\1095\1077\1088\1077\1079",Space,RawInline "latex" "\\In{let}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nfilter :: (a -> Bool) -> [a] -> [a]\nfilter  p  []     = []\nfilter  p  (x:xs) = \n    let rest = filter p xs\n    in  if p x then x : rest else rest\n\\end{code}\n"
,Header 2 [Str "\1044\1077\1082\1086\1084\1087\1086\1079\1080\1094\1080\1103"]
,Para [Str "\1044\1077\1082\1086\1084\1087\1086\1079\1080\1094\1080\1103",Space,Str "\1080\1083\1080",Space,Str "\1089\1086\1087\1086\1089\1090\1072\1074\1083\1077\1085\1080\1077",Space,Str "\1089",Space,Str "\1086\1073\1088\1072\1079\1094\1086\1084",Space,Str "\1087\1086\1079\1074\1086\1083\1103\1077\1090",Space,Str "\1074\1099\1076\1077\1083\1103\1090\1100",Space,Str "\1080\1079",Space,Str "\1089\1086\1089\1090\1072\1074\1085\1099\1093",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Str ",",Space,Str "\1087\1088\1086\1089\1090\1077\1081\1096\1080\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1082\1086\1090\1086\1088\1099\1093",Space,Str "\1086\1085\1080",Space,Str "\1073\1099\1083\1080",Space,Str "\1087\1086\1089\1090\1088\1086\1077\1085\1099"]
,RawBlock "latex" "\n\\begin{code}\npred (Succ x) = x\n\\end{code}\n"
,Para [Str "\1080",Space,Str "\1086\1088\1075\1072\1085\1080\1079\1086\1074\1099\1074\1072\1090\1100",Space,Str "\1091\1089\1083\1086\1074\1085\1099\1077",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1079\1072\1074\1080\1089\1103\1090",Space,Str "\1086\1090",Space,Str "\1074\1080\1076\1072",Space,Str "\1087\1086\1089\1090\1091\1087\1072\1102\1097\1080\1093",Space,Str "\1085\1072",Space,Str "\1074\1093\1086\1076",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081"]
,RawBlock "latex" "\n\\begin{code}\nnot True  = False\nnot False = True\n\\end{code}\n"
,Header 3 [Str "\1057\1086\1087\1086\1089\1090\1072\1074\1083\1077\1085\1080\1077",Space,Str "\1089",Space,Str "\1086\1073\1088\1072\1079\1094\1086\1084"]
,Para [Str "\1044\1077\1082\1086\1084\1087\1086\1079\1080\1094\1080\1102",Space,Str "\1074",Space,Str "\1076\1077\1082\1083\1072\1088\1072\1090\1080\1074\1085\1086\1084",Space,Str "\1089\1090\1080\1083\1077",Space,Str "\1084\1099",Space,Str "\1091\1078\1077",Space,Str "\1080\1079\1091\1095\1080\1083\1080",Str ",",Space,Str "\1101\1090\1086",Space,Str "\1086\1073\1099\1095\1085\1099\1081",Space,Str "\1089\1083\1091\1095\1072\1081",Space,Str "\1088\1072\1079\1073\1086\1088\1072",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Space,Str "\1074",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1072\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ".",Space,Str "\1056\1072\1089\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1086\1076\1085\1091",Space,Str "\1087\1086\1083\1077\1079\1085\1091\1102",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1086\1089\1090\1100",Space,Str "\1087\1088\1080",Space,Str "\1076\1077\1082\1086\1084\1087\1086\1079\1080\1094\1080\1080",Str ".",Space,Str "\1048\1085\1086\1075\1076\1072",Space,Str "\1085\1072\1084",Space,Str "\1093\1086\1095\1077\1090\1089\1103",Space,Str "\1087\1088\1086\1074\1077\1089\1090\1080",Space,Str "\1076\1077\1082\1086\1084\1087\1086\1079\1080\1094\1080\1102",Space,Str "\1080",Space,Str "\1076\1072\1090\1100",Space,Str "\1087\1089\1077\1074\1076\1086\1085\1080\1084",Space,Str "\1074\1089\1077\1084\1091",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1102",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1089\1076\1077\1083\1072\1090\1100",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1086\1075\1086",Space,Str "\1089\1080\1084\1074\1086\1083\1072",Space,RawInline "latex" "\\In{@}",Str "."]
,Para [Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1089\1086\1089\1077\1076\1085\1080\1077",Space,Str "\1095\1080\1089\1083\1072",Space,Str "\1076\1083\1103",Space,Str "\1076\1072\1085\1085\1086\1075\1086",Space,Str "\1095\1080\1089\1083\1072",Space,Str "\1055\1077\1072\1085\1086",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nbeside :: Nat -> (Nat, Nat)\nbeside  Zero       = error \"undefined\"\nbeside  x@(Succ y) = (y, Succ x)\n\\end{code}\n"
,Para [Str "\1042",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1080",Space,RawInline "latex" "\\In{x@``(Succ y)}",Space,Str "\1084\1099",Space,Str "\1086\1076\1085\1086\1074\1088\1077\1084\1077\1085\1085\1086",Space,Str "\1087\1088\1086\1074\1086\1076\1080\1084",Space,Str "\1088\1072\1079\1073\1086\1088",Space,Str "\1080",Space,Str "\1076\1072\1105\1084",Space,Str "\1080\1084\1103",Space,Str "\1074\1089\1077\1084\1091",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1102",Str "."]
,Header 3 [Str "case",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103"]
,Para [Str "\1054\1082\1072\1079\1099\1074\1072\1077\1090\1089\1103",Space,Str "\1076\1077\1082\1086\1084\1087\1086\1079\1080\1094\1080\1102",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1087\1088\1086\1074\1086\1076\1080\1090\1100",Space,Str "\1074",Space,Str "\1083\1102\1073\1086\1084",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1080",Str ",",Space,Str "\1076\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1089\1091\1097\1077\1089\1090\1074\1091\1102\1090",Space,RawInline "tex" "\\KeyWord{case of}",Space,RawInline "latex" "\\In{case}",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndata AnotherNat = None | One | Two | Many\n    deriving (Show, Eq)\n\ntoAnother :: Nat -> AnotherNat\ntoAnother x = \n    case x of\n        Zero                -> None\n        Succ Zero           -> One\n        Succ (Succ Zero)    -> Two\n        _                   -> Many\n\nfromAnother :: AnotherNat -> Nat\nfromAnother None    = Zero\nfromAnother One     = Succ Zero\nfromAnother Two     = Succ (Succ Zero)\nfromAnother Many    = error \"undefined\" \n\\end{code}\n"
,Para [Str "\1057\1083\1086\1074\1072",Space,RawInline "latex" "\\In{case}",Space,Str "\1080",Space,RawInline "latex" "\\In{of}",Space,Str "\8211",Space,Str "\1082\1083\1102\1095\1077\1074\1099\1077",Str ".",Space,Str "\1042\1099\1075\1086\1076\1085\1099\1084",Space,Str "\1086\1090\1083\1080\1095\1080\1077\1084",Space,RawInline "latex" "\\In{case}",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1081",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1090\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1085\1072\1084",Space,Str "\1085\1077",Space,Str "\1087\1088\1080\1093\1086\1076\1080\1090\1089\1103",Space,Str "\1082\1072\1078\1076\1099\1081",Space,Str "\1088\1072\1079",Space,Str "\1074\1099\1087\1080\1089\1099\1074\1072\1090\1100",Space,Str "\1080\1084\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ".",Space,Str "\1054\1073\1088\1072\1090\1080\1090\1077",Space,Str "\1074\1085\1080\1084\1072\1085\1080\1077",Space,Str "\1085\1072",Space,Str "\1090\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1074",Space,RawInline "latex" "\\In{case}",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103\1093",Space,Str "\1090\1072\1082\1078\1077",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100\1089\1103",Space,Str "\1086\1073\1099\1095\1085\1099\1084\1080",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1099\1084\1080",Space,Str "\1080",Space,Str "\1073\1077\1079\1099\1084\1103\1085\1085\1099\1084\1080",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1099\1084\1080",Str "."]
,Para [Str "\1044\1083\1103",Space,Str "\1087\1088\1086\1074\1077\1076\1077\1085\1080\1103",Space,Str "\1076\1077\1082\1086\1084\1087\1086\1079\1080\1094\1080\1080",Space,Str "\1087\1086",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1080\1084",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1099\1084",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100\1089\1103",Space,Str "\1082\1086\1088\1090\1077\1078\1072\1084\1080",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1079\1085\1072\1082\1086\1084\1091\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1088\1072\1074\1077\1085\1089\1090\1074\1072",Space,Str "\1076\1083\1103",Space,RawInline "latex" "\\In{Nat}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ninstance Eq Nat where\n    (==) a b =\n        case (a, b) of\n            (Zero,    Zero)     -> True\n            (Succ a', Succ b')  -> a' == b'\n            _                   -> False\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1087\1088\1086\1074\1086\1076\1080\1084",Space,Str "\1089\1086\1087\1086\1089\1090\1072\1074\1083\1077\1085\1080\1077",Space,Str "\1089",Space,Str "\1086\1073\1088\1072\1079\1094\1086\1084",Space,Str "\1087\1086",Space,Str "\1082\1086\1088\1090\1077\1078\1091",Space,RawInline "latex" "\\In{(a, b)}",Str ",",Space,Str "\1089\1086\1086\1090\1074\1077\1090\1089\1090\1074\1077\1085\1085\1086",Space,Str "\1089\1083\1077\1074\1072",Space,Str "\1086\1090",Space,Str "\1079\1085\1072\1082\1072",Space,RawInline "latex" "\\In{->}",Space,Str "\1084\1099",Space,Str "\1087\1088\1086\1074\1077\1088\1103\1077\1084",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1074",Space,Str "\1082\1086\1088\1090\1077\1078\1072\1093",Str ",",Space,Str "\1076\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1084\1099",Space,Str "\1090\1072\1082\1078\1077",Space,Str "\1079\1072\1082\1083\1102\1095\1072\1077\1084",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1074",Space,Str "\1089\1082\1086\1073\1082\1080",Space,Str "\1080",Space,Str "\1087\1080\1096\1077\1084",Space,Str "\1080\1093",Space,Str "\1095\1077\1088\1077\1079",Space,Str "\1079\1072\1087\1103\1090\1091\1102",Str "."]
,Para [Str "\1044\1072\1074\1072\1081\1090\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{filter}",Space,Str "\1074",Space,Str "\1077\1097\1105",Space,Str "\1073\1086\1083\1077\1077",Space,Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1086\1085\1085\1086\1084",Space,Str "\1089\1090\1080\1083\1077",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1084\1099",Space,Str "\1079\1072\1084\1077\1085\1080\1084",Space,Str "\1074",Space,Str "\1080\1089\1093\1086\1076\1085\1086\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1080",Space,RawInline "latex" "\\In{where}",Space,Str "\1085\1072",Space,RawInline "latex" "\\In{let}",Space,Str "\1080",Space,Str "\1076\1077\1082\1086\1084\1087\1086\1079\1080\1094\1080\1102",Space,Str "\1074",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1072\1093",Space,Str "\1085\1072",Space,RawInline "latex" "\\In{case}",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nfilter :: (a -> Bool) -> [a] -> [a]\nfilter  p  a = \n    case a of\n        []      -> []\n        x:xs    ->  let rest = filter p xs\n                    in  if (p x) \n                        then (x:rest)\n                        else rest\n\\end{code}\n"
,Header 2 [Str "\1059\1089\1083\1086\1074\1085\1099\1077",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103"]
,Para [Str "\1057",Space,Str "\1091\1089\1083\1086\1074\1085\1099\1084\1080",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103\1084\1080",Space,Str "\1084\1099",Space,Str "\1091\1078\1077",Space,Str "\1089\1090\1072\1083\1082\1080\1074\1072\1083\1080\1089\1100",Space,Str "\1074",Space,Str "\1089\1086\1087\1086\1089\1090\1072\1074\1083\1077\1085\1080\1080",Space,Str "\1089",Space,Str "\1086\1073\1088\1072\1079\1094\1086\1084",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1074",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{not}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nnot True  = False\nnot False = True\n\\end{code}\n"
,Para [Str "\1042",Space,Str "\1079\1072\1074\1080\1089\1080\1084\1086\1089\1090\1080",Space,Str "\1086\1090",Space,Str "\1087\1086\1089\1090\1091\1087\1072\1102\1097\1077\1075\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1084\1099",Space,Str "\1074\1099\1073\1080\1088\1072\1077\1084",Space,Str "\1086\1076\1085\1091",Space,Str "\1080\1079",Space,Str "\1076\1074\1091\1093",Space,Str "\1072\1083\1100\1090\1077\1088\1085\1072\1090\1080\1074",Str ".",Space,Str "\1059\1089\1083\1086\1074\1085\1099\1077",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1080",Space,Str "\1074",Space,Str "\1089\1086\1087\1086\1089\1090\1072\1074\1083\1077\1085\1080\1080",Space,Str "\1089",Space,Str "\1086\1073\1088\1072\1079\1094\1086\1084",Space,Str "\1087\1086\1079\1074\1086\1083\1103\1102\1090",Space,Str "\1088\1077\1072\1075\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1083\1080\1096\1100",Space,Str "\1085\1072",Space,Str "\1095\1072\1089\1090\1080\1095\1085\1086\1077",Space,Str "(",Str "\1089",Space,Str "\1091\1095\1105\1090\1086\1084",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1099\1093",Str ")",Space,Str "\1089\1086\1074\1087\1072\1076\1077\1085\1080\1077",Space,Str "\1076\1077\1088\1077\1074\1072",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1074",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1072\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str "."]
,Para [Str "\1063\1072\1089\1090\1086",Space,Str "\1085\1072\1084",Space,Str "\1093\1086\1095\1077\1090\1089\1103",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1073\1086\1083\1077\1077",Space,Str "\1089\1083\1086\1078\1085\1099\1077",Space,Str "\1091\1089\1083\1086\1074\1080\1103",Space,Str "\1076\1083\1103",Space,Str "\1072\1083\1100\1090\1077\1088\1085\1072\1090\1080\1074",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Str ",",Space,Str "\1077\1089\1083\1080",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1085\1072",Space,Str "\1074\1093\1086\1076\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1073\1086\1083\1100\1096\1077",Space,Str "2",Str ",",Space,Str "\1085\1086",Space,Str "\1084\1077\1085\1100\1096\1077",Space,Str "10",Str ",",Space,Str "\1074\1077\1088\1085\1080",Space,RawInline "latex" "\\In{A}",Str ",",Space,Str "\1072",Space,Str "\1077\1089\1083\1080",Space,Str "\1073\1086\1083\1100\1096\1077",Space,Str "10",Str ",",Space,Str "\1074\1077\1088\1085\1080",Space,RawInline "latex" "\\In{B}",Str ",",Space,Str "\1072",Space,Str "\1074\1086",Space,Str "\1074\1089\1077\1093",Space,Str "\1086\1089\1090\1072\1083\1100\1085\1099\1093",Space,Str "\1089\1083\1091\1095\1072\1103\1093",Space,Str "\1074\1077\1088\1085\1080",Space,RawInline "latex" "\\In{C}",Str ".",Space,Str "\1048\1083\1080",Space,Str "\1077\1089\1083\1080",Space,Str "\1085\1072",Space,Str "\1074\1093\1086\1076",Space,Str "\1087\1086\1089\1090\1091\1087\1080\1083\1072",Space,Str "\1089\1090\1088\1086\1082\1072",Space,Str "\1089\1086\1089\1090\1086\1103\1097\1072\1103",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1080\1079",Space,Str "\1073\1091\1082\1074",Space,Str "\1083\1072\1090\1080\1085\1089\1082\1086\1075\1086",Space,Str "\1072\1083\1092\1072\1074\1080\1090\1072",Str ",",Space,Str "\1074\1077\1088\1085\1080",Space,RawInline "latex" "\\In{A}",Str ",",Space,Str "\1072",Space,Str "\1074",Space,Str "\1087\1088\1086\1090\1080\1074\1085\1086\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1074\1077\1088\1085\1080",Space,RawInline "latex" "\\In{B}",Str ".",Space,Str "\1053\1072\1084",Space,Str "\1073\1099",Space,Str "\1093\1086\1090\1077\1083\1086\1089\1100",Space,Str "\1088\1077\1072\1075\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1083\1080\1096\1100",Space,Str "\1074",Space,Str "\1090\1086\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Str ",",Space,Str "\1077\1089\1083\1080",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1085\1077\1082\1086\1090\1086\1088\1086\1075\1086",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{a}",Space,Str "\1091\1076\1086\1074\1083\1077\1090\1074\1086\1088\1103\1077\1090",Space,Str "\1085\1077\1082\1086\1090\1086\1088\1086\1084\1091",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090\1091",Str ".",Space,Str "\1055\1088\1077\1076\1080\1082\1072\1090\1072\1084\1080",Space,Str "\1086\1073\1099\1095\1085\1086",Space,Str "\1085\1072\1079\1099\1074\1072\1102\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{a -> Bool}",Str ".",Space,Str "\1052\1099",Space,Str "\1075\1086\1074\1086\1088\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1091\1076\1086\1074\1083\1077\1090\1074\1086\1088\1103\1077\1090",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090\1091",Str ",",Space,Str "\1077\1089\1083\1080",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090",Space,Str "\1076\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,RawInline "latex" "\\In{True}",Str "."]
,Header 3 [Str "\1054\1093\1088\1072\1085\1085\1099\1077",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103"]
,Para [Str "\1042",Space,Str "\1076\1077\1082\1083\1072\1088\1072\1090\1080\1074\1085\1086\1084",Space,Str "\1089\1090\1080\1083\1077",Space,Str "\1091\1089\1083\1086\1074\1085\1099\1077",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Space,Str "\1087\1088\1077\1076\1089\1090\1072\1074\1083\1077\1085\1099",Space,Emph [Str "\1086\1093\1088\1072\1085\1085\1099\1084\1080",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103\1084\1080"],Space,Str "(",Str "guards",Str ")",Str ".",Space,Str "\1055\1088\1077\1076\1087\1086\1083\1086\1078\1080\1084",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1077\1089\1090\1100",Space,Str "\1090\1080\1087",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndata HowMany = Little | Enough | Many\n\\end{code}\n"
,Para [Str "\1048",Space,Str "\1084\1099",Space,Str "\1093\1086\1090\1080\1084",Space,Str "\1085\1072\1087\1080\1089\1072\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1095\1080\1089\1083\1086",Space,Str "\1083\1102\1076\1077\1081",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1093\1086\1090\1103\1090",Space,Str "\1087\1086\1089\1077\1090\1080\1090\1100",Space,Str "\1074\1099\1089\1090\1072\1074\1082\1091",Str ",",Space,Str "\1072",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{HowMany}",Str ".",Space,Str "\1069\1090\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1086\1094\1077\1085\1080\1074\1072\1077\1090",Space,Str "\1074\1084\1077\1089\1090\1080\1090\1077\1083\1100\1085\1086\1089\1090\1100",Space,Str "\1074\1099\1089\1090\1072\1074\1086\1095\1085\1086\1075\1086",Space,Str "\1079\1072\1083\1072",Str ".",Space,Str "\1057",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1086\1093\1088\1072\1085\1085\1099\1093",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1081",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1085\1072\1087\1080\1089\1072\1090\1100",Space,Str "\1077\1105",Space,Str "\1090\1072\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nhallCapacity :: Int -> HowMany\nhallCapacity n\n    | n < 10    = Little\n    | n < 30    = Enough\n    | True      = Many\n\\end{code}\n"
,Para [Str "\1057\1087\1077\1094\1080\1072\1083\1100\1085\1099\1081",Space,Str "\1089\1080\1084\1074\1086\1083",Space,RawInline "latex" "\\In{|}",Space,Str "\1091\1078\1077",Space,Str "\1074\1089\1090\1088\1077\1095\1072\1083\1089\1103",Space,Str "\1085\1072\1084",Space,Str "\1074",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1080",Space,Str "\1090\1080\1087\1086\1074",Str ".",Space,Str "\1058\1072\1084",Space,Str "\1086\1085",Space,Str "\1080\1075\1088\1072\1083",Space,Str "\1088\1086\1083\1100",Space,Str "\1088\1072\1079\1076\1077\1083\1080\1090\1077\1083\1103",Space,Str "\1072\1083\1100\1090\1077\1088\1085\1072\1090\1080\1074",Space,Str "\1074",Space,Str "\1089\1091\1084\1084\1077",Space,Str "\1090\1080\1087\1086\1074",Str ".",Space,Str "\1047\1076\1077\1089\1100",Space,Str "\1078\1077",Space,Str "\1086\1085",Space,Str "\1088\1072\1079\1076\1077\1083\1103\1077\1090",Space,Str "\1072\1083\1100\1090\1077\1088\1085\1072\1090\1080\1074\1099",Space,Str "\1074",Space,Str "\1091\1089\1083\1086\1074\1085\1099\1093",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103\1093",Str ".",Space,Str "\1057\1085\1072\1095\1072\1083\1072",Space,Str "\1084\1099",Space,Str "\1087\1080\1096\1077\1084",Space,RawInline "latex" "\\In{|}",Space,Str "\1079\1072\1090\1077\1084",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1077",Str "-",Str "\1087\1088\1077\1076\1080\1082\1072\1090",Str ",",Space,Str "\1082\1086\1090\1086\1088\1086\1077",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Bool}",Str ",",Space,Str "\1079\1072\1090\1077\1084",Space,Str "\1088\1072\1074\1085\1086",Space,Str "\1080",Space,Str "\1087\1086\1089\1083\1077",Space,Str "\1088\1072\1074\1085\1086",Space,Str "\8211",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1084\1086\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Str ".",Space,Str "\1040\1083\1100\1090\1077\1088\1085\1072\1090\1080\1074\1099",Space,Str "\1090\1072\1082",Space,Str "\1078\1077",Space,Str "\1082\1072\1082",Space,Str "\1080",Space,Str "\1074",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1076\1077\1082\1086\1084\1087\1086\1079\1080\1094\1080\1080",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1074",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1086\1073\1093\1086\1076\1103\1090\1089\1103",Space,Str "\1089\1074\1077\1088\1093\1091",Space,Str "\1074\1085\1080\1079",Str ",",Space,Str "\1076\1086",Space,Str "\1090\1077\1093",Space,Str "\1087\1086\1088",Space,Str "\1087\1086\1082\1072",Space,Str "\1074",Space,Str "\1086\1076\1085\1086\1081",Space,Str "\1080\1079",Space,Str "\1072\1083\1100\1090\1077\1088\1085\1072\1090\1080\1074",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090",Space,Str "\1085\1077",Space,Str "\1074\1077\1088\1085\1105\1090",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,RawInline "latex" "\\In{True}",Str ".",Space,Str "\1054\1073\1088\1072\1090\1080\1090\1077",Space,Str "\1074\1085\1080\1084\1072\1085\1080\1077",Space,Str "\1085\1072",Space,Str "\1090\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1085\1072\1084",Space,Str "\1085\1077",Space,Str "\1085\1091\1078\1085\1086",Space,Str "\1087\1080\1089\1072\1090\1100",Space,Str "\1074\1086",Space,Str "\1074\1090\1086\1088\1086\1081",Space,Str "\1072\1083\1100\1090\1077\1088\1085\1072\1090\1080\1074\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n    | 10 <= n && n < 30   = Enough\n\\end{code}\n"
,Para [Str "\1045\1089\1083\1080",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1090\1077\1083\1100",Space,Str "\1076\1086\1096\1105\1083",Space,Str "\1076\1086",Space,Str "\1101\1090\1086\1081",Space,Str "\1072\1083\1100\1090\1077\1088\1085\1072\1090\1080\1074\1099",Str ",",Space,Str "\1079\1085\1072\1095\1080\1090",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1090\1086\1095\1085\1086",Space,Str "\1073\1086\1083\1100\1096\1077",Space,Str "\1083\1080\1073\1086",Space,Str "\1088\1072\1074\1085\1086",Space,RawInline "latex" "\\In{10}",Str ".",Space,Str "\1055\1086\1089\1082\1086\1083\1100\1082\1091",Space,Str "\1074",Space,Str "\1087\1088\1077\1076\1099\1076\1091\1097\1077\1081",Space,Str "\1072\1083\1100\1090\1077\1088\1085\1072\1090\1080\1074\1077",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090",Space,Str "\1074\1077\1088\1085\1091\1083",Space,RawInline "latex" "\\In{False}",Str "."]
,Para [Str "\1055\1088\1077\1076\1080\1082\1072\1090",Space,Str "\1074",Space,Str "\1087\1086\1089\1083\1077\1076\1085\1077\1081",Space,Str "\1072\1083\1100\1090\1077\1088\1085\1072\1090\1080\1074\1077",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1082\1086\1085\1089\1090\1072\1085\1090\1086\1081",Space,RawInline "latex" "\\In{True}",Str ",",Space,Str "\1086\1085",Space,Str "\1087\1088\1086\1081\1076\1105\1090",Space,Str "\1089\1086\1087\1086\1089\1090\1072\1074\1083\1077\1085\1080\1077",Space,Str "\1089",Space,Str "\1083\1102\1073\1099\1084",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077\1084",Space,RawInline "latex" "\\In{n}",Str ".",Space,Str "\1042",Space,Str "\1076\1072\1085\1085\1086\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Str ",",Space,Str "\1077\1089\1083\1080",Space,Str "\1091\1095\1077\1089\1090\1100",Space,Str "\1087\1088\1077\1076\1099\1076\1091\1097\1080\1077",Space,Str "\1072\1083\1100\1090\1077\1088\1085\1072\1090\1080\1074\1099",Space,Str "\1084\1099",Space,Str "\1079\1085\1072\1077\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1077\1089\1083\1080",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1090\1077\1083\1100",Space,Str "\1076\1086\1096\1105\1083",Space,Str "\1076\1086",Space,Str "\1087\1086\1089\1083\1077\1076\1085\1077\1081",Space,Str "\1072\1083\1100\1090\1077\1088\1085\1072\1090\1080\1074\1099",Space,Str ",",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,RawInline "latex" "\\In{n}",Space,Str "\1073\1086\1083\1100\1096\1077",Space,Str "\1083\1080\1073\1086",Space,Str "\1088\1072\1074\1085\1086",Space,RawInline "latex" "\\In{30}",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1087\1086\1074\1099\1096\1077\1085\1080\1103",Space,Str "\1085\1072\1075\1083\1103\1076\1085\1086\1089\1090\1080",Space,Str "\1082\1086\1076\1072",Space,Str "\1074",Space,RawInline "latex" "\\In{Prelude}",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1072",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1072\1103",Space,Str "\1082\1086\1085\1089\1090\1072\1085\1090\1072",Str "-",Str "\1089\1080\1085\1086\1085\1080\1084",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1102",Space,RawInline "latex" "\\In{True}",Space,Str "\1087\1086\1076",Space,Str "\1080\1084\1077\1085\1077\1084",Space,RawInline "latex" "\\In{otherwise}",Str "."]
,Para [Str "\1054\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{filter}",Space,Str "\1076\1083\1103",Space,Str "\1089\1087\1080\1089\1082\1086\1074",Space,Str "\1074",Space,Str "\1073\1086\1083\1077\1077",Space,Str "\1076\1077\1082\1083\1072\1088\1072\1090\1080\1074\1085\1086\1084",Space,Str "\1089\1090\1080\1083\1077",Str ",",Space,Str "\1076\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1079\1072\1084\1077\1085\1080\1084",Space,RawInline "latex" "\\In{if}",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1077",Space,Str "\1074",Space,Str "\1080\1089\1093\1086\1076\1085\1086\1081",Space,Str "\1074\1077\1088\1089\1080\1080",Space,Str "\1085\1072",Space,Str "\1086\1093\1088\1072\1085\1085\1099\1077",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nfilter :: (a -> Bool) -> [a] -> [a]\nfilter  p  []       = []\nfilter  p  (x:xs)   \n    | p x           = x : rest\n    | otherwise     = rest\n    where rest = filter p xs\n\\end{code}\n"
,Para [Str "\1048\1083\1080",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1088\1072\1079\1084\1077\1089\1090\1080\1090\1100",Space,Str "\1086\1093\1088\1072\1085\1085\1099\1077",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Space,Str "\1087\1086",Str "-",Str "\1076\1088\1091\1075\1086\1084\1091",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nfilter :: (a -> Bool) -> [a] -> [a]\nfilter  p  []                   = []\nfilter  p  (x:xs)   | p x       = x : rest\n                    | otherwise = rest\n    where rest = filter p xs\n\\end{code}\n"
,Para [Str "\1054\1090\1084\1077\1090\1080\1084",Space,Str "\1090\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1083\1086\1082\1072\1083\1100\1085\1072\1103",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1072\1103",Space,RawInline "latex" "\\In{rest}",Space,Str "\1074\1080\1076\1085\1072",Space,Str "\1080",Space,Str "\1074",Space,Str "\1090\1086\1081",Space,Str "\1080",Space,Str "\1074",Space,Str "\1076\1088\1091\1075\1086\1081",Space,Str "\1072\1083\1100\1090\1077\1088\1085\1072\1090\1080\1074\1077",Str ".",Space,Str "\1042\1099",Space,Str "\1089\1087\1086\1082\1086\1081\1085\1086",Space,Str "\1084\1086\1078\1077\1090\1077",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100\1089\1103",Space,Str "\1083\1086\1082\1072\1083\1100\1085\1099\1084\1080",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1099\1084\1080",Space,Str "\1074",Space,Str "\1083\1102\1073\1086\1081",Space,Str "\1095\1072\1089\1090\1080",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1103",Str ",",Space,Str "\1074",Space,Str "\1082\1086\1090\1086\1088\1086\1084",Space,Str "\1086\1085\1080",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1099",Str "."]
,Para [Str "\1054\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1086\1093\1088\1072\1085\1085\1099\1093",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{all}",Str ",",Space,Str "\1086\1085\1072",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090",Space,Str "\1080",Space,Str "\1089\1087\1080\1089\1086\1082",Str ",",Space,Str "\1080",Space,Str "\1087\1088\1086\1074\1077\1088\1103\1077\1090",Space,Str "\1091\1076\1086\1074\1083\1077\1090\1074\1086\1088\1103\1102\1090",Space,Str "\1083\1080",Space,Str "\1074\1089\1077",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1099",Space,Str "\1089\1087\1080\1089\1082\1072",Space,Str "\1076\1072\1085\1085\1086\1084\1091",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090\1091",Str "."]
,RawBlock "latex" "\n\\begin{code}\nall :: (a -> Bool) -> [a] -> Bool\nall p []        = True\nall p (x:xs)    \n    | p x       = all p xs\n    | otherwise = False\n\\end{code}\n"
,Para [Str "\1057",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1086\1093\1088\1072\1085\1085\1099\1093",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1081",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1085\1072\1075\1083\1103\1076\1085\1086",Space,Str "\1086\1087\1080\1089\1099\1074\1072\1090\1100",Space,Str "\1091\1089\1083\1086\1074\1085\1099\1077",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Str ".",Space,Str "\1053\1086",Space,Str "\1080\1085\1086\1075\1076\1072",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1086\1073\1086\1081\1090\1080\1089\1100",Space,Str "\1080",Space,Str "\1087\1088\1086\1089\1090\1099\1084\1080",Space,Str "\1083\1086\1075\1080\1095\1077\1089\1082\1080\1084\1080",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1103\1084\1080",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{all}",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1073\1099\1083\1086",Space,Str "\1073\1099",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1090\1072\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nall :: (a -> Bool) -> [a] -> Bool\nall  p  []        = True\nall  p  (x:xs)    = p x && all p xs\n\\end{code}\n"
,Para [Str "\1048\1083\1080",Space,Str "\1090\1072\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nall :: (a -> Bool) -> [a] -> Bool\nall  p  xs = null (filter notP xs)\n    where notP x = not (p x)\n\\end{code}\n"
,Para [Str "\1048\1083\1080",Space,Str "\1076\1072\1078\1077",Space,Str "\1090\1072\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nimport Prelude(all)\n\\end{code}\n"
,Para [Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{null}",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1072",Space,Str "\1074",Space,RawInline "latex" "\\In{Prelude}",Space,Str "\1086\1085\1072",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,RawInline "latex" "\\In{True}",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1077\1089\1083\1080",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1087\1091\1089\1090",Str "."]
,Header 3 [Str "if",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103"]
,Para [Str "\1042",Space,Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1086\1085\1085\1086\1084",Space,Str "\1089\1090\1080\1083\1077",Space,Str "\1074",Space,Str "\1082\1072\1095\1077\1089\1090\1074\1077",Space,Str "\1091\1089\1083\1086\1074\1085\1099\1093",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1081",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1091\1102\1090\1089\1103",Space,Str "\1091\1078\1077",Space,Str "\1079\1085\1072\1082\1086\1084\1099\1077",Space,Str "\1085\1072\1084",Space,RawInline "latex" "\\In{if}",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Str ".",Space,Str "\1042\1089\1087\1086\1084\1085\1080\1084",Space,Str "\1082\1072\1082",Space,Str "\1086\1085\1080",Space,Str "\1074\1099\1075\1083\1103\1076\1103\1090",Str ":"]
,RawBlock "latex" "\n\\begin{code}\na = if bool \n    then x1\n    else x2\n\\end{code}\n"
,Para [Str "\1057\1083\1086\1074\1072",Space,RawInline "latex" "\\In{if}",Str ",",Space,RawInline "latex" "\\In{then}",Space,Str "\1080",Space,RawInline "latex" "\\In{else}",Space,Str "\8211",Space,Str "\1082\1083\1102\1095\1077\1074\1099\1077",Str ".",Space,Str "\1058\1080\1087",Space,RawInline "latex" "\\In{a}",Str ",",Space,RawInline "latex" "\\In{x1}",Space,Str "\1080",Space,RawInline "latex" "\\In{x2}",Space,Str "\1089\1086\1074\1087\1072\1076\1072\1102\1090",Str "."]
,Para [Str "\1051\1102\1073\1086\1077",Space,Str "\1086\1093\1088\1072\1085\1085\1086\1077",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1077",Str ",",Space,Str "\1074",Space,Str "\1082\1086\1090\1086\1088\1086\1084",Space,Str "\1073\1086\1083\1100\1096\1077",Space,Str "\1086\1076\1085\1086\1081",Space,Str "\1072\1083\1100\1090\1077\1088\1085\1072\1090\1080\1074\1099",Str ",",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1087\1088\1077\1076\1089\1090\1072\1074\1080\1090\1100",Space,Str "\1074",Space,Str "\1074\1080\1076\1077",Space,RawInline "latex" "\\In{if}",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Space,Str "\1080",Space,Str "\1085\1072\1086\1073\1086\1088\1086\1090",Str ".",Space,Str "\1055\1077\1088\1077\1087\1080\1096\1077\1084",Space,Str "\1074\1089\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1080\1093",Space,Str "\1087\1088\1077\1076\1099\1076\1091\1097\1077\1075\1086",Space,Str "\1087\1086\1076\1088\1072\1079\1076\1077\1083\1072",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,RawInline "latex" "\\In{if}",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1081",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nhallCapacity :: Int -> HowMany\nhallCapacity n =\n    if (n < 10)\n    then Little\n    else (if n < 30 \n          then Enough\n          else Many)\n\nall :: (a -> Bool) -> [a] -> Bool\nall p []     = True\nall p (x:xs) = if (p x) then all p xs else False\n\\end{code}\n"
,Header 2 [Str "\1054\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1081"]
,Para [Str "\1055\1086\1076",Space,Str "\1092\1091\1085\1082\1094\1080\1077\1081",Space,Str "\1084\1099",Space,Str "\1087\1086\1085\1080\1084\1072\1077\1084",Space,Str "\1089\1086\1089\1090\1072\1074\1085\1086\1081",Space,Str "\1089\1080\1085\1086\1085\1080\1084",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1099",Str ",",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1086",Space,Str "\1088\1072\1079\1073\1080\1088\1072\1077\1090",Space,Str "\1080\1093",Space,Str "\1085\1072",Space,Str "\1095\1072\1089\1090\1080",Space,Str "\1080",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1077\1090",Space,Str "\1080\1079",Space,Str "\1101\1090\1080\1093",Space,Str "\1095\1072\1089\1090\1077\1081",Space,Str "\1085\1086\1074\1099\1077",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Str ".",Space,Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1082\1072\1082",Space,Str "\1090\1072\1082\1080\1077",Space,Str "\1089\1080\1085\1086\1085\1080\1084\1099",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1102\1090\1089\1103",Space,Str "\1074",Space,Str "\1082\1072\1078\1076\1086\1084",Space,Str "\1080\1079",Space,Str "\1089\1090\1080\1083\1077\1081",Str "."]
,Header 3 [Str "\1059\1088\1072\1074\1085\1077\1085\1080\1103"]
,Para [Str "\1042",Space,Str "\1076\1077\1082\1083\1072\1088\1072\1090\1080\1074\1085\1086\1084",Space,Str "\1089\1090\1080\1083\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1102\1090\1089\1103",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1081",Str ".",Space,Str "\1055\1086\1082\1072",Space,Str "\1084\1099",Space,Str "\1074\1080\1076\1077\1083\1080",Space,Str "\1083\1080\1096\1100",Space,Str "\1101\1090\1086\1090",Space,Str "\1089\1087\1086\1089\1086\1073",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str ",",Space,Str "\1087\1088\1080\1084\1077\1088\1072\1084\1080",Space,Str "\1084\1086\1075\1091\1090",Space,Str "\1089\1083\1091\1078\1080\1090\1100",Space,Str "\1074\1089\1077",Space,Str "\1087\1088\1077\1076\1099\1076\1091\1097\1080\1077",Space,Str "\1087\1088\1080\1084\1077\1088\1099",Str ".",Space,Str "\1042\1082\1088\1072\1090\1094\1077",Space,Str "\1085\1072\1087\1086\1084\1085\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1077\1090\1089\1103",Space,Str "\1085\1072\1073\1086\1088\1086\1084",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1081",Space,Str "\1074\1080\1076\1072",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nname \1076\1077\1082\1086\1084\1087\1086\1079\1080\1094\1080\1103\&1 = \1082\1086\1084\1087\1086\1079\1080\1094\1080\1103\&1\nname \1076\1077\1082\1086\1084\1087\1086\1079\1080\1094\1080\1103\&2 = \1082\1086\1084\1087\1086\1079\1080\1094\1080\1103\&2\n...\nname \1076\1077\1082\1086\1084\1087\1086\1079\1080\1094\1080\1103N = \1082\1086\1084\1087\1086\1079\1080\1094\1080\1103N\n\\end{code}\n"
,Para [Str "\1043\1076\1077",Space,RawInline "latex" "\\In{name}",Space,Str "\8211",Space,Str "\1080\1084\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ".",Space,Str "\1042",Space,RawInline "latex" "\\In{\1076\1077\1082\1086\1084\1087\1086\1079\1080\1094\1080\1080}",Space,Str "\1087\1088\1086\1080\1089\1093\1086\1076\1080\1090",Space,Str "\1088\1072\1079\1073\1086\1088",Space,Str "\1087\1086\1089\1090\1091\1087\1072\1102\1097\1080\1093",Space,Str "\1085\1072",Space,Str "\1074\1093\1086\1076",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Str ",",Space,Str "\1072",Space,Str "\1074",Space,RawInline "latex" "\\In{\1082\1086\1084\1087\1086\1079\1080\1094\1080\1080}",Space,Str "\1087\1088\1086\1080\1089\1093\1086\1076\1080\1090",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1077\1085\1080\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1072",Str ".",Space,Str "\1059\1088\1072\1074\1085\1077\1085\1080\1103",Space,Str "\1086\1073\1093\1086\1076\1103\1090\1089\1103",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1090\1077\1083\1077\1084",Space,Str "\1089\1074\1077\1088\1093\1091",Space,Str "\1074\1085\1080\1079",Space,Str "\1076\1086",Space,Str "\1090\1077\1093",Space,Str "\1087\1086\1088",Space,Str "\1087\1086\1082\1072",Space,Str "\1086\1085",Space,Str "\1085\1077",Space,Str "\1085\1072\1081\1076\1105\1090",Space,Str "\1090\1072\1082\1086\1077",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1077",Str ",",Space,Str "\1076\1083\1103",Space,Str "\1082\1086\1090\1086\1088\1086\1075\1086",Space,Str "\1087\1077\1088\1077\1076\1072\1085\1085\1099\1077",Space,Str "\1074",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1085\1077",Space,Str "\1087\1086\1076\1086\1081\1076\1091\1090",Space,Str "\1074",Space,Str "\1091\1082\1072\1079\1072\1085\1085\1099\1081",Space,Str "\1074",Space,Str "\1076\1077\1082\1086\1084\1087\1086\1079\1080\1094\1080\1080",Space,Str "\1096\1072\1073\1083\1086\1085",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Space,Str "(",Str "\1077\1089\1083\1080",Space,Str "\1089\1086\1087\1086\1089\1090\1072\1074\1083\1077\1085\1080\1077",Space,Str "\1089",Space,Str "\1086\1073\1088\1072\1079\1094\1086\1084",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1074",Space,Str "\1087\1088\1086\1081\1076\1105\1090",Space,Str "\1091\1089\1087\1077\1096\1085\1086",Str ")",Str ".",Space,Str "\1050\1072\1082",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1090\1072\1082\1086\1077",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1077",Space,Str "\1085\1072\1081\1076\1077\1085\1086",Str ",",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1077",Space,Str "\1089\1087\1088\1072\1074\1072",Space,Str "\1086\1090",Space,Str "\1079\1085\1072\1082\1072",Space,Str "\1088\1072\1074\1085\1086",Space,Str "(",RawInline "latex" "\\In{\1082\1086\1084\1087\1086\1079\1080\1094\1080\1103}",Str ")",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1086\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1090\1072\1082\1086\1077",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1077",Space,Str "\1085\1077",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1085\1072\1081\1076\1077\1085\1086",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1072",Space,Str "\1086\1089\1090\1072\1085\1086\1074\1080\1090\1089\1103",Space,Str "\1089",Space,Str "\1086\1096\1080\1073\1082\1086\1081",Str "."]
,Para [Str "\1050",Space,Str "\1087\1088\1080\1084\1077\1088\1091",Space,Str "\1087\1086\1087\1088\1086\1073\1091\1081\1090\1077",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1090\1100",Space,Str "\1074",Space,Str "\1080\1085\1090\1077\1088\1087\1088\1077\1090\1072\1090\1086\1088\1077",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1077",Space,RawInline "latex" "\\In{notT False}",Str ",",Space,Str "\1076\1083\1103",Space,Str "\1090\1072\1082\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nnotT :: Bool -> Bool\nnotT True = False\n\\end{code}\n"
,Para [Str "\1063\1090\1086",Space,Str "\1084\1099",Space,Str "\1091\1074\1080\1076\1080\1084",Str "?"]
,RawBlock "latex" "\n\\begin{code}\nPrelude> notT False\n*** Exception: <interactive>:1:4-20: Non-exhaustive patterns in function notT\n\\end{code}\n"
,Para [Str "\1048\1085\1090\1077\1088\1087\1088\1077\1090\1072\1090\1086\1088",Space,Str "\1089\1086\1086\1073\1097\1080\1083",Space,Str "\1085\1072\1084",Space,Str "\1086",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1086\1085",Space,Str "\1085\1077",Space,Str "\1085\1072\1096\1105\1083",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1103",Space,Str "\1076\1083\1103",Space,Str "\1087\1077\1088\1077\1076\1072\1085\1085\1086\1075\1086",Space,Str "\1074",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str "."]
,Header 3 [Str "\1041\1077\1079\1099\1084\1103\1085\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080"]
,Para [Str "\1042",Space,Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1086\1085\1085\1086\1084",Space,Str "\1089\1090\1080\1083\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1102\1090\1089\1103",Space,Str "\1087\1086",Str "-",Str "\1076\1088\1091\1075\1086\1084\1091",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1085\1077\1086\1073\1099\1095\1085\1099\1081",Space,Str "\1084\1077\1090\1086\1076",Str ",",Space,Str "\1086\1085",Space,Str "\1087\1088\1080\1096\1105\1083",Space,Str "\1074",Space,Str "Haskell",Space,Str "\1080\1079",Space,Str "\1083\1103\1084\1073\1076\1072",Str "-",Str "\1080\1089\1095\1080\1089\1083\1077\1085\1080\1103",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1080",Space,Str "\1089\1090\1088\1086\1103\1090\1089\1103",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1099\1093",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1094\1080\1081",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1085\1072\1079\1099\1074\1072\1102\1090\1089\1103",Space,Str "\1083\1103\1084\1073\1076\1072",Str "-",Str "\1092\1091\1085\1082\1094\1080\1103\1084\1080",Str ".",Space,Str "\1055\1086",Space,Str "\1089\1091\1090\1080",Space,Str "\1083\1103\1084\1073\1076\1072",Str "-",Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1103\1074\1083\1103\1102\1090\1089\1103",Space,Str "\1073\1077\1079\1099\1084\1103\1085\1085\1099\1084\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1103\1084\1080",Str ".",Space,Str "\1044\1072\1074\1072\1081\1090\1077",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1083\1103\1084\1073\1076\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1087\1088\1080\1073\1072\1074\1083\1103\1077\1090",Space,Str "\1082",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1091",Space,Str "\1077\1076\1080\1085\1080\1094\1091",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n\\x -> x + 1\n\\end{code}\n"
,Para [Str "\1044\1083\1103",Space,Str "\1090\1086\1075\1086",Str ",",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1087\1088\1077\1074\1088\1072\1090\1080\1090\1100",Space,Str "\1083\1103\1084\1073\1076\1072",Str "-",Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1074",Space,Str "\1086\1073\1099\1095\1085\1091\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1084\1099\1089\1083\1077\1085\1085\1086",Space,Str "\1079\1072\1084\1077\1085\1080\1090\1077",Space,Str "\1079\1085\1072\1082",Space,RawInline "latex" "\\In{}\\verb!\\!\\In{}",Space,Str "\1085\1072",Space,Str "\1080\1084\1103",Space,RawInline "latex" "\\In{noName}",Str ",",Space,Str "\1072",Space,Str "\1089\1090\1088\1077\1083\1082\1091",Space,Str "\1085\1072",Space,Str "\1079\1085\1072\1082",Space,Str "\1088\1072\1074\1085\1086",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nnoName x = x + 1\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1087\1086\1083\1091\1095\1080\1083\1080",Space,Str "\1086\1073\1099\1095\1085\1091\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "Haskell",Str ",",Space,Str "\1089",Space,Str "\1090\1072\1082\1080\1084\1080",Space,Str "\1084\1099",Space,Str "\1091\1078\1077",Space,Str "\1084\1085\1086\1075\1086",Space,Str "\1088\1072\1079",Space,Str "\1074\1089\1090\1088\1077\1095\1072\1083\1080\1089\1100",Str ".",Space,Str "\1047\1072\1095\1077\1084",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1099\1081",Space,Str "\1089\1080\1085\1090\1072\1082\1089\1080\1089",Space,Str "\1076\1083\1103",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1103",Space,Str "\1073\1077\1079\1099\1084\1103\1085\1085\1099\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str "?",Space,Str "\1042\1077\1076\1100",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1077\1105",Space,Str "\1074",Space,Str "\1074\1080\1076\1077",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1081",Str ".",Space,Str "\1050",Space,Str "\1090\1086\1084\1091",Space,Str "\1078\1077",Space,Str "\1082\1086\1084\1091",Space,Str "\1084\1086\1075\1091\1090",Space,Str "\1087\1086\1085\1072\1076\1086\1073\1080\1090\1100\1089\1103",Space,Str "\1073\1077\1079\1099\1084\1103\1085\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str "?",Space,Str "\1042\1077\1076\1100",Space,Str "\1089\1084\1099\1089\1083",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1074",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1074\1099\1076\1077\1083\1080\1090\1100",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1105\1085\1085\1099\1081",Space,Str "\1096\1072\1073\1083\1086\1085",Space,Str "\1087\1086\1074\1077\1076\1077\1085\1080\1103",Space,Str "\1080",Space,Str "\1079\1072\1090\1077\1084",Space,Str "\1089\1089\1099\1083\1072\1090\1100\1089\1103",Space,Str "\1085\1072",Space,Str "\1085\1077\1075\1086",Space,Str "\1087\1086",Space,Str "\1080\1084\1077\1085\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str "."]
,Para [Str "\1057\1084\1099\1089\1083",Space,Str "\1073\1077\1079\1099\1084\1103\1085\1085\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1074",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1077\1102",Str ",",Space,Str "\1090\1072\1082\1078\1077",Space,Str "\1082\1072\1082",Space,Str "\1080",Space,Str "\1083\1102\1073\1099\1084",Space,Str "\1076\1088\1091\1075\1080\1084",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1086\1084",Space,Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1086\1085\1085\1086\1075\1086",Space,Str "\1089\1090\1080\1083\1103",Str ",",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100\1089\1103",Space,Str "\1074",Space,Str "\1083\1102\1073\1086\1081",Space,Str "\1095\1072\1089\1090\1080",Space,Str "\1086\1073\1099\1095\1085\1099\1093",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1081",Str ".",Space,Str "\1057",Space,Str "\1077\1105",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1089\1086\1079\1076\1072\1074\1072\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Quoted DoubleQuote [Str "\1085\1072",Space,Str "\1083\1077\1090\1091"],Str ".",Space,Str "\1055\1088\1077\1076\1087\1086\1083\1086\1078\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1099",Space,Str "\1093\1086\1090\1080\1084",Space,Str "\1087\1088\1086\1092\1080\1083\1100\1090\1088\1086\1074\1072\1090\1100",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1095\1080\1089\1077\1083",Str ",",Space,Str "\1084\1099",Space,Str "\1093\1086\1090\1080\1084",Space,Str "\1074\1099\1073\1088\1072\1090\1100",Space,Str "\1080\1079",Space,Str "\1085\1080\1093",Space,Str "\1083\1080\1096\1100",Space,Str "\1090\1077",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1077\1085\1100\1096\1077",Space,Str "10",Str ",",Space,Str "\1085\1086",Space,Str "\1073\1086\1083\1100\1096\1077",Space,Str "2",Str ",",Space,Str "\1080",Space,Str "\1082",Space,Str "\1090\1086\1084\1091",Space,Str "\1078\1077",Space,Str "\1086\1085\1080",Space,Str "\1076\1086\1083\1078\1085\1099",Space,Str "\1073\1099\1090\1100",Space,Str "\1095\1105\1090\1085\1099\1084\1080",Str ".",Space,Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1085\1072\1087\1080\1089\1072\1090\1100",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nf :: [Int] -> [Int]\nf = filter p\n    where p x = x > 2 && x < 10 && even x\n\\end{code}\n"
,Para [Str "\1055\1088\1080",Space,Str "\1101\1090\1086\1084",Space,Str "\1085\1072\1084",Space,Str "\1087\1088\1080\1093\1086\1076\1080\1090\1089\1103",Space,Str "\1076\1072\1074\1072\1090\1100",Space,Str "\1082\1072\1082\1086\1077",Str "-",Str "\1085\1080\1073\1091\1076\1100",Space,Str "\1080\1084\1103",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090\1091",Str ",",Space,Str "\1085\1072\1087\1088\1080\1084\1077\1088",Space,RawInline "latex" "\\In{p}",Str ".",Space,Str "\1057",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1073\1077\1079\1099\1084\1103\1085\1085\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1084\1099",Space,Str "\1084\1086\1075\1083\1080",Space,Str "\1073\1099",Space,Str "\1085\1072\1087\1080\1089\1072\1090\1100",Space,Str "\1090\1072\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nf :: [Int] -> [Int]\nf = filter (\\x -> x > 2 && x < 10 && even x)\n\\end{code}\n"
,Para [Str "\1057\1084\1086\1090\1088\1080\1090\1077",Space,Str "\1084\1099",Space,Str "\1089\1086\1089\1090\1072\1074\1080\1083\1080",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090",Space,Str "\1089\1088\1072\1079\1091",Space,Str "\1074",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{filter}",Str ".",Space,Str "\1042\1099\1088\1072\1078\1077\1085\1080\1077",Space,RawInline "latex" "\\In{(}\\verb!\\!\\In{x -> x > 2 && x < 10 && even x)}",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1086\1073\1099\1095\1085\1099\1084",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077\1084",Str "."]
,Para [Str "\1042\1086\1079\1084\1086\1078\1085\1086",Space,Str "\1091",Space,Str "\1074\1072\1089",Space,Str "\1087\1086\1103\1074\1080\1083\1089\1103",Space,Str "\1074\1086\1087\1088\1086\1089",Str ",",Space,Str "\1075\1076\1077",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str "?",Space,Str "\1043\1076\1077",Space,Str "\1090\1086\1090",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1087\1086",Space,Str "\1082\1086\1090\1086\1088\1086\1084\1091",Space,Str "\1084\1099",Space,Str "\1087\1088\1086\1074\1086\1076\1080\1084",Space,Str "\1092\1080\1083\1100\1090\1088\1072\1094\1080\1102",Str ".",Space,Str "\1054\1090\1074\1077\1090",Space,Str "\1085\1072",Space,Str "\1101\1090\1086\1090",Space,Str "\1074\1086\1087\1088\1086\1089",Space,Str "\1082\1088\1086\1077\1090\1089\1103",Space,Str "\1074",Space,Str "\1095\1072\1089\1090\1080\1095\1085\1086\1084",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1080",Str ".",Space,Str "\1044\1072\1074\1072\1081\1090\1077",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1084",Space,Str "\1087\1086",Space,Str "\1087\1088\1072\1074\1080\1083\1091",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1103",Space,Str "\1090\1080\1087",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{filter}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n    f :: (a -> Bool) -> [a] -> [a],    x :: (Int -> Bool)\n    ------------------------------------------------------\n                (f x) :: [Int] -> [Int]\n\\end{code}\n"
,Para [Str "\1055\1086\1089\1083\1077",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1103",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088",Space,RawInline "latex" "\\In{a}",Space,Str "\1089\1074\1103\1079\1099\1074\1072\1077\1090\1089\1103",Space,Str "\1089",Space,Str "\1090\1080\1087\1086\1084",Space,RawInline "latex" "\\In{Int}",Str ",",Space,Str "\1087\1086\1089\1082\1086\1083\1100\1082\1091",Space,Str "\1087\1088\1080",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1080",Space,Str "\1087\1088\1086\1080\1089\1093\1086\1076\1080\1090",Space,Str "\1089\1086\1087\1086\1089\1090\1072\1074\1083\1077\1085\1080\1077",Space,Str "\1073\1086\1083\1077\1077",Space,Str "\1086\1073\1097\1077\1075\1086",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090\1072",Space,RawInline "latex" "\\In{a -> Bool}",Space,Str "\1080\1079",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{filter}",Space,Str "\1089",Space,Str "\1090\1077\1084",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1084\1099",Space,Str "\1087\1077\1088\1077\1076\1072\1083\1080",Space,Str "\1087\1077\1088\1074\1099\1084",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1084",Space,RawInline "latex" "\\In{Int -> Bool}",Str ".",Space,Str "\1055\1086\1089\1083\1077",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1084\1099",Space,Str "\1087\1086\1083\1091\1095\1072\1077\1084",Space,Str "\1090\1080\1087",Space,RawInline "latex" "\\In{(f x) :: [Int] -> [Int]}",Space,Str "\1101\1090\1086",Space,Str "\1082\1072\1082",Space,Str "\1088\1072\1079",Space,Str "\1090\1080\1087",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1094\1077\1083\1099\1093",Space,Str "\1095\1080\1089\1077\1083",Space,Str "\1080",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1094\1077\1083\1099\1093",Space,Str "\1095\1080\1089\1077\1083",Str ".",Space,Str "\1063\1072\1089\1090\1080\1095\1085\1086\1077",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1077",Space,Str "\1087\1086\1079\1074\1086\1083\1103\1077\1090",Space,Str "\1085\1072\1084",Space,Str "\1085\1077",Space,Str "\1087\1080\1089\1072\1090\1100",Space,Str "\1074",Space,Str "\1090\1072\1082\1080\1093",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103\1093",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nf xs = filter p xs\n    where p x = ...\n\\end{code}\n"
,RawBlock "latex" "\\noindent "
,Para [Str "\1087\1086\1089\1083\1077\1076\1085\1080\1081",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090",Space,RawInline "latex" "\\In{xs}",Str "."]
,Para [Str "\1050",Space,Str "\1087\1088\1080\1084\1077\1088\1091",Space,Str "\1074\1084\1077\1089\1090\1086"]
,RawBlock "latex" "\n\\begin{code}\nadd a b = (+) a b\n\\end{code}\n"
,RawBlock "latex" "\\noindent "
,Para [Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1087\1088\1086\1089\1090\1086",Space,Str "\1085\1072\1087\1080\1089\1072\1090\1100",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nadd = (+)\n\\end{code}\n"
,Para [Str "\1058\1072\1082\1086\1081",Space,Str "\1089\1090\1080\1083\1100",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1085\1072\1079\1099\1074\1072\1102\1090",Space,Emph [Str "\1073\1077\1089\1090\1086\1095\1077\1095\1085\1099\1084"],Space,Str "(",Str "point",Str "-",Str "free",Str ")",Str "."]
,Para [Str "\1044\1072\1074\1072\1081\1090\1077",Space,Str "\1074\1099\1088\1072\1079\1080\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{filter}",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1083\1103\1084\1073\1076\1072",Str "-",Str "\1092\1091\1085\1082\1094\1080\1081",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nfilter :: (a -> Bool) -> ([a] -> [a])\nfilter = \\p -> \\xs -> case xs of\n    []     -> []\n    (x:xs) -> let rest = filter p xs\n              in  if   p x\n                  then x : rest\n                  else rest\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1083\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{filter}",Space,Str "\1087\1086\1083\1100\1079\1091\1103\1089\1100",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1072\1084\1080",Space,Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1086\1085\1085\1086\1075\1086",Space,Str "\1089\1090\1080\1083\1103",Str ".",Space,Str "\1054\1073\1088\1072\1090\1080\1090\1077",Space,Str "\1074\1085\1080\1084\1072\1085\1080\1077",Space,Str "\1085\1072",Space,Str "\1089\1082\1086\1073\1082\1080",Space,Str "\1074",Space,Str "\1086\1073\1098\1103\1074\1083\1077\1085\1080\1080",Space,Str "\1090\1080\1087\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ".",Space,Str "\1071",Space,Str "\1093\1086\1090\1077\1083",Space,Str "\1085\1072\1087\1086\1084\1085\1080\1090\1100",Space,Str "\1074\1072\1084",Space,Str "\1086",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1074\1089\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1074",Space,Str "Haskell",Space,Str "\1103\1074\1083\1103\1102\1090\1089\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1103\1084\1080",Space,Str "\1086\1076\1085\1086\1075\1086",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1072",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{filter}",Space,Str "\1082\1072\1082",Space,Str "\1085\1077\1083\1100\1079\1103",Space,Str "\1083\1091\1095\1096\1077",Space,Str "\1087\1086\1076\1095\1105\1088\1082\1080\1074\1072\1077\1090",Space,Str "\1101\1090\1086\1090",Space,Str "\1092\1072\1082\1090",Str ".",Space,Str "\1052\1099",Space,Str "\1075\1086\1074\1086\1088\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{filter}",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1077\1081",Space,Str "\1086\1076\1085\1086\1075\1086",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1072",Space,RawInline "latex" "\\In{p}",Space,Str "\1074",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1080",Space,RawInline "latex" "\\In{}\\verb!\\!\\In{p ->}",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1090\1072\1082\1078\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1086\1076\1085\1086\1075\1086",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1072",Str ".",Space,Str "\1052\1099",Space,Str "\1074\1099\1087\1080\1089\1099\1074\1072\1077\1084",Space,Str "\1101\1090\1086",Space,Str "\1074",Space,Str "\1103\1074\1085\1086\1084",Space,Str "\1074\1080\1076\1077",Space,Str "\1074",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1080",Space,RawInline "latex" "\\In{}\\verb!\\!\\In{xs ->}",Str ".",Space,Str "\1044\1072\1083\1077\1077",Space,Str "\1080\1076\1105\1090",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1077",Str ",",Space,Str "\1082\1086\1090\1086\1088\1086\1077",Space,Str "\1089\1086\1076\1077\1088\1078\1080\1090",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str "."]
,Para [Str "\1054\1090\1084\1077\1090\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1083\1103\1084\1073\1076\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1084\1086\1075\1091\1090",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1090\1100",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1074",Str ",",Space,Str "\1074",Space,Str "\1087\1088\1077\1076\1099\1076\1091\1097\1077\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1080",Space,Str "\1084\1099",Space,Str "\1084\1086\1075\1083\1080",Space,Str "\1073\1099",Space,Str "\1085\1072\1087\1080\1089\1072\1090\1100",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nfilter :: (a -> Bool) -> ([a] -> [a])\nfilter = \\p xs -> case xs of\n    ...\n\\end{code}\n"
,RawBlock "latex" "\\noindent "
,Para [Str "\1085\1086",Space,Str "\1101\1090\1086",Space,Str "\1083\1080\1096\1100",Space,Str "\1089\1080\1085\1090\1072\1082\1089\1080\1095\1077\1089\1082\1080\1081",Space,Str "\1089\1072\1093\1072\1088",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1088\1072\1079\1074\1086\1088\1072\1095\1080\1074\1072\1077\1090\1089\1103",Space,Str "\1074",Space,Str "\1087\1088\1077\1076\1099\1076\1091\1097\1091\1102",Space,Str "\1079\1072\1087\1080\1089\1100",Str "."]
,Para [Str "\1044\1083\1103",Space,Str "\1090\1088\1077\1085\1080\1088\1086\1074\1082\1080",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1089\1090\1072\1085\1076\1072\1088\1090\1085\1099\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1076\1083\1103",Space,Str "\1088\1072\1073\1086\1090\1099",Space,Str "\1089",Space,Str "\1082\1086\1088\1090\1077\1078\1072\1084\1080",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1083\1103\1084\1073\1076\1072",Str "-",Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "(",Str "\1074\1089\1077",Space,Str "\1086\1085\1080",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1099",Space,Str "\1074",Space,RawInline "latex" "\\In{Prelude}",Str ")",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nfst :: (a, b) -> a\nfst = \\(a, _) -> a\n\nsnd :: (a, b) -> b\nsnd = \\(_, b) -> b\n\nswap :: (a, b) -> (b, a)\nswap = \\(a, b) -> (b, a)\n\\end{code}\n"
,Para [Str "\1054\1073\1088\1072\1090\1080\1090\1077",Space,Str "\1074\1085\1080\1084\1072\1085\1080\1077",Space,Str "\1085\1072",Space,Str "\1090\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1074\1089\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1089\1083\1086\1074\1085\1086",Space,Str "\1103\1074\1083\1103\1102\1090\1089\1103",Space,Str "\1082\1086\1085\1089\1090\1072\1085\1090\1072\1084\1080",Str ".",Space,Str "\1054\1085\1080",Space,Str "\1085\1077",Space,Str "\1089\1086\1076\1077\1088\1078\1072\1090",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1074",Str ".",Space,Str "\1040\1088\1075\1091\1084\1077\1085\1090\1099",Space,Str "\1084\1099",Space,Quoted DoubleQuote [Str "\1087\1088\1080\1089\1090\1088\1072\1080\1074\1072\1077\1084"],Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1073\1077\1079\1099\1084\1103\1085\1085\1099\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str "."]
,Para [Str "\1054\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1087\1088\1077\1086\1073\1088\1072\1079\1086\1074\1072\1085\1080\1103",Space,Str "\1087\1077\1088\1074\1086\1075\1086",Space,Str "\1080",Space,Str "\1074\1090\1086\1088\1086\1075\1086",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1072",Space,Str "\1082\1086\1088\1090\1077\1078\1072",Space,Str "(",Str "\1101\1090\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1099",Space,Str "\1074",Space,Str "\1084\1086\1076\1091\1083\1077",Space,RawInline "latex" "\\In{Control.Arrow}",Str ")"]
,RawBlock "latex" "\n\\begin{code}\nfirst :: (a -> a') -> (a, b) -> (a', b)\nfirst = \\f (a, b) -> (f a, b)\n\nsecond :: (b -> b') -> (a, b) -> (a, b')\nsecond = \\f (a, b) -> (a, f b)\n\\end{code}\n"
,Para [Str "\1058\1072\1082\1078\1077",Space,Str "\1074",Space,RawInline "latex" "\\In{Prelude}",Space,Str "\1077\1089\1090\1100",Space,Str "\1087\1086\1083\1077\1079\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1087\1088\1077\1074\1088\1072\1097\1072\1102\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1089",Space,Str "\1095\1072\1089\1090\1080\1095\1085\1099\1084",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1077\1084",Space,Str "\1074",Space,Str "\1086\1073\1099\1095\1085\1099",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1080",Space,Str "\1085\1072\1086\1073\1086\1088\1086\1090",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ncurry :: ((a, b) -> c) -> a -> b -> c\ncurry = \\f -> \\a -> \\b -> f (a, b)\n\nuncurry :: (a -> b -> c) -> ((a, b) -> c)\nuncurry = \\f -> \\(a, b) -> f a b\n\\end{code}\n"
,Para [Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{curry}",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1076\1074\1091\1093",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1074",Space,Str "\1076\1083\1103",Space,Str "\1082\1086\1090\1086\1088\1086\1081",Space,Str "\1095\1072\1089\1090\1080\1095\1085\1086\1077",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1077",Space,Str "\1085\1077\1074\1086\1079\1084\1086\1078\1085\1086",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1080\1084\1080\1090\1080\1088\1091\1077\1090\1089\1103",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1082\1086\1088\1090\1077\1078\1077\1081",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1103",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1082\1086\1088\1090\1077\1078",Space,Str "\1080\1079",Space,Str "\1076\1074\1091\1093",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1086\1074",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{curry}",Space,Str "(",Str "\1086\1090",Space,Str "\1089\1083\1086\1074\1072",Space,Str "\1082\1072\1088\1088\1080\1088\1086\1074\1072\1085\1080\1077",Str ",",Space,Str "\1095\1072\1089\1090\1080\1095\1085\1086\1077",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1077",Str ")",Space,Str "\1087\1088\1077\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1090\1072\1082\1091\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1074",Space,Str "\1086\1073\1099\1095\1085\1091\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "Haskell",Str ".",Space,Str "\1040",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{uncurry}",Space,Str "\1074\1099\1087\1086\1083\1085\1103\1077\1090",Space,Str "\1086\1073\1088\1072\1090\1085\1086\1077",Space,Str "\1087\1088\1077\1086\1073\1088\1072\1079\1086\1074\1072\1085\1080\1077",Str "."]
,Para [Str "\1057",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1083\1103\1084\1073\1076\1072",Str "-",Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1080\1084\1080\1090\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1083\1086\1082\1072\1083\1100\1085\1099\1077",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1099\1077",Str ".",Space,Str "\1058\1072\1082",Space,Str "\1085\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1087\1077\1088\1077\1087\1080\1089\1072\1090\1100",Space,Str "\1092\1086\1088\1084\1091\1083\1091",Space,Str "\1076\1083\1103",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Space,Str "\1087\1083\1086\1097\1072\1076\1080",Space,Str "\1090\1088\1077\1091\1075\1086\1083\1100\1085\1080\1082\1072",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nsquare a b c = \n    (\\p -> sqrt (p * (p - a) * (p - b) * (p - c))) \n    ((a + b + c) / 2)\n\\end{code}\n"
,Para [Str "\1057\1084\1086\1090\1088\1080\1090\1077",Space,Str "\1084\1099",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1083\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1086\1084",Space,Str "\1087\1086\1083\1091\1087\1077\1088\1080\1084\1077\1090\1088",Space,RawInline "latex" "\\In{p}",Space,Str "\1080",Space,Str "\1087\1077\1088\1077\1076\1072\1083\1080",Space,Str "\1074",Space,Str "\1085\1077\1105",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,RawInline "latex" "\\In{((a + b + c) / 2)}",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1074",Space,Str "\1085\1072\1096\1077\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1083\1086\1082\1072\1083\1100\1085\1099\1093",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1099\1093",Str ",",Space,Str "\1090\1086",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1089\1086\1089\1090\1072\1074\1080\1090\1100",Space,Str "\1083\1103\1084\1073\1076\1072",Str "-",Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1086\1090",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1080\1093",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1099\1093",Space,Str "\1080",Space,Str "\1087\1086\1076\1089\1090\1072\1074\1080\1090\1100",Space,Str "\1074",Space,Str "\1085\1077\1105",Space,Str "\1085\1091\1078\1085\1099\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str "."]
,Header 2 [Str "\1050\1072\1082\1086\1081",Space,Str "\1089\1090\1080\1083\1100",Space,Str "\1083\1091\1095\1096\1077",Str "?"]
,Para [Str "\1054\1089\1085\1086\1074\1085\1086\1081",Space,Str "\1082\1088\1080\1090\1077\1088\1080\1081",Space,Str "\1074\1099\1073\1086\1088\1072",Space,Str "\1079\1072\1082\1083\1102\1095\1072\1077\1090\1089\1103",Space,Str "\1074",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1089\1076\1077\1083\1072\1077\1090",Space,Str "\1083\1080",Space,Str "\1101\1090\1086\1090",Space,Str "\1101\1083\1077\1084\1077\1085\1090",Space,Str "\1082\1086\1076",Space,Str "\1073\1086\1083\1077\1077",Space,Emph [Str "\1103\1089\1085\1099\1084"],Str ".",Space,Str "\1053\1072\1075\1083\1103\1076\1085\1086\1089\1090\1100",Space,Str "\1082\1086\1076\1072",Space,Str "\1089\1090\1072\1085\1077\1090",Space,Str "\1079\1072\1083\1086\1075\1086\1084",Space,Str "\1091\1089\1087\1077\1096\1085\1086\1081",Space,Str "\1087\1086\1076\1076\1077\1088\1078\1082\1080",Str ".",Space,Str "\1045\1075\1086",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1083\1077\1075\1095\1077",Space,Str "\1087\1086\1085\1103\1090\1100",Space,Str "\1080",Space,Str "\1091\1083\1091\1095\1096\1080\1090\1100",Space,Str "\1087\1088\1080",Space,Str "\1085\1077\1086\1073\1093\1086\1076\1080\1084\1086\1089\1090\1080",Str "."]
,Para [Str "\1044\1072\1083\1077\1077",Space,Str "\1084\1099",Space,Str "\1088\1072\1089\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1087\1088\1080\1084\1077\1088\1086\1074",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1081",Space,Str "\1080\1079",Space,RawInline "latex" "\\In{Prelude}",Space,Str "\1080",Space,Str "\1087\1086\1076\1091\1084\1072\1077\1084",Str ",",Space,Str "\1087\1086\1095\1077\1084\1091",Space,Str "\1073\1099\1083",Space,Str "\1074\1099\1073\1088\1072\1085",Space,Str "\1090\1086\1090",Space,Str "\1080\1083\1080",Space,Str "\1080\1085\1086\1081",Space,Str "\1089\1090\1080\1083\1100",Str ".",Space,Str "\1053\1072\1095\1085\1105\1084",Space,Str "\1089",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Ord}",Space,Str "\1080",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1103",Space,Str "\1087\1086",Space,Str "\1091\1084\1086\1083\1095\1072\1085\1080\1102",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n-- \1058\1080\1087 \1091\1087\1086\1088\1103\1076\1086\1095\1080\1074\1072\1085\1080\1103\n\ndata  Ordering  =  LT | EQ | GT\n          deriving (Eq, Ord, Enum, Read, Show, Bounded)\n\n\nclass  (Eq a) => Ord a  where\n    compare              :: a -> a -> Ordering\n    (<), (<=), (>=), (>) :: a -> a -> Bool\n    max, min             :: a -> a -> a\n\n        -- \1052\1080\1085\1080\1084\1072\1083\1100\1085\1086\1077 \1087\1086\1083\1085\1086\1077 \1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077:\n        --      (<=) \1080\1083\1080 compare\n        -- \1048\1089\1087\1086\1083\1100\1079\1086\1074\1072\1085\1080\1077 compare \1084\1086\1078\1077\1090 \1086\1082\1072\1079\1072\1090\1100\1089\1103 \1073\1086\1083\1077\1077 \n        -- \1101\1092\1092\1077\1082\1090\1080\1074\1085\1099\1084 \1076\1083\1103 \1089\1083\1086\1078\1085\1099\1093 \1090\1080\1087\1086\1074.\n    compare x y\n         | x == y    =  EQ\n         | x <= y    =  LT\n         | otherwise =  GT\n\n    x <= y           =  compare x y /= GT\n    x <  y           =  compare x y == LT\n    x >= y           =  compare x y /= LT\n    x >  y           =  compare x y == GT\n\n    max x y \n         | x <= y    =  y\n         | otherwise =  x\n    min x y\n         | x <= y    =  x\n         | otherwise =  y\n\\end{code}\n"
,Para [Str "\1042\1089\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1099",Space,Str "\1074",Space,Str "\1076\1077\1082\1083\1072\1088\1072\1090\1080\1074\1085\1086\1084",Space,Str "\1089\1090\1080\1083\1077",Str ".",Space,Str "\1058\1080\1087",Space,RawInline "latex" "\\In{Ordering}",Space,Str "\1082\1086\1076\1080\1088\1091\1077\1090",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Space,Str "\1089\1088\1072\1074\1085\1077\1085\1080\1103",Str ".",Space,Str "\1044\1074\1072",Space,Str "\1095\1080\1089\1083\1072",Space,Str "\1084\1086\1075\1091\1090",Space,Str "\1073\1099\1090\1100",Space,Str "\1083\1080\1073\1086",Space,Str "\1088\1072\1074\1085\1099",Space,Str "(",Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,RawInline "latex" "\\In{EQ}",Str ")",Str ",",Space,Str "\1083\1080\1073\1086",Space,Str "\1087\1077\1088\1074\1086\1077",Space,Str "\1084\1077\1085\1100\1096\1077",Space,Str "\1074\1090\1086\1088\1086\1075\1086",Space,Str "(",Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,RawInline "latex" "\\In{LT}",Str ")",Str ",",Space,Str "\1083\1080\1073\1086",Space,Str "\1087\1077\1088\1074\1086\1077",Space,Str "\1073\1086\1083\1100\1096\1077",Space,Str "\1074\1090\1086\1088\1086\1075\1086",Space,Str "(",Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,RawInline "latex" "\\In{GT}",Str ")",Str "."]
,Para [Str "\1054\1073\1088\1072\1090\1080\1090\1077",Space,Str "\1074\1085\1080\1084\1072\1085\1080\1077",Space,Str "\1085\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{compare}",Str ".",Space,Str "\1052\1099",Space,Str "\1085\1077",Space,Str "\1087\1080\1096\1077\1084",Space,Str "\1076\1086\1089\1083\1086\1074\1085\1086\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Ordering}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n    compare x y\n         | x == y    =  EQ\n         | x <  y    =  LT\n         | x >  y    =  GT\n\\end{code}\n"
,Para [Str "\1042",Space,Str "\1101\1090\1086\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{compare}",Space,Str "\1073\1099\1083\1072",Space,Str "\1073\1099",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1072",Space,Str "\1095\1077\1088\1077\1079",Space,Str "\1076\1074\1077",Space,Str "\1076\1088\1091\1075\1080\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Ord}",Str ",",Space,Str "\1072",Space,Str "\1080\1084\1077\1085\1085\1086",Space,Str "\1073\1086\1083\1100\1096\1077",Space,RawInline "latex" "\\In{>}",Space,Str "\1080",Space,Str "\1084\1077\1085\1100\1096\1077",Space,RawInline "latex" "\\In{<}",Str ".",Space,Str "\1052\1099",Space,Str "\1078\1077",Space,Str "\1093\1086\1090\1080\1084",Space,Str "\1084\1080\1085\1080\1084\1080\1079\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1095\1080\1089\1083\1086",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1074",Space,Str "\1101\1090\1086\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1080",Str ".",Space,Str "\1055\1086\1101\1090\1086\1084\1091",Space,Str "\1074\1084\1077\1089\1090\1086",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1103",Space,Str "\1084\1099",Space,Str "\1087\1086\1083\1072\1075\1072\1077\1084\1089\1103",Space,Str "\1085\1072",Space,Str "\1086\1095\1077\1088\1105\1076\1085\1086\1089\1090\1100",Space,Str "\1086\1073\1093\1086\1076\1072",Space,Str "\1072\1083\1100\1090\1077\1088\1085\1072\1090\1080\1074",Space,Str "\1074",Space,Str "\1086\1093\1088\1072\1085\1085\1086\1084",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1080",Str "."]
,Para [Str "\1045\1089\1083\1080",Space,Str "\1087\1077\1088\1074\1099\1081",Space,Str "\1089\1083\1091\1095\1072\1081",Space,Str "\1085\1077",Space,Str "\1087\1088\1086\1096\1105\1083",Str ",",Space,Str "\1090\1086",Space,Str "\1074\1086",Space,Str "\1074\1090\1086\1088\1086\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1085\1077\1090",Space,Str "\1088\1072\1079\1085\1080\1094\1099",Space,Str "\1084\1077\1078\1076\1091",Space,Str "\1092\1091\1085\1082\1094\1080\1103\1084\1080",Space,RawInline "latex" "\\In{<}",Space,Str "\1080",Space,RawInline "latex" "\\In{<=}",Str ".",Space,Str "\1040",Space,Str "\1077\1089\1083\1080",Space,Str "\1085\1077",Space,Str "\1087\1088\1086\1096\1105\1083",Space,Str "\1080",Space,Str "\1101\1090\1086\1090",Space,Str "\1089\1083\1091\1095\1072\1081",Str ",",Space,Str "\1090\1086",Space,Str "\1086\1089\1090\1072\1105\1090\1089\1103",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1074\1077\1088\1085\1091\1090\1100",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,RawInline "latex" "\\In{GT}",Str ".",Space,Str "\1058\1072\1082",Space,Str "\1084\1099",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1083\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{compare}",Space,Str "\1095\1077\1088\1077\1079",Space,Str "\1086\1076\1085\1091",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Ord}",Str "."]
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1087\1086\1083\1077\1079\1085\1099\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1076\1083\1103",Space,Str "\1089\1087\1080\1089\1082\1086\1074",Str ".",Space,Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1090\1088\1080",Space,Str "\1086\1089\1085\1086\1074\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1076\1083\1103",Space,Str "\1089\1087\1080\1089\1082\1086\1074",Str ",",Space,Str "\1086\1076\1085\1072",Space,Str "\1080\1079",Space,Str "\1085\1080\1093",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1086",Space,Str "\1074\1072\1084",Space,Str "\1091\1078\1077",Space,Str "\1087\1086\1088\1103\1076\1082\1086\1084",Space,Str "\1087\1086\1076\1085\1072\1076\1086\1077\1083\1072",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n-- \1055\1088\1077\1086\1073\1088\1072\1079\1086\1074\1072\1085\1080\1077 \1089\1087\1080\1089\1082\1072\nmap :: (a -> b) -> [a] -> [b]\nmap f []     = []\nmap f (x:xs) = f x : map f xs\n\n-- \1060\1080\1083\1100\1090\1088\1072\1094\1080\1103 \1089\1087\1080\1089\1082\1072\nfilter :: (a -> Bool) -> [a] -> [a]\nfilter p []                 = []\nfilter p (x:xs) | p x       = x : filter p xs\n                | otherwise = filter p xs\n\n-- \1057\1074\1105\1088\1090\1082\1072 \1089\1087\1080\1089\1082\1072\nfoldr            :: (a -> b -> b) -> b -> [a] -> b\nfoldr f z []     =  z\nfoldr f z (x:xs) =  f x (foldr f z xs)\n\\end{code}\n"
,Para [Str "\1055\1088\1080\1074\1077\1076\1105\1084",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1087\1088\1080\1084\1077\1088\1086\1074",Space,Str "\1076\1083\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{foldr}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nand, or :: [Bool] -> Bool\nand = foldr (&&) True\nor  = foldr (||) False\n\n(++) :: [a] -> [a] -> [a]\n[]     ++ ys = ys\n(x:xs) ++ ys = x : (xs ++ ys)\n    \nconcat :: [[a]] -> [a]\nconcat = foldr (++) []\n\\end{code}\n"
,Para [Str "\1060\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{and}",Space,Str "\1080",Space,RawInline "latex" "\\In{or}",Space,Str "\1074\1099\1087\1086\1083\1085\1103\1102\1090",Space,Str "\1083\1086\1075\1080\1095\1077\1089\1082\1080\1077",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Space,Str "\1085\1072",Space,Str "\1089\1087\1080\1089\1082\1072\1093",Str ".",Space,Str "\1058\1072\1082",Space,Str "\1082\1072\1078\1076\1099\1081",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088",Space,RawInline "latex" "\\In{(:)}",Space,Str "\1079\1072\1084\1077\1085\1103\1077\1090\1089\1103",Space,Str "\1085\1072",Space,Str "\1089\1086\1086\1090\1074\1077\1090\1089\1090\1074\1091\1102\1097\1091\1102",Space,Str "\1083\1086\1075\1080\1095\1077\1089\1082\1091\1102",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1102",Str ",",Space,Str "\1072",Space,Str "\1087\1091\1089\1090\1086\1081",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1079\1072\1084\1077\1085\1103\1077\1090\1089\1103",Space,Str "\1085\1072",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Str ",",Space,Str "\1082\1086\1090\1086\1088\1086\1077",Space,Str "\1085\1077",Space,Str "\1074\1083\1080\1103\1077\1090",Space,Str "\1085\1072",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090",Space,Str "\1074\1099\1087\1086\1083\1085\1077\1085\1080\1103",Space,Str "\1076\1072\1085\1085\1086\1081",Space,Str "\1083\1086\1075\1080\1095\1077\1089\1082\1086\1081",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Str ".",Space,Str "\1048\1084\1077\1077\1090\1089\1103",Space,Str "\1074\1074\1080\1076\1091",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{(&& True)}",Space,Str "\1080",Space,RawInline "latex" "\\In{(|| False)}",Space,Str "\1076\1072\1102\1090",Space,Str "\1090\1086\1090",Space,Str "\1078\1077",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{id x = x}",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{(++)}",Space,Str "\1086\1073\1098\1077\1076\1080\1085\1103\1077\1090",Space,Str "\1076\1074\1072",Space,Str "\1089\1087\1080\1089\1082\1072",Str ",",Space,Str "\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{concat}",Space,Str "\1074\1099\1087\1086\1083\1085\1103\1077\1090",Space,Str "\1090\1091",Space,Str "\1078\1077",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1102",Str ",",Space,Str "\1085\1086",Space,Str "\1085\1072",Space,Str "\1089\1087\1080\1089\1082\1077",Space,Str "\1089\1087\1080\1089\1082\1086\1074",Str "."]
,Para [Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{zip}",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1076\1074\1072",Space,Str "\1089\1087\1080\1089\1082\1072",Space,Str "\1080",Space,Str "\1089\1084\1077\1096\1080\1074\1072\1077\1090",Space,Str "\1080\1093",Space,Str "\1074",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1087\1072\1088",Str ".",Space,Str "\1050\1072\1082",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1086\1076\1080\1085",Space,Str "\1080\1079",Space,Str "\1089\1087\1080\1089\1082\1086\1074",Space,Str "\1086\1073\1086\1088\1074\1105\1090\1089\1103",Space,Str "\1086\1073\1086\1088\1074\1105\1090\1089\1103",Space,Str "\1080",Space,Str "\1089\1087\1080\1089\1086\1082",Str "-",Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090",Str ".",Space,Str "\1069\1090\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1095\1072\1089\1090\1085\1099\1084",Space,Str "\1089\1083\1091\1095\1072\1077\1084",Space,Str "\1073\1086\1083\1077\1077",Space,Str "\1086\1073\1097\1077\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{zipWith}",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1076\1074\1091\1093",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1074",Space,Str "\1080",Space,Str "\1076\1074\1072",Space,Str "\1089\1087\1080\1089\1082\1072",Space,Str "\1080",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1077\1090",Space,Str "\1085\1086\1074\1099\1081",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1087\1086\1087\1072\1088\1085\1099\1093",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1081",Str "."]
,RawBlock "latex" "\n\\begin{code}\n-- zip-\1099 \nzip :: [a] -> [b] -> [(a, b)]\nzip = zipWith (,)\n\nzipWith :: (a -> b -> c) -> [a] -> [b] -> [c]\nzipWith z (a:as) (b:bs) =  z a b : zipWith z as bs\nzipWith _ _ _           =  []\n\\end{code}\n"
,Para [Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1082\1072\1082",Space,Str "\1088\1072\1073\1086\1090\1072\1102\1090",Space,Str "\1101\1090\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1074",Space,Str "\1080\1085\1090\1077\1088\1087\1088\1077\1090\1072\1090\1086\1088\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nPrelude> zip [1,2,3] \"hello\"\n[(1,'h'),(2,'e'),(3,'l')]\nPrelude> zipWith (+) [1,2,3] [3,2,1]\n[4,4,4]\nPrelude> zipWith (*) [1,2,3] [5,4,3,2,1]\n[5,8,9]\n\\end{code}\n"
,Para [Str "\1054\1090\1084\1077\1090\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1074",Space,RawInline "latex" "\\In{Prelude}",Space,Str "\1090\1072\1082\1078\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1072",Space,Str "\1086\1073\1088\1072\1090\1085\1072\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{unzip}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nunzip   :: [(a,b)] -> ([a], [b]) \n\\end{code}\n"
,Para [Str "\1054\1085\1072",Space,Str "\1073\1077\1088\1105\1090",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1087\1072\1088",Space,Str "\1080",Space,Str "\1088\1072\1079\1073\1080\1074\1072\1077\1090",Space,Str "\1077\1075\1086",Space,Str "\1085\1072",Space,Str "\1076\1074\1072",Space,Str "\1089\1087\1080\1089\1082\1072",Str "."]
,Para [Str "\1055\1086\1082\1072",Space,Str "\1087\1086",Space,Str "\1101\1090\1080\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1103\1084",Space,Str "\1082\1072\1078\1077\1090\1089\1103",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1086\1085\1085\1099\1081",Space,Str "\1089\1090\1080\1083\1100",Space,Str "\1089\1086\1074\1089\1077\1084",Space,Str "\1085\1080\1075\1076\1077",Space,Str "\1085\1077",Space,Str "\1087\1088\1080\1084\1077\1085\1103\1077\1090\1089\1103",Str ".",Space,Str "\1054\1085",Space,Str "\1074\1089\1090\1088\1077\1090\1080\1083\1089\1103",Space,Str "\1085\1072\1084",Space,Str "\1083\1080\1096\1100",Space,Str "\1074",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{break}",Str ".",Space,Str "\1053\1086",Space,Str "\1076\1072\1074\1072\1081\1090\1077",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1080",Space,Str "\1085\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1089",Space,Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1086\1085\1085\1099\1084",Space,Str "\1089\1090\1080\1083\1077\1084",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nlines            :: String -> [String]\nlines \"\"         =  []\nlines s          =  let (l, s') = break (== '\\n') s\n                    in  l : case s' of\n                              []      -> []\n                              (_:s'') -> lines s''\n\\end{code}\n"
,Para [Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{line}",Space,Str "\1088\1072\1079\1073\1080\1074\1072\1077\1090",Space,Str "\1089\1090\1088\1086\1082\1091",Space,Str "\1085\1072",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1089\1090\1088\1086\1082",Str ".",Space,Str "\1069\1090\1080",Space,Str "\1089\1090\1088\1086\1082\1080",Space,Str "\1073\1099\1083\1080",Space,Str "\1088\1072\1079\1076\1077\1083\1077\1085\1099",Space,Str "\1074",Space,Str "\1080\1089\1093\1086\1076\1085\1086\1081",Space,Str "\1089\1090\1088\1086\1082\1077",Space,Str "\1089\1080\1084\1074\1086\1083\1086\1084",Space,Str "\1087\1077\1088\1077\1085\1086\1089\1072",Space,RawInline "latex" "\\In{'}\\verb!\\!\\In{n'}",Str "."]
,Para [Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{break}",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090",Space,Str "\1080",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1080",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1076\1074\1072",Space,Str "\1089\1087\1080\1089\1082\1072",Str ".",Space,Str "\1042",Space,Str "\1087\1077\1088\1074\1086\1084",Space,Str "\1074\1089\1077",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1099",Space,Str "\1086\1090",Space,Str "\1085\1072\1095\1072\1083\1072",Space,Str "\1089\1087\1080\1089\1082\1072",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1085\1077",Space,Str "\1091\1076\1086\1074\1083\1077\1090\1074\1086\1088\1103\1102\1090",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090\1091",Str ",",Space,Str "\1072",Space,Str "\1074\1086",Space,Str "\1074\1090\1086\1088\1086\1084",Space,Str "\1074\1089\1077",Space,Str "\1086\1089\1090\1072\1083\1100\1085\1099\1077",Str ".",Space,Str "\1053\1072\1096",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090",Space,RawInline "latex" "\\In{(== '}\\verb!\\!\\In{n')}",Space,Str "\1074\1099\1076\1077\1083\1103\1077\1090",Space,Str "\1074\1089\1077",Space,Str "\1089\1080\1084\1074\1086\1083\1099",Space,Str "\1082\1088\1086\1084\1077",Space,Str "\1087\1077\1088\1077\1085\1086\1089\1072",Space,Str "\1082\1072\1088\1077\1090\1082\1080",Str ".",Space,Str "\1042",Space,Str "\1089\1090\1088\1086\1082\1077"]
,RawBlock "latex" "\n\\begin{code}\nlet (l, s') = break (== '\\n') s\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1089\1086\1093\1088\1072\1085\1103\1077\1084",Space,Str "\1074\1089\1077",Space,Str "\1089\1080\1084\1074\1086\1083\1099",Space,Str "\1076\1086",Space,RawInline "latex" "\\In{'}\\verb!\\!\\In{n'}",Space,Str "\1086\1090",Space,Str "\1085\1072\1095\1072\1083\1072",Space,Str "\1089\1090\1088\1086\1082\1080",Space,Str "\1074",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1086\1081",Space,RawInline "latex" "\\In{l}",Str ".",Space,Str "\1047\1072\1090\1077\1084",Space,Str "\1084\1099",Space,Str "\1088\1077\1082\1091\1088\1089\1080\1074\1085\1086",Space,Str "\1074\1099\1079\1099\1074\1072\1077\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{lines}",Space,Str "\1085\1072",Space,Str "\1086\1089\1090\1072\1074\1096\1077\1081\1089\1103",Space,Str "\1095\1072\1089\1090\1080",Space,Str "\1089\1087\1080\1089\1082\1072",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n                    in  l : case s' of\n                              []      -> []\n                              (_:s'') -> lines s''\n\\end{code}\n"
,Para [Str "\1055\1088\1080",Space,Str "\1101\1090\1086\1084",Space,Str "\1084\1099",Space,Str "\1087\1088\1086\1087\1091\1089\1082\1072\1077\1084",Space,Str "\1074",Space,RawInline "latex" "\\In{s'}",Space,Str "\1087\1077\1088\1074\1099\1081",Space,Str "\1101\1083\1077\1084\1077\1085\1090",Str ",",Space,Str "\1087\1086\1089\1082\1086\1083\1100\1082\1091",Space,Str "\1086\1085",Space,Str "\1089\1086\1076\1077\1088\1078\1080\1090",Space,Str "\1089\1080\1084\1074\1086\1083",Space,Str "\1087\1077\1088\1077\1085\1086\1089\1072",Space,Str "\1082\1072\1088\1077\1090\1082\1080",Str "."]
,Para [Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1077\1097\1105",Space,Str "\1086\1076\1085\1091",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1076\1083\1103",Space,Str "\1088\1072\1073\1086\1090\1099",Space,Str "\1089\1086",Space,Str "\1089\1090\1088\1086\1082\1072\1084\1080",Str "."]
,RawBlock "latex" "\n\\begin{code}\nwords            :: String -> [String]\nwords s          =  case dropWhile Char.isSpace s of\n                      \"\" -> []\n                      s' -> w : words s''\n                            where (w, s'') = break Char.isSpace s'\n\\end{code}\n"
,Para [Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{words}",Space,Str "\1076\1077\1083\1072\1077\1090",Space,Str "\1090\1086\1078\1077",Space,Str "\1089\1072\1084\1086\1077",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1080",Space,RawInline "latex" "\\In{lines}",Str ",",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1090\1077\1087\1077\1088\1100",Space,Str "\1074",Space,Str "\1082\1072\1095\1077\1089\1090\1074\1077",Space,Str "\1088\1072\1079\1076\1077\1083\1080\1090\1077\1083\1103",Space,Str "\1074\1099\1089\1090\1091\1087\1072\1077\1090",Space,Str "\1087\1088\1086\1073\1077\1083",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{dropWhile}",Space,Str "\1086\1090\1073\1088\1072\1089\1099\1074\1072\1077\1090",Space,Str "\1086\1090",Space,Str "\1085\1072\1095\1072\1083\1072",Space,Str "\1089\1087\1080\1089\1082\1072",Space,Str "\1074\1089\1077",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1099",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1091\1076\1086\1074\1083\1077\1090\1074\1086\1088\1103\1102\1090",Space,Str "\1087\1088\1077\1076\1080\1082\1072\1090\1091",Str ".",Space,Str "\1042",Space,Str "\1089\1090\1088\1086\1082\1077"]
,RawBlock "latex" "\n\\begin{code}\ncase dropWhile Char.isSpace s of\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1086\1076\1085\1086\1074\1088\1077\1084\1077\1085\1085\1086",Space,Str "\1086\1090\1073\1088\1072\1089\1099\1074\1072\1077\1084",Space,Str "\1074\1089\1077",Space,Str "\1087\1077\1088\1074\1099\1077",Space,Str "\1087\1088\1086\1073\1077\1083\1099",Space,Str "\1080",Space,Str "\1075\1086\1090\1086\1074\1080\1084",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1076\1083\1103",Space,Str "\1076\1077\1082\1086\1084\1087\1086\1079\1080\1094\1080\1080",Str ".",Space,Str "\1044\1072\1083\1100\1096\1077",Space,Str "\1084\1099",Space,Str "\1088\1072\1089\1089\1084\1072\1090\1088\1080\1074\1072\1077\1084",Space,Str "\1076\1074\1072",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1099\1093",Space,Str "\1089\1083\1091\1095\1072\1103",Space,Str "\1076\1083\1103",Space,Str "\1089\1090\1088\1086\1082",Str "."]
,RawBlock "latex" "\n\\begin{code}\n                      \"\" -> []  \n                      s' -> w : words s''\n                            where (w, s'') = break Char.isSpace s'\n\\end{code}\n"
,Para [Str "\1045\1089\1083\1080",Space,Str "\1089\1090\1088\1086\1082\1072",Space,Str "\1087\1091\1089\1090\1072",Str ",",Space,Str "\1090\1086",Space,Str "\1076\1077\1083\1072\1090\1100",Space,Str "\1073\1086\1083\1100\1096\1077",Space,Str "\1085\1077\1095\1077\1075\1086",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\8211",Space,Str "\1085\1077\1090",Str ",",Space,Str "\1084\1099",Space,Str "\1090\1072\1082\1078\1077",Space,Str "\1082\1072\1082",Space,Str "\1080",Space,Str "\1074",Space,Str "\1087\1088\1077\1076\1099\1076\1091\1097\1077\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1087\1088\1080\1084\1077\1085\1103\1077\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{break}",Space,Str "\1076\1083\1103",Space,Str "\1090\1086\1075\1086",Str ",",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1074\1099\1076\1077\1083\1080\1090\1100",Space,Str "\1074\1089\1077",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1099",Space,Str "\1082\1088\1086\1084\1077",Space,Str "\1087\1088\1086\1073\1077\1083\1072",Str ",",Space,Str "\1072",Space,Str "\1079\1072\1090\1077\1084",Space,Str "\1088\1077\1082\1091\1088\1089\1080\1074\1085\1086",Space,Str "\1074\1099\1079\1099\1074\1072\1077\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{words}",Space,Str "\1085\1072",Space,Str "\1086\1089\1090\1072\1074\1096\1077\1081\1089\1103",Space,Str "\1095\1072\1089\1090\1080",Space,Str "\1089\1087\1080\1089\1082\1072",Str "."]
,Header 2 [Str "\1050\1088\1072\1090\1082\1086\1077",Space,Str "\1089\1086\1076\1077\1088\1078\1072\1085\1080\1077"]
,Para [Str "\1042",Space,Str "\1101\1090\1086\1081",Space,Str "\1075\1083\1072\1074\1077",Space,Str "\1084\1099",Space,Str "\1091\1079\1085\1072\1083\1080",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1084\1085\1086\1075\1086",Space,Str "\1085\1086\1074\1099\1093",Space,Str "\1089\1080\1085\1090\1072\1082\1089\1080\1095\1077\1089\1082\1080\1093",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1094\1080\1081",Space,Str "\1076\1083\1103",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str ".",Space,Str "\1054\1085\1080",Space,Str "\1087\1086\1103\1074\1083\1103\1083\1080\1089\1100",Space,Str "\1087\1072\1088\1072\1084\1080",Str ".",Space,Str "\1057\1074\1077\1076\1105\1084",Space,Str "\1080\1093",Space,Str "\1074",Space,Str "\1090\1072\1073\1083\1080\1094\1091",Str ":"]
,Table [] [AlignDefault,AlignDefault,AlignDefault] [0.2875,0.3375,0.3375]
 [[Plain [Str "\1069\1083\1077\1084\1077\1085\1090"]]
 ,[Plain [Str "\1044\1077\1082\1083\1072\1088\1072\1090\1080\1074\1085\1099\1081",Space,Str "\1089\1090\1080\1083\1100"]]
 ,[Plain [Str "\1050\1086\1084\1087\1086\1079\1080\1094\1080\1086\1085\1085\1099\1081"]]]
 [[[Plain [Str "\1051\1086\1082\1072\1083\1100\1085\1099\1077",Space,Str "\1087\1077\1088\1077\1084\1077\1085\1085\1099\1077"]]
  ,[Plain [RawInline "latex" "\\In{where}",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103"]]
  ,[Plain [RawInline "latex" "\\In{let}",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103"]]]
 ,[[Plain [Str "\1044\1077\1082\1086\1084\1087\1086\1079\1080\1094\1080\1103"]]
  ,[Plain [Str "\1057\1086\1087\1086\1089\1090\1072\1074\1083\1077\1085\1080\1077",Space,Str "\1089",Space,Str "\1086\1073\1088\1072\1079\1094\1086\1084"]]
  ,[Plain [RawInline "latex" "\\In{case}",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103"]]]
 ,[[Plain [Str "\1059\1089\1083\1086\1074\1085\1099\1077",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103"]]
  ,[Plain [Str "\1054\1093\1088\1072\1085\1085\1099\1077",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103"]]
  ,[Plain [RawInline "latex" "\\In{if}",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103"]]]
 ,[[Plain [Str "\1054\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1081"]]
  ,[Plain [Str "\1059\1088\1072\1074\1085\1077\1085\1080\1103"]]
  ,[Plain [Str "\1083\1103\1084\1073\1076\1072",Str "-",Str "\1092\1091\1085\1082\1094\1080\1080"]]]]
,Header 4 [Str "\1054\1089\1086\1073\1077\1085\1085\1086\1089\1090\1080",Space,Str "\1089\1080\1085\1090\1072\1082\1089\1080\1089\1072"]
,Para [Str "\1053\1072\1084",Space,Str "\1074\1089\1090\1088\1077\1090\1080\1083\1072\1089\1100",Space,Str "\1085\1086\1074\1072\1103",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1094\1080\1103",Space,Str "\1074",Space,Str "\1089\1086\1087\1086\1089\1090\1072\1074\1083\1077\1085\1080\1080",Space,Str "\1089",Space,Str "\1086\1073\1088\1072\1079\1094\1086\1084",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nbeside :: Nat -> (Nat, Nat)\nbeside  Zero       = error \"undefined\"\nbeside  x@(Succ y) = (y, Succ x)\n\\end{code}\n"
,Para [Str "\1054\1085\1072",Space,Str "\1087\1086\1079\1074\1086\1083\1103\1077\1090",Space,Str "\1087\1088\1086\1074\1086\1076\1080\1090\1100",Space,Str "\1076\1077\1082\1086\1084\1087\1086\1079\1080\1094\1080\1102",Space,Str "\1080",Space,Str "\1076\1072\1074\1072\1090\1100",Space,Str "\1080\1084\1103",Space,Str "\1074\1089\1077\1084\1091",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1102",Space,Str "\1086\1076\1085\1086\1074\1088\1077\1084\1077\1085\1085\1086",Str ".",Space,Str "\1058\1072\1082\1080\1077",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Space,RawInline "latex" "\\In{x@(...)}",Space,Str "\1074",Space,Str "\1072\1085\1075\1083\1086\1103\1079\1099\1095\1085\1086\1081",Space,Str "\1083\1080\1090\1077\1088\1072\1090\1091\1088\1077",Space,Str "\1087\1088\1080\1085\1103\1090\1086",Space,Str "\1085\1072\1079\1099\1074\1072\1090\1100",Space,Str "as",Str "-",Str "patterns",Str "."]
,Header 2 [Str "\1059\1087\1088\1072\1078\1085\1077\1085\1080\1103"]
,BulletList
 [[Para [Str "\1042",Space,Str "\1101\1090\1086\1081",Space,Str "\1075\1083\1072\1074\1077",Space,Str "\1085\1072\1084",Space,Str "\1074\1089\1090\1088\1077\1090\1080\1083\1086\1089\1100",Space,Str "\1084\1085\1086\1075\1086",Space,Str "\1087\1086\1083\1077\1079\1085\1099\1093",Space,Str "\1089\1090\1072\1085\1076\1072\1088\1090\1085\1099\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str ",",Space,Str "\1087\1086\1090\1088\1077\1085\1080\1088\1091\1081\1090\1077\1089\1100",Space,Str "\1089",Space,Str "\1085\1080\1084\1080",Space,Str "\1074",Space,Str "\1080\1085\1090\1077\1088\1087\1088\1077\1090\1072\1090\1086\1088\1077",Str ".",Space,Str "\1042\1099\1079\1099\1074\1072\1081\1090\1077",Space,Str "\1080\1093",Space,Str "\1089",Space,Str "\1088\1072\1079\1083\1080\1095\1085\1099\1084\1080",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103\1084\1080",Str ",",Space,Str "\1101\1082\1089\1087\1077\1088\1080\1084\1077\1085\1090\1080\1088\1091\1081\1090\1077",Str "."]]
 ,[Para [Str "\1055\1086\1087\1088\1086\1073\1091\1081\1090\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1080\1079",Space,Str "\1087\1088\1077\1076\1099\1076\1091\1097\1080\1093",Space,Str "\1075\1083\1072\1074",Space,Str "\1074",Space,Str "\1095\1080\1089\1090\1086",Space,Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1086\1085\1085\1086\1084",Space,Str "\1089\1090\1080\1083\1077",Str "."]]
 ,[Para [Str "\1055\1086\1089\1084\1086\1090\1088\1080\1090\1077",Space,Str "\1085\1072",Space,Str "\1090\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1084\1099",Space,Str "\1087\1088\1086\1096\1083\1080",Space,Str "\1080",Space,Str "\1087\1086\1087\1088\1086\1073\1091\1081\1090\1077",Space,Str "\1087\1077\1088\1077\1087\1080\1089\1072\1090\1100",Space,Str "\1080\1093",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1103",Space,Str "\1096\1080\1074\1086\1088\1086\1090",Space,Str "\1085\1072",Space,Str "\1074\1099\1074\1086\1088\1086\1090",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1074\1099",Space,Str "\1074\1080\1076\1080\1090\1077",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1101\1083\1077\1084\1077\1085\1090",Space,Str "\1085\1072\1087\1080\1089\1072\1085",Space,Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1086\1085\1085\1086\1084",Space,Str "\1089\1090\1080\1083\1077",Space,Str "\1087\1077\1088\1077\1087\1080\1096\1080\1090\1077",Space,Str "\1077\1075\1086",Space,Str "\1074",Space,Str "\1076\1077\1082\1083\1072\1088\1072\1090\1080\1074\1085\1086\1084",Space,Str "\1080",Space,Str "\1085\1072\1086\1073\1086\1088\1086\1090",Str ".",Space,Str "\1055\1086\1083\1091\1095\1080\1074\1096\1080\1077\1089\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1084\1086\1075\1091\1090",Space,Str "\1087\1086\1082\1072\1079\1072\1090\1100\1089\1103",Space,Str "\1084\1086\1085\1089\1090\1088\1072\1084\1080",Str ",",Space,Str "\1085\1086",Space,Str "\1101\1090\1086",Space,Str "\1091\1087\1088\1072\1078\1085\1077\1085\1080\1077",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1087\1086\1084\1086\1095\1100",Space,Str "\1074\1072\1084",Space,Str "\1074",Space,Str "\1079\1072\1082\1088\1077\1087\1083\1077\1085\1080\1080",Space,Str "\1085\1086\1074\1099\1093",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1094\1080\1081",Space,Str "\1080",Space,Str "\1087\1086\1095\1091\1074\1089\1090\1074\1086\1074\1072\1090\1100",Space,Str "\1089\1080\1083\1100\1085\1099\1077",Space,Str "\1080",Space,Str "\1089\1083\1072\1073\1099\1077",Space,Str "\1089\1090\1086\1088\1086\1085\1099",Space,Str "\1090\1086\1075\1086",Space,Str "\1080\1083\1080",Space,Str "\1080\1085\1086\1075\1086",Space,Str "\1089\1090\1080\1083\1103",Str "."]]
 ,[Para [Str "\1054\1087\1088\1077\1076\1077\1083\1080\1090\1077",Space,Str "\1084\1086\1076\1091\1083\1100",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1074\1099\1095\1080\1089\1083\1103\1090\1100",Space,Str "\1087\1083\1086\1097\1072\1076\1080",Space,Str "\1087\1088\1086\1089\1090\1099\1093",Space,Str "\1092\1080\1075\1091\1088",Str ",",Space,Str "\1090\1088\1077\1091\1075\1086\1083\1100\1085\1080\1082\1072",Str ",",Space,Str "\1086\1082\1088\1091\1078\1085\1086\1089\1090\1080",Str ",",Space,Str "\1087\1088\1103\1084\1086\1091\1075\1086\1083\1100\1085\1080\1082\1072",Str ",",Space,Str "\1090\1088\1072\1087\1077\1094\1080\1080",Str ".",Space,Str "\1055\1086\1084\1085\1080\1090\1077",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1092\1080\1075\1091\1088\1099",Space,Str "\1084\1086\1075\1091\1090",Space,Str "\1079\1072\1076\1072\1074\1072\1090\1100\1089\1103",Space,Str "\1088\1072\1079\1083\1080\1095\1085\1099\1084\1080",Space,Str "\1089\1087\1086\1089\1086\1073\1072\1084\1080",Str "."]]
 ,[Para [Str "\1055\1086\1090\1086\1082",Space,Str "\1101\1090\1086",Space,Str "\1073\1077\1089\1082\1086\1085\1077\1095\1085\1099\1081",Space,Str "\1089\1087\1080\1089\1086\1082",Str ",",Space,Str "\1090",Str ".",Str "\1077",Str ".",Str "~",Str "\1089\1087\1080\1089\1086\1082",Str ",",Space,Str "\1091",Space,Str "\1082\1086\1090\1086\1088\1086\1075\1086",Space,Str "\1085\1077\1090",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088\1072",Space,Str "\1087\1091\1089\1090\1086\1075\1086",Space,Str "\1089\1087\1080\1089\1082\1072",Str ":"]]]
,RawBlock "latex" "\n\\begin{code}\ndata Stream a = a :& Stream a\n\\end{code}\n"
,Para [Str "\1058\1072\1082",Space,Str "\1085\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1089\1086\1089\1090\1072\1074\1080\1090\1100",Space,Str "\1087\1086\1090\1086\1082",Space,Str "\1080\1079",Space,Str "\1074\1089\1077\1093",Space,Str "\1095\1080\1089\1077\1083",Space,Str "\1055\1077\1072\1085\1086",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nnats :: Nat -> Stream Nat\nnats a = a :& nats (Succ a) \n\\end{code}\n"
,Para [Str "\1048\1083\1080",Space,Str "\1087\1086\1090\1086\1082",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1089\1086\1076\1077\1088\1078\1080\1090",Space,Str "\1086\1076\1080\1085",Space,Str "\1080",Space,Str "\1090\1086\1090",Space,Str "\1078\1077",Space,Str "\1101\1083\1077\1084\1077\1085\1090",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nconstStream :: a -> Stream a\nconstStream a = a :& constStream a \n\\end{code}\n"
,Para [Str "\1053\1072\1087\1080\1096\1080\1090\1077",Space,Str "\1084\1086\1076\1091\1083\1100",Space,Str "\1076\1083\1103",Space,Str "\1087\1086\1090\1086\1082\1086\1074",Str ".",Space,Str "\1042",Space,Str "\1087\1077\1088\1074\1091\1102",Space,Str "\1086\1095\1077\1088\1077\1076\1100",Space,Str "\1085\1072\1084",Space,Str "\1087\1086\1085\1072\1076\1086\1073\1103\1090\1089\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1074\1099\1076\1077\1083\1077\1085\1080\1103",Space,Str "\1095\1072\1089\1090\1077\1081",Space,Str "\1087\1086\1090\1086\1082\1072",Str ",",Space,Str "\1087\1086\1089\1082\1086\1083\1100\1082\1091",Space,Str "\1084\1099",Space,Str "\1085\1077",Space,Str "\1089\1084\1086\1078\1077\1084",Space,Str "\1088\1072\1089\1087\1077\1095\1072\1090\1072\1090\1100",Space,Str "\1087\1086\1090\1086\1082",Space,Str "\1094\1077\1083\1080\1082\1086\1084",Space,Str "(",Str "\1074\1077\1076\1100",Space,Str "\1086\1085",Space,Str "\1073\1077\1089\1082\1086\1085\1077\1095\1085\1099\1081",Str ")",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n-- \1055\1077\1088\1074\1099\1081 \1101\1083\1077\1084\1077\1085\1090 \1087\1086\1090\1086\1082\1072\nhead :: Stream a -> a\n\n-- \1061\1074\1086\1089\1090 \1087\1086\1090\1086\1082\1072, \1074\1089\1105 \1082\1088\1086\1084\1077 \1087\1077\1088\1074\1086\1075\1086 \1101\1083\1077\1084\1077\1085\1090\1072\ntail :: Stream a -> Stream a\n\n-- n-\1090\1099\1081 \1101\1083\1077\1084\1077\1085\1090 \1087\1086\1090\1086\1082\1072\n(!!) :: Stream a -> Int -> a\n\n-- \1041\1077\1088\1105\1090 \1080\1079 \1087\1086\1090\1086\1082\1072 \1085\1077\1089\1082\1086\1083\1100\1082\1086 \1087\1077\1088\1074\1099\1093 \1101\1083\1077\1084\1077\1085\1090\1086\1074:\ntake :: Int -> Stream a -> [a]\n\\end{code}\n"
,Para [Str "\1048\1084\1077\1085\1072",Space,Str "\1101\1090\1080\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1073\1091\1076\1091\1090",Space,Str "\1089\1086\1074\1087\1072\1076\1072\1090\1100",Space,Str "\1089",Space,Str "\1080\1084\1077\1085\1072\1084\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1076\1083\1103",Space,Str "\1089\1087\1080\1089\1082\1086\1074",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1080\1079\1073\1077\1078\1072\1090\1100",Space,Str "\1082\1086\1083\1083\1080\1079\1080\1081",Space,Str "\1080\1084\1105\1085",Space,Str "\1084\1099",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1091\1077\1084\1089\1103",Space,Str "\1082\1074\1072\1083\1080\1092\1080\1094\1080\1088\1086\1074\1072\1085\1085\1099\1084",Space,Str "\1080\1084\1087\1086\1088\1090\1086\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str ".",Space,Str "\1044\1077\1083\1072\1077\1090\1089\1103",Space,Str "\1101\1090\1086",Space,Str "\1090\1072\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nimport qualified Prelude as P( \1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1103 )\n\\end{code}\n"
,Para [Str "\1057\1083\1086\1074\1072",Space,RawInline "tex" "\\KeyWord{qualified as}",Space,RawInline "latex" "\\In{qualified}",Space,Str "\1080",Space,RawInline "latex" "\\In{as}",Space,Str "\8211",Space,Str "\1082\1083\1102\1095\1077\1074\1099\1077",Str ".",Space,Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1076\1083\1103",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1086\1074\1072\1085\1080\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1080\1079",Space,Str "\1084\1086\1076\1091\1083\1103",Space,RawInline "latex" "\\In{Prelude}",Space,Str "\1084\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1087\1080\1089\1072\1090\1100",Space,RawInline "latex" "\\In{P.\1080\1084\1103\1060\1091\1085\1082\1094\1080\1080}",Str ".",Space,Str "\1058\1072\1082\1080\1077",Space,Str "\1080\1084\1077\1085\1072",Space,Str "\1085\1072\1079\1099\1074\1072\1102\1090\1089\1103",Space,Str "\1082\1074\1072\1083\1080\1092\1080\1094\1080\1088\1086\1074\1072\1085\1085\1099\1084\1080",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1090\1086\1075\1086",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100\1089\1103",Space,Str "\1082\1074\1072\1083\1080\1092\1080\1094\1080\1088\1086\1074\1072\1085\1085\1099\1084\1080",Space,Str "\1080\1084\1077\1085\1072\1084\1080",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1076\1083\1103",Space,Str "\1090\1077\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str ",",Space,Str "\1076\1083\1103",Space,Str "\1082\1086\1090\1086\1088\1099\1093",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1072",Space,Str "\1082\1086\1083\1083\1080\1079\1080\1103",Space,Str "\1080\1084\1105\1085",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1087\1086\1089\1090\1091\1087\1080\1090\1100",Space,Str "\1090\1072\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nimport qualified Prelude as P\nimport Prelude\n\\end{code}\n"
,Para [Str "\1050\1086\1084\1087\1080\1083\1103\1090\1086\1088",Space,Str "\1088\1072\1079\1073\1077\1088\1105\1090\1089\1103",Str ",",Space,Str "\1082\1072\1082\1091\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1084\1099",Space,Str "\1080\1084\1077\1077\1084",Space,Str "\1074",Space,Str "\1074\1080\1076\1091",Str "."]
,Para [Str "\1044\1083\1103",Space,Str "\1091\1076\1086\1073\1089\1090\1074\1072",Space,Str "\1090\1077\1089\1090\1080\1088\1086\1074\1072\1085\1080\1103",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1090\1072\1082\1091\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1087\1077\1095\1072\1090\1080",Space,Str "\1087\1086\1090\1086\1082\1086\1074",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ninstance Show a => Show (Stream a) where\n    show xs =  showInfinity (show (take 5 xs))\n        where showInfinity x = P.init x  P.++ \"...\"\n\\end{code}\n"
,Para [Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{P.init}",Space,Str "\1074\1099\1076\1077\1083\1103\1077\1090",Space,Str "\1074\1089\1077",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1099",Space,Str "\1089\1087\1080\1089\1082\1072",Space,Str "\1082\1088\1086\1084\1077",Space,Str "\1087\1086\1089\1083\1077\1076\1085\1077\1075\1086",Str ".",Space,Str "\1042",Space,Str "\1076\1072\1085\1085\1086\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1086\1085\1072",Space,Str "\1086\1090\1082\1091\1089\1080\1090",Space,Str "\1086\1090",Space,Str "\1089\1090\1088\1086\1082\1080",Space,Str "\1079\1072\1082\1088\1099\1074\1072\1102\1097\1091\1102\1089\1103",Space,Str "\1089\1082\1086\1073\1082\1091",Str ".",Space,Str "\1055\1086\1089\1083\1077",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1084\1099",Space,Str "\1076\1086\1073\1072\1074\1083\1103\1077\1084",Space,Str "\1090\1088\1086\1077\1090\1086\1095\1080\1077",Str ",",Space,Str "\1082\1072\1082",Space,Str "\1089\1080\1084\1074\1086\1083",Space,Str "\1073\1077\1089\1082\1086\1085\1077\1095\1085\1086\1089\1090\1080",Space,Str "\1089\1087\1080\1089\1082\1072",Str "."]
,Para [Str "\1060\1091\1085\1082\1094\1080\1080",Space,Str "\1087\1088\1077\1086\1073\1088\1072\1079\1086\1074\1072\1085\1080\1103",Space,Str "\1087\1086\1090\1086\1082\1086\1074",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n-- \1055\1088\1077\1086\1073\1088\1072\1079\1086\1074\1072\1085\1080\1077 \1087\1086\1090\1086\1082\1072\nmap :: (a -> b) -> Stream a -> Stream b\n\n-- \1060\1080\1083\1100\1090\1088\1072\1094\1080\1103 \1087\1086\1090\1086\1082\1072\nfilter :: (a -> Bool) -> Stream a -> Stream a\n\n-- zip-\1099 \1076\1083\1103 \1087\1086\1090\1086\1082\1086\1074:\nzip :: Stream a -> Stream b -> Stream (a, b)\n\nzipWith :: (a -> b -> c) -> Stream a -> Stream b -> Stream c \n\\end{code}\n"
,Para [Str "\1060\1091\1085\1082\1094\1080\1103",Space,Str "\1075\1077\1085\1077\1088\1072\1094\1080\1080",Space,Str "\1087\1086\1090\1086\1082\1072",Str ":"]
,RawBlock "latex" "\n\\begin{code}\niterate :: (a -> a) -> a -> Stream a\n\\end{code}\n"
,Para [Str "\1069\1090\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1076\1074\1072",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1072",Str ":",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1089\1083\1077\1076\1091\1102\1097\1077\1075\1086",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1072",Space,Str "\1087\1086\1090\1086\1082\1072",Space,Str "\1080",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1087\1077\1088\1074\1086\1075\1086",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1072",Space,Str "\1087\1086\1090\1086\1082\1072",Space,Str "\1080",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1087\1086\1090\1086\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\niterate f a = a :& f a :& f (f a) :& f (f (f a)) :& ...\n\\end{code}\n"
,Para [Str "\1058\1072\1082",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1101\1090\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1089\1086\1079\1076\1072\1090\1100",Space,Str "\1087\1086\1090\1086\1082",Space,Str "\1074\1089\1077\1093",Space,Str "\1095\1080\1089\1077\1083",Space,Str "\1055\1077\1072\1085\1086",Space,Str "\1086\1090",Space,Str "\1085\1091\1083\1103",Space,Str "\1080\1083\1080",Space,Str "\1087\1086\1089\1090\1086\1103\1085\1085\1099\1081",Space,Str "\1087\1086\1090\1086\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nnats            = iterate Succ Zero \nconstStream a   = iterate (\\x -> x) a\n\\end{code}\n"
,Para [Str "\1042\1086\1079\1084\1086\1078\1085\1086",Space,Str "\1074\1072\1089",Space,Str "\1091\1076\1080\1074\1083\1103\1077\1090",Space,Str "\1090\1086\1090",Space,Str "\1092\1072\1082\1090",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1074",Space,Str "\1101\1090\1086\1084",Space,Str "\1091\1087\1088\1072\1078\1085\1077\1085\1080\1080",Space,Str "\1084\1099",Space,Str "\1086\1087\1077\1088\1080\1088\1091\1077\1084",Space,Str "\1073\1077\1089\1082\1086\1085\1077\1095\1085\1099\1084\1080",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103\1084\1080",Str ",",Space,Str "\1085\1086",Space,Str "\1087\1086\1082\1072",Space,Str "\1084\1099",Space,Str "\1085\1077",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1074\1076\1072\1074\1072\1090\1100\1089\1103",Space,Str "\1074",Space,Str "\1076\1077\1090\1072\1083\1080",Space,Str "\1090\1086\1075\1086",Space,Str "\1082\1072\1082",Space,Str "\1101\1090\1086",Space,Str "\1088\1072\1073\1086\1090\1072\1077\1090",Str ",",Space,Str "\1087\1088\1086\1089\1090\1086",Space,Str "\1087\1086\1087\1088\1086\1073\1091\1081\1090\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1101\1090\1086\1090",Space,Str "\1084\1086\1076\1091\1083\1100",Space,Str "\1080",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1080\1090\1077",Space,Str "\1074",Space,Str "\1080\1085\1090\1077\1088\1087\1088\1077\1090\1072\1090\1086\1088\1077",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1087\1086\1083\1091\1095\1080\1090\1089\1103",Str "."]]