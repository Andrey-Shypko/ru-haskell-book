[Header 1 [Str "\1051\1077\1085\1080\1074\1099\1077",Space,Str "\1095\1091\1076\1077\1089\1072"]
,Para [Str "\1042",Space,Str "\1087\1088\1086\1096\1083\1086\1081",Space,Str "\1075\1083\1072\1074\1077",Space,Str "\1084\1099",Space,Str "\1091\1079\1085\1072\1083\1080",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1090\1072\1082\1086\1077",Space,Str "\1083\1077\1085\1080\1074\1099\1077",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Str ".",Space,Str "\1042",Space,Str "\1101\1090\1086\1081",Space,Str "\1075\1083\1072\1074\1077",Space,Str "\1084\1099",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1095\1077\1084",Space,Str "\1086\1085\1080",Space,Str "\1093\1086\1088\1086\1096\1080",Str ".",Space,Str "\1057",Space,Str "\1085\1080\1084\1080",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1076\1077\1083\1072\1090\1100",Space,Str "\1085\1077\1074\1086\1079\1084\1086\1078\1085\1099\1077",Space,Str "\1074\1077\1097\1080",Str ".",Space,Str "\1054\1073\1088\1072\1097\1072\1090\1100\1089\1103",Space,Str "\1082",Space,Str "\1077\1097\1105",Space,Str "\1085\1077",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1085\1099\1084",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103\1084",Str ",",Space,Str "\1088\1072\1073\1086\1090\1072\1090\1100",Space,Str "\1089",Space,Str "\1073\1077\1089\1082\1086\1085\1077\1095\1085\1099\1084\1080",Space,Str "\1076\1072\1085\1085\1099\1084\1080",Str "."]
,Para [Str "\1052\1099",Space,Str "\1087\1080\1096\1077\1084",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1091",Str ",",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1088\1077\1096\1080\1090\1100",Space,Str "\1082\1072\1082\1091\1102",Str "-",Str "\1085\1080\1073\1091\1076\1100",Space,Str "\1089\1083\1086\1078\1085\1091\1102",Space,Str "\1079\1072\1076\1072\1095\1091",Str ".",Space,Str "\1063\1072\1089\1090\1086",Space,Str "\1090\1072\1082",Space,Str "\1073\1099\1074\1072\1077\1090",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1089\1083\1086\1078\1085\1072\1103",Space,Str "\1079\1072\1076\1072\1095\1072",Space,Str "\1086\1082\1072\1079\1099\1074\1072\1077\1090\1089\1103",Space,Str "\1089\1083\1086\1078\1085\1086\1081",Space,Str "\1076\1086",Space,Str "\1090\1077\1093",Space,Str "\1087\1086\1088",Space,Str "\1087\1086\1082\1072",Space,Str "\1077\1105",Space,Str "\1085\1077",Space,Str "\1091\1076\1072\1105\1090\1089\1103",Space,Str "\1088\1072\1079\1073\1080\1090\1100",Space,Str "\1085\1072",Space,Str "\1086\1090\1076\1077\1083\1100\1085\1099\1077",Space,Str "\1085\1077\1079\1072\1074\1080\1089\1080\1084\1099\1077",Space,Str "\1087\1086\1076\1079\1072\1076\1072\1095\1080",Str ".",Space,Str "\1052\1099",Space,Str "\1088\1077\1096\1072\1077\1084",Space,Str "\1079\1072\1076\1072\1095\1080",Space,Str "\1087\1086",Str "-",Str "\1084\1077\1085\1100\1096\1077",Str ",",Space,Str "\1087\1086\1090\1086\1084",Space,Str "\1089\1086\1073\1080\1088\1072\1077\1084",Space,Str "\1080\1079",Space,Str "\1085\1080\1093",Space,Str "\1088\1077\1096\1077\1085\1080\1103",Str ",",Space,Str "\1080\1079",Space,Str "\1101\1090\1080\1093",Space,Str "\1088\1077\1096\1077\1085\1080\1081",Space,Str "\1089\1086\1073\1080\1088\1072\1077\1084",Space,Str "\1076\1088\1091\1075\1080\1077",Space,Str "\1088\1077\1096\1077\1085\1080\1103",Space,Str "\1080",Space,Str "\1074\1086\1090",Space,Str "\1091\1078\1077",Space,Str "\1075\1086\1090\1086\1074\1072",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1072",Str ".",Space,Str "\1053\1086",Space,Str "\1084\1099",Space,Str "\1088\1077\1096\1072\1077\1084",Space,Str "\1079\1072\1076\1072\1095\1091",Space,Str "\1085\1077",Space,Str "\1085\1072",Space,Str "\1083\1080\1089\1090\1086\1095\1082\1077",Str ",",Space,Str "\1085\1072\1084",Space,Str "\1085\1077\1086\1073\1093\1086\1076\1080\1084\1086",Space,Str "\1086\1073\1098\1103\1089\1085\1080\1090\1100",Space,Str "\1077\1105",Space,Str "\1082\1086\1084\1087\1100\1102\1090\1077\1088\1091",Str ".",Space,Str "\1048",Space,Str "\1090\1086\1090",Space,Str "\1103\1079\1099\1082",Str ",",Space,Str "\1085\1072",Space,Str "\1082\1086\1090\1086\1088\1086\1084",Space,Str "\1084\1099",Space,Str "\1087\1080\1096\1077\1084",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1091",Str ",",Space,Str "\1086\1082\1072\1079\1099\1074\1072\1077\1090",Space,Str "\1089\1080\1083\1100\1085\1086\1077",Space,Str "\1074\1083\1080\1103\1085\1080\1077",Space,Str "\1085\1072",Space,Str "\1090\1086",Space,Str "\1082\1072\1082",Space,Str "\1084\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1088\1077\1096\1072\1090\1100",Space,Str "\1079\1072\1076\1072\1095\1091",Str ".",Space,Str "\1052\1099",Space,Str "\1085\1077",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1088\1072\1079\1073\1080\1090\1100",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1091",Space,Str "\1085\1072",Space,Str "\1085\1077\1079\1072\1074\1080\1089\1080\1084\1099\1077",Space,Str "\1087\1086\1076\1079\1072\1076\1072\1095\1080",Str ",",Space,Str "\1077\1089\1083\1080",Space,Str "\1074",Space,Str "\1090\1086\1084",Space,Str "\1103\1079\1099\1082\1077",Space,Str "\1085\1072",Space,Str "\1082\1086\1090\1086\1088\1086\1084",Space,Str "\1084\1099",Space,Str "\1089\1086\1073\1080\1088\1072\1077\1084\1089\1103",Space,Str "\1086\1073\1098\1103\1089\1085\1103\1090\1100",Space,Str "\1079\1072\1076\1072\1095\1091",Space,Str "\1082\1086\1084\1087\1100\1102\1090\1077\1088\1091",Space,Str "\1085\1077\1090",Space,Str "\1089\1088\1077\1076\1089\1090\1074",Space,Str "\1076\1083\1103",Space,Str "\1090\1086\1075\1086",Str ",",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1089\1086\1073\1088\1072\1090\1100",Space,Str "\1101\1090\1080",Space,Str "\1088\1077\1096\1077\1085\1080\1103",Space,Str "\1074\1084\1077\1089\1090\1077",Str "."]
,Para [Str "\1054\1073",Space,Str "\1101\1090\1086\1084",Space,Str "\1075\1086\1074\1086\1088\1080\1090",Space,Emph [Str "\1044\1078\1086\1085",Space,Str "\1061\1100\1102\1079"],Space,Str "(",Str "John",Space,Str "Huges",Str ")",Space,Str "\1074",Space,Str "\1089\1090\1072\1090\1100\1077",Space,Quoted DoubleQuote [Str "Why",Space,Str "functional",Space,Str "programming",Space,Str "matters"],Str ".",Space,Str "\1054\1085",Space,Str "\1087\1088\1080\1074\1086\1076\1080\1090",Space,Str "\1090\1072\1082\1091\1102",Space,Str "\1084\1077\1090\1072\1092\1086\1088\1091",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1084\1099",Space,Str "\1076\1077\1083\1072\1077\1084",Space,Str "\1089\1090\1091\1083",Space,Str "\1080",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1085\1077\1090",Space,Str "\1093\1086\1088\1086\1096\1077\1075\1086",Space,Str "\1082\1083\1077\1103",Str ".",Space,Str "\1045\1076\1080\1085\1089\1090\1074\1077\1085\1085\1086\1077",Space,Str "\1095\1090\1086",Space,Str "\1085\1072\1084",Space,Str "\1086\1089\1090\1072\1105\1090\1089\1103",Space,Str "\1101\1090\1086",Space,Str "\1074\1099\1088\1077\1079\1072\1090\1100",Space,Str "\1080\1079",Space,Str "\1076\1077\1088\1077\1074\1072",Space,Str "\1089\1090\1091\1083",Space,Str "\1094\1077\1083\1080\1082\1086\1084",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1085\1077\1074\1077\1088\1086\1103\1090\1085\1086",Space,Str "\1090\1088\1091\1076\1085\1072\1103",Space,Str "\1079\1072\1076\1072\1095\1072",Str ".",Space,Str "\1043\1086\1088\1072\1079\1076\1086",Space,Str "\1087\1088\1086\1097\1077",Space,Str "\1089\1076\1077\1083\1072\1090\1100",Space,Str "\1086\1090\1076\1077\1083\1100\1085\1099\1077",Space,Str "\1095\1072\1089\1090\1080",Space,Str "\1080",Space,Str "\1087\1086\1090\1086\1084",Space,Str "\1089\1086\1073\1088\1072\1090\1100",Space,Str "\1074\1084\1077\1089\1090\1077",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1086\1085\1072\1083\1100\1085\1099\1077",Space,Str "\1103\1079\1099\1082\1080",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1080\1088\1086\1074\1072\1085\1080\1103",Space,Str "\1087\1088\1077\1076\1086\1089\1090\1072\1074\1083\1103\1102\1090",Space,Str "\1076\1074\1072",Space,Str "\1085\1086\1074\1099\1093",Space,Str "\1074\1080\1076\1072",Space,Quoted DoubleQuote [Str "\1082\1083\1077\1103"],Str ".",Space,Str "\1069\1090\1086",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1074\1099\1089\1096\1077\1075\1086",Space,Str "\1087\1086\1088\1103\1076\1082\1072",Space,Str "\1080",Space,Str "\1083\1077\1085\1080\1074\1099\1077",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Str ".",Space,Str "\1042",Space,Str "\1089\1090\1072\1090\1100\1077",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1085\1072\1081\1090\1080",Space,Str "\1084\1085\1086\1075\1086",Space,Str "\1087\1088\1080\1084\1077\1088\1086\1074",Str ".",Space,Str "\1053\1077\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1080\1079",Space,Str "\1085\1080\1093",Space,Str "\1084\1099",Space,Str "\1088\1072\1089\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1074",Space,Str "\1101\1090\1086\1081",Space,Str "\1075\1083\1072\1074\1077",Str "."]
,Para [Str "\1057",Space,Str "\1092\1091\1085\1082\1094\1080\1103\1084\1080",Space,Str "\1074\1099\1089\1096\1080\1093",Space,Str "\1087\1086\1088\1103\1076\1082\1086\1074",Space,Str "\1084\1099",Space,Str "\1091\1078\1077",Space,Str "\1079\1085\1072\1082\1086\1084\1099",Str ",",Space,Str "\1086\1085\1080",Space,Str "\1087\1086\1079\1074\1086\1083\1103\1102\1090",Space,Str "\1089\1082\1083\1077\1080\1074\1072\1090\1100",Space,Str "\1085\1077\1073\1086\1083\1100\1096\1080\1077",Space,Str "\1088\1077\1096\1077\1085\1080\1103",Str ".",Space,Str "\1057",Space,Str "\1080\1093",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1080\1079\1086\1074\1072\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1076\1088\1091\1075\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1077\1081",Space,Str "(",Str "\1087\1086\1074\1077\1076\1077\1085\1080\1077\1084",Str ")",Str ".",Space,Str "\1054\1085\1080",Space,Str "\1076\1072\1102\1090",Space,Str "\1085\1072\1084",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1086\1089\1090\1100",Space,Str "\1074\1099\1076\1077\1083\1103\1090\1100",Space,Str "\1089\1083\1086\1078\1085\1099\1077",Space,Str "\1079\1072\1082\1086\1085\1086\1084\1077\1088\1085\1086\1089\1090\1080",Space,Str "\1080",Space,Str "\1089\1086\1073\1080\1088\1072\1090\1100",Space,Str "\1080\1093",Space,Str "\1074",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ".",Space,Str "\1051\1077\1085\1080\1074\1099\1077",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Space,Str "\1078\1077",Space,Str "\1087\1088\1077\1076\1085\1072\1079\1085\1072\1095\1077\1085\1099",Space,Str "\1076\1083\1103",Space,Str "\1089\1082\1083\1077\1080\1074\1072\1085\1080\1103",Space,Str "\1073\1086\1083\1100\1096\1080\1093",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084",Str ".",Space,Str "\1054\1085\1080",Space,Str "\1089\1080\1085\1093\1088\1086\1085\1080\1079\1080\1088\1091\1102\1090",Space,Str "\1074\1099\1087\1086\1083\1085\1077\1085\1080\1077",Space,Str "\1087\1086\1076\1079\1072\1076\1072\1095",Str ",",Space,Str "\1080\1079\1073\1072\1074\1083\1103\1103",Space,Str "\1085\1072\1089",Space,Str "\1086\1090",Space,Str "\1085\1077\1086\1073\1093\1086\1076\1080\1084\1086\1089\1090\1080",Space,Str "\1074\1099\1087\1086\1083\1085\1103\1090\1100",Space,Str "\1101\1090\1086",Space,Str "\1074\1088\1091\1095\1085\1091\1102",Str "."]
,Para [Str "\1069\1090\1072",Space,Str "\1080\1076\1077\1103",Space,Str "\1088\1072\1079\1073\1080\1077\1085\1080\1103",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1099",Space,Str "\1085\1072",Space,Str "\1085\1077\1079\1072\1074\1080\1089\1080\1084\1099\1077",Space,Str "\1095\1072\1089\1090\1080",Space,Str "\1087\1088\1080\1074\1086\1076\1080\1090",Space,Str "\1085\1072\1089",Space,Str "\1082",Space,Str "\1087\1086\1085\1103\1090\1080\1102",Space,Str "\1084\1086\1076\1091\1083\1100\1085\1086\1089\1090\1080",Str ".",Space,Str "\1050\1086\1075\1076\1072",Space,Str "\1084\1099",Space,Str "\1088\1077\1096\1072\1077\1084",Space,Str "\1079\1072\1076\1072\1095\1091",Space,Str "\1084\1099",Space,Str "\1087\1099\1090\1072\1077\1084\1089\1103",Space,Str "\1088\1072\1079\1083\1086\1078\1080\1090\1100",Space,Str "\1077\1105",Space,Str "\1085\1072",Space,Str "\1087\1088\1086\1089\1090\1077\1081\1096\1080\1077",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1102\1097\1080\1077",Str ".",Space,Str "\1055\1088\1080",Space,Str "\1101\1090\1086\1084",Space,Str "\1095\1072\1089\1090\1086",Space,Str "\1086\1082\1072\1079\1099\1074\1072\1077\1090\1089\1103",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1101\1090\1080",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1102\1097\1080\1077",Space,Str "\1087\1088\1080\1084\1077\1085\1080\1084\1099",Space,Str "\1085\1077",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1076\1083\1103",Space,Str "\1085\1072\1096\1077\1081",Space,Str "\1079\1072\1076\1072\1095\1080",Str ",",Space,Str "\1085\1086",Space,Str "\1080",Space,Str "\1076\1083\1103",Space,Str "\1084\1085\1086\1075\1080\1093",Space,Str "\1076\1088\1091\1075\1080\1093",Str ".",Space,Str "\1052\1099",Space,Str "\1087\1086\1083\1091\1095\1072\1077\1084",Space,Str "\1094\1077\1083\1099\1081",Space,Str "\1073\1091\1082\1077\1090",Space,Str "\1088\1077\1096\1077\1085\1080\1081",Str ",",Space,Str "\1090\1072\1084",Space,Str "\1075\1076\1077",Space,Str "\1080\1089\1082\1072\1083\1080",Space,Str "\1086\1076\1085\1086",Str "."]
,Header 2 [Str "\1063\1080\1089\1083\1077\1085\1085\1099\1077",Space,Str "\1084\1077\1090\1086\1076\1099"]
,Para [Str "\1056\1072\1089\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1095\1080\1089\1083\1077\1085\1085\1099\1093",Space,Str "\1084\1077\1090\1086\1076\1086\1074",Str ".",Space,Str "\1042\1089\1077",Space,Str "\1101\1090\1080",Space,Str "\1084\1077\1090\1086\1076\1099",Space,Str "\1087\1086\1089\1090\1088\1086\1077\1085\1099",Space,Str "\1085\1072",Space,Str "\1087\1086\1085\1103\1090\1080\1080",Space,Str "\1089\1093\1086\1076\1080\1084\1086\1089\1090\1080",Str ".",Space,Str "\1059",Space,Str "\1085\1072\1089",Space,Str "\1077\1089\1090\1100",Space,Str "\1087\1086\1089\1083\1077\1076\1086\1074\1072\1090\1077\1083\1100\1085\1086\1089\1090\1100",Space,Str "\1088\1077\1096\1077\1085\1080\1081",Space,Str "\1080",Space,Str "\1086\1085\1072",Space,Str "\1089\1093\1086\1076\1080\1090\1089\1103",Space,Str "\1082",Space,Str "\1086\1076\1085\1086\1084\1091",Space,Str "\1088\1077\1096\1077\1085\1080\1102",Str ",",Space,Str "\1085\1086",Space,Str "\1084\1099",Space,Str "\1085\1077",Space,Str "\1079\1085\1072\1077\1084",Space,Str "\1082\1086\1075\1076\1072",Str ".",Space,Str "\1052\1099",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1079\1085\1072\1077\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1087\1088\1086\1084\1077\1078\1091\1090\1086\1095\1085\1099\1077",Space,Str "\1088\1077\1096\1077\1085\1080\1103",Space,Str "\1073\1091\1076\1091\1090",Space,Str "\1074\1089\1105",Space,Str "\1073\1083\1080\1078\1077",Space,Str "\1080",Space,Str "\1073\1083\1080\1078\1077",Space,Str "\1082",Space,Str "\1080\1090\1086\1075\1086\1074\1086\1084\1091",Str "."]
,Para [Str "\1055\1086\1089\1082\1086\1083\1100\1082\1091",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1083\1077\1085\1080\1074\1099\1081",Space,Str "\1103\1079\1099\1082",Space,Str "\1084\1099",Space,Str "\1089\1085\1072\1095\1072\1083\1072",Space,Str "\1087\1086\1089\1090\1088\1086\1080\1084",Space,Str "\1074\1089\1077",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1099\1077",Space,Str "\1088\1077\1096\1077\1085\1080\1103",Str ",",Space,Str "\1072",Space,Str "\1079\1072\1090\1077\1084",Space,Str "\1074\1099\1073\1077\1088\1077\1084",Space,Str "\1080\1090\1086\1075\1086\1074\1086\1077",Str ".",Space,Str "\1058\1072\1082",Space,Str "\1078\1077",Space,Str "\1082\1072\1082",Space,Str "\1084\1099",Space,Str "\1076\1077\1083\1072\1083\1080",Space,Str "\1101\1090\1086",Space,Str "\1074",Space,Str "\1087\1088\1086\1096\1083\1086\1081",Space,Str "\1075\1083\1072\1074\1077",Str ",",Space,Str "\1082\1086\1075\1076\1072",Space,Str "\1080\1089\1082\1072\1083\1080",Space,Str "\1082\1086\1088\1085\1080",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1103",Space,Str "\1084\1077\1090\1086\1076\1086\1084",Space,Str "\1085\1077\1087\1086\1076\1074\1080\1078\1085\1086\1081",Space,Str "\1090\1086\1095\1082\1080",Str ".",Space,Str "\1069\1090\1080",Space,Str "\1087\1088\1080\1084\1077\1088\1099",Space,Str "\1074\1079\1103\1090\1099",Space,Str "\1080\1079",Space,Str "\1089\1090\1072\1090\1100\1080",Space,Quoted DoubleQuote [Str "Why",Space,Str "functional",Space,Str "programming",Space,Str "matters"],Space,Str "\1044\1078\1086\1085\1072",Space,Str "\1061\1100\1102\1079\1072",Str "."]
,Header 3 [Str "\1044\1080\1092\1092\1077\1088\1077\1085\1094\1080\1088\1086\1074\1072\1085\1080\1077"]
,Para [Str "\1053\1072\1081\1076\1105\1084",Space,Str "\1087\1088\1086\1080\1079\1074\1086\1076\1085\1091\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1074",Space,Str "\1090\1086\1095\1082\1077",Str ".",Space,Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1084\1072\1090\1077\1084\1072\1090\1080\1095\1077\1089\1082\1086\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1087\1088\1086\1080\1079\1074\1086\1076\1085\1086\1081",Str ":"]
,Para [Math DisplayMath "f^\\prime(x)\\ =\\lim_{h\\to0}\\frac{f(x+h)-f(x)}{h}"]
,Para [Str "\1055\1088\1086\1080\1079\1074\1086\1076\1085\1072\1103",Space,Str "\1101\1090\1086",Space,Str "\1087\1088\1077\1076\1077\1083",Space,Str "\1087\1086\1089\1083\1077\1076\1086\1074\1072\1090\1077\1083\1100\1085\1086\1089\1090\1080",Space,Str "\1090\1072\1082\1080\1093",Space,Str "\1086\1090\1085\1086\1096\1077\1085\1080\1081",Str ",",Space,Str "\1087\1088\1080",Space,Math InlineMath "h",Space,Str "\1089\1090\1088\1077\1084\1103\1097\1077\1084\1089\1103",Space,Str "\1082",Space,Str "\1085\1091\1083\1102",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1087\1088\1077\1076\1077\1083",Space,Str "\1089\1093\1086\1076\1080\1090\1089\1103",Str ",",Space,Str "\1090\1086",Space,Str "\1087\1088\1086\1080\1079\1074\1086\1076\1085\1072\1103",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1072",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1090\1086\1075\1086",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1088\1077\1096\1080\1090\1100",Space,Str "\1101\1090\1091",Space,Str "\1079\1072\1076\1072\1095\1091",Space,Str "\1084\1099",Space,Str "\1085\1072\1095\1085\1105\1084",Space,Str "\1089",Space,Str "\1085\1077\1073\1086\1083\1100\1096\1086\1075\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Math InlineMath "h",Space,Str "\1080",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1087\1086\1089\1090\1077\1087\1077\1085\1085\1086",Space,Str "\1091\1084\1077\1085\1100\1096\1072\1090\1100",Space,Str "\1077\1075\1086",Str ",",Space,Str "\1074\1099\1095\1080\1089\1083\1103\1103",Space,Str "\1087\1088\1086\1084\1077\1078\1091\1090\1086\1095\1085\1099\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1087\1088\1086\1080\1079\1074\1086\1076\1085\1086\1081",Str ".",Space,Str "\1050\1072\1082",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1086\1085\1080",Space,Str "\1087\1077\1088\1077\1089\1090\1072\1085\1091\1090",Space,Str "\1089\1080\1083\1100\1085\1086",Space,Str "\1080\1079\1084\1077\1085\1103\1090\1100\1089\1103",Space,Str "\1084\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1089\1095\1080\1090\1072\1090\1100",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1099",Space,Str "\1085\1072\1096\1083\1080",Space,Str "\1087\1088\1077\1076\1077\1083",Space,Str "\1087\1086\1089\1083\1077\1076\1086\1074\1072\1090\1077\1083\1100\1085\1086\1089\1090\1080"]
,Para [Str "\1069\1090\1086\1090",Space,Str "\1087\1088\1086\1094\1077\1089\1089",Space,Str "\1085\1072\1087\1086\1084\1080\1085\1072\1077\1090",Space,Str "\1090\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1099",Space,Str "\1076\1077\1083\1072\1083\1080",Space,Str "\1087\1088\1080",Space,Str "\1087\1086\1080\1089\1082\1077",Space,Str "\1082\1086\1088\1085\1103",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1103",Space,Str "\1084\1077\1090\1086\1076\1086\1084",Space,Str "\1085\1077\1087\1086\1076\1074\1080\1078\1085\1086\1081",Space,Str "\1090\1086\1095\1082\1080",Str ".",Space,Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1074\1079\1103\1090\1100",Space,Str "\1080\1079",Space,Str "\1090\1086\1075\1086",Space,Str "\1088\1077\1096\1077\1085\1080\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1103",Space,Str "\1089\1093\1086\1076\1080\1084\1086\1089\1090\1080",Space,Str "\1087\1086\1089\1083\1077\1076\1086\1074\1072\1090\1077\1083\1100\1085\1086\1089\1090\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nconverge :: (Ord a, Num a) => a -> [a] -> a\nconverge eps (a:b:xs) \n    | abs (a - b) <= eps    = a\n    | otherwise             = converge eps (b:xs)\n\\end{code}\n"
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1086\1089\1090\1072\1083\1086\1089\1100",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1089\1086\1079\1076\1072\1090\1100",Space,Str "\1087\1086\1089\1083\1077\1076\1086\1074\1072\1090\1077\1083\1100\1085\1086\1089\1090\1100",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Space,Str "\1087\1088\1086\1080\1079\1074\1086\1076\1085\1099\1093",Str ".",Space,Str "\1053\1072\1087\1080\1096\1077\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1074\1099\1095\1080\1089\1083\1103\1077\1090",Space,Str "\1087\1088\1086\1084\1077\1078\1091\1090\1086\1095\1085\1099\1077",Space,Str "\1088\1077\1096\1077\1085\1080\1103",Str ":"]
,RawBlock "latex" "\n\\begin{code}\neasydiff :: Fractional a => (a -> a) -> a -> a -> a\neasydiff f x h = (f (x + h) - f x) / h\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1074\1086\1079\1100\1084\1105\1084",Space,Str "\1085\1072\1095\1072\1083\1100\1085\1086\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1096\1072\1075\1072",Space,Str "\1080",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1087\1086\1089\1083\1077\1076\1086\1074\1072\1090\1077\1083\1100\1085\1086",Space,Str "\1091\1084\1077\1085\1100\1096\1072\1090\1100",Space,Str "\1077\1075\1086",Space,Str "\1074\1076\1074\1086\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nhalves = iterate (/2) \n\\end{code}\n"
,Para [Str "\1057\1086\1073\1077\1088\1105\1084",Space,Str "\1074\1089\1077",Space,Str "\1095\1072\1089\1090\1080",Space,Str "\1074\1084\1077\1089\1090\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndiff :: (Ord a, Fractional a) => a -> a -> (a -> a) -> a -> a\ndiff h0 eps f x = converge eps $ map (easydiff f x) $ iterate (/2) h0\n    where easydiff f x h = (f (x + h) - f x) / h\n\\end{code}\n"
,Para [Str "\1057\1086\1093\1088\1072\1085\1080\1084",Space,Str "\1101\1090\1080",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1103",Space,Str "\1074",Space,Str "\1086\1090\1076\1077\1083\1100\1085\1086\1084",Space,Str "\1084\1086\1076\1091\1083\1077",Space,Str "\1080",Space,Str "\1085\1072\1081\1076\1105\1084",Space,Str "\1087\1088\1086\1080\1079\1074\1086\1076\1085\1091\1102",Space,Str "\1082\1072\1082\1086\1081",Str "-",Str "\1085\1080\1073\1091\1076\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ".",Space,Str "\1055\1088\1086\1090\1077\1089\1090\1080\1088\1091\1077\1084",Space,Str "\1088\1077\1096\1077\1085\1080\1077",Space,Str "\1085\1072",Space,Str "\1101\1082\1089\1087\1086\1085\1077\1085\1090\1077",Str ".",Space,Str "\1048\1079\1074\1077\1089\1090\1085\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1087\1088\1086\1080\1079\1074\1086\1076\1085\1072\1103",Space,Str "\1101\1082\1089\1087\1086\1085\1077\1085\1090\1099",Space,Str "\1088\1072\1074\1085\1072",Space,Str "\1089\1072\1084\1086\1081",Space,Str "\1089\1077\1073\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Numeric> let exp' = diff 1 1e-5 exp\n*Numeric> let test x = abs $ exp x - exp' x\n*Numeric> test 2\n1.4093421286887065e-5\n*Numeric> test 5\n1.767240203776055e-5\n\\end{code}\n"
,Header 3 [Str "\1048\1085\1090\1077\1075\1088\1080\1088\1086\1074\1072\1085\1080\1077"]
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1076\1072\1074\1072\1081\1090\1077",Space,Str "\1087\1086\1080\1085\1090\1077\1075\1088\1080\1088\1091\1077\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1086\1076\1085\1086\1075\1086",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1072",Str ".",Space,Str "\1048\1085\1090\1077\1075\1088\1072\1083",Space,Str "\1101\1090\1086",Space,Str "\1087\1083\1086\1097\1072\1076\1100",Space,Str "\1082\1088\1080\1074\1086\1081",Space,Str "\1087\1086\1076",Space,Str "\1075\1088\1072\1092\1080\1082\1086\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1073\1099",Space,Str "\1082\1088\1080\1074\1072\1103",Space,Str "\1073\1099\1083\1072",Space,Str "\1087\1088\1103\1084\1086\1081",Str ",",Space,Str "\1090\1086",Space,Str "\1084\1099",Space,Str "\1084\1086\1075\1083\1080",Space,Str "\1073\1099",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1090\1100",Space,Str "\1080\1085\1090\1077\1075\1088\1072\1083",Space,Str "\1087\1086",Space,Str "\1092\1086\1088\1084\1091\1083\1077",Space,Str "\1090\1088\1072\1087\1077\1094\1080\1081",Str ":"]
,RawBlock "latex" "\n\\begin{code}\neasyintegrate :: Fractional a => (a -> a) -> a -> a -> a\neasyintegrate f a b = (f a + f b) * (b - a) / 2\n\\end{code}\n"
,Para [Str "\1053\1086",Space,Str "\1084\1099",Space,Str "\1093\1086\1090\1080\1084",Space,Str "\1080\1085\1090\1077\1075\1088\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1085\1077",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1087\1088\1103\1084\1099\1077",Space,Str "\1083\1080\1085\1080\1080",Str ".",Space,Str "\1052\1099",Space,Str "\1087\1088\1077\1076\1089\1090\1072\1074\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1083\1086\1084\1072\1085\1086\1081",Space,Str "\1087\1088\1103\1084\1086\1081",Space,Str "\1083\1080\1085\1080\1077\1081",Str ".",Space,Str "\1052\1099",Space,Str "\1087\1086\1089\1095\1080\1090\1072\1077\1084",Space,Str "\1080\1085\1090\1077\1075\1088\1072\1083",Space,Str "\1085\1072",Space,Str "\1082\1072\1078\1076\1086\1084",Space,Str "\1080\1079",Space,Str "\1091\1095\1072\1089\1090\1082\1086\1074",Space,Str "\1080",Space,Str "\1089\1083\1086\1078\1080\1084",Space,Str "\1086\1090\1074\1077\1090\1099",Str ".",Space,Str "\1055\1088\1080",Space,Str "\1101\1090\1086\1084",Space,Str "\1095\1077\1084",Space,Str "\1073\1083\1080\1078\1077",Space,Str "\1090\1086\1095\1082\1080",Space,Str "\1076\1088\1091\1075",Space,Str "\1082",Space,Str "\1076\1088\1091\1075\1091",Str ",",Space,Str "\1090\1077\1084",Space,Str "\1090\1086\1095\1085\1077\1077",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1087\1088\1077\1076\1089\1090\1072\1074\1080\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1074",Space,Str "\1074\1080\1076\1077",Space,Str "\1083\1086\1084\1072\1085\1086\1081",Space,Str "\1087\1088\1103\1084\1086\1081",Space,Str "\1083\1080\1085\1080\1080",Str ",",Space,Str "\1090\1077\1084",Space,Str "\1090\1086\1095\1085\1077\1077",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1080\1085\1090\1077\1075\1088\1072\1083\1072",Str "."]
,Para [Str "\1055\1088\1086\1073\1083\1077\1084\1072",Space,Str "\1074",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1099",Space,Str "\1085\1077",Space,Str "\1079\1085\1072\1077\1084",Space,Str "\1079\1072\1088\1072\1085\1077\1077",Space,Str "\1085\1072\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1073\1083\1080\1079\1082\1080",Space,Str "\1076\1086\1083\1078\1085\1099",Space,Str "\1073\1099\1090\1100",Space,Str "\1090\1086\1095\1082\1080",Space,Str "\1076\1088\1091\1075",Space,Str "\1082",Space,Str "\1076\1088\1091\1075\1091",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1079\1072\1074\1080\1089\1080\1090",Space,Str "\1086\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1082\1086\1090\1086\1088\1091\1102",Space,Str "\1084\1099",Space,Str "\1093\1086\1090\1080\1084",Space,Str "\1087\1088\1086\1080\1085\1090\1077\1075\1088\1080\1088\1086\1074\1072\1090\1100",Str ".",Space,Str "\1053\1086",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1087\1086\1089\1090\1088\1086\1080\1090\1100",Space,Str "\1087\1086\1089\1083\1077\1076\1086\1074\1072\1090\1077\1083\1100\1085\1086\1089\1090\1100",Space,Str "\1088\1077\1096\1077\1085\1080\1081",Str ".",Space,Str "\1053\1072",Space,Str "\1082\1072\1078\1076\1086\1084",Space,Str "\1096\1072\1075\1077",Space,Str "\1084\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1087\1088\1080\1073\1083\1080\1078\1072\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1083\1086\1084\1072\1085\1086\1081",Space,Str "\1087\1088\1103\1084\1086\1081",Str ",",Space,Str "\1080",Space,Str "\1085\1072",Space,Str "\1082\1072\1078\1076\1086\1084",Space,Str "\1096\1072\1075\1077",Space,Str "\1095\1080\1089\1083\1086",Space,Str "\1080\1079\1083\1086\1084\1086\1074",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1088\1072\1089\1090\1080",Space,Str "\1074\1076\1074\1086\1077",Str ".",Space,Str "\1050\1072\1082",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1088\1077\1096\1077\1085\1080\1077",Space,Str "\1087\1077\1088\1077\1089\1090\1072\1085\1077\1090",Space,Str "\1084\1077\1085\1103\1090\1100\1089\1103",Space,Str "\1084\1099",Space,Str "\1074\1077\1088\1085\1105\1084",Space,Str "\1086\1090\1074\1077\1090",Str "."]
,Para [Str "\1055\1086\1089\1090\1088\1086\1080\1084",Space,Str "\1087\1086\1089\1083\1077\1076\1086\1074\1072\1090\1077\1083\1100\1085\1086\1089\1090\1100",Space,Str "\1088\1077\1096\1077\1085\1080\1081",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nintegrate :: Fractional a => (a -> a) -> a -> a -> [a]\nintegrate f a b = easyintegrate f a b : \n    zipWith (+) (integrate a mid) (integrate mid b)\n    where mid = (a + b)/2\n\\end{code}\n"
,Para [Str "\1055\1077\1088\1074\1086\1077",Space,Str "\1088\1077\1096\1077\1085\1080\1077",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1087\1083\1086\1097\1072\1076\1100\1102",Space,Str "\1087\1086\1076",Space,Str "\1087\1088\1103\1084\1086\1081",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1089\1086\1077\1076\1080\1085\1103\1077\1090",Space,Str "\1082\1086\1085\1094\1099",Space,Str "\1086\1090\1088\1077\1079\1082\1072",Str ".",Space,Str "\1055\1086\1090\1086\1084",Space,Str "\1084\1099",Space,Str "\1076\1077\1083\1080\1084",Space,Str "\1086\1090\1088\1077\1079\1086\1082",Space,Str "\1087\1086\1087\1086\1083\1072\1084",Str ",",Space,Str "\1089\1090\1088\1086\1080\1084",Space,Str "\1087\1086\1089\1083\1077\1076\1086\1074\1072\1090\1077\1083\1100\1085\1086\1089\1090\1100",Space,Str "\1087\1088\1080\1073\1083\1080\1078\1077\1085\1080\1081",Space,Str "\1080",Space,Str "\1089\1082\1083\1072\1076\1099\1074\1072\1077\1084",Space,Str "\1095\1072\1089\1090\1080\1095\1085\1099\1077",Space,Str "\1089\1091\1084\1084\1099",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{zipWith}",Str "."]
,Para [Str "\1069\1090\1072",Space,Str "\1074\1077\1088\1089\1080\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1093\1086\1090\1100",Space,Str "\1080",Space,Str "\1085\1072\1075\1083\1103\1076\1085\1072\1103",Str ",",Space,Str "\1085\1086",Space,Str "\1085\1077",Space,Str "\1101\1092\1092\1077\1082\1090\1080\1074\1085\1072\1103",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{f}",Space,Str "\1074\1099\1095\1080\1089\1083\1103\1077\1090\1089\1103",Space,Str "\1079\1072\1085\1086\1074\1086",Space,Str "\1087\1088\1080",Space,Str "\1082\1072\1078\1076\1086\1084",Space,Str "\1088\1077\1082\1091\1088\1089\1080\1074\1085\1086\1084",Space,Str "\1074\1099\1079\1086\1074\1077",Str ".",Space,Str "\1041\1099\1083\1086",Space,Str "\1073\1099",Space,Str "\1093\1086\1088\1086\1096\1086",Space,Str "\1074\1099\1095\1080\1089\1083\1103\1090\1100",Space,Str "\1077\1105",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1076\1083\1103",Space,Str "\1085\1086\1074\1099\1093",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1084\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1087\1077\1088\1077\1076\1072\1074\1072\1090\1100",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1089",Space,Str "\1087\1088\1077\1076\1099\1076\1091\1097\1077\1075\1086",Space,Str "\1096\1072\1075\1072",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nintegrate :: Fractional a => (a -> a) -> a -> a -> [a]\nintegrate f a b = integ f a b (f a) (f b)\n    where integ f a b fa fb = (fa+fb)*(b-a)/2 :\n                zipWith (+) (integ f a m fa fm) \n                            (integ f m b fm fb)\n                where m  = (a + b)/2\n                      fm = f m \n\\end{code}\n"
,Para [Str "\1042",Space,Str "\1101\1090\1086\1081",Space,Str "\1074\1077\1088\1089\1080\1080",Space,Str "\1084\1099",Space,Str "\1074\1099\1095\1080\1089\1083\1103\1077\1084",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1074",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{f}",Space,Str "\1083\1080\1096\1100",Space,Str "\1086\1076\1080\1085",Space,Str "\1088\1072\1079",Space,Str "\1076\1083\1103",Space,Str "\1082\1072\1078\1076\1086\1081",Space,Str "\1090\1086\1095\1082\1080",Str ".",Space,Str "\1047\1072\1087\1080\1096\1077\1084",Space,Str "\1080\1090\1086\1075\1086\1074\1086\1077",Space,Str "\1088\1077\1096\1077\1085\1080\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nint :: (Ord a, Fractional a) => a -> (a -> a) -> a -> a -> a\nint eps f a b = converge eps $ integrate f a b\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1086\1087\1103\1090\1100",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1086\1074\1072\1083\1080\1089\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1077\1081",Space,RawInline "latex" "\\In{converge}",Str ",",Space,Str "\1085\1072\1084",Space,Str "\1085\1077",Space,Str "\1085\1091\1078\1085\1086",Space,Str "\1073\1099\1083\1086",Space,Str "\1077\1105",Space,Str "\1087\1077\1088\1077\1087\1080\1089\1099\1074\1072\1090\1100",Str ".",Space,Str "\1055\1088\1086\1074\1077\1088\1080\1084",Space,Str "\1088\1077\1096\1077\1085\1080\1077",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1087\1088\1086\1074\1077\1088\1082\1080",Space,Str "\1090\1072\1082\1078\1077",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1091\1077\1084\1089\1103",Space,Str "\1101\1082\1089\1087\1086\1085\1077\1085\1090\1086\1081",Str ".",Space,Str "\1042",Space,Str "\1087\1088\1086\1096\1083\1086\1081",Space,Str "\1075\1083\1072\1074\1077",Space,Str "\1084\1099",Space,Str "\1091\1079\1085\1072\1083\1080",Str ",",Space,Str "\1095\1090\1086"]
,Para [Math DisplayMath "e^x = 1 + \\int_0^x e^t dt"]
,Para [Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Str ",",Space,Str "\1090\1072\1082",Space,Str "\1083\1080",Space,Str "\1101\1090\1086",Space,Str "\1076\1083\1103",Space,Str "\1085\1072\1096\1077\1075\1086",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084\1072",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Numeric> let exp' = int 1e-5 exp 0\n*Numeric> let test x = abs $ exp x - 1 -  exp' x \n*Numeric> test 2\n8.124102876649886e-6\n*Numeric> test 5\n4.576306736225888e-6\n*Numeric> test 10\n1.0683757864171639e-5\n\\end{code}\n"
,Para [Str "\1040\1083\1075\1086\1088\1080\1090\1084",Space,Str "\1088\1072\1073\1086\1090\1072\1077\1090",Str ".",Space,Str "\1042",Space,Str "\1089\1090\1072\1090\1100\1077",Space,Str "\1077\1097\1105",Space,Str "\1088\1072\1089\1089\1084\1086\1090\1088\1077\1085\1099",Space,Str "\1084\1077\1090\1086\1076\1099",Space,Str "\1087\1086\1074\1099\1096\1077\1085\1080\1103",Space,Str "\1090\1086\1095\1085\1086\1089\1090\1080",Space,Str "\1101\1090\1080\1093",Space,Str "\1072\1083\1075\1086\1088\1080\1090\1084\1086\1074",Str ".",Space,Str "\1063\1090\1086",Space,Str "\1080\1085\1090\1077\1088\1077\1089\1085\1086",Space,Str "\1076\1083\1103",Space,Str "\1091\1083\1091\1095\1096\1077\1085\1080\1103",Space,Str "\1090\1086\1095\1085\1086\1089\1090\1080",Space,Str "\1085\1077",Space,Str "\1085\1072\1076\1086",Space,Str "\1084\1077\1085\1103\1090\1100",Space,Str "\1089\1091\1097\1077\1089\1090\1074\1091\1102\1097\1080\1081",Space,Str "\1082\1086\1076",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1103",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1087\1086\1089\1083\1077\1076\1086\1074\1072\1090\1077\1083\1100\1085\1086\1089\1090\1100",Space,Str "\1087\1088\1086\1084\1077\1078\1091\1090\1086\1095\1085\1099\1093",Space,Str "\1088\1077\1096\1077\1085\1080\1081",Space,Str "\1080",Space,Str "\1087\1088\1077\1086\1073\1088\1072\1079\1091\1077\1090",Space,Str "\1077\1105",Str "."]
,Header 2 [Str "\1057\1090\1077\1087\1077\1085\1085\1099\1077",Space,Str "\1088\1103\1076\1099"]
,Para [Str "\1053\1072\1087\1080\1096\1077\1084",Space,Str "\1084\1086\1076\1091\1083\1100",Space,Str "\1076\1083\1103",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Space,Str "\1089\1090\1077\1087\1077\1085\1085\1099\1093",Space,Str "\1088\1103\1076\1086\1074",Str ".",Space,Str "\1069\1090\1086\1090",Space,Str "\1087\1088\1080\1084\1077\1088",Space,Str "\1074\1079\1103\1090",Space,Str "\1080\1079",Space,Str "\1089\1090\1072\1090\1100\1080",Space,Str "\1044\1091\1075\1083\1072\1089\1072",Space,Str "\1052\1072\1082\1048\1083\1088\1086\1103",Space,Str "(",Str "Douglas",Space,Str "McIlroy",Str ")",Space,Quoted DoubleQuote [Str "Power",Space,Str "Series",Str ",",Space,Str "Power",Space,Str "Serious"],Str ".",Space,Str "\1057\1090\1077\1087\1077\1085\1085\1086\1081",Space,Str "\1088\1103\1076",Space,Str "\1087\1088\1077\1076\1089\1090\1072\1074\1083\1103\1077\1090",Space,Str "\1089\1086\1073\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1077\1090\1089\1103",Space,Str "\1089\1087\1080\1089\1082\1086\1084",Space,Str "\1082\1086\1101\1092\1092\1080\1094\1080\1077\1085\1090\1086\1074",Str ":"]
,Para [Math DisplayMath "F(x) = f_0 + f_1 x + f_2 x^2 + f_3 x^3 + f_4 x^4 + ..."]
,Para [Str "\1057\1090\1077\1087\1077\1085\1085\1086\1081",Space,Str "\1088\1103\1076",Space,Str "\1089\1086\1076\1077\1088\1078\1080\1090",Space,Str "\1073\1077\1089\1082\1086\1085\1077\1095\1085\1086\1077",Space,Str "\1095\1080\1089\1083\1086",Space,Str "\1089\1083\1072\1075\1072\1077\1084\1099\1093",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Space,Str "\1085\1072\1084",Space,Str "\1087\1086\1090\1088\1077\1073\1091\1102\1090\1089\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1089\1083\1086\1078\1077\1085\1080\1103",Space,Str "\1080",Space,Str "\1091\1084\1085\1086\1078\1077\1085\1080\1103",Str ".",Space,Str "\1056\1103\1076",Space,Math InlineMath "F(x)",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1079\1072\1087\1080\1089\1072\1090\1100",Space,Str "\1080",Space,Str "\1087\1086",Str "-",Str "\1076\1088\1091\1075\1086\1084\1091",Str ":"]
,Para [Math DisplayMath "\\begin{array}{l@{\\ =\\ }l}\nF(x) & F_0 (x) \\\\\n     & f_0 + x F_1 (x)  \\\\\n     & f_0 + x (f_1 + x F_2 (x)) \\\\   \n\\end{array}"]
,Para [Str "\1069\1090\1086",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1087\1086\1093\1086\1078\1077",Space,Str "\1085\1072",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1089\1087\1080\1089\1082\1072",Str ".",Space,Str "\1056\1103\1076",Space,Str "\1077\1089\1090\1100",Space,Str "\1082\1086\1101\1092\1092\1080\1094\1080\1077\1085\1090",Space,Math InlineMath "f_0",Space,Str "\1080",Space,Str "\1076\1088\1091\1075\1086\1081",Space,Str "\1088\1103\1076",Space,Math InlineMath "F_1(x)",Space,Str "\1091\1084\1085\1086\1078\1077\1085\1085\1099\1081",Space,Str "\1085\1072",Space,RawInline "latex" "\\In{x}",Str ".",Space,Str "\1055\1086\1101\1090\1086\1084\1091",Space,Str "\1076\1083\1103",Space,Str "\1087\1088\1077\1076\1089\1090\1072\1074\1083\1077\1085\1080\1103",Space,Str "\1088\1103\1076\1086\1074",Space,Str "\1084\1099",Space,Str "\1074\1099\1073\1077\1088\1077\1084",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1094\1080\1102",Space,Str "\1087\1086\1093\1086\1078\1091\1102",Space,Str "\1085\1072",Space,Str "\1089\1087\1080\1089\1086\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndata Ps a = a :+: Ps a\n    deriving (Show, Eq)\n\\end{code}\n"
,Para [Str "\1053\1086",Space,Str "\1074",Space,Str "\1085\1072\1096\1077\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1089\1087\1080\1089\1082\1080",Space,Str "\1073\1077\1089\1082\1086\1085\1077\1095\1085\1099",Str ",",Space,Str "\1087\1086\1101\1090\1086\1084\1091",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1083\1080\1096\1100",Space,Str "\1086\1076\1080\1085",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088",Str ".",Space,Str "\1044\1072\1083\1077\1077",Space,Str "\1084\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1087\1080\1089\1072\1090\1100",Space,Str "\1087\1088\1086\1089\1090\1086",Space,Math InlineMath "f + x F_1",Str ",",Space,Str "\1073\1077\1079",Space,Str "\1089\1082\1086\1073\1086\1082",Space,Str "\1076\1083\1103",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1072",Str "."]
,Para [Str "\1054\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1074\1089\1087\1086\1084\1086\1075\1072\1090\1077\1083\1100\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1076\1083\1103",Space,Str "\1089\1086\1079\1076\1072\1085\1080\1103",Space,Str "\1088\1103\1076\1086\1074",Str ":"]
,RawBlock "latex" "\n\\begin{code}\np0 :: Num a => a -> Ps a\np0 x = x :+: p0 0\n\nps :: Num a => [a] -> Ps a\nps []     = p0 0\nps (a:as) = a :+: ps as\n\\end{code}\n"
,Para [Str "\1054\1073\1088\1072\1090\1080\1090\1077",Space,Str "\1074\1085\1080\1084\1072\1085\1080\1077",Space,Str "\1085\1072",Space,Str "\1090\1086",Str ",",Space,Str "\1082\1072\1082",Space,Str "\1084\1099",Space,Str "\1076\1086\1087\1080\1089\1099\1074\1072\1077\1084",Space,Str "\1073\1077\1089\1082\1086\1085\1077\1095\1085\1099\1081",Space,Str "\1093\1074\1086\1089\1090",Space,Str "\1085\1091\1083\1077\1081",Space,Str "\1074",Space,Str "\1082\1086\1085\1077\1094",Space,Str "\1088\1103\1076\1072",Str ".",Space,Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1076\1072\1074\1072\1081\1090\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Space,Str "\1088\1103\1076\1072",Str ".",Space,Str "\1052\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1074\1099\1095\1080\1089\1083\1103\1090\1100",Space,Str "\1083\1080\1096\1100",Space,Str "\1082\1086\1085\1077\1095\1085\1086\1077",Space,Str "\1095\1080\1089\1083\1086",Space,Str "\1089\1090\1077\1087\1077\1085\1077\1081",Str "."]
,RawBlock "latex" "\n\\begin{code}\neval :: Num a => Int -> Ps a -> a -> a\neval 0 _         _ = 0\neval n (a :+: p) x = a + x * eval (n-1) p x\n\\end{code}\n"
,Para [Str "\1042",Space,Str "\1087\1077\1088\1074\1086\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1084\1099",Space,Str "\1093\1086\1090\1080\1084",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1090\1100",Space,Str "\1085\1086\1083\1100",Space,Str "\1089\1090\1077\1087\1077\1085\1077\1081",Space,Str "\1088\1103\1076\1072",Str ",",Space,Str "\1087\1086\1101\1090\1086\1084\1091",Space,Str "\1084\1099",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1084",Space,Str "\1085\1086\1083\1100",Str ",",Space,Str "\1072",Space,Str "\1074\1086",Space,Str "\1074\1090\1086\1088\1086\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1088\1103\1076\1072",Space,Math InlineMath "a + x P",Space,Str "\1089\1082\1083\1072\1076\1099\1074\1072\1077\1090\1089\1103",Space,Str "\1080\1079",Space,Str "\1095\1080\1089\1083\1072",Space,Math InlineMath "a",Space,Str "\1080",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1088\1103\1076\1072",Space,Math InlineMath "P",Space,Str "\1091\1084\1085\1086\1078\1077\1085\1085\1086\1075\1086",Space,Str "\1085\1072",Space,Str "\1079\1072\1076\1072\1085\1085\1086\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Str "."]
,Header 3 [Str "\1040\1088\1080\1092\1084\1077\1090\1080\1082\1072",Space,Str "\1088\1103\1076\1086\1074"]
,Para [Str "\1042",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1077",Space,Str "\1089\1083\1086\1078\1077\1085\1080\1103",Space,Str "\1080",Space,Str "\1091\1084\1085\1086\1078\1077\1085\1080\1103",Space,Str "\1088\1103\1076\1086\1074",Space,Str "\1090\1072\1082\1078\1077",Space,Str "\1087\1086\1083\1091\1095\1072\1077\1090\1089\1103",Space,Str "\1088\1103\1076",Str ".",Space,Str "\1058\1072\1082\1078\1077",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1089\1086\1079\1076\1072\1090\1100",Space,Str "\1088\1103\1076",Space,Str "\1080\1079",Space,Str "\1095\1080\1089\1083\1072",Str ".",Space,Str "\1069\1090\1080",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Space,Str "\1075\1086\1074\1086\1088\1103\1090",Space,Str "\1086",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1089\1076\1077\1083\1072\1090\1100",Space,Str "\1089\1090\1077\1087\1077\1085\1085\1086\1081",Space,Str "\1088\1103\1076",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1086\1084",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Num}",Str "."]
,Header 4 [Str "\1057\1083\1086\1078\1077\1085\1080\1077"]
,Para [Str "\1056\1077\1082\1091\1088\1089\1080\1074\1085\1086\1077",Space,Str "\1087\1088\1077\1076\1089\1090\1072\1074\1083\1077\1085\1080\1077",Space,Str "\1088\1103\1076\1072",Space,Math InlineMath "f + x F",Space,Str "\1087\1086\1079\1074\1086\1083\1103\1077\1090",Space,Str "\1085\1072\1084",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1082\1088\1072\1090\1082\1086",Space,Str "\1074\1099\1088\1072\1078\1072\1090\1100",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1084\1099",Space,Str "\1093\1086\1090\1080\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Str ".",Space,Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1085\1077\1090",Space,Str "\1073\1077\1089\1082\1086\1085\1077\1095\1085\1086\1075\1086",Space,Str "\1085\1072\1073\1086\1088\1072",Space,Str "\1082\1086\1101\1092\1092\1080\1094\1080\1077\1085\1090\1086\1074",Str ",",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1074\1089\1077\1075\1086",Space,Str "\1083\1080\1096\1100",Space,Str "\1086\1076\1085\1086",Space,Str "\1095\1080\1089\1083\1086",Space,Str "\1080",Space,Str "\1077\1097\1105",Space,Str "\1086\1076\1080\1085",Space,Str "\1088\1103\1076",Str ".",Space,Str "\1054\1087\1077\1088\1072\1094\1080\1080",Space,Str "\1089\1091\1097\1077\1089\1090\1074\1077\1085\1085\1086",Space,Str "\1091\1087\1088\1086\1097\1072\1102\1090\1089\1103",Str ".",Space,Str "\1058\1072\1082",Space,Str "\1089\1083\1086\1078\1077\1085\1080\1077",Space,Str "\1076\1074\1091\1093",Space,Str "\1073\1077\1089\1082\1086\1085\1077\1095\1085\1099\1093",Space,Str "\1088\1103\1076\1086\1074",Space,Str "\1080\1084\1077\1077\1090",Space,Str "\1074\1080\1076",Str ":"]
,Para [Math DisplayMath "F + G = (f + x F_1) + (g + x G_1) = (f+g) + x (F_1 + G_1)"]
,Para [Str "\1055\1077\1088\1077\1074\1077\1076\1105\1084",Space,Str "\1085\1072",Space,Str "Haskell",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n(f :+: fs) + (g :+: gs) = (f + g) :+: (fs + gs)\n\\end{code}\n"
,Header 4 [Str "\1059\1084\1085\1086\1078\1077\1085\1080\1077"]
,Para [Str "\1059\1084\1085\1086\1078\1080\1084",Space,Str "\1076\1074\1072",Space,Str "\1088\1103\1076\1072",Str ":"]
,Para [Math DisplayMath "F*G = (f + x F_1) * (g + x G_1) = f g + x (f G_1 + F_1 * G)"]
,Para [Str "\1055\1077\1088\1077\1074\1077\1076\1105\1084",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n(.*) :: Num a => a -> Ps a -> Ps a\nk .* (f :+: fs) = (k * f) :+: (k .* fs)  \n\n(f :+: fs) * (g :+: gs) = (f * g) :+: (f .* gs + fs * (g :+: gs))\n\\end{code}\n"
,Para [Str "\1044\1086\1087\1086\1083\1085\1080\1090\1077\1083\1100\1085\1072\1103",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1103",Space,RawInline "latex" "\\In{(.*)}",Space,Str "\1074\1099\1087\1086\1083\1085\1103\1077\1090",Space,Str "\1091\1084\1085\1086\1078\1077\1085\1080\1077",Space,Str "\1074\1089\1077\1093",Space,Str "\1082\1086\1101\1092\1092\1080\1094\1080\1077\1085\1090\1086\1074",Space,Str "\1088\1103\1076\1072",Space,Str "\1085\1072",Space,Str "\1095\1080\1089\1083\1086",Str "."]
,Header 4 [Str "\1050\1083\1072\1089\1089",Space,Str "Num"]
,Para [Str "\1057\1086\1073\1077\1088\1105\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1103",Space,Str "\1076\1083\1103",Space,Str "\1084\1077\1090\1086\1076\1086\1074",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Num}",Space,Str "\1074\1084\1077\1089\1090\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ninstance Num a => Num (Ps a) where\n    (f :+: fs) + (g :+: gs) = (f + g) :+: (fs + gs)\n    (f :+: fs) * (g :+: gs) = (f * g) :+: (f .* gs + fs * (g :+: gs))\n    negate (f :+: fs) = negate f :+: negate fs\n    fromInteger n = p0 (fromInteger n)\n\n\n(.*) :: Num a => a -> Ps a -> Ps a\nk .* (f :+: fs) = (k * f) :+: (k .* fs)  \n\\end{code}\n"
,Para [Str "\1052\1077\1090\1086\1076\1099",Space,RawInline "latex" "\\In{abs}",Space,Str "\1080",Space,RawInline "latex" "\\In{signum}",Space,Str "\1085\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1099",Space,Str "\1076\1083\1103",Space,Str "\1088\1103\1076\1086\1074",Str ".",Space,Str "\1054\1073\1088\1072\1090\1080\1090\1077",Space,Str "\1074\1085\1080\1084\1072\1085\1080\1077",Space,Str "\1085\1072",Space,Str "\1090\1086",Str ",",Space,Str "\1082\1072\1082",Space,Str "\1088\1077\1082\1091\1088\1089\1080\1074\1085\1086\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1088\1103\1076\1086\1074",Space,Str "\1087\1088\1080\1074\1086\1076\1080\1090",Space,Str "\1082",Space,Str "\1088\1077\1082\1091\1088\1089\1080\1074\1085\1099\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1103\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1076\1083\1103",Space,Str "\1088\1103\1076\1086\1074",Str ".",Space,Str "\1069\1090\1086\1090",Space,Str "\1087\1088\1080\1105\1084",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1093\1072\1088\1072\1082\1090\1077\1088\1077\1085",Space,Str "\1076\1083\1103",Space,Str "Haskell",Str ".",Space,Str "\1055\1086\1089\1082\1086\1083\1100\1082\1091",Space,Str "\1085\1072\1096",Space,Str "\1088\1103\1076",Space,Str "\1101\1090\1086",Space,Str "\1095\1080\1089\1083\1086",Space,Str "\1080",Space,Str "\1077\1097\1105",Space,Str "\1086\1076\1080\1085",Space,Str "\1088\1103\1076",Space,Str "\1079\1072",Space,Str "\1089\1095\1105\1090",Space,Str "\1088\1077\1082\1091\1088\1089\1080\1080",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100\1089\1103",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1077\1081",Str ",",Space,Str "\1082\1086\1090\1086\1088\1091\1102",Space,Str "\1084\1099",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1077\1084",Str ",",Space,Str "\1085\1072",Space,Quoted DoubleQuote [Str "\1093\1074\1086\1089\1090\1086\1074\1086\1084"],Space,Str "\1088\1103\1076\1077",Str "."]
,Header 4 [Str "\1044\1077\1083\1077\1085\1080\1077"]
,Para [Str "\1056\1077\1079\1091\1083\1100\1090\1072\1090",Space,Str "\1076\1077\1083\1077\1085\1080\1103",Space,Math InlineMath "Q",Space,Str "\1091\1076\1086\1074\1083\1077\1090\1074\1086\1088\1103\1077\1090",Space,Str "\1089\1086\1086\1090\1085\1086\1096\1077\1085\1080\1102",Str ":"]
,Para [Math DisplayMath "F = Q * G"]
,Para [Str "\1055\1077\1088\1077\1087\1080\1089\1072\1074",Space,Math InlineMath "F",Str ",",Space,Math InlineMath "G",Space,Str "\1080",Space,Math InlineMath "Q",Space,Str "\1074",Space,Str "\1085\1072\1096\1077\1084",Space,Str "\1087\1088\1077\1076\1089\1090\1072\1074\1083\1077\1085\1080\1080",Str ",",Space,Str "\1087\1086\1083\1091\1095\1080\1084"]
,Para [Math DisplayMath "\\begin{array}{l@{\\ = \\ }l}\nf + x F_1 &  (q + x Q_1) * G = qG + x Q_1 * G = q(g + x G_1) + x Q_1 * G \\\\\n          & q g + x (q G_1 + Q_1 * G) \\\\\n\\end{array}"]
,Para [Str "\1057\1083\1077\1076\1086\1074\1072\1090\1077\1083\1100\1085\1086"]
,Para [Math DisplayMath "\\begin{array}{l@{\\ = \\ }l}\nq    &  f/g  \\\\\nQ_1  &  (F_1 - q G_1)/G \\\\\n\\end{array}"]
,Para [Str "\1045\1089\1083\1080",Space,Math InlineMath "g = 0",Space,Str "\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1080\1084\1077\1077\1090",Space,Str "\1089\1084\1099\1089\1083",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1074",Space,Str "\1090\1086\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Str ",",Space,Str "\1077\1089\1083\1080",Space,Str "\1080",Space,Math InlineMath "f = 0",Str ".",Space,Str "\1055\1077\1088\1077\1074\1077\1076\1105\1084",Space,Str "\1085\1072",Space,Str "Haskell",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nclass Fractional a => Fractional (Ps a) where\n    (0 :+: fs) / (0 :+: gs) = fs / gs\n    (f :+: fs) / (g :+: gs) = q :+: ((fs - q .* gs)/(g :+: gs))\n        where q = f/g\n\n    fromRational x = p0 (fromRational x)\n\\end{code}\n"
,Header 3 [Str "\1055\1088\1086\1080\1079\1074\1086\1076\1085\1072\1103",Space,Str "\1080",Space,Str "\1080\1085\1090\1077\1075\1088\1072\1083"]
,Para [Str "\1055\1088\1086\1080\1079\1074\1086\1076\1085\1072\1103",Space,Str "\1086\1076\1085\1086\1075\1086",Space,Str "\1095\1083\1077\1085\1072",Space,Str "\1088\1103\1076\1072",Space,Str "\1074\1099\1095\1080\1089\1083\1103\1077\1090\1089\1103",Space,Str "\1090\1072\1082",Str ":"]
,Para [Math DisplayMath "\\frac{d}{dx} x^n = n x^{n-1}"]
,Para [Str "\1048\1079",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Space,Str "\1087\1086",Space,Str "\1089\1074\1086\1081\1089\1090\1074\1072\1084",Space,Str "\1087\1088\1086\1080\1079\1074\1086\1076\1085\1086\1081"]
,Para [Math DisplayMath "\\frac{d}{dx}(f(x) + g(x)) =  \\frac{d}{dx}f(x) +  \\frac{d}{dx}g(x)"]
,Para [Math DisplayMath "\\frac{d}{dx} (k * f(x)) = k *  \\frac{d}{dx} f(x)"]
,Para [Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1087\1086\1083\1091\1095\1080\1090\1100",Space,Str "\1092\1086\1088\1084\1091\1083\1091",Space,Str "\1076\1083\1103",Space,Str "\1074\1089\1077\1075\1086",Space,Str "\1088\1103\1076\1072",Str ":"]
,Para [Math DisplayMath "\\frac{d}{dx} F(x) = f_1 + 2 f_2 x + 3 f_3 x^2 + 4 f_4 x^3 + ..."]
,Para [Str "\1044\1083\1103",Space,Str "\1088\1077\1072\1083\1080\1079\1072\1094\1080\1080",Space,Str "\1085\1072\1084",Space,Str "\1087\1086\1085\1072\1076\1086\1073\1080\1090\1089\1103",Space,Str "\1074\1089\1087\1086\1084\1086\1075\1072\1090\1077\1083\1100\1085\1072\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1086\1073\1085\1086\1074\1083\1103\1090\1100",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1076\1086\1087\1086\1083\1085\1080\1090\1077\1083\1100\1085\1086\1075\1086",Space,Str "\1084\1085\1086\1078\1080\1090\1077\1083\1103",Space,Math InlineMath "n",Space,Str "\1074",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1080",Space,Math InlineMath "n x^{n-1}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndiff :: Num a => Ps a -> Ps a\ndiff (f :+: fs) = diff' 1 fs\n    where diff' n (g :+: gs) = (n * g) :+: (diff' (n+1) gs)\n\\end{code}\n"
,Para [Str "\1058\1072\1082\1078\1077",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1090\1100",Space,Str "\1080",Space,Str "\1080\1085\1090\1077\1075\1088\1072\1083",Space,Str "\1089\1090\1077\1087\1077\1085\1085\1086\1075\1086",Space,Str "\1088\1103\1076\1072",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nint :: Fractional a => Ps a -> Ps a\nint (f :+: fs) = 0 :+: (int' 1 fs) \n    where int' n (g :+: gs) = (g / n) :+: (int' (n+1) gs)\n\\end{code}\n"
,Header 3 [Str "\1069\1083\1077\1084\1077\1085\1090\1072\1088\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080"]
,Para [Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1074\1099\1088\1072\1079\1080\1090\1100",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1072\1088\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1095\1077\1088\1077\1079",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Space,Str "\1074\1079\1103\1090\1080\1103",Space,Str "\1087\1088\1086\1080\1079\1074\1086\1076\1085\1086\1081",Space,Str "\1080",Space,Str "\1080\1085\1090\1077\1075\1088\1080\1088\1086\1074\1072\1085\1080\1103",Str ".",Space,Str "\1050",Space,Str "\1087\1088\1080\1084\1077\1088\1091",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1077",Space,Str "\1076\1083\1103",Space,Math InlineMath "e^x",Space,Str "\1074\1099\1075\1083\1103\1076\1080\1090",Space,Str "\1090\1072\1082",Str ":"]
,Para [Math DisplayMath "\\frac{dy}{dx} = y"]
,Para [Str "\1055\1088\1086\1080\1085\1090\1077\1075\1088\1080\1088\1091\1077\1084",Space,Str "\1089",Space,Str "\1085\1072\1095\1072\1083\1100\1085\1099\1084",Space,Str "\1091\1089\1083\1086\1074\1080\1077\1084",Space,Math InlineMath "y(0) = 1",Str ":"]
,Para [Math DisplayMath "y(x) = 1 + \\int_0^x y(t) dt"]
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1087\1077\1088\1077\1074\1077\1076\1105\1084",Space,Str "\1085\1072",Space,Str "Haskell",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nexpx = 1 + int expx\n\\end{code}\n"
,Para [Str "\1050\1072\1078\1077\1090\1089\1103",Space,Str "\1085\1077\1074\1077\1088\1086\1103\1090\1085\1099\1084",Str ",",Space,Str "\1085\1086",Space,Str "\1101\1090\1086",Space,Str "\1080",Space,Str "\1077\1089\1090\1100",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1101\1082\1089\1087\1086\1085\1077\1085\1090\1099",Str ".",Space,Str "\1058\1072\1082",Space,Str "\1078\1077",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1076\1083\1103",Space,Str "\1089\1080\1085\1091\1089\1072",Space,Str "\1080",Space,Str "\1082\1086\1089\1080\1085\1091\1089\1072",Str ":"]
,Para [Math DisplayMath "\\begin{array}{ll}\n\\frac{d}{dx} \\sin{x} = \\cos{x},   & \\sin(0) = 0, \\\\\n\\frac{d}{dx} \\cos{x} = - \\sin{x},  & \\cos(0) = 1 \\\\\n\\end{array}"]
,Para [Str "\1063\1090\1086",Space,Str "\1087\1088\1080\1074\1086\1076\1080\1090",Space,Str "\1085\1072\1089",Space,Str "\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nsinx = int cosx\ncosx = 1 - int sinx\n\\end{code}\n"
,Para [Str "\1048",Space,Str "\1101\1090\1086",Space,Str "\1088\1072\1073\1086\1090\1072\1077\1090",Str "!",Space,Str "\1042\1099\1095\1080\1089\1083\1077\1085\1080\1077",Space,Str "\1101\1090\1080\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1086",Space,Str "\1079\1072",Space,Str "\1089\1095\1105\1090",Space,Str "\1090\1086\1075\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1074\1085\1077",Space,Str "\1079\1072\1074\1080\1089\1080\1084\1086\1089\1090\1080",Space,Str "\1086\1090",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{int}",Space,Str "\1074\1077\1088\1085\1105\1090",Space,Str "\1088\1103\1076",Str ",",Space,Str "\1091",Space,Str "\1082\1086\1090\1086\1088\1086\1075\1086",Space,Str "\1087\1077\1088\1074\1099\1081",Space,Str "\1082\1086\1101\1092\1092\1080\1094\1080\1077\1085\1090",Space,Str "\1088\1072\1074\1077\1085",Space,Str "\1085\1091\1083\1102",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1087\1086\1076\1093\1074\1072\1090\1099\1074\1072\1077\1090\1089\1103",Space,Str "\1080",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1091\1077\1090\1089\1103",Space,Str "\1085\1072",Space,Str "\1089\1083\1077\1076\1091\1102\1097\1077\1084",Space,Str "\1096\1072\1075\1077",Space,Str "\1088\1077\1082\1091\1088\1089\1080\1074\1085\1099\1093",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1081",Str "."]
,Para [Str "\1063\1077\1088\1077\1079",Space,Str "\1089\1080\1085\1091\1089",Space,Str "\1080",Space,Str "\1082\1086\1089\1080\1085\1091\1089",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1090\1072\1085\1075\1077\1085\1089",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ntanx = sinx / cosx\n\\end{code}\n"
,Header 2 [Str "\1042\1086\1076\1086\1089\1073\1086\1088\1099"]
,Para [Str "\1042",Space,Str "\1101\1090\1086\1084",Space,Str "\1087\1088\1080\1084\1077\1088\1077",Space,Str "\1084\1099",Space,Str "\1088\1072\1089\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1086\1076\1085\1091",Space,Str "\1080\1085\1090\1077\1088\1077\1089\1085\1091\1102",Space,Str "\1090\1077\1093\1085\1080\1082\1091",Space,Str "\1088\1077\1082\1091\1088\1089\1080\1074\1085\1099\1093",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1081",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1085\1072\1079\1099\1074\1072\1077\1090\1089\1103",Space,Emph [Str "\1084\1077\1084\1086\1080\1079\1072\1094\1080\1077\1081"],Space,Str "(",Str "memoization",Str ")",Str ".",Space,Str "\1054\1085\1072",Space,Str "\1079\1072\1082\1083\1102\1095\1072\1077\1090\1089\1103",Space,Str "\1074",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1099",Space,Str "\1079\1072\1087\1086\1084\1080\1085\1072\1077\1084",Space,Str "\1074\1089\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str ",",Space,Str "\1089",Space,Str "\1082\1086\1090\1086\1088\1099\1084\1080",Space,Str "\1074\1099\1079\1099\1074\1072\1083\1072\1089\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1080",Str ",",Space,Str "\1077\1089\1083\1080",Space,Str "\1089",Space,Str "\1076\1072\1085\1085\1099\1084",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1091\1078\1077",Space,Str "\1074\1099\1095\1080\1089\1083\1103\1083\1072\1089\1100",Str ",",Space,Str "\1087\1088\1086\1089\1090\1086",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1091\1077\1084",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1080\1079",Space,Str "\1087\1072\1084\1103\1090\1080",Str ",",Space,Str "\1072",Space,Str "\1077\1089\1083\1080",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1077\1097\1105",Space,Str "\1085\1077",Space,Str "\1074\1099\1095\1080\1089\1083\1103\1083\1086\1089\1100",Str ",",Space,Str "\1074\1099\1095\1080\1089\1083\1103\1077\1084",Space,Str "\1077\1075\1086",Space,Str "\1080",Space,Str "\1089\1086\1093\1088\1072\1085\1103\1077\1084",Str "."]
,Para [Str "\1042",Space,Str "\1083\1077\1085\1080\1074\1099\1093",Space,Str "\1103\1079\1099\1082\1072\1093",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1080\1088\1086\1074\1072\1085\1080\1103",Space,Str "\1076\1083\1103",Space,Str "\1084\1077\1084\1086\1080\1079\1072\1094\1080\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1095\1072\1089\1090\1086",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1091\1077\1090\1089\1103",Space,Str "\1090\1072\1082\1086\1081",Space,Str "\1087\1088\1080\1105\1084",Str ".",Space,Str "\1052\1099",Space,Str "\1089\1086\1093\1088\1072\1085\1103\1077\1084",Space,Str "\1074\1089\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1074",Space,Str "\1085\1077\1082\1086\1090\1086\1088\1086\1084",Space,Str "\1082\1086\1085\1090\1077\1081\1085\1077\1088\1077",Str ",",Space,Str "\1072",Space,Str "\1079\1072\1090\1077\1084",Space,Str "\1086\1073\1088\1072\1097\1072\1077\1084\1089\1103",Space,Str "\1082",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1072\1084",Str ".",Space,Str "\1055\1088\1080",Space,Str "\1101\1090\1086\1084",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1089\1086\1093\1088\1072\1085\1103\1102\1090\1089\1103",Space,Str "\1074",Space,Str "\1082\1086\1085\1090\1077\1081\1085\1077\1088\1077",Space,Str "\1080",Space,Str "\1085\1077",Space,Str "\1087\1077\1088\1077\1074\1099\1095\1080\1089\1083\1103\1102\1090\1089\1103",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1087\1088\1086\1080\1089\1093\1086\1076\1080\1090",Space,Str "\1079\1072",Space,Str "\1089\1095\1105\1090",Space,Str "\1083\1077\1085\1080\1074\1099\1093",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1081",Str ".",Space,Str "\1063\1090\1086",Space,Str "\1080\1085\1090\1077\1088\1077\1089\1085\1086",Space,Str "\1074\1099\1095\1080\1089\1083\1103\1102\1090\1089\1103",Space,Str "\1085\1077",Space,Str "\1074\1089\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str ",",Space,Str "\1072",Space,Str "\1083\1080\1096\1100",Space,Str "\1090\1077",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1085\1072\1084",Space,Str "\1076\1077\1081\1089\1090\1074\1080\1090\1077\1083\1100\1085\1086",Space,Str "\1085\1091\1078\1085\1099",Str ",",Space,Str "\1090\1077",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1084\1099",Space,Str "\1080\1079\1074\1083\1077\1082\1072\1077\1084",Space,Str "\1080\1079",Space,Str "\1082\1086\1085\1090\1077\1081\1085\1077\1088\1072",Space,Str "\1093\1086\1090\1103",Space,Str "\1073\1099",Space,Str "\1086\1076\1080\1085",Space,Str "\1088\1072\1079",Str "."]
,Para [Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1090\1072\1082\1086\1081",Space,Str "\1082\1083\1072\1089\1089\1080\1095\1077\1089\1082\1080\1081",Space,Str "\1087\1088\1080\1084\1077\1088",Str ".",Space,Str "\1042\1099\1095\1080\1089\1083\1077\1085\1080\1077",Space,Str "\1095\1080\1089\1077\1083",Space,Str "\1060\1080\1073\1086\1085\1072\1095\1095\1080",Str ".",Space,Str "\1050\1072\1078\1076\1086\1077",Space,Str "\1087\1086\1089\1083\1077\1076\1091\1102\1097\1077\1077",Space,Str "\1095\1080\1089\1083\1086",Space,Str "\1088\1103\1076\1072",Space,Str "\1060\1080\1073\1086\1085\1072\1095\1095\1080",Space,Str "\1088\1072\1074\1085\1086",Space,Str "\1089\1091\1084\1084\1077",Space,Str "\1076\1074\1091\1093",Space,Str "\1087\1088\1077\1076\1099\1076\1091\1097\1080\1093",Str ".",Space,Str "\1053\1072\1080\1074\1085\1086\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1074\1099\1075\1083\1103\1076\1080\1090",Space,Str "\1090\1072\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nfib :: Int -> Int\nfib 0 = 0\nfib 1 = 1\nfib n = fib (n-1) + fib (n-2)\n\\end{code}\n"
,Para [Str "\1042",Space,Str "\1101\1090\1086\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1080",Space,Str "\1095\1080\1089\1083\1086",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1081",Space,Str "\1088\1072\1089\1090\1105\1090",Space,Str "\1101\1082\1089\1087\1086\1085\1077\1085\1094\1080\1072\1083\1100\1085\1086",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1090\1086\1075\1086",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1090\1100",Space,RawInline "latex" "\\In{fib n}",Space,Str "\1085\1072\1084",Space,Str "\1085\1091\1078\1085\1086",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1090\1100",Space,RawInline "latex" "\\In{fib (n-1)}",Space,Str "\1080",Space,RawInline "latex" "\\In{fib (n-2)}",Str ",",Space,Str "\1076\1083\1103",Space,Str "\1090\1086\1075\1086",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1090\1100",Space,Str "\1082\1072\1078\1076\1086\1077",Space,Str "\1080\1079",Space,Str "\1085\1080\1093",Space,Str "\1085\1072\1084",Space,Str "\1085\1091\1078\1085\1086",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1090\1100",Space,Str "\1077\1097\1105",Space,Str "\1076\1074\1072",Space,Str "\1095\1080\1089\1083\1072",Str ",",Space,Str "\1080",Space,Str "\1090\1072\1082",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Space,Str "\1091\1076\1074\1072\1080\1074\1072\1102\1090\1089\1103",Space,Str "\1085\1072",Space,Str "\1082\1072\1078\1076\1086\1084",Space,Str "\1096\1072\1075\1077",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1084\1099",Space,Str "\1074\1099\1079\1086\1074\1077\1084",Space,Str "\1074",Space,Str "\1080\1085\1090\1077\1088\1087\1088\1077\1090\1072\1090\1086\1088\1077",Space,RawInline "latex" "\\In{fib 40}",Str ",",Space,Str "\1090\1086",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1090\1077\1083\1100",Space,Str "\1079\1072\1074\1080\1089\1085\1077\1090",Str ".",Space,Str "\1063\1090\1086",Space,Str "\1080\1085\1090\1077\1088\1077\1089\1085\1086",Space,Str "\1074",Space,Str "\1101\1090\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Space,Str "\1087\1077\1088\1077\1089\1077\1082\1072\1102\1090\1089\1103",Str ",",Space,Str "\1086\1085\1080",Space,Str "\1084\1086\1075\1091\1090",Space,Str "\1073\1099\1090\1100",Space,Str "\1087\1077\1088\1077\1080\1089\1087\1086\1083\1100\1079\1086\1074\1072\1085\1099",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1076\1083\1103",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Space,RawInline "latex" "\\In{fib (n-1)}",Space,Str "\1080",Space,RawInline "latex" "\\In{fib (n-2)}",Space,Str "\1085\1091\1078\1085\1086",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1090\1100",Space,RawInline "latex" "\\In{fib (n-2)}",Space,Str "(",Str "\1089\1085\1086\1074\1072",Str ")",Str ",",Space,RawInline "latex" "\\In{fib (n-3)}",Str ",",Space,RawInline "latex" "\\In{fib (n-3)}",Space,Str "(",Str "\1089\1085\1086\1074\1072",Str ")",Space,Str "\1080",Space,RawInline "latex" "\\In{fib (n-4)}",Str "."]
,Para [Str "\1045\1089\1083\1080",Space,Str "\1084\1099",Space,Str "\1089\1086\1093\1088\1072\1085\1080\1084",Space,Str "\1074\1089\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1074",Space,Str "\1089\1087\1080\1089\1082\1077",Str ",",Space,Str "\1082\1072\1078\1076\1099\1081",Space,Str "\1074\1099\1079\1086\1074",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085",Space,Str "\1083\1080\1096\1100",Space,Str "\1086\1076\1080\1085",Space,Str "\1088\1072\1079",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nfib' :: Int -> Int\nfib' n = fibs !! n\n    where fibs = 0 : 1 : zipWith (+) fibs (tail fibs)\n\\end{code}\n"
,Para [Str "\1055\1086\1087\1088\1086\1073\1091\1077\1084",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1090\1100",Space,Str "\1076\1083\1103",Space,RawInline "latex" "\\In{40}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Fib> fib' 40\n102334155\n*Fib> fib' 4040\n700852629\n\\end{code}\n"
,Para [Str "\1042\1099\1095\1080\1089\1083\1077\1085\1080\1103",Space,Str "\1087\1088\1086\1080\1089\1093\1086\1076\1103\1090",Space,Str "\1084\1075\1085\1086\1074\1077\1085\1085\1086",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1079\1072\1076\1072\1095\1072",Space,Str "\1089\1086\1089\1090\1086\1080\1090",Space,Str "\1080\1079",Space,Str "\1084\1085\1086\1078\1077\1089\1090\1074\1072",Space,Str "\1087\1086\1076\1079\1072\1076\1072\1095",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1089\1072\1084\1086\1087\1086\1076\1086\1073\1085\1099",Space,Str "\1080",Space,Str "\1076\1083\1103",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Space,Str "\1087\1086\1089\1083\1077\1076\1091\1102\1097\1080\1093",Space,Str "\1087\1086\1076\1079\1072\1076\1072\1095",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1091\1102\1090\1089\1103",Space,Str "\1088\1077\1096\1077\1085\1080\1103",Space,Str "\1080\1079",Space,Str "\1087\1088\1077\1076\1099\1076\1091\1097\1080\1093",Str ",",Space,Str "\1089\1090\1086\1080\1090",Space,Str "\1079\1072\1076\1091\1084\1072\1090\1100\1089\1103",Space,Str "\1086\1073",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1086\1074\1072\1085\1080\1080",Space,Str "\1084\1077\1084\1086\1080\1079\1072\1094\1080\1080",Str ".",Space,Str "\1058\1072\1082\1080\1077",Space,Str "\1079\1072\1076\1072\1095\1080",Space,Str "\1085\1072\1079\1099\1074\1072\1102\1090\1089\1103",Space,Str "\1079\1072\1076\1072\1095\1072\1084\1080",Space,Emph [Str "\1076\1080\1085\1072\1084\1080\1095\1077\1089\1082\1086\1075\1086",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1080\1088\1086\1074\1072\1085\1080\1103"],Str ".",Space,Str "\1042\1099\1095\1080\1089\1083\1077\1085\1080\1077",Space,Str "\1095\1080\1089\1077\1083",Space,Str "\1060\1080\1073\1086\1085\1072\1095\1095\1080",Space,Str "\1103\1088\1082\1080\1081",Space,Str "\1087\1088\1080\1084\1077\1088",Space,Str "\1079\1072\1076\1072\1095\1080",Space,Str "\1076\1080\1085\1072\1084\1080\1095\1077\1089\1082\1086\1075\1086",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1080\1088\1086\1074\1072\1085\1080\1103",Str "."]
,Para [Str "\1056\1072\1089\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1090\1072\1082\1091\1102",Space,Str "\1079\1072\1076\1072\1095\1091",Str ".",Space,Str "\1044\1072\1085\1072",Space,Str "\1087\1088\1103\1084\1086\1091\1075\1086\1083\1100\1085\1072\1103",Space,Quoted DoubleQuote [Str "\1082\1072\1088\1090\1072",Space,Str "\1084\1077\1089\1090\1085\1086\1089\1090\1080"],Str ",",Space,Str "\1074",Space,Str "\1082\1072\1078\1076\1086\1081",Space,Str "\1082\1083\1077\1090\1082\1077",Space,Str "\1094\1077\1083\1099\1084",Space,Str "\1095\1080\1089\1083\1086\1084",Space,Str "\1091\1082\1072\1079\1072\1085\1072",Space,Str "\1074\1099\1089\1086\1090\1072",Space,Str "\1090\1086\1095\1082\1080",Str ".",Space,Str "\1053\1077\1086\1073\1093\1086\1076\1080\1084\1086",Space,Str "\1088\1072\1079\1084\1077\1090\1080\1090\1100",Space,Str "\1084\1077\1089\1090\1085\1086\1089\1090\1100",Space,Str "\1087\1086",Space,Str "\1089\1083\1077\1076\1091\1102\1097\1080\1084",Space,Str "\1087\1088\1072\1074\1080\1083\1072\1084",Str ":"]
,BulletList
 [[Para [Str "\1048\1079",Space,Str "\1082\1072\1078\1076\1086\1081",Space,Str "\1082\1083\1077\1090\1082\1080",Space,Str "\1082\1072\1088\1090\1099",Space,Str "\1074\1086\1076\1072",Space,Str "\1089\1090\1077\1082\1072\1077\1090",Space,Str "\1085\1077",Space,Str "\1073\1086\1083\1077\1077",Space,Str "\1095\1077\1084",Space,Str "\1074",Space,Str "\1086\1076\1085\1086\1084",Space,Str "\1080\1079",Space,Str "\1095\1077\1090\1099\1088\1105\1093",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1099\1093",Space,Str "\1085\1072\1087\1088\1072\1074\1083\1077\1085\1080\1081",Space,Str "(",Quoted DoubleQuote [Str "\1089\1077\1074\1077\1088"],Str ",",Space,Quoted DoubleQuote [Str "\1102\1075"],Str ",",Space,Quoted DoubleQuote [Str "\1079\1072\1087\1072\1076"],Str ",",Space,Quoted DoubleQuote [Str "\1074\1086\1089\1090\1086\1082"],Str ")",Str "."]]
 ,[Para [Str "\1045\1089\1083\1080",Space,Str "\1091",Space,Str "\1082\1083\1077\1090\1082\1080",Space,Str "\1085\1077\1090",Space,Str "\1085\1080",Space,Str "\1086\1076\1085\1086\1075\1086",Space,Str "\1089\1086\1089\1077\1076\1072",Space,Str "\1089",Space,Str "\1074\1099\1089\1086\1090\1086\1081",Space,Str "\1084\1077\1085\1100\1096\1077",Space,Str "\1077\1105",Space,Str "\1089\1086\1073\1089\1090\1074\1077\1085\1085\1086\1081",Space,Str "\1074\1099\1089\1086\1090\1099",Str ",",Space,Str "\1090\1086",Space,Str "\1101\1090\1072",Space,Str "\1082\1083\1077\1090\1082\1072",Space,Str "\8211",Space,Str "\1074\1086\1076\1086\1089\1090\1086\1082",Str ",",Space,Str "\1080",Space,Str "\1074\1086\1076\1072",Space,Str "\1080\1079",Space,Str "\1085\1077\1105",Space,Str "\1085\1080\1082\1091\1076\1072",Space,Str "\1076\1072\1083\1100\1096\1077",Space,Str "\1085\1077",Space,Str "\1090\1077\1095\1105\1090",Str "."]]
 ,[Para [Str "\1048\1085\1072\1095\1077",Space,Str "\1074\1086\1076\1072",Space,Str "\1080\1079",Space,Str "\1090\1077\1082\1091\1097\1077\1081",Space,Str "\1082\1083\1077\1090\1082\1080",Space,Str "\1089\1090\1077\1082\1072\1077\1090",Space,Str "\1085\1072",Space,Str "\1089\1086\1089\1077\1076\1085\1102\1102",Space,Str "\1082\1083\1077\1090\1082\1091",Space,Str "\1089",Space,Str "\1084\1080\1085\1080\1084\1072\1083\1100\1085\1086\1081",Space,Str "\1074\1099\1089\1086\1090\1086\1081",Str "."]]
 ,[Para [Str "\1045\1089\1083\1080",Space,Str "\1090\1072\1082\1080\1093",Space,Str "\1089\1086\1089\1077\1076\1077\1081",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Str ",",Space,Str "\1090\1086",Space,Str "\1074\1086\1076\1072",Space,Str "\1089\1090\1077\1082\1072\1077\1090",Space,Str "\1087\1086",Space,Str "\1087\1077\1088\1074\1086\1084\1091",Space,Str "\1080\1079",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1099\1093",Space,Str "\1085\1072\1087\1088\1072\1074\1083\1077\1085\1080\1081",Space,Str "\1080\1079",Space,Str "\1089\1087\1080\1089\1082\1072",Space,Quoted DoubleQuote [Str "\1085\1072",Space,Str "\1089\1077\1074\1077\1088"],Str ",",Space,Quoted DoubleQuote [Str "\1085\1072",Space,Str "\1079\1072\1087\1072\1076"],Str ",",Space,Quoted DoubleQuote [Str "\1085\1072",Space,Str "\1074\1086\1089\1090\1086\1082"],Str ",",Space,Quoted DoubleQuote [Str "\1085\1072",Space,Str "\1102\1075"],Str "."]]]
,Para [Str "\1042\1089\1077",Space,Str "\1082\1083\1077\1090\1082\1080",Space,Str "\1080\1079",Space,Str "\1082\1086\1090\1086\1088\1099\1093",Space,Str "\1074\1086\1076\1072",Space,Str "\1089\1090\1077\1082\1072\1077\1090",Space,Str "\1074",Space,Str "\1086\1076\1080\1085",Space,Str "\1080",Space,Str "\1090\1086\1090",Space,Str "\1078\1077",Space,Str "\1074\1086\1076\1086\1089\1090\1086\1082",Space,Str "\1087\1088\1080\1085\1072\1076\1083\1077\1078\1072\1090",Space,Str "\1082",Space,Str "\1086\1076\1085\1086\1084\1091",Space,Str "\1073\1072\1089\1089\1077\1081\1085\1091",Space,Str "\1074\1086\1076\1086\1089\1073\1086\1088\1072",Str ".",Space,Str "\1053\1077\1086\1073\1093\1086\1076\1080\1084\1086",Space,Str "\1086\1090\1084\1077\1090\1080\1090\1100",Space,Str "\1085\1072",Space,Str "\1082\1072\1088\1090\1077",Space,Str "\1074\1089\1077",Space,Str "\1073\1072\1089\1089\1077\1081\1085\1099",Str ".",Space,Str "\1056\1077\1096\1077\1085\1080\1077",Space,Str "\1101\1090\1086\1081",Space,Str "\1079\1072\1076\1072\1095\1080",Space,Str "\1074\1089\1090\1088\1077\1090\1080\1083\1086\1089\1100",Space,Str "\1084\1085\1077",Space,Str "\1074",Space,Str "\1089\1090\1072\1090\1100\1077",Space,Str "\1044\1084\1080\1090\1088\1080\1103",Space,Str "\1040\1089\1090\1072\1087\1086\1074\1072",Space,Quoted DoubleQuote [Str "\1056\1077\1082\1091\1088\1089\1080\1103",Str "+",Str "\1084\1077\1084\1086\1080\1079\1072\1094\1080\1103",Space,Str "=",Space,Str "\1076\1080\1085\1072\1084\1080\1095\1077\1089\1082\1086\1077",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1080\1088\1086\1074\1072\1085\1080\1077"],Str ".",Space,Str "\1047\1076\1077\1089\1100",Space,Str "\1086\1085\1086",Space,Str "\1080",Space,Str "\1087\1088\1080\1074\1086\1076\1080\1090\1089\1103",Space,Str "\1089",Space,Str "\1085\1077\1079\1085\1072\1095\1080\1090\1077\1083\1100\1085\1099\1084\1080",Space,Str "\1080\1079\1084\1077\1085\1077\1085\1080\1103\1084\1080",Str "."]
,Para [Str "\1050\1072\1088\1090\1072",Space,Str "\1084\1077\1089\1090\1085\1086\1089\1090\1080",Space,Str "\1087\1088\1077\1076\1089\1090\1072\1074\1083\1077\1085\1072",Space,Str "\1074",Space,Str "\1074\1080\1076\1077",Space,Str "\1076\1074\1091\1084\1077\1088\1085\1086\1075\1086",Space,Str "\1084\1072\1089\1089\1080\1074\1072",Str ",",Space,Str "\1074",Space,Str "\1082\1072\1078\1076\1086\1081",Space,Str "\1082\1083\1077\1090\1082\1077",Space,Str "\1082\1086\1090\1086\1088\1086\1075\1086",Space,Str "\1086\1090\1084\1077\1095\1077\1085\1072",Space,Str "\1074\1099\1089\1086\1090\1072",Space,Str "\1090\1086\1095\1082\1080",Str ",",Space,Str "\1085\1072\1084",Space,Str "\1085\1077\1086\1073\1093\1086\1076\1080\1084\1086",Space,Str "\1087\1086\1083\1091\1095\1080\1090\1100",Space,Str "\1076\1074\1091\1084\1077\1088\1085\1099\1081",Space,Str "\1084\1072\1089\1089\1080\1074",Space,Str "\1090\1086\1075\1086",Space,Str "\1078\1077",Space,Str "\1088\1072\1079\1084\1077\1088\1072",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1074\1084\1077\1089\1090\1086",Space,Str "\1074\1099\1089\1086\1090",Space,Str "\1089\1086\1076\1077\1088\1078\1080\1090",Space,Str "\1084\1077\1090\1082\1080",Space,Str "\1074\1086\1076\1086\1089\1090\1086\1082\1086\1074",Str ".",Space,Str "\1052\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1086\1090\1084\1077\1095\1072\1090\1100",Space,Str "\1080\1093",Space,Str "\1073\1091\1082\1074\1072\1084\1080",Space,Str "\1083\1072\1090\1080\1085\1089\1082\1086\1075\1086",Space,Str "\1072\1083\1092\1072\1074\1080\1090\1072",Space,Str "\1074",Space,Str "\1090\1086\1084",Space,Str "\1087\1086\1088\1103\1076\1082\1077",Str ",",Space,Str "\1074",Space,Str "\1082\1086\1090\1086\1088\1086\1084",Space,Str "\1086\1085\1080",Space,Str "\1074\1089\1090\1088\1077\1095\1072\1102\1090\1089\1103",Space,Str "\1087\1088\1080",Space,Str "\1086\1073\1093\1086\1076\1077",Space,Str "\1082\1072\1088\1090\1099",Space,Str "\1089\1074\1077\1088\1093\1091",Space,Str "\1074\1085\1080\1079",Str ",",Space,Str "\1089\1083\1077\1074\1072",Space,Str "\1085\1072\1087\1088\1072\1074\1086",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n1 2 3 4 5 6       a a a b b b\n7 8 9 2 4 5       a a b b b b\n3 5 3 3 6 7   ->  c c d b b e \n6 4 5 5 3 1       f g d b e e\n2 2 4 5 3 7       f g g h h e\n\\end{code}\n"
,Para [Str "\1044\1083\1103",Space,Str "\1087\1088\1077\1076\1089\1090\1072\1074\1083\1077\1085\1080\1103",Space,Str "\1076\1074\1091\1084\1077\1088\1085\1086\1075\1086",Space,Str "\1084\1072\1089\1089\1080\1074\1072",Space,Str "\1084\1099",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1091\1077\1084\1089\1103",Space,Str "\1090\1080\1087\1086\1084",Space,RawInline "latex" "\\In{Array}",Space,Str "\1080\1079",Space,Str "\1089\1090\1072\1085\1076\1072\1088\1090\1085\1086\1075\1086",Space,Str "\1084\1086\1076\1091\1083\1103",Space,RawInline "latex" "\\In{Data.Array}",Str ".",Space,Str "\1058\1080\1087",Space,RawInline "latex" "\\In{Array}",Space,Str "\1080\1084\1077\1077\1090",Space,Str "\1076\1074\1072",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1072",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndata Array i a\n\\end{code}\n"
,Para [Str "\1055\1077\1088\1074\1099\1081",Space,Str "\1091\1082\1072\1079\1099\1074\1072\1077\1090",Space,Str "\1085\1072",Space,Str "\1080\1085\1076\1077\1082\1089",Str ",",Space,Str "\1072",Space,Str "\1074\1090\1086\1088\1086\1081",Space,Str "\1085\1072",Space,Str "\1089\1086\1076\1077\1088\1078\1072\1085\1080\1077",Str ".",Space,Str "\1052\1072\1089\1089\1080\1074\1099",Space,Str "\1091\1078\1077",Space,Str "\1074\1089\1090\1088\1077\1095\1072\1083\1080\1089\1100",Space,Str "\1085\1072\1084",Space,Str "\1074",Space,Str "\1075\1083\1072\1074\1077",Space,Str "\1086",Space,Str "\1090\1080\1087\1077",Space,RawInline "latex" "\\In{ST}",Str ".",Space,Str "\1053\1072\1087\1086\1084\1085\1102",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1087\1086\1076\1088\1072\1079\1091\1084\1077\1074\1072\1077\1090\1089\1103",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1101\1090\1086\1090",Space,Str "\1090\1080\1087",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1086\1084",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Ix}",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1086\1087\1080\1089\1099\1074\1072\1077\1090",Space,Str "\1094\1077\1083\1086\1095\1080\1089\1083\1077\1085\1085\1099\1077",Space,Str "\1080\1085\1076\1077\1082\1089\1099",Str ",",Space,Str "\1074\1089\1087\1086\1084\1085\1080\1084",Space,Str "\1077\1075\1086",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nclass Ord a => Ix a where\n    range       :: (a, a) -> [a]\n    index       :: (a, a) -> a -> Int\n    inRange     :: (a, a) -> a -> Bool\n    rangeSize   :: (a, a) -> Int\n\\end{code}\n"
,Para [Str "\1055\1077\1088\1074\1099\1081",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090",Space,Str "\1091",Space,Str "\1074\1089\1077\1093",Space,Str "\1101\1090\1080\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1101\1090\1086",Space,Str "\1087\1072\1088\1072",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1087\1088\1077\1076\1089\1090\1072\1074\1083\1103\1077\1090",Space,Str "\1074\1077\1088\1093\1085\1102\1102",Space,Str "\1080",Space,Str "\1085\1080\1078\1085\1102\1102",Space,Str "\1075\1088\1072\1085\1100",Space,Str "\1087\1086\1089\1083\1077\1076\1086\1074\1072\1090\1077\1083\1100\1085\1086\1089\1090\1080",Str ".",Space,Str "\1055\1086\1087\1088\1086\1073\1091\1081\1090\1077",Space,Str "\1076\1086\1075\1072\1076\1072\1090\1100\1089\1103",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1076\1077\1083\1072\1102\1090",Space,Str "\1084\1077\1090\1086\1076\1099",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1082\1083\1072\1089\1089\1072",Space,Str "\1087\1086",Space,Str "\1090\1080\1087\1072\1084",Space,Str "\1080",Space,Str "\1080\1084\1077\1085\1072\1084",Str "."]
,Para [Str "\1044\1083\1103",Space,Str "\1076\1074\1091\1084\1077\1088\1085\1086\1075\1086",Space,Str "\1084\1072\1089\1089\1080\1074\1072",Space,Str "\1080\1085\1076\1077\1082\1089",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1079\1072\1076\1072\1074\1072\1090\1100\1089\1103",Space,Str "\1087\1072\1088\1086\1081",Space,Str "\1094\1077\1083\1099\1093",Space,Str "\1095\1080\1089\1077\1083",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nimport Data.Array\n\ntype Coord = (Int, Int)\ntype HeightMap = Array Coord Int\ntype SinkMap   = Array Coord Coord\n\\end{code}\n"
,Para [Str "\1047\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{HeightMap}",Space,Str "\1093\1088\1072\1085\1080\1090",Space,Str "\1082\1072\1088\1090\1091",Space,Str "\1074\1099\1089\1086\1090",Str ",",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{SinkMap}",Space,Str "\1093\1088\1072\1085\1080\1090",Space,Str "\1074",Space,Str "\1082\1072\1078\1076\1086\1081",Space,Str "\1082\1086\1086\1088\1076\1080\1085\1072\1090\1077",Str ",",Space,Str "\1090\1091",Space,Str "\1090\1086\1095\1082\1091",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1074\1086\1076\1086\1089\1090\1086\1082\1086\1084",Space,Str "\1076\1083\1103",Space,Str "\1076\1072\1085\1085\1086\1081",Space,Str "\1090\1086\1095\1082\1080",Str ".",Space,Str "\1053\1072\1084",Space,Str "\1085\1077\1086\1073\1093\1086\1076\1080\1084\1086",Space,Str "\1087\1086\1089\1090\1088\1086\1080\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nflow :: HeightMap -> SinkMap\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1088\1077\1096\1072\1090\1100",Space,Str "\1101\1090\1091",Space,Str "\1079\1072\1076\1072\1095\1091",Space,Str "\1088\1077\1082\1091\1088\1089\1080\1074\1085\1086",Str ".",Space,Str "\1055\1088\1077\1076\1089\1090\1072\1074\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1099",Space,Str "\1079\1085\1072\1077\1084",Space,Str "\1074\1086\1076\1086\1089\1090\1086\1082\1080",Space,Str "\1076\1083\1103",Space,Str "\1074\1089\1077\1093",Space,Str "\1090\1086\1095\1077\1082",Space,Str "\1082\1088\1086\1084\1077",Space,Str "\1076\1072\1085\1085\1086\1081",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1082\1072\1078\1076\1086\1081",Space,Str "\1090\1086\1095\1082\1080",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1091\1079\1085\1072\1090\1100",Space,Str "\1074",Space,Str "\1082\1072\1082\1091\1102",Space,Str "\1089\1090\1086\1088\1086\1085\1091",Space,Str "\1080\1079",Space,Str "\1085\1077\1105",Space,Str "\1089\1090\1077\1082\1072\1077\1090",Space,Str "\1074\1086\1076\1072",Str ".",Space,Str "\1055\1088\1080",Space,Str "\1101\1090\1086\1084",Space,Str "\1074\1086\1076\1086\1089\1090\1086\1082",Space,Str "\1076\1083\1103",Space,Str "\1089\1083\1077\1076\1091\1102\1097\1077\1081",Space,Str "\1090\1086\1095\1082\1080",Space,Str "\1090\1072\1082\1086\1081",Space,Str "\1078\1077",Space,Str "\1082\1072\1082",Space,Str "\1080",Space,Str "\1076\1083\1103",Space,Str "\1090\1077\1082\1091\1097\1077\1081",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1078\1077",Space,Str "\1080\1079",Space,Str "\1076\1072\1085\1085\1086\1081",Space,Str "\1090\1086\1095\1082\1080",Space,Str "\1074\1086\1076\1072",Space,Str "\1085\1080\1082\1091\1076\1072",Space,Str "\1085\1077",Space,Str "\1090\1077\1095\1105\1090",Str ",",Space,Str "\1090\1086",Space,Str "\1086\1085\1072",Space,Str "\1089\1072\1084\1072",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1074\1086\1076\1086\1089\1090\1086\1082\1086\1084",Str ".",Space,Str "\1052\1099",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1101\1090\1091",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1095\1077\1088\1077\1079",Space,Str "\1082\1086\1084\1073\1080\1085\1072\1090\1086\1088",Space,Str "\1085\1077\1087\1086\1076\1074\1080\1078\1085\1086\1081",Space,Str "\1090\1086\1095\1082\1080",Space,RawInline "latex" "\\In{fix}",Str ".",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nflow :: HeightMap -> SinkMap\nflow arr = fix $ \\result -> listArray (bounds arr) $ \n    map (\\x -> maybe x (result !) $ getSink arr x) $ \n    range $ bounds arr \n\ngetSink :: HeightMap -> Coord -> Maybe Coord\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1080\1097\1077\1084",Space,Str "\1088\1077\1096\1077\1085\1080\1077",Space,Str "\1074",Space,Str "\1074\1080\1076\1077",Space,Str "\1085\1077\1087\1086\1076\1074\1080\1078\1085\1086\1081",Space,Str "\1090\1086\1095\1082\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1082\1072\1088\1090\1091",Space,Str "\1089\1090\1086\1082\1086\1074",Space,Str "\1080",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1082\1072\1088\1090\1091",Space,Str "\1089\1090\1086\1082\1086\1074",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{getSink}",Space,Str "\1087\1086",Space,Str "\1076\1072\1085\1085\1086\1081",Space,Str "\1090\1086\1095\1082\1077",Space,Str "\1085\1072",Space,Str "\1082\1072\1088\1090\1077",Space,Str "\1074\1099\1095\1080\1089\1083\1103\1077\1090",Space,Str "\1089\1086\1089\1077\1076\1085\1102\1102",Space,Str "\1090\1086\1095\1082\1091",Str ",",Space,Str "\1074",Space,Str "\1082\1086\1090\1086\1088\1091\1102",Space,Str "\1089\1090\1077\1082\1072\1077\1090",Space,Str "\1074\1086\1076\1072",Str ".",Space,Str "\1069\1090\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1095\1072\1089\1090\1080\1095\1085\1086",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1072",Str ",",Space,Str "\1087\1086\1089\1082\1086\1083\1100\1082\1091",Space,Str "\1076\1083\1103",Space,Str "\1074\1086\1076\1086\1089\1090\1086\1082\1086\1074",Space,Str "\1085\1077\1090",Space,Str "\1090\1072\1082\1086\1081",Space,Str "\1089\1086\1089\1077\1076\1085\1077\1081",Space,Str "\1090\1086\1095\1082\1080",Str ",",Space,Str "\1074",Space,Str "\1082\1086\1090\1086\1088\1091\1102",Space,Str "\1073\1099",Space,Str "\1091\1090\1077\1082\1072\1083\1072",Space,Str "\1074\1086\1076\1072",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{listArray}",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1080\1088\1091\1077\1090",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Array}",Space,Str "\1080\1079",Space,Str "\1089\1087\1080\1089\1082\1072",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Str ".",Space,Str "\1055\1077\1088\1074\1099\1084",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1084",Space,Str "\1086\1085\1072",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1076\1080\1072\1087\1072\1079\1086\1085",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Space,Str "\1076\1083\1103",Space,Str "\1080\1085\1076\1077\1082\1089\1086\1074",Str ".",Space,Str "\1056\1072\1079\1084\1077\1088\1099",Space,Str "\1084\1072\1089\1089\1080\1074\1072",Space,Str "\1089\1086\1074\1087\1072\1076\1072\1102\1090",Space,Str "\1089",Space,Str "\1088\1072\1079\1084\1077\1088\1072\1084\1080",Space,Str "\1082\1072\1088\1090\1099",Space,Str "\1074\1099\1089\1086\1090",Str ",",Space,Str "\1087\1086\1101\1090\1086\1084\1091",Space,Str "\1087\1077\1088\1074\1099\1084",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1084",Space,Str "\1084\1099",Space,Str "\1087\1077\1088\1077\1076\1072\1105\1084",Space,RawInline "latex" "\\In{bounds arr}",Str "."]
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1088\1072\1079\1073\1077\1088\1105\1084\1089\1103",Space,Str "\1089",Space,Str "\1090\1077\1084",Space,Str "\1082\1072\1082",Space,Str "\1079\1072\1087\1086\1083\1085\1103\1102\1090\1089\1103",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1074",Space,Str "\1089\1087\1080\1089\1086\1082",Str ".",Space,Str "\1057\1085\1072\1095\1072\1083\1072",Space,Str "\1084\1099",Space,Str "\1089\1086\1079\1076\1072\1105\1084",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1082\1086\1086\1088\1076\1080\1085\1072\1090",Space,Str "\1080\1089\1093\1086\1076\1085\1086\1081",Space,Str "\1082\1072\1088\1090\1099",Space,Str "\1074\1099\1089\1086\1090",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nrange $ bounds arr\n\\end{code}\n"
,Para [Str "\1055\1086\1089\1083\1077",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1084\1099",Space,Str "\1087\1086",Space,Str "\1082\1086\1086\1088\1076\1080\1085\1072\1090\1072\1084",Space,Str "\1090\1086\1095\1077\1082",Space,Str "\1085\1072\1093\1086\1076\1080\1084",Space,Str "\1074\1086\1076\1086\1089\1090\1086\1082\1080",Str ",",Space,Str "\1087\1088\1080\1095\1105\1084",Space,Str "\1089\1088\1072\1079\1091",Space,Str "\1076\1083\1103",Space,Str "\1074\1089\1077\1093",Space,Str "\1090\1086\1095\1077\1082",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1087\1088\1086\1080\1089\1093\1086\1076\1080\1090",Space,Str "\1074",Space,Str "\1083\1103\1084\1073\1076\1072",Str "-",Str "\1092\1091\1085\1082\1094\1080\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n\\x -> maybe x (result !) $ getSink arr x\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1084",Space,Str "\1090\1077\1082\1091\1097\1091\1102",Space,Str "\1082\1086\1086\1088\1076\1080\1085\1072\1090\1091",Space,Str "\1080",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{getSink}",Space,Str "\1085\1072\1093\1086\1076\1080\1084",Space,Str "\1089\1086\1089\1077\1076\1085\1102\1102",Space,Str "\1090\1086\1095\1082\1091",Str ",",Space,Str "\1074",Space,Str "\1082\1086\1090\1086\1088\1091\1102",Space,Str "\1091\1073\1077\1075\1072\1077\1090",Space,Str "\1074\1086\1076\1072",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1090\1072\1082\1086\1081",Space,Str "\1090\1086\1095\1082\1080",Space,Str "\1085\1077\1090",Str ",",Space,Str "\1090\1086",Space,Str "\1074",Space,Str "\1089\1083\1077\1076\1091\1102\1097\1077\1084",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1080",Space,Str "\1084\1099",Space,Str "\1074\1077\1088\1085\1105\1084",Space,Str "\1080\1089\1093\1086\1076\1085\1091\1102",Space,Str "\1090\1086\1095\1082\1091",Str ",",Space,Str "\1087\1086\1089\1082\1086\1083\1100\1082\1091",Space,Str "\1074",Space,Str "\1101\1090\1086\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1086\1085\1072",Space,Str "\1080",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1074\1086\1076\1086\1089\1090\1086\1082\1086\1084",Str ",",Space,Str "\1072",Space,Str "\1077\1089\1083\1080",Space,Str "\1090\1072\1082\1072\1103",Space,Str "\1089\1086\1089\1077\1076\1085\1103\1103",Space,Str "\1090\1086\1095\1082\1072",Space,Str "\1074\1089\1105",Str "-",Str "\1090\1072\1082\1080",Space,Str "\1077\1089\1090\1100",Space,Str "\1084\1099",Space,Str "\1089\1087\1088\1086\1089\1080\1084",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090",Space,Str "\1080\1079",Space,Str "\1073\1091\1076\1091\1097\1077\1075\1086",Str ".",Space,Str "\1052\1099",Space,Str "\1086\1073\1088\1072\1090\1080\1084\1089\1103",Space,Str "\1082",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1091",Space,RawInline "latex" "\\In{(result !)}",Str ",",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1082\1072\1082\1080\1084",Space,Str "\1086\1082\1072\1078\1077\1090\1089\1103",Space,Str "\1074\1086\1076\1086\1089\1090\1086\1082",Space,Str "\1076\1083\1103",Space,Str "\1089\1086\1089\1077\1076\1085\1077\1081",Space,Str "\1090\1086\1095\1082\1080",Space,Str "\1080",Space,Str "\1074\1077\1088\1085\1105\1084",Space,Str "\1101\1090\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Str ".",Space,Str "\1055\1086\1089\1082\1086\1083\1100\1082\1091",Space,Str "\1079\1072",Space,Str "\1089\1095\1105\1090",Space,Str "\1083\1077\1085\1080\1074\1099\1093",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1081",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1080\1088\1091\1102\1097\1077\1075\1086",Space,Str "\1084\1072\1089\1089\1080\1074\1072",Space,Str "\1074\1099\1095\1080\1089\1083\1103\1102\1090\1089\1103",Space,Str "\1083\1080\1096\1100",Space,Str "\1086\1076\1080\1085",Space,Str "\1088\1072\1079",Str ",",Space,Str "\1087\1086\1089\1083\1077",Space,Str "\1090\1086\1075\1086",Space,Str "\1082\1072\1082",Space,Str "\1084\1099",Space,Str "\1085\1072\1081\1076\1105\1084",Space,Str "\1074\1086\1076\1086\1089\1090\1086\1082",Space,Str "\1076\1083\1103",Space,Str "\1076\1072\1085\1085\1086\1081",Space,Str "\1090\1086\1095\1082\1080",Space,Str "\1101\1090\1080\1084",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1086\1084",Space,Str "\1089\1084\1086\1075\1091\1090",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100\1089\1103",Space,Str "\1074\1089\1077",Space,Str "\1089\1086\1089\1077\1076\1085\1080\1077",Space,Str "\1090\1086\1095\1082\1080",Str ".",Space,Str "\1055\1088\1080",Space,Str "\1101\1090\1086\1084",Space,Str "\1087\1086\1088\1103\1076\1086\1082",Space,Str "\1086\1073\1088\1072\1097\1077\1085\1080\1103",Space,Str "\1082",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103\1084",Space,Str "\1080\1079",Space,Str "\1073\1091\1076\1091\1097\1080\1093",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1081",Space,Str "\1085\1077",Space,Str "\1080\1075\1088\1072\1077\1090",Space,Str "\1088\1086\1083\1080",Str "."]
,Para [Str "\1054\1089\1090\1072\1083\1086\1089\1100",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1087\1086\1080\1089\1082\1072",Space,Str "\1073\1083\1080\1078\1072\1081\1096\1077\1075\1086",Space,Str "\1089\1090\1086\1082\1072",Space,Str "\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1088\1072\1079\1084\1077\1090\1082\1080",Str "."]
,RawBlock "latex" "\n\\begin{code}\ngetSink :: HeightMap -> Coord -> Maybe Coord\ngetSink arr (x, y) \n    | null sinks = Nothing\n    | otherwise  = Just $ snd $ minimum $ map (\\i -> (arr!i, i)) sinks\n    where sinks = filter p [(x+1, y), (x-1, y), (x, y-1), (x, y+1)]\n          p i   = inRange (bounds arr) i && arr ! i < arr ! (x, y)\n\\end{code}\n"
,Para [Str "\1042",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1088\1072\1079\1084\1077\1090\1082\1080",Space,Str "\1084\1099",Space,Str "\1074\1086\1089\1087\1086\1083\1100\1079\1091\1077\1084\1089\1103",Space,Str "\1072\1089\1089\1086\1094\1080\1072\1090\1080\1074\1085\1099\1084",Space,Str "\1084\1072\1089\1089\1080\1074\1086\1084",Space,Str "\1080\1079",Space,Str "\1084\1086\1076\1091\1083\1103",Space,RawInline "latex" "\\In{Data.Map}",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{nub}",Space,Str "\1080\1079",Space,Str "\1084\1086\1076\1091\1083\1103",Space,RawInline "latex" "\\In{Data.List}",Space,Str "\1091\1073\1080\1088\1072\1077\1090",Space,Str "\1080\1079",Space,Str "\1089\1087\1080\1089\1082\1072",Space,Str "\1087\1086\1074\1090\1086\1088\1103\1102\1097\1080\1077\1089\1103",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1099",Str ".",Space,Str "\1047\1072\1090\1077\1084",Space,Str "\1084\1099",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1077\1084",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1087\1072\1088",Space,Str "\1080\1079",Space,Str "\1082\1086\1086\1088\1076\1080\1085\1072\1090",Space,Str "\1074\1086\1076\1086\1089\1090\1086\1082\1086\1074",Space,Str "\1080",Space,Str "\1084\1077\1090\1086\1082",Space,Str "\1080",Space,Str "\1074",Space,Str "\1089\1072\1084\1086\1084",Space,Str "\1082\1086\1085\1094\1077",Space,Str "\1088\1072\1079\1084\1077\1095\1072\1077\1084",Space,Str "\1080\1089\1093\1086\1076\1085\1099\1081",Space,Str "\1084\1072\1089\1089\1080\1074",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nlabel :: SinkMap -> LabelMap\nlabel a = fmap (m M.! ) a \n    where m = M.fromList $ flip zip ['a' .. ] $ nub $ elems a\n\\end{code}\n"
,Header 2 [Str "\1051\1077\1085\1080\1074\1077\1077",Space,Str "\1085\1077\1082\1091\1076\1072"]
,Para [Str "\1052\1099",Space,Str "\1074\1099\1103\1089\1085\1080\1083\1080",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1088\1077\1076\1091\1094\1080\1088\1086\1074\1072\1090\1100\1089\1103",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1087\1088\1080",Space,Str "\1089\1086\1087\1086\1089\1090\1072\1074\1083\1077\1085\1080\1080",Space,Str "\1089",Space,Str "\1086\1073\1088\1072\1079\1094\1086\1084",Space,Str "\1080",Space,Str "\1074",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{seq}",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{seq}",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1087\1088\1080\1084\1077\1085\1103\1090\1100",Str ",",Space,Str "\1072",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1080",Space,Str "\1085\1077",Space,Str "\1087\1088\1080\1084\1077\1085\1103\1090\1100",Str ".",Space,Str "\1053\1086",Space,Str "\1082\1072\1078\1077\1090\1089\1103",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1074",Space,Str "\1076\1077\1082\1086\1084\1087\1086\1079\1080\1094\1080\1080",Space,Str "\1084\1099",Space,Str "\1085\1077",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1091\1081\1090\1080",Space,Str "\1086\1090",Space,Str "\1085\1077\1086\1073\1093\1086\1076\1080\1084\1086\1089\1090\1080",Space,Str "\1087\1088\1086\1074\1077\1076\1077\1085\1080\1103",Space,Str "\1093\1086\1090\1103",Space,Str "\1073\1099",Space,Str "\1086\1076\1085\1086\1081",Space,Str "\1088\1077\1076\1091\1082\1094\1080\1080",Str ".",Space,Str "\1054\1082\1072\1079\1099\1074\1072\1077\1090\1089\1103",Space,Str "\1084\1086\1078\1077\1084",Str ",",Space,Str "\1074",Space,Str "Haskell",Space,Str "\1076\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1087\1088\1077\1076\1091\1089\1084\1086\1090\1088\1077\1085\1099",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1099\1077",Space,Emph [Str "\1083\1077\1085\1080\1074\1099\1077",Space,Str "\1086\1073\1088\1072\1079\1094\1099"],Space,Str "(",Str "lazy",Space,Str "patterns",Str ")",Str ".",Space,Str "\1054\1085\1080",Space,Str "\1086\1073\1086\1079\1085\1072\1095\1072\1102\1090\1089\1103",Space,Str "\1079\1085\1072\1082\1086\1084",Space,Str "\1090\1080\1083\1100\1076\1072",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nlazyHead :: [a] -> a\nlazyHead ~(x:xs) = x\n\\end{code}\n"
,Para [Str "\1055\1077\1088\1077\1076",Space,Str "\1089\1082\1086\1073\1082\1072\1084\1080",Space,Str "\1089\1086\1087\1086\1089\1090\1072\1074\1083\1077\1085\1080\1103",Space,Str "\1089",Space,Str "\1086\1073\1088\1072\1079\1094\1086\1084",Space,Str "\1087\1080\1096\1077\1090\1089\1103",Space,Str "\1089\1080\1084\1074\1086\1083",Space,Str "\1090\1080\1083\1100\1076\1072",Str ".",Space,Str "\1069\1090\1080\1084",Space,Str "\1084\1099",Space,Str "\1075\1086\1074\1086\1088\1080\1084",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1090\1077\1083\1102",Str ":",Space,Str "\1076\1086\1074\1077\1088\1100\1089\1103",Space,Str "\1084\1085\1077",Str ",",Space,Str "\1079\1076\1077\1089\1100",Space,Str "\1090\1086\1095\1085\1086",Space,Str "\1090\1072\1082\1086\1081",Space,Str "\1086\1073\1088\1072\1079\1077\1094",Str ",",Space,Str "\1084\1086\1078\1077\1096\1100",Space,Str "\1076\1072\1078\1077",Space,Str "\1085\1077",Space,Str "\1087\1088\1086\1074\1077\1088\1103\1090\1100",Space,Str "\1076\1072\1083\1100\1096\1077",Str ".",Space,Str "\1054\1085",Space,Str "\1080",Space,Str "\1087\1088\1072\1074\1076\1072",Space,Str "\1076\1072\1083\1100\1096\1077",Space,Str "\1085\1077",Space,Str "\1087\1086\1081\1076\1105\1090",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1077\1089\1083\1080",Space,Str "\1084\1099",Space,Str "\1085\1072\1087\1080\1096\1077\1084",Space,Str "\1090\1072\1082\1086\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nlazySafeHead :: [a] -> Maybe a\nlazySafeHead ~(x:xs) = Just x\nlazySafeHead []      = Nothing   \n\\end{code}\n"
,Para [Str "\1045\1089\1083\1080",Space,Str "\1084\1099",Space,Str "\1087\1086\1076\1089\1090\1072\1074\1080\1084",Space,Str "\1074",Space,Str "\1101\1090\1091",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1087\1091\1089\1090\1086\1081",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1084\1099",Space,Str "\1087\1086\1083\1091\1095\1080\1084",Space,Str "\1086\1096\1080\1073\1082\1091",Space,Str "\1074\1088\1077\1084\1077\1085\1080",Space,Str "\1074\1099\1087\1086\1083\1085\1077\1085\1080\1103",Str ",",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1090\1077\1083\1100",Space,Str "\1076\1086\1074\1077\1088\1080\1083\1089\1103",Space,Str "\1085\1072\1084",Space,Str "\1074",Space,Str "\1087\1077\1088\1074\1086\1084",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1080",Str ",",Space,Str "\1072",Space,Str "\1084\1099",Space,Str "\1077\1075\1086",Space,Str "\1086\1073\1084\1072\1085\1091\1083\1080",Str ".",Space,Str "\1057\1086\1093\1088\1072\1085\1080\1084",Space,Str "\1074",Space,Str "\1084\1086\1076\1091\1083\1077",Space,RawInline "latex" "\\In{Strict}",Space,Str "\1080",Space,Str "\1087\1088\1086\1074\1077\1088\1080\1084",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nPrelude Strict> :! ghc --make Strict\n[1 of 1] Compiling Strict           ( Strict.hs, Strict.o )\n\nStrict.hs:67:0:\n    Warning: Pattern match(es) are overlapped\n             In the definition of `lazySafeHead': lazySafeHead [] = ...\nPrelude Strict> :l Strict\nOk, modules loaded: Strict.\nPrelude Strict> lazySafeHead [1,2,3]\nJust 1\nPrelude Strict> lazySafeHead []\nJust *** Exception: Strict.hs:(67,0)-(68,29): Irrefutable \npattern failed for pattern (x : xs)\n\\end{code}\n"
,Para [Str "\1055\1088\1080",Space,Str "\1082\1086\1084\1087\1080\1083\1103\1094\1080\1080",Space,Str "\1085\1072\1084",Space,Str "\1076\1072\1078\1077",Space,Str "\1089\1086\1086\1073\1097\1080\1083\1080",Space,Str "\1086",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1086\1073\1088\1072\1079\1094\1099",Space,Str "\1074",Space,Str "\1076\1077\1082\1086\1084\1087\1086\1079\1080\1094\1080\1080",Space,Str "\1087\1077\1088\1077\1089\1077\1082\1072\1102\1090\1089\1103",Str ".",Space,Str "\1053\1086",Space,Str "\1084\1099",Space,Str "\1073\1099\1083\1080",Space,Str "\1091\1087\1088\1103\1084\1099",Space,Str "\1080",Space,Str "\1085\1072\1087\1086\1088\1086\1083\1080\1089\1100",Space,Str "\1085\1072",Space,Str "\1086\1096\1080\1073\1082\1091",Str ",",Space,Str "\1077\1089\1083\1080",Space,Str "\1084\1099",Space,Str "\1087\1086\1084\1077\1085\1103\1077\1084",Space,Str "\1086\1073\1088\1072\1079\1094\1099",Space,Str "\1084\1077\1089\1090\1072\1084\1080",Str ",",Space,Str "\1090\1086",Space,Str "\1074\1089\1105",Space,Str "\1087\1088\1086\1081\1076\1105\1090",Space,Str "\1075\1083\1072\1076\1082\1086",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nPrelude Strict> :! ghc --make Strict\n[1 of 1] Compiling Strict           ( Strict.hs, Strict.o )\nPrelude Strict> :l Strict\nOk, modules loaded: Strict.\nPrelude Strict> lazySafeHead []\nNothing\n\\end{code}\n"
,Para [Str "\1054\1090\1084\1077\1090\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1089\1086\1087\1086\1089\1090\1072\1074\1083\1077\1085\1080\1077",Space,Str "\1089",Space,Str "\1086\1073\1088\1072\1079\1094\1086\1084",Space,Str "\1074",Space,RawInline "latex" "\\In{let}",Space,Str "\1080",Space,RawInline "latex" "\\In{where}",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103\1093",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1083\1077\1085\1080\1074\1099\1084",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{lazyHead}",Space,Str "\1084\1099",Space,Str "\1084\1086\1075\1083\1080",Space,Str "\1073\1099",Space,Str "\1085\1072\1087\1080\1089\1072\1090\1100",Space,Str "\1080",Space,Str "\1090\1072\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nlazyHead a = x\n    where (x:xs) = a\n\nlazyHead a = \n    let (x:xs) = a\n    in  x\n\\end{code}\n"
,Para [Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1082\1072\1082",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1091\1102\1090\1089\1103",Space,Str "\1083\1077\1085\1080\1074\1099\1077",Space,Str "\1086\1073\1088\1072\1079\1094\1099",Space,Str "\1087\1088\1080",Space,Str "\1087\1086\1089\1090\1088\1086\1077\1085\1080\1080",Space,Str "\1087\1086\1090\1086\1082\1086\1074",Str ",",Space,Str "\1080\1083\1080",Space,Str "\1073\1077\1089\1082\1086\1085\1077\1095\1085\1099\1093",Space,Str "\1089\1087\1080\1089\1082\1086\1074",Str ".",Space,Str "\1052\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1087\1088\1077\1076\1089\1090\1072\1074\1083\1103\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1086\1076\1085\1086\1075\1086",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1072",Space,Str "\1087\1086\1090\1086\1082\1072\1084\1080",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Space,Str "\1089",Space,Str "\1086\1076\1080\1085\1072\1082\1086\1074\1099\1084",Space,Str "\1096\1072\1075\1086\1084",Str ".",Space,Str "\1058\1072\1082",Space,Str "\1084\1099",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1087\1088\1077\1076\1089\1090\1072\1074\1083\1103\1090\1100",Space,Str "\1085\1077\1087\1088\1077\1088\1099\1074\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1076\1080\1089\1082\1088\1077\1090\1085\1099\1084\1080",Space,Str "\1089\1080\1075\1085\1072\1083\1072\1084\1080",Str ".",Space,Str "\1057\1095\1080\1090\1072\1077\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1096\1072\1075",Space,Str "\1076\1080\1089\1082\1088\1077\1090\1080\1079\1072\1094\1080\1080",Space,Str "(",Str "\1080\1083\1080",Space,Str "\1096\1072\1075",Space,Str "\1084\1077\1078\1076\1091",Space,Str "\1089\1086\1089\1077\1076\1085\1080\1084\1080",Space,Str "\1090\1086\1095\1082\1072\1084\1080",Str ")",Space,Str "\1085\1072\1084",Space,Str "\1080\1079\1074\1077\1089\1090\1077\1085",Str "."]
,Para [Math DisplayMath "f : R \\rightarrow R \\ \\Rightarrow \\ f_n = f(n \\tau),\\quad n = 0,1,2, ..."]
,Para [Str "\1043\1076\1077",Space,Math InlineMath "\\tau",Space,Str "\8211",Space,Str "\1096\1072\1075",Space,Str "\1076\1080\1089\1082\1088\1077\1090\1080\1079\1072\1094\1080\1080",Str ",",Space,Str "\1072",Space,Math InlineMath "n",Space,Str "\1087\1088\1086\1073\1077\1075\1072\1077\1090",Space,Str "\1074\1089\1077",Space,Str "\1085\1072\1090\1091\1088\1072\1083\1100\1085\1099\1077",Space,Str "\1095\1080\1089\1083\1072",Str ".",Space,Str "\1054\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1088\1077\1096\1077\1085\1080\1103",Space,Str "\1076\1080\1092\1092\1077\1088\1077\1085\1094\1080\1072\1083\1100\1085\1099\1093",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1081",Space,Str "\1074\1080\1076\1072",Str ":"]
,Para [Math DisplayMath "\\frac{dx}{dt} = f(t)"]
,Para [Math DisplayMath "x(0) = \\hat{x}"]
,Para [Str "\1057\1080\1084\1074\1086\1083",Space,Math InlineMath "\\hat{x}",Space,Str "\1086\1079\1085\1072\1095\1072\1077\1090",Space,Str "\1085\1072\1095\1072\1083\1100\1085\1086\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Math InlineMath "x",Str ".",Space,Str "\1055\1077\1088\1077\1081\1076\1105\1084",Space,Str "\1082",Space,Str "\1076\1080\1089\1082\1088\1077\1090\1085\1099\1084",Space,Str "\1089\1080\1075\1085\1072\1083\1072\1084",Str ":"]
,Para [Math InlineMath "\\frac{x_n - x_{n-1}}{\\tau} = f_n, \\quad x_0 = \\hat{x}"]
,Para [Str "\1043\1076\1077",Space,Math InlineMath "\\tau",Space,Str "\8211",Space,Str "\1096\1072\1075",Space,Str "\1076\1080\1089\1082\1088\1077\1090\1080\1079\1072\1094\1080\1080",Str ",",Space,Str "\1072",Space,Math InlineMath "x",Space,Str "\1080",Space,Math InlineMath "f",Space,Str "\8211",Space,Str "\1101\1090\1086",Space,Str "\1087\1086\1090\1086\1082\1080",Space,Str "\1095\1080\1089\1077\1083",Str ",",Space,Str "\1080\1085\1076\1077\1082\1089",Space,RawInline "latex" "\\In{n}",Space,Str "\1087\1088\1086\1073\1077\1075\1072\1077\1090",Space,Str "\1086\1090",Space,Str "\1085\1091\1083\1103",Space,Str "\1076\1086",Space,Str "\1073\1077\1089\1082\1086\1085\1077\1095\1085\1086\1089\1090\1080",Space,Str "\1087\1086",Space,Str "\1074\1089\1077\1084",Space,Str "\1090\1086\1095\1082\1072\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1087\1088\1077\1074\1088\1072\1097\1105\1085\1085\1086\1081",Space,Str "\1074",Space,Str "\1076\1080\1089\1082\1088\1077\1090\1085\1099\1081",Space,Str "\1089\1080\1075\1085\1072\1083",Str ".",Space,Str "\1058\1072\1082\1086\1081",Space,Str "\1084\1077\1090\1086\1076",Space,Str "\1087\1088\1080\1073\1083\1080\1078\1077\1085\1080\1103",Space,Str "\1076\1080\1092\1092\1077\1088\1077\1085\1094\1080\1072\1083\1100\1085\1099\1093",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1081",Space,Str "\1085\1072\1079\1099\1074\1072\1102\1090",Space,Str "\1084\1077\1090\1086\1076\1086\1084",Space,Str "\1069\1081\1083\1077\1088\1072",Str ".",Space,Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1074\1099\1088\1072\1079\1080\1090\1100",Space,Str "\1089\1083\1077\1076\1091\1102\1097\1080\1081",Space,Str "\1101\1083\1077\1084\1077\1085\1090",Space,Str "\1089\1080\1075\1085\1072\1083\1072",Space,Str "\1095\1077\1088\1077\1079",Space,Str "\1087\1088\1077\1076\1099\1076\1091\1097\1080\1081",Str "."]
,Para [Math DisplayMath "x_n = x_{n-1} + \\tau f_n, \\quad x_0 = \\hat{x}"]
,Para [Str "\1047\1072\1082\1086\1076\1080\1088\1091\1077\1084",Space,Str "\1101\1090\1086",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n-- \1096\1072\1075 \1076\1080\1089\1082\1088\1077\1090\1080\1079\1072\1094\1080\1080\ndt :: Fractional a => a\ndt = 1e-3\n\n-- \1084\1077\1090\1086\1076 \1069\1081\1083\1077\1088\1072\nint :: Fractional a => a -> [a] -> [a]\nint x0 (f:fs) = x0 : int (x0 + dt * f) fs\n\\end{code}\n"
,Para [Str "\1057\1084\1086\1090\1088\1080\1090\1077",Space,Str "\1074",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{int}",Space,Str "\1084\1099",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1084",Space,Str "\1085\1072\1095\1072\1083\1100\1085\1086\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,RawInline "latex" "\\In{x0}",Space,Str "\1080",Space,Str "\1087\1086\1090\1086\1082",Space,Str "\1074\1089\1077\1093",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1087\1088\1072\1074\1086\1081",Space,Str "\1095\1072\1089\1090\1080",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1103",Str ",",Space,Str "\1087\1086\1090\1086\1082",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Math InlineMath "f(t)",Str ".",Space,Str "\1052\1099",Space,Str "\1087\1086\1084\1077\1097\1072\1077\1084",Space,Str "\1085\1072\1095\1072\1083\1100\1085\1086\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1074",Space,Str "\1087\1077\1088\1074\1099\1081",Space,Str "\1101\1083\1077\1084\1077\1085\1090",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1072",Str ",",Space,Str "\1072",Space,Str "\1086\1089\1090\1072\1083\1100\1085\1099\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1087\1086\1083\1091\1095\1072\1077\1084",Space,Str "\1088\1077\1082\1091\1088\1089\1080\1074\1085\1086",Str "."]
,Para [Str "\1054\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1076\1074\1077",Space,Str "\1074\1089\1087\1086\1084\1086\1075\1072\1090\1077\1083\1100\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ntime :: Fractional a => [a]\ntime = [0, dt ..]\n\ndist :: Fractional a => Int -> [a] -> [a] -> a\ndist n a b = ( / fromIntegral n) $ \n    foldl' (+) 0 $ take n $ map abs $ zipWith (-) a b\n\\end{code}\n"
,Para [Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{time}",Space,Str "\1087\1088\1086\1073\1077\1075\1072\1077\1090",Space,Str "\1074\1089\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1086\1090\1089\1095\1105\1090\1086\1074",Space,Str "\1096\1072\1075\1072",Space,Str "\1076\1080\1089\1082\1088\1077\1090\1080\1079\1072\1094\1080\1080",Space,Str "\1087\1086",Space,Str "\1074\1088\1077\1084\1077\1085\1080",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1090\1086\1078\1076\1077\1089\1090\1074\1077\1085\1085\1072\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1087\1088\1077\1076\1089\1090\1072\1074\1083\1077\1085\1085\1072\1103",Space,Str "\1074",Space,Str "\1074\1080\1076\1077",Space,Str "\1087\1086\1090\1086\1082\1072",Space,Str "\1089",Space,Str "\1096\1072\1075\1086\1084",Space,RawInline "latex" "\\In{dt}",Str "."]
,Para [Str "\1060\1091\1085\1082\1094\1080\1103",Space,Str "\1087\1088\1086\1074\1077\1088\1082\1080",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1072",Space,RawInline "latex" "\\In{dist}",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1076\1074\1072",Space,Str "\1087\1086\1090\1086\1082\1072",Space,Str "\1080",Space,Str "\1087\1086",Space,Str "\1085\1080\1084",Space,Str "\1089\1095\1080\1090\1072\1077\1090",Space,Str "\1088\1072\1089\1089\1090\1086\1103\1085\1080\1077",Space,Str "\1084\1077\1078\1076\1091",Space,Str "\1085\1080\1084\1080",Str ".",Space,Str "\1069\1090\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1075\1086\1074\1086\1088\1080\1090",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1088\1072\1089\1089\1090\1086\1103\1085\1080\1077",Space,Str "\1084\1077\1078\1076\1091",Space,Str "\1076\1074\1091\1084\1103",Space,Str "\1087\1086\1090\1086\1082\1072\1084\1080",Space,Str "\1074",Space,RawInline "latex" "\\In{n}",Space,Str "\1087\1077\1088\1074\1099\1093",Space,Str "\1090\1086\1095\1082\1072\1093",Space,Str "\1088\1072\1074\1085\1086",Space,Str "\1089\1091\1084\1084\1077",Space,Str "\1084\1086\1076\1091\1083\1077\1081",Space,Str "\1088\1072\1079\1085\1086\1089\1090\1080",Space,Str "\1084\1077\1078\1076\1091",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103\1084\1080",Space,Str "\1087\1086\1090\1086\1082\1086\1074",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1090\1086\1075\1086",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1086\1094\1077\1085\1080\1090\1100",Space,Str "\1089\1088\1077\1076\1085\1077\1077",Space,Str "\1088\1072\1089\1093\1086\1078\1076\1077\1085\1080\1077",Str ",",Space,Str "\1084\1099",Space,Str "\1076\1077\1083\1080\1084",Space,Str "\1074",Space,Str "\1082\1086\1085\1094\1077",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090",Space,Str "\1085\1072",Space,Str "\1095\1080\1089\1083\1086",Space,Str "\1090\1086\1095\1077\1082",Str "."]
,Para [Str "\1058\1072\1082\1078\1077",Space,Str "\1080\1084\1087\1086\1088\1090\1080\1088\1091\1077\1084",Space,Str "\1076\1083\1103",Space,Str "\1091\1076\1086\1073\1089\1090\1074\1072",Space,Str "\1089\1080\1084\1074\1086\1083\1100\1085\1099\1081",Space,Str "\1089\1080\1085\1086\1085\1080\1084",Space,Str "\1076\1083\1103",Space,RawInline "latex" "\\In{fmap}",Space,Str "\1080\1079",Space,Str "\1084\1086\1076\1091\1083\1103",Space,RawInline "latex" "\\In{Control.Applicative}",Str "."]
,RawBlock "latex" "\n\\begin{code}\nimport Control.Applicative((<$>))\n...\n\\end{code}\n"
,Para [Str "\1055\1088\1086\1074\1077\1088\1080\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{int}",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1089\1086\1093\1088\1072\1085\1080\1084",Space,Str "\1074\1089\1077",Space,Str "\1085\1086\1074\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1074",Space,Str "\1084\1086\1076\1091\1083\1077",Space,RawInline "latex" "\\In{Stream.hs}",Str ".",Space,Str "\1047\1072\1075\1088\1091\1079\1080\1084",Space,Str "\1084\1086\1076\1091\1083\1100",Space,Str "\1074",Space,Str "\1080\1085\1090\1077\1088\1087\1088\1077\1090\1072\1090\1086\1088",Space,Str "\1080",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1084",Space,Str "\1087\1088\1086\1080\1079\1074\1086\1076\1085\1091\1102",Space,Str "\1082\1072\1082\1086\1081",Str "-",Str "\1085\1080\1073\1091\1076\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ".",Space,Str "\1053\1072\1081\1076\1105\1084",Space,Str "\1088\1077\1096\1077\1085\1080\1077",Space,Str "\1076\1083\1103",Space,Str "\1087\1088\1072\1074\1086\1081",Space,Str "\1095\1072\1089\1090\1080",Space,Str "\1082\1086\1085\1089\1090\1072\1085\1090\1099",Space,Str "\1080",Space,Str "\1087\1088\1086\1074\1077\1088\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1087\1086\1083\1091\1095\1080\1083\1072\1089\1100",Space,Str "\1090\1086\1078\1076\1077\1089\1090\1074\1077\1085\1085\1072\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Stream> dist 1000 time $ int 0 $ repeat 1\n7.37188088351104e-17\n\\end{code}\n"
,Para [Str "\1060\1091\1085\1082\1094\1080\1080",Space,Str "\1087\1088\1072\1082\1090\1080\1095\1077\1089\1082\1080",Space,Str "\1089\1086\1074\1087\1072\1076\1072\1102\1090",Str ",",Space,Str "\1087\1086\1088\1103\1076\1086\1082",Space,Str "\1086\1096\1080\1073\1082\1080",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1077\1090",Space,Math InlineMath "10^{-16}",Str ".",Space,Str "\1058\1072\1082",Space,Str "\1080",Space,Str "\1076\1086\1083\1078\1085\1086",Space,Str "\1073\1099\1090\1100",Space,Str "\1076\1083\1103",Space,Str "\1083\1080\1085\1077\1081\1085\1099\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str ".",Space,Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1077\1089\1083\1080",Space,Str "\1074",Space,Str "\1087\1088\1072\1074\1086\1081",Space,Str "\1095\1072\1089\1090\1080",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1103",Space,Str "\1089\1090\1086\1080\1090",Space,Str "\1090\1086\1078\1076\1077\1089\1090\1074\1077\1085\1085\1072\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Stream> dist 1000 ((\\t -> t^2/2) <$> time) $ int 0 time\n2.497500000001403e-4\n\\end{code}\n"
,Para [Str "\1056\1077\1096\1077\1085\1080\1077",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1103",Space,Str "\1088\1072\1074\1085\1086",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Math InlineMath "\\frac{t^2}{2}",Str ".",Space,Str "\1047\1076\1077\1089\1100",Space,Str "\1084\1099",Space,Str "\1074\1080\1076\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1099",Space,Str "\1091\1078\1077",Space,Str "\1085\1077",Space,Str "\1090\1072\1082\1080\1077",Space,Str "\1093\1086\1088\1086\1096\1080\1077",Str "."]
,Para [Str "\1045\1089\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1102\1090\1089\1103",Space,Str "\1088\1077\1082\1091\1088\1089\1080\1074\1085\1086",Space,Str "\1074",Space,Str "\1090\1077\1088\1084\1080\1085\1072\1093",Space,Str "\1076\1080\1092\1092\1077\1088\1077\1085\1094\1080\1072\1083\1100\1085\1099\1093",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1081",Str ",",Space,Str "\1085\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1101\1082\1089\1087\1086\1085\1077\1085\1090\1072",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1088\1077\1096\1077\1085\1080\1077\1084",Space,Str "\1090\1072\1082\1086\1075\1086",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1103",Str ":"]
,Para [Math DisplayMath "\\frac{dx}{dt} = x"]
,Para [Math DisplayMath "x(t) = x(0) + \\int_{0}^{t} x(\\tau) d \\tau"]
,Para [Str "\1054\1087\1080\1096\1077\1084",Space,Str "\1101\1090\1086",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1077",Space,Str "\1074",Space,Str "Haskell",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ne = int 1 e\n\\end{code}\n"
,Para [Str "\1053\1072\1096\1077",Space,Str "\1086\1087\1080\1089\1072\1085\1080\1077",Space,Str "\1082\1086\1087\1080\1088\1091\1077\1090",Space,Str "\1080\1089\1093\1086\1076\1085\1086\1077",Space,Str "\1084\1072\1090\1077\1084\1072\1090\1080\1095\1077\1089\1082\1086\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Str ".",Space,Str "\1044\1086\1073\1072\1074\1080\1084",Space,Str "\1101\1090\1086",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1077",Space,Str "\1074",Space,Str "\1084\1086\1076\1091\1083\1100",Space,RawInline "latex" "\\In{Stream}",Space,Str "\1080",Space,Str "\1087\1088\1086\1074\1077\1088\1080\1084",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1099",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Stream> dist 1000 (map exp time) e\n^CInterrupted.\n\\end{code}\n"
,Para [Str "\1050",Space,Str "\1089\1086\1078\1072\1083\1077\1085\1080\1102",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1077",Space,Str "\1079\1072\1074\1080\1089\1083\1086",Str ".",Space,Str "\1053\1072\1078\1084\1105\1084",Space,RawInline "latex" "\\In{ctrl+c}",Space,Str "\1080",Space,Str "\1088\1072\1079\1073\1077\1088\1105\1084\1089\1103",Space,Str "\1087\1086\1095\1077\1084\1091",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1088\1072\1089\1087\1080\1096\1077\1084",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1077",Space,Str "\1087\1086\1090\1086\1082\1072",Space,Str "\1095\1080\1089\1077\1083",Space,RawInline "latex" "\\In{e}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n        e                           -- \1088\1072\1089\1082\1088\1086\1077\1084 e \n=>      int 1 e                     -- \1088\1072\1089\1082\1088\1086\1077\1084 int, \1074\1086 \1074\1090\1086\1088\1086\1084 \1074\1072\1088\1075\1091\1084\1077\1085\1090\1077\n                                    -- int \1089\1090\1086\1080\1090 \1076\1077\1082\1086\1084\1087\1086\1079\1080\1094\1080\1103, \n=>      int 1 e@(f:fs)              -- \1076\1083\1103 \1090\1086\1075\1086 \1095\1090\1086\1073\1099 \1091\1079\1085\1072\1090\1100 \1082\1072\1082\1086\1077 \1091\1088\1072\1074\1085\1077\1085\1080\1077 \n                                    -- \1076\1083\1103 int \1074\1099\1073\1088\1072\1090\1100 \1085\1072\1084 \1085\1091\1078\1085\1086 \1088\1072\1089\1082\1088\1099\1090\1100 \n                                    -- \1074\1090\1086\1088\1086\1081 \1072\1088\1075\1091\1084\1077\1085\1090, \1091\1079\1085\1072\1090\1100 \1082\1086\1088\1085\1077\1074\1086\1081 \n                                    -- \1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088, \1088\1072\1089\1082\1088\1086\1077\1084 \1074\1090\1086\1088\1086\1081 \1072\1088\1075\1091\1084\1077\1085\1090:\n=>      int 1 (int 1 e)\n=>      int 1 (int 1e@(f:fs))       -- \1090\1072\1082\1072\1103 \1078\1077 \1089\1080\1090\1091\1072\1094\1080\1103\n=>      int 1 (int 1 (int 1 e))\n\\end{code}\n"
,Para [Str "\1055\1088\1086\1073\1083\1077\1084\1072",Space,Str "\1074",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1087\1077\1088\1074\1099\1081",Space,Str "\1101\1083\1077\1084\1077\1085\1090",Space,Str "\1088\1077\1096\1077\1085\1080\1103",Space,Str "\1084\1099",Space,Str "\1079\1085\1072\1077\1084",Str ",",Space,Str "\1084\1099",Space,Str "\1087\1077\1088\1077\1076\1072\1105\1084",Space,Str "\1077\1075\1086",Space,Str "\1087\1077\1088\1074\1099\1084",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1084",Space,Str "\1080",Space,Str "\1087\1088\1080\1089\1086\1077\1076\1080\1085\1103\1077\1084",Space,Str "\1082",Space,Str "\1088\1077\1096\1077\1085\1080\1102",Str ",",Space,Str "\1085\1086",Space,Emph [Str "\1089\1087\1088\1072\1074\1072"],Space,Str "\1086\1090",Space,Str "\1079\1085\1072\1082\1072",Space,Str "\1088\1072\1074\1085\1086",Str ".",Space,Str "\1053\1086",Space,Str "\1076\1083\1103",Space,Str "\1090\1086\1075\1086",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1087\1077\1088\1077\1081\1090\1080",Space,Str "\1074",Space,Str "\1087\1088\1072\1074\1091\1102",Space,Str "\1095\1072\1089\1090\1100",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1090\1077\1083\1102",Space,Str "\1085\1091\1078\1085\1086",Space,Str "\1087\1088\1086\1074\1077\1088\1080\1090\1100",Space,Str "\1074\1089\1077",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1099",Str ",",Space,Str "\1074",Space,Str "\1082\1086\1090\1086\1088\1099\1093",Space,Str "\1077\1089\1090\1100",Space,Str "\1076\1077\1082\1086\1084\1087\1086\1079\1080\1094\1080\1103",Str ".",Space,Str "\1048",Space,Str "\1086\1085",Space,Str "\1085\1072\1095\1080\1085\1072\1077\1090",Space,Str "\1087\1088\1086\1074\1077\1088\1103\1090\1100",Str ",",Space,Str "\1085\1086",Space,Str "\1089\1083\1080\1096\1082\1086\1084",Space,Str "\1088\1072\1085\1086",Str ".",Space,Str "\1053\1072\1084",Space,Str "\1073\1099",Space,Str "\1093\1086\1090\1077\1083\1086\1089\1100",Str ",",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1086\1085",Space,Str "\1089\1085\1072\1095\1072\1083\1072",Space,Str "\1087\1088\1080\1089\1086\1077\1076\1080\1085\1080\1083",Space,Str "\1082",Space,Str "\1088\1077\1096\1077\1085\1080\1102",Space,Str "\1087\1077\1088\1074\1099\1081",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090",Str ",",Space,Str "\1072",Space,Str "\1079\1072\1090\1077\1084",Space,Str "\1074\1099\1087\1086\1083\1085\1103\1083",Space,Str "\1073\1099",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Space,Str "\1089\1083\1077\1076\1091\1102\1097\1077\1075\1086",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1072",Str "."]
,Para [Str "C",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1083\1077\1085\1080\1074\1099\1093",Space,Str "\1086\1073\1088\1072\1079\1094\1086\1074",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1086\1090\1083\1086\1078\1080\1090\1100",Space,Str "\1076\1077\1082\1086\1084\1087\1086\1079\1080\1094\1080\1102",Space,Str "\1074\1090\1086\1088\1086\1075\1086",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1072",Space,Str "\1085\1072",Space,Str "\1087\1086\1090\1086\1084",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nint :: Fractional a => a -> [a] -> [a]\nint x0 ~(f:fs) = x0 : int (x0 + dt * f) fs\n\\end{code}\n"
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1084\1099",Space,Str "\1074\1080\1076\1080\1084",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Stream> dist 1000 (map exp time) e\n4.988984990735441e-4\n\\end{code}\n"
,Para [Str "\1042\1099\1095\1080\1089\1083\1077\1085\1080\1103",Space,Str "\1087\1088\1086\1080\1089\1093\1086\1076\1103\1090",Str ".",Space,Str "\1057",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1074\1079\1072\1080\1084\1085\1086",Str "-",Str "\1088\1077\1082\1091\1088\1089\1080\1074\1085\1099\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1089\1080\1085\1091\1089",Space,Str "\1080",Space,Str "\1082\1086\1089\1080\1085\1091\1089",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nsinx = int 0 cosx\ncosx = int 1 (negate <$> sinx)\n\\end{code}\n"
,Para [Str "\1069\1090\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1086\1087\1080\1089\1099\1074\1072\1102\1090",Space,Str "\1090\1086\1095\1082\1091",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1073\1077\1075\1072\1077\1090",Space,Str "\1087\1086",Space,Str "\1086\1082\1088\1091\1078\1085\1086\1089\1090\1080",Str ".",Space,Str "\1042\1086\1090",Space,Str "\1084\1072\1090\1077\1084\1072\1090\1080\1095\1077\1089\1082\1086\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Str ":"]
,RawBlock "latex" "\\begin{eqnarray*}\n\\frac{dx}{dt}  &=& y \\\\\n\\frac{dy}{dt}  &=& - x \\\\\nx(0)           &=& 0 \\\\\ny(0)           &=& 1 \\\\\n\\end{eqnarray*}"
,Para [Str "\1055\1088\1086\1074\1077\1088\1080\1084",Space,Str "\1074",Space,Str "\1080\1085\1090\1077\1088\1087\1088\1077\1090\1072\1090\1086\1088\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*Stream> dist 1000 (sin <$> time) sinx\n1.5027460329809257e-4\n*Stream> dist 1000 (cos <$> time) cosx\n1.9088156807382827e-4\n\\end{code}\n"
,Para [Str "\1058\1072\1082",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1083\1077\1085\1080\1074\1099\1093",Space,Str "\1086\1073\1088\1072\1079\1094\1086\1074",Space,Str "\1085\1072\1084",Space,Str "\1091\1076\1072\1083\1086\1089\1100",Space,Str "\1087\1086\1087\1072\1089\1090\1100",Space,Str "\1074",Space,Str "\1087\1088\1072\1074\1091\1102",Space,Str "\1095\1072\1089\1090\1100",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1103",Space,Str "\1076\1083\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{int}",Str ",",Space,Str "\1085\1077",Space,Str "\1088\1072\1089\1082\1088\1099\1074\1072\1103",Space,Str "\1076\1086",Space,Str "\1082\1086\1085\1094\1072",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1099",Space,Str "\1074",Space,Str "\1083\1077\1074\1086\1081",Space,Str "\1095\1072\1089\1090\1080",Str ".",Space,Str "\1057",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1084\1099",Space,Str "\1084\1086\1075\1083\1080",Space,Str "\1089\1089\1099\1083\1072\1090\1100\1089\1103",Space,Str "\1074",Space,Str "\1089\1086\1087\1086\1089\1090\1072\1074\1083\1077\1085\1080\1080",Space,Str "\1089",Space,Str "\1086\1073\1088\1072\1079\1094\1086\1084",Space,Str "\1085\1072",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Str ",",Space,Str "\1082\1086\1090\1086\1088\1086\1077",Space,Str "\1077\1097\1105",Space,Str "\1085\1077",Space,Str "\1073\1099\1083\1086",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1086",Str "."]
,Header 2 [Str "\1050\1088\1072\1090\1082\1086\1077",Space,Str "\1089\1086\1076\1077\1088\1078\1072\1085\1080\1077"]
,Para [Str "\1051\1077\1085\1080\1074\1099\1077",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Space,Str "\1087\1086\1074\1099\1096\1072\1102\1090",Space,Str "\1084\1086\1076\1091\1083\1100\1085\1086\1089\1090\1100",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084",Str ".",Space,Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1074",Space,Str "\1086\1076\1085\1086\1081",Space,Str "\1095\1072\1089\1090\1080",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084\1099",Space,Str "\1089\1086\1079\1076\1072\1090\1100",Space,Str "\1074\1089\1077",Space,Str "\1074\1086\1079\1084\1086\1078\1085\1099\1077",Space,Str "\1088\1077\1096\1077\1085\1080\1103",Str ",",Space,Str "\1072",Space,Str "\1074",Space,Str "\1076\1088\1091\1075\1086\1081",Space,Str "\1074\1099\1073\1088\1072\1090\1100",Space,Str "\1083\1091\1095\1096\1080\1077",Space,Str "\1087\1086",Space,Str "\1082\1072\1082\1086\1084\1091",Str "-",Str "\1083\1080\1073\1086",Space,Str "\1087\1088\1080\1079\1085\1072\1082\1091",Str ".",Space,Str "\1058\1072\1082\1078\1077",Space,Str "\1084\1099",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1077\1083\1080",Space,Str "\1085\1072",Space,Str "\1080\1085\1090\1077\1088\1077\1089\1085\1091\1102",Space,Str "\1090\1077\1093\1085\1080\1082\1091",Space,Str "\1085\1072\1087\1080\1089\1072\1085\1080\1103",Space,Str "\1088\1077\1082\1091\1088\1089\1080\1074\1085\1099\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1085\1072\1079\1099\1074\1072\1077\1090\1089\1103",Space,Str "\1084\1077\1084\1086\1080\1079\1072\1094\1080\1077\1081",Str ".",Space,Str "\1052\1077\1084\1086\1080\1079\1072\1094\1080\1103",Space,Str "\1086\1079\1085\1072\1095\1072\1077\1090",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1099",Space,Str "\1085\1077",Space,Str "\1074\1099\1095\1080\1089\1083\1103\1077\1084",Space,Str "\1087\1086\1074\1090\1086\1088\1085\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1085\1077\1082\1086\1090\1086\1088\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1072",Space,Str "\1089\1086\1093\1088\1072\1085\1103\1077\1084",Space,Str "\1080\1093",Space,Str "\1080",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1091\1077\1084",Space,Str "\1074",Space,Str "\1076\1072\1083\1100\1085\1077\1081\1096\1080\1093",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103\1093",Str ".",Space,Str "\1052\1099",Space,Str "\1091\1079\1085\1072\1083\1080",Space,Str "\1085\1086\1074\1091\1102",Space,Str "\1089\1080\1085\1090\1072\1082\1089\1080\1095\1077\1089\1082\1091\1102",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1094\1080\1102",Str ".",Space,Str "\1054\1082\1072\1079\1099\1074\1072\1077\1090\1089\1103",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1085\1077",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1073\1086\1088\1086\1090\1100\1089\1103",Space,Str "\1089",Space,Str "\1083\1077\1085\1100\1102",Str ",",Space,Str "\1085\1086",Space,Str "\1080",Space,Str "\1087\1086\1086\1097\1088\1103\1090\1100",Space,Str "\1077\1105",Str ".",Space,Str "\1051\1077\1085\1100",Space,Str "\1087\1086\1086\1097\1088\1103\1077\1090\1089\1103",Space,Str "\1083\1077\1085\1080\1074\1099\1084\1080",Space,Str "\1086\1073\1088\1072\1079\1094\1072\1084\1080",Str ".",Space,Str "\1054\1085\1080",Space,Str "\1086\1090\1084\1077\1085\1103\1102\1090",Space,Str "\1087\1088\1080\1074\1077\1076\1077\1085\1080\1077",Space,Str "\1082",Space,Str "\1089\1083\1072\1073\1086\1081",Space,Str "\1079\1072\1075\1086\1083\1086\1074\1086\1095\1085\1086\1081",Space,Str "\1085\1086\1088\1084\1072\1083\1100\1085\1086\1081",Space,Str "\1092\1086\1088\1084\1077",Space,Str "\1087\1088\1080",Space,Str "\1076\1077\1082\1086\1084\1087\1086\1079\1080\1094\1080\1080",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1074",Str ".",Space,Str "\1054\1085\1080",Space,Str "\1087\1080\1096\1091\1090\1089\1103",Space,Str "\1082\1072\1082",Space,Str "\1086\1073\1099\1095\1085\1099\1077",Space,Str "\1086\1073\1088\1072\1079\1094\1099",Str ",",Space,Str "\1085\1086",Space,Str "\1089\1086",Space,Str "\1079\1085\1072\1082\1086\1084",Space,Str "\1090\1080\1083\1100\1076\1072",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nlazyHead ~(x:xs) = x\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1075\1086\1074\1086\1088\1080\1084",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1090\1077\1083\1102",Str ":",Space,Str "\1087\1086\1074\1077\1088\1100",Space,Str "\1084\1085\1077",Str ",",Space,Str "\1101\1090\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1080\1084\1077\1090\1100",Space,Str "\1090\1086\1083\1100\1082\1086",Space,Str "\1090\1072\1082\1086\1081",Space,Str "\1074\1080\1076",Str ",",Space,Str "\1087\1086\1090\1086\1084",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1080\1096\1100",Space,Str "\1090\1072\1082",Space,Str "\1083\1080",Space,Str "\1101\1090\1086",Str ",",Space,Str "\1082\1086\1075\1076\1072",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1090\1077\1073\1077",Space,Str "\1087\1086\1085\1072\1076\1086\1073\1103\1090\1089\1103",Str ".",Space,Str "\1055\1086\1101\1090\1086\1084\1091",Space,Str "\1083\1077\1085\1080\1074\1099\1077",Space,Str "\1086\1073\1088\1072\1079\1094\1099",Space,Str "\1087\1088\1086\1093\1086\1076\1103\1090",Space,Str "\1089\1086\1087\1086\1089\1090\1072\1074\1083\1077\1085\1080\1077",Space,Str "\1089",Space,Str "\1086\1073\1088\1072\1079\1094\1086\1084",Space,Str "\1074",Space,Str "\1083\1102\1073\1086\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Str "."]
,Para [Str "\1057\1086\1087\1086\1089\1090\1072\1074\1083\1077\1085\1080\1077",Space,Str "\1089",Space,Str "\1086\1073\1088\1072\1079\1094\1086\1084",Space,Str "\1074",Space,RawInline "latex" "\\In{let}",Space,Str "\1080",Space,RawInline "latex" "\\In{where}",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103\1093",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1083\1077\1085\1080\1074\1099\1084",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{lazyHead}",Space,Str "\1084\1099",Space,Str "\1084\1086\1075\1083\1080",Space,Str "\1073\1099",Space,Str "\1085\1072\1087\1080\1089\1072\1090\1100",Space,Str "\1080",Space,Str "\1090\1072\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nlazyHead a = x\n    where (x:xs) = a\n\nlazyHead a = \n    let (x:xs) = a\n    in  x\n\\end{code}\n"
,Header 2 [Str "\1059\1087\1088\1072\1078\1085\1077\1085\1080\1103"]
,Para [Str "\1052\1099",Space,Str "\1087\1086\1073\1099\1074\1072\1083\1080",Space,Str "\1085\1072",Space,Str "\1074\1099\1089\1090\1072\1074\1082\1077",Space,Str "\1083\1077\1085\1080\1074\1099\1093",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084",Str ".",Space,Str "\1055\1088\1080\1089\1084\1086\1090\1088\1080\1090\1077\1089\1100",Space,Str "\1077\1097\1105",Space,Str "\1088\1072\1079",Space,Str "\1082",Space,Str "\1088\1077\1096\1077\1085\1080\1103\1084",Space,Str "\1079\1072\1076\1072\1095",Space,Str "\1101\1090\1086\1081",Space,Str "\1075\1083\1072\1074\1099",Space,Str "\1080",Space,Str "\1087\1086\1076\1091\1084\1072\1081\1090\1077",Space,Str "\1082\1072\1082\1091\1102",Space,Str "\1088\1086\1083\1100",Space,Str "\1089\1099\1075\1088\1072\1083\1080",Space,Str "\1083\1077\1085\1080\1074\1099\1077",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Space,Str "\1074",Space,Str "\1082\1072\1078\1076\1086\1084",Space,Str "\1080\1079",Space,Str "\1089\1083\1091\1095\1072\1077\1074",Str ",",Space,Str "\1082\1072\1082\1080\1077",Space,Str "\1084\1086\1090\1080\1074\1099",Space,Str "\1086\1073\1099\1075\1088\1099\1074\1072\1102\1090\1089\1103",Space,Str "\1074",Space,Str "\1101\1090\1080\1093",Space,Str "\1087\1088\1080\1084\1077\1088\1072\1093",Str ".",Space,Str "\1058\1072\1082\1078\1077",Space,Str "\1087\1086\1076\1091\1084\1072\1081\1090\1077",Space,Str "\1082\1072\1082\1080\1084",Space,Str "\1073\1099\1083\1086",Space,Str "\1073\1099",Space,Str "\1088\1077\1096\1077\1085\1080\1077",Str ",",Space,Str "\1077\1089\1083\1080",Space,Str "\1073\1099",Space,Str "\1074",Space,Str "Haskell",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1086\1074\1072\1083\1072\1089\1100",Space,Str "\1089\1090\1088\1072\1090\1077\1075\1080\1103",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1103",Space,Str "\1087\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1102",Str ".",Space,Str "\1050\1088\1080\1090\1080\1095\1077\1089\1082\1080",Space,Str "\1085\1072\1089\1090\1088\1086\1077\1085\1085\1099\1077",Space,Str "\1095\1080\1090\1072\1090\1077\1083\1080",Space,Str "\1084\1086\1075\1091\1090",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1087\1088\1086\1092\1080\1083\1080\1088\1086\1074\1072\1085\1080\1103",Space,Str "\1087\1088\1086\1074\1077\1088\1080\1090\1100",Space,Str "\1101\1092\1092\1077\1082\1090\1080\1074\1085\1086\1089\1090\1100",Space,Str "\1087\1088\1086\1075\1088\1072\1084\1084",Space,Str "\1080\1079",Space,Str "\1101\1090\1086\1081",Space,Str "\1075\1083\1072\1074\1099",Str "."]]