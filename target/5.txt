[Header 1 [Str "\1060\1091\1085\1082\1094\1080\1080",Space,Str "\1074\1099\1089\1096\1077\1075\1086",Space,Str "\1087\1086\1088\1103\1076\1082\1072"]
,Para [RawInline "tex" "\\Funs{\1074\1099\1089\1096\1077\1075\1086 \1087\1086\1088\1103\1076\1082\1072}",Space,Emph [Str "\1060\1091\1085\1082\1094\1080\1077\1081",Space,Str "\1074\1099\1089\1096\1077\1075\1086",Space,Str "\1087\1086\1088\1103\1076\1082\1072"],Space,Str "\1085\1072\1079\1099\1074\1072\1102\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1090\1100",Space,Str "\1085\1072",Space,Str "\1074\1093\1086\1076",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1080\1083\1080",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1074",Space,Str "\1082\1072\1095\1077\1089\1090\1074\1077",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1072",Str ".",Space,Str "\1047\1072",Space,Str "\1089\1095\1105\1090",Space,Str "\1095\1072\1089\1090\1080\1095\1085\1086\1075\1086",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1103",Space,Str "\1074",Space,Str "Haskell",Space,Str "\1074\1089\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1102\1090",Space,Str "\1073\1086\1083\1077\1077",Space,Str "\1086\1076\1085\1086\1075\1086",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1072",Str ",",Space,Str "\1103\1074\1083\1103\1102\1090\1089\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1103\1084\1080",Space,Str "\1074\1099\1089\1096\1077\1075\1086",Space,Str "\1087\1086\1088\1103\1076\1082\1072",Str "."]
,Para [Str "\1042",Space,Str "\1101\1090\1086\1081",Space,Str "\1075\1083\1072\1074\1077",Space,Str "\1084\1099",Space,Str "\1087\1086\1076\1088\1086\1073\1085\1086",Space,Str "\1086\1073\1089\1091\1076\1080\1084",Space,Str "\1089\1087\1086\1089\1086\1073\1099",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1077\1085\1080\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str ",",Space,Str "\1085\1077\1076\1072\1088\1086\1084",Space,Str "Haskell",Space,Str "\8211",Space,Str "\1092\1091\1085\1082\1094\1080\1086\1085\1072\1083\1100\1085\1099\1081",Space,Str "\1103\1079\1099\1082",Str ".",Space,Str "\1042",Space,Str "Haskell",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1103\1074\1083\1103\1102\1090\1089\1103",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1075\1080\1073\1082\1080\1084",Space,Str "\1086\1073\1098\1077\1082\1090\1086\1084",Str ",",Space,Str "\1086\1085\1080",Space,Str "\1087\1086\1079\1074\1086\1083\1103\1102\1090",Space,Str "\1074\1099\1076\1077\1083\1103\1090\1100",Space,Str "\1089\1083\1086\1078\1085\1099\1077",Space,Str "\1089\1087\1086\1089\1086\1073\1099",Space,Str "\1082\1086\1084\1073\1080\1085\1080\1088\1086\1074\1072\1085\1080\1103",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Str ".",Space,Str "\1063\1072\1089\1090\1086",Space,Str "\1079\1072",Space,Str "\1089\1095\1105\1090",Space,Str "\1088\1072\1079\1074\1080\1090\1099\1093",Space,Str "\1089\1088\1077\1076\1089\1090\1074",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1077\1085\1080\1103",Space,Str "\1085\1086\1074\1099\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1074",Space,Str "Haskell",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1077\1083\1100",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1077\1090",Space,Str "\1083\1080\1096\1100",Space,Str "\1073\1072\1079\1086\1074\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1087\1086\1083\1091\1095\1072\1103",Space,Str "\1086\1089\1090\1072\1083\1100\1085\1099\1077",Space,Quoted DoubleQuote [Str "\1085\1072",Space,Str "\1083\1077\1090\1091"],Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1077\1084",Space,Str "\1076\1074\1091\1093",Str "-",Str "\1090\1088\1105\1093",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1081",Str ",",Space,Str "\1101\1090\1086",Space,Str "\1074\1099\1075\1083\1103\1076\1080\1090",Space,Str "\1087\1088\1080\1084\1077\1088\1085\1086",Space,Str "\1082\1072\1082",Space,RawInline "latex" "\\In{(2+3)*5}",Str ",",Space,Str "\1075\1076\1077",Space,Str "\1074\1084\1077\1089\1090\1086",Space,Str "\1095\1080\1089\1077\1083",Space,Str "\1089\1090\1086\1103\1090",Space,Str "\1073\1072\1079\1086\1074\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1072",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Space,RawInline "latex" "\\In{+}",Space,Str "\1080",Space,RawInline "latex" "\\In{*}",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1102\1090",Space,Str "\1085\1086\1074\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1080\1079",Space,Str "\1087\1088\1086\1089\1090\1077\1081\1096\1080\1093",Str "."]
,Header 2 [Str "\1054\1073\1086\1073\1097\1105\1085\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080"]
,Para [Str "\1042",Space,Str "\1101\1090\1086\1084",Space,Str "\1088\1072\1079\1076\1077\1083\1077",Space,Str "\1084\1099",Space,Str "\1087\1086\1079\1085\1072\1082\1086\1084\1080\1084\1089\1103",Space,Str "\1089",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1080\1084\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1103\1084\1080",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1102\1090",Space,Str "\1086\1076\1085\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1080",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1102\1090",Space,Str "\1087\1086",Space,Str "\1085\1080\1084",Space,Str "\1076\1088\1091\1075\1080\1077",Str ".",Space,Str "\1069\1090\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1091\1102\1090\1089\1103",Space,Str "\1074",Space,Str "Haskell",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1095\1072\1089\1090\1086",Str ".",Space,Str "\1042\1089\1077",Space,Str "\1086\1085\1080",Space,Str "\1078\1080\1074\1091\1090",Space,Str "\1074",Space,Str "\1084\1086\1076\1091\1083\1077",Space,RawInline "latex" "\\In{Data.Function}",Str ".",Space,Str "\1052\1086\1076\1091\1083\1100",Space,RawInline "latex" "\\In{Prelude}",Space,Str "\1101\1082\1089\1087\1086\1088\1090\1080\1088\1091\1077\1090",Space,Str "\1080\1093",Space,Str "\1080\1079",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1084\1086\1076\1091\1083\1103",Str "."]
,Header 3 [Str "\1060\1091\1085\1082\1094\1080\1103",Space,Str "\1090\1086\1078\1076\1077\1089\1090\1074\1072"]
,Para [Str "\1053\1072\1095\1085\1105\1084",Space,Str "\1089",Space,Str "\1089\1072\1084\1086\1081",Space,Str "\1087\1088\1086\1089\1090\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{id}",Str ".",Space,Str "\1054\1085\1072",Space,Str "\1085\1080\1095\1077\1075\1086",Space,Str "\1085\1077",Space,Str "\1076\1077\1083\1072\1077\1090",Space,Str "\1089",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1084",Str ",",Space,Str "\1087\1088\1086\1089\1090\1086",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1077\1075\1086",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nid :: a -> a\nid x = x\n\\end{code}\n"
,Para [Str "\1047\1072\1095\1077\1084",Space,Str "\1085\1072\1084",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1087\1086\1085\1072\1076\1086\1073\1080\1090\1100\1089\1103",Space,Str "\1090\1072\1082\1072\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Str "?",Space,Str "\1057\1072\1084\1072",Space,Str "\1087\1086",Space,Str "\1089\1077\1073\1077",Space,Str "\1086\1085\1072",Space,Str "\1073\1077\1089\1087\1086\1083\1077\1079\1085\1072",Str ".",Space,Str "\1054\1085\1072",Space,Str "\1087\1088\1080\1086\1073\1088\1077\1090\1072\1077\1090",Space,Str "\1094\1077\1085\1085\1086\1089\1090\1100",Space,Str "\1087\1088\1080",Space,Str "\1089\1086\1074\1084\1077\1089\1090\1085\1086\1084",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1086\1074\1072\1085\1080\1080",Space,Str "\1089",Space,Str "\1076\1088\1091\1075\1080\1084\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1103\1084\1080",Str ",",Space,Str "\1087\1086\1101\1090\1086\1084\1091",Space,Str "\1087\1086\1082\1072",Space,Str "\1084\1099",Space,Str "\1085\1077",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1087\1088\1080\1074\1086\1076\1080\1090\1100",Space,Str "\1087\1088\1080\1084\1077\1088\1086\1074",Str "."]
,Header 3 [Str "\1050\1086\1085\1089\1090\1072\1085\1090\1085\1072\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1103"]
,Para [Str "\1057\1083\1077\1076\1091\1102\1097\1072\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{const}",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1080",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1087\1086\1089\1090\1086\1103\1085\1085\1091\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ".",Space,Str "\1069\1090\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1090\1100",Space,Str "\1082\1086\1085\1089\1090\1072\1085\1090\1091",Space,Str "\1076\1083\1103",Space,Str "\1083\1102\1073\1086\1075\1086",Space,Str "\1087\1077\1088\1077\1076\1072\1085\1085\1086\1075\1086",Space,Str "\1074",Space,Str "\1085\1077\1105",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nconst :: a -> b -> a\nconst a _ = a\n\\end{code}\n"
,Para [Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{const}",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088\1086\1084",Space,Str "\1087\1086\1089\1090\1086\1103\1085\1085\1099\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str ",",Space,Str "\1090\1072\1082",Space,Str "\1085\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1084\1099",Space,Str "\1087\1086\1083\1091\1095\1072\1077\1084",Space,Str "\1087\1103\1090\1105\1088\1082\1080",Space,Str "\1085\1072",Space,Str "\1083\1102\1073\1086\1081",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nPrelude> let onlyFive = const 5\nPrelude> :t onlyFive \nonlyFive :: b -> Integer\nPrelude> onlyFive \"Hi\"\n5\nPrelude> onlyFive (1,2,3)\n5\nPrelude> map onlyFive \"abracadabra\"\n[5,5,5,5,5,5,5,5,5,5,5]\n\\end{code}\n"
,Para [Str "\1057",Space,Str "\1077\1105",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1083\1077\1075\1082\1086",Space,Str "\1087\1086\1089\1090\1088\1086\1080\1090\1100",Space,Str "\1080",Space,Str "\1087\1086\1089\1090\1086\1103\1085\1085\1091\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1076\1074\1091\1093",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1074",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nconst2 a = const (const a)\n\\end{code}\n"
,Para [Str "\1042\1089\1087\1086\1084\1085\1080\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1076\1083\1103",Space,RawInline "latex" "\\In{&&}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n(&&) :: Bool -> Bool -> Bool\n(&&) True   x  = x\n(&&) False  _  = False  \n\\end{code}\n"
,Para [Str "\1057",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,RawInline "latex" "\\In{id}",Space,Str "\1080",Space,RawInline "latex" "\\In{const}",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1089\1086\1082\1088\1072\1090\1080\1090\1100",Space,Str "\1095\1080\1089\1083\1086",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1074",Space,Str "\1080",Space,Str "\1091\1088\1072\1074\1085\1077\1085\1080\1081",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n(&&) :: Bool -> Bool -> Bool\n(&&) a = if a then id else (const False)\n\\end{code}\n"
,Para [Str "\1058\1072\1082\1078\1077",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1080",Space,Str "\1083\1086\1075\1080\1095\1077\1089\1082\1086\1077",Space,Quoted DoubleQuote [Str "\1080\1083\1080"],Str ":"]
,RawBlock "latex" "\n\\begin{code}\n(||) :: Bool -> Bool -> Bool\n(||) a = if a then (const True) else id\n\\end{code}\n"
,Header 3 [Str "\1060\1091\1085\1082\1094\1080\1103",Space,Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1080"]
,Para [Str "\1060\1091\1085\1082\1094\1080\1103",Space,Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1080",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1076\1074\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1080",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1077\1090",Space,Str "\1080\1079",Space,Str "\1085\1080\1093",Space,Str "\1087\1086\1089\1083\1077\1076\1086\1074\1072\1090\1077\1083\1100\1085\1086\1077",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n(.) :: (b -> c) -> (a -> b) -> a -> c\n(.) f g = \\x -> f (g x)\n\\end{code}\n"
,Para [Str "\1069\1090\1086",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1087\1086\1083\1077\1079\1085\1072\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Str ".",Space,Str "\1054\1085\1072",Space,Str "\1087\1086\1079\1074\1086\1083\1103\1077\1090",Space,Str "\1085\1072\1085\1080\1079\1099\1074\1072\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1076\1088\1091\1075",Space,Str "\1085\1072",Space,Str "\1076\1088\1091\1075\1072",Str ".",Space,Str "\1052\1099",Space,Str "\1087\1077\1088\1077\1093\1074\1072\1090\1099\1074\1072\1077\1084",Space,Str "\1074\1099\1093\1086\1076",Space,Str "\1074\1090\1086\1088\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1089\1088\1072\1079\1091",Space,Str "\1087\1086\1076\1089\1090\1072\1074\1083\1103\1077\1084",Space,Str "\1077\1075\1086",Space,Str "\1074",Space,Str "\1087\1077\1088\1074\1091\1102",Space,Str "\1080",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1084",Space,Str "\1077\1105",Space,Str "\1074\1099\1093\1086\1076",Space,Str "\1074",Space,Str "\1082\1072\1095\1077\1089\1090\1074\1077",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1072",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1087\1077\1088\1077\1074\1077\1088\1085\1105\1084",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1089\1080\1084\1074\1086\1083\1086\1074",Space,Str "\1080",Space,Str "\1079\1072\1090\1077\1084",Space,Str "\1089\1076\1077\1083\1072\1077\1084",Space,Str "\1074\1089\1077",Space,Str "\1073\1091\1082\1074\1099",Space,Str "\1079\1072\1075\1083\1072\1074\1085\1099\1084\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nPrelude> :m +Data.Char\nPrelude Data.Char> (map toUpper . reverse) \"abracadabra\"\n\"ARBADACARBA\"\n\\end{code}\n"
,Para [Str "\1055\1088\1080\1074\1077\1076\1105\1084",Space,Str "\1087\1088\1080\1084\1077\1088",Space,Str "\1087\1086\1089\1083\1086\1078\1085\1077\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nadd :: Nat -> Nat -> Nat\nadd  a  Zero     = a\nadd  a  (Succ b) = Succ (add a b)\n\\end{code}\n"
,Para [Str "\1045\1089\1083\1080",Space,Str "\1084\1099",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1089\1074\1105\1088\1090\1082\1080",Space,Str "\1076\1083\1103",Space,RawInline "latex" "\\In{Nat}",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1079\1072\1084\1077\1085\1103\1090\1100",Space,Str "\1074",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1080",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Nat}",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088\1099",Space,Str "\1085\1072",Space,Str "\1089\1086\1086\1090\1074\1077\1090\1089\1090\1074\1091\1102\1097\1080\1077",Space,Str "\1087\1086",Space,Str "\1090\1080\1087\1091",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nfoldNat :: a -> (a -> a) -> Nat -> a\nfoldNat zero succ Zero     = zero\nfoldNat zero succ (Succ b) = succ (foldNat zero succ b)\n\\end{code}\n"
,Para [Str "\1058\1086",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1087\1077\1088\1077\1087\1080\1089\1072\1090\1100",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1080",Space,Str "\1101\1090\1091",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1090\1072\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nadd :: Nat -> Nat -> Nat\nadd = foldNat  id  (Succ . )\n\\end{code}\n"
,Para [Str "\1050\1091\1076\1072",Space,Str "\1076\1077\1083\1080\1089\1100",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1099",Str "?",Space,Str "\1054\1085\1080",Space,Str "\1074\1099\1088\1072\1078\1072\1102\1090\1089\1103",Space,Str "\1095\1077\1088\1077\1079",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{id}",Space,Str "\1080",Space,RawInline "latex" "\\In{(.)}",Str ".",Space,Str "\1055\1086\1074\1077\1076\1077\1085\1080\1077",Space,Str "\1101\1090\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1083\1091\1095\1096\1077",Space,Str "\1087\1088\1086\1080\1083\1083\1102\1089\1090\1088\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1085\1072",Space,Str "\1087\1088\1080\1084\1077\1088\1077",Str ".",Space,Str "\1055\1091\1089\1090\1100",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1077\1089\1090\1100",Space,Str "\1076\1074\1072",Space,Str "\1095\1080\1089\1083\1072",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Nat}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ntwo     = Succ (Succ Zero)\nthree   = Succ (Succ (Succ Zero))\n\\end{code}\n"
,Para [Str "\1042\1099\1095\1080\1089\1083\1080\1084"]
,RawBlock "latex" "\n\\begin{code}\nadd two three\n\\end{code}\n"
,Para [Str "\1042\1089\1087\1086\1084\1085\1080\1084",Space,Str "\1086",Space,Str "\1095\1072\1089\1090\1080\1095\1085\1086\1084",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n    add two three \n=>  (add two) three\n=>  (foldNat id (Succ . ) (Succ (Succ Zero))) three\n\\end{code}\n"
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1089\1074\1105\1088\1090\1082\1080",Space,Str "\1079\1072\1084\1077\1085\1080\1090",Space,Str "\1074\1089\1077",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088\1099",Space,RawInline "latex" "\\In{Succ}",Space,Str "\1085\1072",Space,RawInline "latex" "\\In{(Succ . )}",Str ",",Space,Str "\1072",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088\1099",Space,RawInline "latex" "\\In{Zero}",Space,Str "\1085\1072",Space,RawInline "latex" "\\In{id}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n=>  ((Succ . ) ((Succ . ) id)) three\n\\end{code}\n"
,Para [Str "\1063\1090\1086",Space,Str "\1101\1090\1086",Space,Str "\1079\1072",Space,Str "\1084\1086\1085\1089\1090\1088",Str "?"]
,RawBlock "latex" "\n\\begin{code}\n((Succ . ) ((Succ . ) id))\n\\end{code}\n"
,Para [Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{(Succ . )}",Space,Str "\1101\1090\1086",Space,Str "\1083\1077\1074\1086\1077",Space,Str "\1089\1077\1095\1077\1085\1080\1077",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Space,RawInline "latex" "\\In{(.)}",Str ".",Space,Str "\1069\1090\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1080",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ".",Space,Str "\1054\1085\1072",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1080",Space,Str "\1085\1072\1074\1077\1096\1080\1074\1072\1077\1090",Space,Str "\1085\1072",Space,Str "\1077\1105",Space,Str "\1074\1099\1093\1086\1076",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088",Space,RawInline "latex" "\\In{Succ}",Str ".",Space,Str "\1044\1072\1074\1072\1081\1090\1077",Space,Str "\1091\1087\1088\1086\1089\1090\1080\1084",Space,Str "\1101\1090\1086",Space,Str "\1073\1086\1083\1100\1096\1086\1077",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1077",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,RawInline "latex" "\\In{(.)}",Space,Str "\1080",Space,RawInline "latex" "\\In{id}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n    ((Succ . ) ((Succ . ) id))\n=>   (Succ . ) (\\x -> Succ (id x))\n=>   (Succ . ) (\\x -> Succ x)\n=>   \\x -> Succ (Succ x)\n\\end{code}\n"
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1085\1072\1084",Space,Str "\1086\1089\1090\1072\1083\1086\1089\1100",Space,Str "\1087\1088\1080\1084\1077\1085\1080\1090\1100",Space,Str "\1082",Space,Str "\1101\1090\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1085\1072\1096\1077",Space,Str "\1074\1090\1086\1088\1086\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n    (\\x -> Succ (Succ x)) three\n=>  Succ (Succ three)\n=>  Succ (Succ (Succ (Succ (Succ x))))\n\\end{code}\n"
,Para [Str "\1058\1072\1082",Space,Str "\1084\1099",Space,Str "\1087\1086\1083\1091\1095\1080\1083\1080",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1080",Space,Str "\1086\1078\1080\1076\1072\1083\1086\1089\1100",Space,Str "\1086\1090",Space,Str "\1089\1083\1086\1078\1077\1085\1080\1103",Str ".",Space,Str "\1047\1072",Space,Str "\1082\1072\1078\1076\1099\1081",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088",Space,RawInline "latex" "\\In{Succ}",Space,Str "\1074",Space,Str "\1087\1077\1088\1074\1086\1084",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1077",Space,Str "\1084\1099",Space,Str "\1076\1086\1073\1072\1074\1083\1103\1077\1084",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1077",Space,RawInline "latex" "\\In{Succ}",Space,Str "\1082",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1091",Str ",",Space,Str "\1072",Space,Str "\1074\1084\1077\1089\1090\1086",Space,RawInline "latex" "\\In{Zero}",Space,Str "\1087\1088\1086\1090\1072\1089\1082\1080\1074\1072\1077\1084",Space,Str "\1095\1077\1088\1077\1079",Space,RawInline "latex" "\\In{id}",Space,Str "\1074\1090\1086\1088\1086\1081",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090",Str "."]
,Header 3 [Str "\1040\1085\1072\1083\1086\1075\1080\1103",Space,Str "\1089",Space,Str "\1095\1080\1089\1083\1072\1084\1080"]
,Para [Str "\1057",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1080",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1085\1072\1085\1080\1079\1099\1074\1072\1090\1100",Space,Str "\1076\1088\1091\1075",Space,Str "\1085\1072",Space,Str "\1076\1088\1091\1075\1072",Space,Str "\1089\1087\1080\1089\1082\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str ".",Space,Str "\1055\1086\1087\1088\1086\1073\1091\1077\1084",Space,Str "\1074",Space,Str "\1080\1085\1090\1077\1088\1087\1088\1077\1090\1072\1090\1086\1088\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nPrelude> let f = foldr (.) id [sin, cos, sin, cos, exp, (+1), tan]\nPrelude> f 2\n0.6330525927559899\nPrelude> f 15\n0.7978497904127007\n\\end{code}\n"
,Para [Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{foldr}",Space,Str "\1079\1072\1084\1077\1085\1080\1090",Space,Str "\1074",Space,Str "\1089\1087\1080\1089\1082\1077",Space,Str "\1082\1072\1078\1076\1099\1081",Space,Str "\1082\1086\1085\1089\1090\1088\1091\1082\1090\1086\1088",Space,RawInline "latex" "\\In{(:)}",Space,Str "\1085\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1080",Str ",",Space,Str "\1072",Space,Str "\1087\1091\1089\1090\1086\1081",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1085\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{id}",Str ".",Space,Str "\1042",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1077",Space,Str "\1087\1086\1083\1091\1095\1072\1077\1090\1089\1103",Space,Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1103",Space,Str "\1080\1079",Space,Str "\1074\1089\1077\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1074",Space,Str "\1089\1087\1080\1089\1082\1077",Str "."]
,Para [Str "\1069\1090\1086",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1087\1086\1093\1086\1078\1077",Space,Str "\1085\1072",Space,Str "\1089\1083\1086\1078\1077\1085\1080\1077",Space,Str "\1080\1083\1080",Space,Str "\1091\1084\1085\1086\1078\1077\1085\1080\1077",Space,Str "\1095\1080\1089\1077\1083",Space,Str "\1074",Space,Str "\1089\1087\1080\1089\1082\1077",Str ".",Space,Str "\1055\1088\1080",Space,Str "\1101\1090\1086\1084",Space,Str "\1074",Space,Str "\1082\1072\1095\1077\1089\1090\1074\1077",Space,Str "\1085\1091\1083\1103",Space,Str "(",Str "\1076\1083\1103",Space,Str "\1089\1083\1086\1078\1077\1085\1080\1103",Str ")",Space,Str "\1080\1083\1080",Space,Str "\1077\1076\1080\1085\1080\1094\1099",Space,Str "(",Str "\1076\1083\1103",Space,Str "\1091\1084\1085\1086\1078\1077\1085\1080\1103",Str ")",Space,Str "\1084\1099",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1091\1077\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{id}",Str ".",Space,Str "\1052\1099",Space,Str "\1087\1086\1083\1100\1079\1091\1077\1084\1089\1103",Space,Str "\1090\1077\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1087\1086",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1102",Space,Str "\1076\1083\1103",Space,Str "\1083\1102\1073\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{f}",Space,Str "\1074\1099\1087\1086\1083\1085\1077\1085\1099",Space,Str "\1090\1086\1078\1076\1077\1089\1090\1074\1072",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nf  . id  ==  f\nid . f   ==  f\n\\end{code}\n"
,Para [Str "\1055\1086\1101\1090\1086\1084\1091",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100",Space,RawInline "latex" "\\In{id}",Space,Str "\1074",Space,Str "\1082\1072\1095\1077\1089\1090\1074\1077",Space,Str "\1085\1072\1082\1086\1087\1080\1090\1077\1083\1103",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1072",Space,Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1080",Str ",",Space,Str "\1082\1072\1082",Space,Str "\1074",Space,Str "\1089\1083\1091\1095\1072\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nPrelude> foldr (*) 1 [1,2,3,4]\n24\n\\end{code}\n"
,Para [Str "\1045\1089\1083\1080",Space,Str "\1089\1088\1072\1074\1085\1080\1090\1100",Space,RawInline "latex" "\\In{(.)}",Space,Str "\1089",Space,Str "\1091\1084\1085\1086\1078\1077\1085\1080\1077\1084",Str ",",Space,Str "\1090\1086",Space,RawInline "latex" "\\In{id}",Space,Str "\1087\1086\1093\1086\1078\1077",Space,Str "\1085\1072",Space,Str "\1077\1076\1080\1085\1080\1094\1091",Str ",",Space,Str "\1072",Space,RawInline "latex" "\\In{(const a)}",Space,Str "\1085\1072",Space,Str "\1085\1086\1083\1100",Str ".",Space,Str "\1042",Space,Str "\1089\1072\1084\1086\1084",Space,Str "\1076\1077\1083\1077",Space,Str "\1076\1083\1103",Space,Str "\1083\1102\1073\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{f}",Space,Str "\1080",Space,Str "\1083\1102\1073\1086\1075\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,RawInline "latex" "\\In{a}",Space,Str "\1074\1099\1087\1086\1083\1085\1077\1085\1086",Space,Str "\1090\1086\1078\1076\1077\1089\1090\1074\1086",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nconst a  .  f  == const a\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1089\1083\1086\1074\1085\1086",Space,Str "\1091\1084\1085\1086\1078\1072\1077\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1085\1072",Space,Str "\1085\1086\1083\1100",Str ",",Space,Str "\1076\1077\1083\1072\1103",Space,Str "\1077\1105",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1080\1077",Space,Str "\1073\1077\1089\1089\1084\1099\1089\1083\1077\1085\1085\1099\1084",Str "."]
,Header 3 [Str "\1060\1091\1085\1082\1094\1080\1103",Space,Str "\1087\1077\1088\1077\1089\1090\1072\1085\1086\1074\1082\1080"]
,Para [Str "\1060\1091\1085\1082\1094\1080\1103",Space,Str "\1087\1077\1088\1077\1089\1090\1072\1085\1086\1074\1082\1080",Space,RawInline "latex" "\\In{flip}",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1076\1074\1091\1093",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1074",Space,Str "\1080",Space,Str "\1084\1077\1085\1103\1077\1090",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1099",Space,Str "\1084\1077\1089\1090\1072\1084\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nflip  :: (a -> b -> c) -> b -> a -> c\nflip f x y = f y x\n\\end{code}\n"
,Para [Str "\1050",Space,Str "\1087\1088\1080\1084\1077\1088\1091",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nPrelude> foldr (-) 0 [1,2,3,4]\n-2\nPrelude> foldr (flip (-)) 0 [1,2,3,4]\n-10\n\\end{code}\n"
,Para [Str "\1048\1085\1086\1075\1076\1072",Space,Str "\1101\1090\1086",Space,Str "\1073\1099\1074\1072\1077\1090",Space,Str "\1087\1086\1083\1077\1079\1085\1086",Str "."]
,Header 3 [Str "\1060\1091\1085\1082\1094\1080\1103",Space,Str "on"]
,Para [Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{on}",Space,Str "(",Str "\1086\1090",Space,Str "\1072\1085\1075\1083",Str ".",Str "~",Str "\1085\1072",Str ")",Space,Str "\1087\1077\1088\1077\1076",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1077\1084",Space,Str "\1073\1080\1085\1072\1088\1085\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1087\1088\1086\1087\1091\1089\1082\1072\1077\1090",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1099",Space,Str "\1095\1077\1088\1077\1079",Space,Str "\1091\1085\1072\1088\1085\1091\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ":"]
,RawBlock "latex" "\n\\begin{code}\non :: (b -> b -> c) -> (a -> b) -> a -> a -> c\n(.*.) `on` f = \\x y -> f x .*. f y\n\\end{code}\n"
,Para [Str "\1054\1085\1072",Space,Str "\1095\1072\1089\1090\1086",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1091\1077\1090\1089\1103",Space,Str "\1074",Space,Str "\1089\1086\1095\1077\1090\1072\1085\1080\1080",Space,Str "\1089",Space,Str "\1092\1091\1085\1082\1094\1080\1077\1081",Space,RawInline "latex" "\\In{sortBy}",Space,Str "\1080\1079",Space,Str "\1084\1086\1076\1091\1083\1103",Space,RawInline "latex" "\\In{Data.List}",Str ".",Space,Str "\1069\1090\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1080\1084\1077\1077\1090",Space,Str "\1090\1080\1087",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nsortBy :: (a -> a -> Ordering) -> [a] -> [a]\n\\end{code}\n"
,Para [Str "\1054\1085\1072",Space,Str "\1089\1086\1088\1090\1080\1088\1091\1077\1090",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1099",Space,Str "\1089\1087\1080\1089\1082\1072",Space,Str "\1089\1086\1075\1083\1072\1089\1085\1086",Space,Str "\1085\1077\1082\1086\1090\1086\1088\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1091\1087\1086\1088\1103\1076\1086\1095\1080\1074\1072\1085\1080\1103",Space,RawInline "latex" "\\In{f ::  (a -> a -> Ordering)}",Str ".",Space,Str "\1057",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{on}",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1083\1077\1075\1082\1086",Space,Str "\1089\1086\1089\1090\1072\1074\1080\1090\1100",Space,Str "\1090\1072\1082\1091\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1085\1072",Space,Str "\1083\1077\1090\1091",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nlet xs = [(3, \"John\"), (2, \"Jack\"), (34, \"Jim\"), (100, \"Jenny\"), (-3, \"Josh\")]  \nPrelude> :m +Data.List Data.Function\nPrelude Data.List Data.Function> \nPrelude Data.List Data.Function> sortBy (compare `on` fst) xs\n[(-3,\"Josh\"),(2,\"Jack\"),(3,\"John\"),(34,\"Jim\"),(100,\"Jenny\")]\nPrelude Data.List Data.Function> map fst (sortBy (compare `on` fst) xs)\n[-3,2,3,34,100]\nPrelude Data.List Data.Function> map snd (sortBy (compare `on` fst) xs)\n[\"Josh\",\"Jack\",\"John\",\"Jim\",\"Jenny\"]\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1080\1084\1087\1086\1088\1090\1080\1088\1086\1074\1072\1083\1080",Space,Str "\1074",Space,Str "\1080\1085\1090\1077\1088\1087\1088\1077\1090\1072\1090\1086\1088",Space,Str "\1084\1086\1076\1091\1083\1100",Space,RawInline "latex" "\\In{Data.List}",Space,Str "\1076\1083\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{sortBy}",Space,Str "\1072",Space,Str "\1090\1072\1082\1078\1077",Space,Str "\1084\1086\1076\1091\1083\1100",Space,RawInline "latex" "\\In{Data.Function}",Space,Str "\1076\1083\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{on}",Str ".",Space,Str "\1054\1085\1080",Space,Str "\1085\1077",Space,Str "\1080\1084\1087\1086\1088\1090\1080\1088\1091\1102\1090\1089\1103",Space,Str "\1084\1086\1076\1091\1083\1077\1084",Space,RawInline "latex" "\\In{Prelude}",Str "."]
,Para [Str "\1042\1099\1088\1072\1078\1077\1085\1080\1077\1084",Space,RawInline "latex" "\\In{(compare `on` fst)}",Space,Str "\1084\1099",Space,Str "\1089\1086\1089\1090\1072\1074\1080\1083\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1102"]
,RawBlock "latex" "\n\\begin{code}\n\\a b -> compare (fst a) (fst b)\n\nfst = \\(a, b) -> a\n\\end{code}\n"
,Para [Str "\1058\1077\1084",Space,Str "\1089\1072\1084\1099\1084",Space,Str "\1074\1074\1077\1083\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1091\1087\1086\1088\1103\1076\1086\1095\1080\1074\1072\1085\1080\1103",Space,Str "\1085\1072",Space,Str "\1087\1072\1088\1072\1093",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1089\1088\1072\1074\1085\1080\1074\1072\1090\1100",Space,Str "\1087\1072\1088\1099",Space,Str "\1087\1086",Space,Str "\1087\1077\1088\1074\1086\1084\1091",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1091",Str ".",Space,Str "\1054\1090\1084\1077\1090\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1072\1085\1072\1083\1086\1075\1080\1095\1085\1086\1075\1086",Space,Str "\1101\1092\1092\1077\1082\1090\1072",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1076\1086\1073\1080\1090\1100\1089\1103",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{comparing}",Space,Str "\1080\1079",Space,Str "\1084\1086\1076\1091\1083\1103",Space,RawInline "latex" "\\In{Data.Ord}",Str "."]
,Header 3 [Str "\1060\1091\1085\1082\1094\1080\1103",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1103"]
,Para [Str "\1045\1097\1105",Space,Str "\1086\1076\1085\1086\1081",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1087\1086\1083\1077\1079\1085\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1077\1081",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1103",Space,RawInline "latex" "\\In{($)}",Str ".",Space,Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1077\1105",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n($) :: (a -> b) -> a -> b\nf $ x  =  f x\n\\end{code}\n"
,Para [Str "\1053\1072",Space,Str "\1087\1077\1088\1074\1099\1081",Space,Str "\1074\1079\1075\1083\1103\1076",Space,Str "\1077\1105",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1087\1086\1082\1072\1079\1072\1090\1100\1089\1103",Space,Str "\1073\1077\1089\1089\1084\1099\1089\1083\1077\1085\1085\1099\1084",Str ".",Space,Str "\1047\1072\1095\1077\1084",Space,Str "\1085\1072\1084",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1099\1081",Space,Str "\1079\1085\1072\1082",Space,Str "\1076\1083\1103",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1103",Str ",",Space,Str "\1077\1089\1083\1080",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1091\1078\1077",Space,Str "\1077\1089\1090\1100",Space,Str "\1087\1088\1086\1073\1077\1083",Str "?",Space,Str "\1044\1083\1103",Space,Str "\1086\1090\1074\1077\1090\1072",Space,Str "\1085\1072",Space,Str "\1101\1090\1086\1090",Space,Str "\1074\1086\1087\1088\1086\1089",Space,Str "\1085\1072\1084",Space,Str "\1087\1088\1080\1076\1105\1090\1089\1103",Space,Str "\1087\1086\1079\1085\1072\1082\1086\1084\1080\1090\1100\1089\1103",Space,Str "\1089",Space,Str "\1087\1088\1080\1086\1088\1080\1090\1077\1090\1086\1084",Space,Str "\1080\1085\1092\1080\1082\1089\1085\1099\1093",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1081",Str "."]
,Header 2 [Str "\1055\1088\1080\1086\1088\1080\1090\1077\1090",Space,Str "\1080\1085\1092\1080\1082\1089\1085\1099\1093",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1081"]
,Para [Str "\1042",Space,Str "Haskell",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1095\1072\1089\1090\1086",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1091\1102\1090\1089\1103",Space,Str "\1073\1080\1085\1072\1088\1085\1099\1077",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Space,Str "\1076\1083\1103",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1077\1085\1080\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Quoted DoubleQuote [Str "\1085\1072",Space,Str "\1083\1077\1090\1091"],Str ".",Space,Str "\1042",Space,Str "\1101\1090\1086\1084",Space,Str "\1087\1086\1084\1086\1075\1072\1077\1090",Space,Str "\1080",Space,Str "\1095\1072\1089\1090\1080\1095\1085\1086\1077",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1077",Str ",",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1074",Space,Str "\1086\1076\1085\1086\1084",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1080",Space,Str "\1087\1088\1080\1084\1077\1085\1080\1090\1100",Space,Str "\1082",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1095\1072\1089\1090\1100",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1074",Str ",",Space,Str "\1087\1086\1089\1090\1088\1086\1080\1090\1100",Space,Str "\1080\1079",Space,Str "\1085\1077\1105",Space,Str "\1085\1086\1074\1091\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1082\1072\1082\1086\1081",Str "-",Str "\1085\1080\1073\1091\1076\1100",Space,Str "\1090\1072\1082\1086\1081",Space,Str "\1073\1080\1085\1072\1088\1085\1086\1081",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Space,Str "\1080",Space,Str "\1074\1089\1105",Space,Str "\1101\1090\1086",Space,Str "\1087\1077\1088\1077\1076\1072\1090\1100",Space,Str "\1074",Space,Str "\1076\1088\1091\1075\1091\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str "!"]
,Para [Str "\1044\1083\1103",Space,Str "\1089\1086\1082\1088\1072\1097\1077\1085\1080\1103",Space,Str "\1095\1080\1089\1083\1072",Space,Str "\1089\1082\1086\1073\1086\1082",Space,Str "\1085\1072\1084",Space,Str "\1087\1086\1085\1072\1076\1086\1073\1080\1090\1089\1103",Space,Str "\1088\1072\1079\1086\1073\1088\1072\1090\1100\1089\1103",Space,Str "\1074",Space,Str "\1087\1086\1085\1103\1090\1080\1080",Space,Str "\1087\1088\1080\1086\1088\1080\1090\1077\1090\1072",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Str ".",Space,Str "\1058\1072\1082",Space,Str "\1085\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1074",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1080"]
,RawBlock "latex" "\n\\begin{code}\n> 2 + 3 * 10\n32\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1087\1086\1083\1072\1075\1072\1077\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1091\1084\1085\1086\1078\1077\1085\1080\1077",Space,Str "\1080\1084\1077\1077\1090",Space,Str "\1073\1086\1083\1100\1096\1080\1081",Space,Str "\1087\1088\1080\1086\1088\1080\1090\1077\1090",Space,Str "\1095\1077\1084",Space,Str "\1089\1083\1086\1078\1077\1085\1080\1077",Space,Str "\1080",Space,Str "\1089\1086",Space,Str "\1089\1082\1086\1073\1082\1072\1084\1080",Space,Str "\1101\1090\1086",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1077",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1074\1099\1075\1083\1103\1076\1077\1090\1100",Space,Str "\1090\1072\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n> 2 + (3 * 10)\n32\n\\end{code}\n"
,Para [Str "\1060\1088\1072\1079\1072",Space,Quoted DoubleQuote [Str "\1073\1086\1083\1100\1096\1080\1081",Space,Str "\1087\1088\1080\1086\1088\1080\1090\1077\1090"],Space,Str "\1086\1079\1085\1072\1095\1072\1077\1090",Str ":",Space,Str "\1089\1085\1072\1095\1072\1083\1072",Space,Str "\1091\1084\1085\1086\1078\1077\1085\1080\1077",Space,Str "\1087\1086\1090\1086\1084",Space,Str "\1089\1083\1086\1078\1077\1085\1080\1077",Str ".",Space,Str "\1052\1099",Space,Str "\1074\1089\1077\1075\1076\1072",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1080\1079\1084\1077\1085\1080\1090\1100",Space,Str "\1087\1086\1074\1077\1076\1077\1085\1080\1077",Space,Str "\1087\1086",Space,Str "\1091\1084\1086\1083\1095\1072\1085\1080\1102",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1089\1082\1086\1073\1086\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n> (2 + 3) * 10\n50\n\\end{code}\n"
,Para [Str "\1042",Space,Str "Haskell",Space,Str "\1087\1088\1080\1086\1088\1080\1090\1077\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1089\1082\1083\1072\1076\1099\1074\1072\1077\1090\1089\1103",Space,Str "\1080\1079",Space,Str "\1076\1074\1091\1093",Space,Str "\1087\1086\1085\1103\1090\1080\1081",Str ":",Space,Str "\1089\1090\1072\1088\1096\1080\1085\1089\1090\1074\1086",Space,Str "\1080",Space,Str "\1072\1089\1089\1086\1094\1080\1072\1090\1080\1074\1085\1086\1089\1090\1100",Str ".",Space,Str "\1057\1090\1072\1088\1096\1080\1085\1089\1090\1074\1086",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1077\1090\1089\1103",Space,Str "\1095\1080\1089\1083\1072\1084\1080",Str ",",Space,Str "\1086\1085\1080",Space,Str "\1084\1086\1075\1091\1090",Space,Str "\1073\1099\1090\1100",Space,Str "\1086\1090",Space,Str "0",Space,Str "\1076\1086",Space,Str "9",Str ".",Space,Str "\1063\1077\1084",Space,Str "\1073\1086\1083\1100\1096\1077",Space,Str "\1101\1090\1086",Space,Str "\1095\1080\1089\1083\1086",Str ",",Space,Str "\1090\1077\1084",Space,Str "\1074\1099\1096\1077",Space,Str "\1087\1088\1080\1086\1088\1080\1090\1077\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str "."]
,Para [Str "\1057\1090\1072\1088\1096\1080\1085\1089\1090\1074\1086",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1091\1077\1090\1089\1103",Space,Str "\1074\1099\1095\1080\1089\1083\1080\1090\1077\1083\1077\1084",Space,Str "\1076\1083\1103",Space,Str "\1075\1088\1091\1087\1087\1080\1088\1086\1074\1082\1080",Space,Str "\1088\1072\1079\1085\1099\1093",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1081",Str ",",Space,Str "\1085\1072\1087\1088\1080\1084\1077\1088",Space,RawInline "latex" "\\In{(+)}",Space,Str "\1080\1084\1077\1077\1090",Space,Str "\1089\1090\1072\1088\1096\1080\1085\1089\1090\1074\1086",Space,Str "6",Str ",",Space,Str "\1072",Space,RawInline "latex" "\\In{(*)}",Space,Str "\1080\1084\1077\1077\1090",Space,Str "\1089\1090\1072\1088\1096\1080\1085\1089\1090\1074\1086",Space,Str "7",Str ".",Space,Str "\1055\1086\1101\1090\1086\1084\1091",Space,Str "\1080\1085\1090\1077\1088\1087\1088\1077\1090\1072\1090\1086\1088",Space,Str "\1089\1085\1072\1095\1072\1083\1072",Space,Str "\1089\1090\1072\1074\1080\1090",Space,Str "\1089\1082\1086\1073\1082\1080",Space,Str "\1074\1086\1082\1088\1091\1075",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Space,Str "\1089",Space,RawInline "latex" "\\In{(*)}",Str ",",Space,Str "\1072",Space,Str "\1079\1072\1090\1077\1084",Space,Str "\1074\1086\1082\1088\1091\1075",Space,RawInline "latex" "\\In{(+)}",Str ".",Space,Str "\1057\1095\1080\1090\1072\1077\1090\1089\1103",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1086\1073\1099\1095\1085\1086\1077",Space,Str "\1087\1088\1077\1092\1080\1082\1089\1085\1086\1077",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1077",Space,Str "\1080\1084\1077\1077\1090",Space,Str "\1074\1099\1089\1096\1080\1081",Space,Str "\1087\1088\1080\1086\1088\1080\1090\1077\1090",Space,Str "10",Str ".",Space,Str "\1053\1077\1083\1100\1079\1103",Space,Str "\1079\1072\1076\1072\1090\1100",Space,Str "\1087\1088\1080\1086\1088\1080\1090\1077\1090",Space,Str "\1074\1099\1096\1077",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1103",Str ",",Space,Str "\1101\1090\1086",Space,Str "\1079\1085\1072\1095\1080\1090",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1103",Space,Quoted DoubleQuote [Str "\1087\1088\1086\1073\1077\1083"],Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1074\1089\1077\1075\1076\1072",Space,Str "\1074\1099\1087\1086\1083\1085\1103\1090\1100\1089\1103",Space,Str "\1087\1077\1088\1074\1086\1081",Str "."]
,Para [Str "\1040\1089\1089\1086\1094\1080\1072\1090\1080\1074\1085\1086\1089\1090\1100",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1091\1077\1090\1089\1103",Space,Str "\1076\1083\1103",Space,Str "\1075\1088\1091\1087\1087\1080\1088\1086\1074\1082\1080",Space,Str "\1086\1076\1080\1085\1072\1082\1086\1074\1099\1093",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1081",Str ",",Space,Str "\1085\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1084\1099",Space,Str "\1074\1080\1076\1080\1084",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n1+2+3+4\n\\end{code}\n"
,Para [Str "\1050\1072\1082",Space,Str "\1085\1072\1084",Space,Str "\1073\1099\1090\1100",Str "?",Space,Str "\1052\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1075\1088\1091\1087\1087\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1089\1082\1086\1073\1082\1080",Space,Str "\1089\1083\1077\1074\1072",Space,Str "\1085\1072\1087\1088\1072\1074\1086",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n((1+2)+3)+4\n\\end{code}\n"
,Para [Str "\1048\1083\1080",Space,Str "\1089\1087\1088\1072\1074\1072",Space,Str "\1085\1072\1083\1077\1074\1086",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n1+(2+(3+4))\n\\end{code}\n"
,Para [Str "\1054\1090\1074\1077\1090",Space,Str "\1085\1072",Space,Str "\1101\1090\1086\1090",Space,Str "\1074\1086\1087\1088\1086\1089",Space,Str "\1076\1072\1105\1090",Space,Str "\1072\1089\1089\1086\1094\1080\1072\1090\1080\1074\1085\1086\1089\1090\1100",Str ",",Space,Str "\1086\1085\1072",Space,Str "\1073\1099\1074\1072\1077\1090",Space,Str "\1083\1077\1074\1072\1103",Space,Str "\1080",Space,Str "\1087\1088\1072\1074\1072\1103",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Space,RawInline "latex" "\\In{(+)}",Space,RawInline "latex" "\\In{(-)}",Space,Str "\1080",Space,Str "(",Str "*",Str ")",Space,Str "\1103\1074\1083\1103\1102\1090\1089\1103",Space,Str "\1083\1077\1074\1086",Str "-",Str "\1072\1089\1089\1086\1094\1080\1072\1090\1080\1074\1085\1099\1084\1080",Str ",",Space,Str "\1072",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1103",Space,Str "\1074\1086\1079\1074\1077\1076\1077\1085\1080\1103",Space,Str "\1074",Space,Str "\1089\1090\1077\1087\1077\1085\1100",Space,RawInline "latex" "\\In{(^)}",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1087\1088\1072\1074\1086",Str "-",Str "\1072\1089\1089\1086\1094\1080\1072\1090\1080\1074\1085\1086\1081",Str "."]
,RawBlock "latex" "\n\\begin{code}\n1 + 2 + 3 == (1 + 2) + 3\n1 ^ 2 ^ 3 ==  1 ^ (2 ^ 3)\n\\end{code}\n"
,Para [Str "\1055\1088\1080\1086\1088\1080\1090\1077\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1091\1079\1085\1072\1090\1100",Space,Str "\1074",Space,Str "\1080\1085\1090\1077\1088\1087\1088\1077\1090\1072\1090\1086\1088\1077",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1082\1086\1084\1072\1085\1076\1099",Space,RawInline "latex" "\\In{:i}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*FunNat> :m Prelude\nPrelude> :i (+)\nclass (Eq a, Show a) => Num a where\n  (+) :: a -> a -> a\n  ...\n  \t-- Defined in GHC.Num\ninfixl 6 +\nPrelude> :i (*)\nclass (Eq a, Show a) => Num a where\n  ...\n  (*) :: a -> a -> a\n  ...\n  \t-- Defined in GHC.Num\ninfixl 7 *\nPrelude> :i (^)\n(^) :: (Num a, Integral b) => a -> b -> a \t-- Defined in GHC.Real\ninfixr 8 ^\n\\end{code}\n"
,Para [Str "\1055\1088\1080\1086\1088\1080\1090\1077\1090",Space,Str "\1091\1082\1072\1079\1099\1074\1072\1077\1090\1089\1103",Space,Str "\1074",Space,Str "\1089\1090\1088\1086\1095\1082\1072\1093",Space,RawInline "latex" "\\In{infixl 6 +}",Space,Str "\1080",Space,RawInline "latex" "\\In{infixl 7 *}",Str ".",Space,Str "\1062\1080\1092\1088\1072",Space,Str "\1091\1082\1072\1079\1099\1074\1072\1077\1090",Space,Str "\1085\1072",Space,Str "\1089\1090\1072\1088\1096\1080\1085\1089\1090\1074\1086",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Str ",",Space,Str "\1072",Space,Str "\1089\1091\1092\1092\1080\1082\1089",Space,RawInline "latex" "\\In{l}",Space,Str "(",Str "\1086\1090",Space,Str "\1072\1085\1075\1083",Str ".",Str "~",Str "left",Space,Str "\8211",Space,Str "\1083\1077\1074\1072\1103",Str ")",Space,Str "\1080\1083\1080",Space,RawInline "latex" "\\In{r}",Space,Str "(",Str "\1086\1090",Space,Str "\1072\1085\1075\1083",Str ".",Str "~",Str "right",Space,Str "\8211",Space,Str "\1087\1088\1072\1074\1072\1103",Str ")",Space,Str "\1085\1072",Space,Str "\1072\1089\1089\1086\1094\1080\1072\1090\1080\1074\1085\1086\1089\1090\1100",Str "."]
,Para [Str "\1045\1089\1083\1080",Space,Str "\1084\1099",Space,Str "\1089\1086\1079\1076\1072\1083\1080",Space,Str "\1089\1074\1086\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ",",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1076\1083\1103",Space,Str "\1085\1077\1105",Space,Str "\1072\1089\1089\1086\1094\1080\1072\1090\1080\1074\1085\1086\1089\1090\1100",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1084\1099",Space,Str "\1087\1080\1096\1077\1084",Space,Str "\1074",Space,Str "\1082\1086\1076\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nmodule Fixity where\n\nimport Prelude(Num(..))\n\ninfixl 4 *** \ninfixl 5 +++\ninfixr 5 `neg`\n\n(***) = (*)\n(+++) = (+)\nneg   = (-)\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1074\1074\1077\1083\1080",Space,Str "\1085\1086\1074\1099\1077",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Space,Str "\1080",Space,Str "\1087\1086\1084\1077\1085\1103\1083\1080",Space,Str "\1089\1090\1072\1088\1096\1080\1085\1089\1090\1074\1086",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1081",Space,Str "\1089\1083\1086\1078\1077\1085\1080\1103",Space,Str "\1080",Space,Str "\1091\1084\1085\1086\1078\1077\1085\1080\1103",Space,Str "\1084\1077\1089\1090\1072\1084\1080",Space,Str "\1080",Space,Str "\1080\1079\1084\1077\1085\1080\1083\1080",Space,Str "\1072\1089\1089\1086\1094\1080\1072\1090\1080\1074\1085\1086\1089\1090\1100",Space,Str "\1091",Space,Str "\1074\1099\1095\1080\1090\1072\1085\1080\1103",Str ".",Space,Str "\1055\1088\1086\1074\1077\1088\1080\1084",Space,Str "\1074",Space,Str "\1080\1085\1090\1077\1088\1087\1088\1077\1090\1072\1090\1086\1088\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nPrelude> :l Fixity\n[1 of 1] Compiling Fixity           ( Fixity.hs, interpreted )\nOk, modules loaded: Fixity.\n*Fixity> 1 + 2 * 3\n7\n*Fixity> 1 +++ 2 *** 3\n9\n*Fixity> 1 - 2 - 3\n-4\n*Fixity> 1 `neg` 2 `neg` 3\n2\n\\end{code}\n"
,Para [Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1082\1072\1082",Space,Str "\1101\1090\1086",Space,Str "\1074\1099\1095\1080\1089\1083\1103\1083\1086\1089\1100",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n1   +   2   *  3  ==   1   +   (2    *   3)\n1  +++  2  *** 3  ==  (1  +++   2)  ***  3\n\n1   -   2   -  3  ==  (1   -    2)   -   3\n1 `neg` 2 `neg 3` ==   1 `neg` (2  `neg` 3)\n\\end{code}\n"
,Para [Str "\1058\1072\1082\1078\1077",Space,Str "\1074",Space,Str "Haskell",Space,Str "\1077\1089\1090\1100",Space,Str "\1076\1080\1088\1077\1082\1090\1080\1074\1072",Space,RawInline "latex" "\\In{infix}",Space,Str "\1101\1090\1086",Space,Str "\1090\1086\1078\1077",Space,Str "\1089\1072\1084\1086\1077",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1080",Space,RawInline "latex" "\\In{infixl}",Str "."]
,Header 3 [Str "\1055\1088\1080\1086\1088\1080\1090\1077\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1080"]
,Para [Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1087\1088\1080\1086\1088\1080\1090\1077\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nPrelude> :i (.)\n(.) :: (b -> c) -> (a -> b) -> a -> c \t-- Defined in GHC.Base\ninfixr 9 .\n\\end{code}\n"
,Para [Str "\1054\1085\1072",Space,Str "\1080\1084\1077\1077\1090",Space,Str "\1074\1099\1089\1096\1080\1081",Space,Str "\1087\1088\1080\1086\1088\1080\1090\1077\1090",Str ".",Space,Str "\1054\1085\1072",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1095\1072\1089\1090\1086",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1091\1077\1090\1089\1103",Space,Str "\1087\1088\1080",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1074",Space,Str "\1073\1077\1089\1090\1086\1095\1077\1095\1085\1086\1084",Space,Str "\1089\1090\1080\1083\1077",Str ".",Space,Str "\1058\1072\1082\1072\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1087\1086\1093\1086\1078\1072",Space,Str "\1085\1072",Space,Str "\1082\1086\1085\1074\1077\1081\1077\1088",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nfun a = fun1 a . fun2 (x1 + x2) . fun3 . (+x1) \n\\end{code}\n"
,Header 3 [Str "\1055\1088\1080\1086\1088\1080\1090\1077\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1103"]
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1087\1086\1083\1085\1086\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1103",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ninfixr 0 $\n\n($) :: (a -> b) -> a -> b\nf $ x  =  f x\n\\end{code}\n"
,Para [Str "\1054\1090\1074\1077\1090",Space,Str "\1085\1072",Space,Str "\1074\1086\1087\1088\1086\1089",Space,Str "\1086",Space,Str "\1087\1086\1083\1077\1079\1085\1086\1089\1090\1080",Space,Str "\1101\1090\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1082\1088\1086\1077\1090\1089\1103",Space,Str "\1074",Space,Str "\1077\1105",Space,Str "\1087\1088\1080\1086\1088\1080\1090\1077\1090\1077",Str ".",Space,Str "\1045\1081",Space,Str "\1085\1072\1079\1085\1072\1095\1077\1085",Space,Str "\1089\1072\1084\1099\1081",Space,Str "\1085\1080\1079\1082\1080\1081",Space,Str "\1087\1088\1080\1086\1088\1080\1090\1077\1090",Str ".",Space,Str "\1054\1085\1072",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1080\1089\1087\1086\1083\1085\1103\1090\1100\1089\1103",Space,Str "\1074",Space,Str "\1087\1086\1089\1083\1077\1076\1085\1102\1102",Space,Str "\1086\1095\1077\1088\1077\1076\1100",Str ".",Space,Str "\1054\1095\1077\1085\1100",Space,Str "\1095\1072\1089\1090\1086",Space,Str "\1074\1086\1079\1085\1080\1082\1072\1102\1090",Space,Str "\1089\1080\1090\1091\1072\1094\1080\1080",Space,Str "\1074\1088\1086\1076\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nfoldNat zero succ (Succ b) = succ (foldNat zero succ b)\n\\end{code}\n"
,Para [Str "\1057",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1103",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1087\1077\1088\1077\1087\1080\1089\1072\1090\1100",Space,Str "\1101\1090\1086",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1090\1072\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nfoldNat zero succ (Succ b) = succ $ foldNat zero succ b\n\\end{code}\n"
,Para [Str "\1045\1089\1083\1080",Space,Str "\1073\1099",Space,Str "\1084\1099",Space,Str "\1085\1072\1087\1080\1089\1072\1083\1080",Space,Str "\1073\1077\1079",Space,Str "\1089\1082\1086\1073\1086\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n... = succ foldNat zero succ b\n\\end{code}\n"
,Para [Str "\1058\1086",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1077",Space,Str "\1073\1099\1083\1086",Space,Str "\1073\1099",Space,Str "\1089\1075\1088\1091\1087\1087\1080\1088\1086\1074\1072\1085\1086",Space,Str "\1090\1072\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n... = (((succ foldNat) zero) succ) b\n\\end{code}\n"
,Para [Str "\1053\1086",Space,Str "\1087\1086\1089\1082\1086\1083\1100\1082\1091",Space,Str "\1084\1099",Space,Str "\1087\1086\1089\1090\1072\1074\1080\1083\1080",Space,Str "\1073\1072\1088\1100\1077\1088",Space,Str "\1074",Space,Str "\1074\1080\1076\1077",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Space,RawInline "latex" "\\In{($)}",Space,Str "\1089",Space,Str "\1085\1080\1079\1082\1080\1084",Space,Str "\1087\1088\1080\1086\1088\1080\1090\1077\1090\1086\1084",Str ",",Space,Str "\1075\1088\1091\1087\1087\1080\1088\1086\1074\1082\1072",Space,Str "\1089\1082\1086\1073\1086\1082",Space,Str "\1087\1088\1086\1080\1079\1086\1081\1076\1105\1090",Space,Str "\1090\1072\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n... = (succ $ ((foldNat zero) succ) b)\n\\end{code}\n"
,Para [Str "\1069\1090\1086",Space,Str "\1082\1072\1082",Space,Str "\1088\1072\1079",Space,Str "\1090\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1085\1072\1084",Space,Str "\1085\1091\1078\1085\1086",Str ".",Space,Str "\1055\1088\1077\1080\1084\1091\1097\1077\1089\1090\1074\1086",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1087\1086\1076\1093\1086\1076\1072",Space,Str "\1087\1088\1086\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1086\1089\1086\1073\1077\1085\1085\1086",Space,Str "\1103\1088\1082\1086",Space,Str "\1077\1089\1083\1080",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1074\1083\1086\1078\1077\1085\1085\1099\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1085\1072",Space,Str "\1082\1086\1085\1094\1077",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nxs :: [Int]\nxs = reverse $ map ((+1) . (*10)) $ filter even $ ns 40\n\nns :: Int -> [Int]\nns 0  = []\nns n  = n : ns (n - 1)\n\\end{code}\n"
,Para [Str "\1042",Space,Str "\1089\1087\1080\1089\1082\1077",Space,RawInline "latex" "\\In{xs}",Space,Str "\1084\1099",Space,Str "\1089\1085\1072\1095\1072\1083\1072",Space,Str "\1089\1086\1079\1076\1072\1105\1084",Space,Str "\1074",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{ns}",Space,Str "\1091\1073\1099\1074\1072\1102\1097\1080\1081",Space,Str "\1089\1087\1080\1089\1086\1082",Space,Str "\1095\1080\1089\1077\1083",Str ",",Space,Str "\1079\1072\1090\1077\1084",Space,Str "\1086\1089\1090\1072\1074\1083\1103\1077\1084",Space,Str "\1083\1080\1096\1100",Space,Str "\1095\1105\1090\1085\1099\1077",Str ",",Space,Str "\1087\1086\1090\1086\1084",Space,Str "\1087\1088\1080\1084\1077\1085\1103\1077\1084",Space,Str "\1076\1074\1072",Space,Str "\1072\1088\1080\1092\1084\1077\1090\1080\1095\1077\1089\1082\1080\1093",Space,Str "\1076\1077\1081\1089\1090\1074\1080\1103",Space,Str "\1082\1086",Space,Str "\1074\1089\1077\1084",Space,Str "\1101\1083\1077\1084\1077\1085\1090\1072\1084",Space,Str "\1089\1087\1080\1089\1082\1072",Str ",",Space,Str "\1079\1072\1090\1077\1084",Space,Str "\1087\1077\1088\1077\1074\1086\1088\1072\1095\1080\1074\1072\1077\1084",Space,Str "\1089\1087\1080\1089\1086\1082",Str "."]
,Para [Str "\1055\1088\1086\1074\1077\1088\1080\1084",Space,Str "\1088\1072\1073\1086\1090\1072\1077\1090",Space,Str "\1083\1080",Space,Str "\1101\1090\1086",Space,Str "\1074",Space,Str "\1080\1085\1090\1077\1088\1087\1088\1077\1090\1072\1090\1086\1088\1077",Str ",",Space,Str "\1079\1072\1086\1076\1085\1086",Space,Str "\1087\1086\1091\1087\1088\1072\1078\1085\1103\1077\1084\1089\1103",Space,Str "\1074",Space,Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1086\1085\1085\1086\1084",Space,Str "\1089\1090\1080\1083\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nPrelude> let ns n = if (n == 0) then [] else n : ns (n - 1)\nPrelude> let even x = 0 == mod x 2\nPrelude> let xs = reverse $ map ((+1) . (*10)) $ filter even $ ns 20\nPrelude> xs \n[21,41,61,81,101,121,141,161,181,201]\n\\end{code}\n"
,Para [Str "\1045\1089\1083\1080",Space,Str "\1073\1099",Space,Str "\1085\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1103",Space,Str "\1085\1072\1084",Space,Str "\1087\1088\1080\1096\1083\1086\1089\1100",Space,Str "\1073\1099",Space,Str "\1085\1072\1087\1080\1089\1072\1090\1100",Space,Str "\1101\1090\1086",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1077",Space,Str "\1090\1072\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nxs = reverse (map ((+1) . (*10)) (filter even (ns 40)))\n\\end{code}\n"
,Header 2 [Str "\1060\1091\1085\1082\1094\1080\1086\1085\1072\1083\1100\1085\1099\1081",Space,Str "\1082\1072\1083\1100\1082\1091\1083\1103\1090\1086\1088"]
,Para [Str "\1052\1085\1077",Space,Str "\1073\1099",Space,Str "\1093\1086\1090\1077\1083\1086\1089\1100",Space,Str "\1089\1076\1077\1083\1072\1090\1100",Space,Str "\1072\1082\1094\1077\1085\1090",Space,Str "\1085\1072",Space,Str "\1086\1076\1085\1086\1084",Space,Str "\1080\1079",Space,Str "\1074\1089\1090\1091\1087\1080\1090\1077\1083\1100\1085\1099\1093",Space,Str "\1087\1088\1077\1076\1083\1086\1078\1077\1085\1080\1081",Space,Str "\1101\1090\1086\1081",Space,Str "\1075\1083\1072\1074\1099",Str ":"]
,BlockQuote
 [Para [Str "\1047\1072",Space,Str "\1089\1095\1105\1090",Space,Str "\1088\1072\1079\1074\1080\1090\1099\1093",Space,Str "\1089\1088\1077\1076\1089\1090\1074",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1077\1085\1080\1103",Space,Str "\1085\1086\1074\1099\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1074",Space,Str "Haskell",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1077\1083\1100",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1077\1090",Space,Str "\1083\1080\1096\1100",Space,Str "\1073\1072\1079\1086\1074\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1087\1086\1083\1091\1095\1072\1103",Space,Str "\1086\1089\1090\1072\1083\1100\1085\1099\1077",Space,Quoted DoubleQuote [Str "\1085\1072",Space,Str "\1083\1077\1090\1091"],Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1077\1084",Space,Str "\1076\1074\1091\1093",Str "-",Str "\1090\1088\1105\1093",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1081",Str ",",Space,Str "\1101\1090\1086",Space,Str "\1074\1099\1075\1083\1103\1076\1080\1090",Space,Str "\1087\1088\1080\1084\1077\1088\1085\1086",Space,Str "\1082\1072\1082",Space,RawInline "latex" "\\In{(2+3)*5}",Str ",",Space,Str "\1075\1076\1077",Space,Str "\1074\1084\1077\1089\1090\1086",Space,Str "\1095\1080\1089\1077\1083",Space,Str "\1089\1090\1086\1103\1090",Space,Str "\1073\1072\1079\1086\1074\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1072",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Space,RawInline "latex" "\\In{+}",Space,Str "\1080",Space,RawInline "latex" "\\In{*}",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1102\1090",Space,Str "\1085\1086\1074\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1080\1079",Space,Str "\1087\1088\1086\1089\1090\1077\1081\1096\1080\1093",Str "."]]
,Para [Str "\1058\1072\1082\1080\1077",Space,Str "\1086\1073\1086\1073\1097\1105\1085\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1082\1072\1082",Space,RawInline "latex" "\\In{id}",Str ",",Space,RawInline "latex" "\\In{const}",Str ",",Space,RawInline "latex" "\\In{(.)}",Str ",",Space,RawInline "latex" "\\In{map}",Space,RawInline "latex" "\\In{filter}",Space,Str "\1087\1086\1079\1074\1086\1083\1103\1102\1090",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1083\1077\1075\1082\1086",Space,Str "\1082\1086\1084\1073\1080\1085\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1088\1072\1079\1083\1080\1095\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ".",Space,Str "\1041\1077\1089\1090\1086\1095\1077\1095\1085\1099\1081",Space,Str "\1089\1090\1080\1083\1100",Space,Str "\1079\1072\1087\1080\1089\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1087\1088\1077\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1074",Space,Str "\1087\1088\1086\1089\1090\1099\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1080\1083\1080",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str "-",Str "\1082\1086\1085\1089\1090\1072\1085\1090\1099",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1087\1086\1076\1089\1090\1072\1074\1083\1103\1090\1100",Space,Str "\1074",Space,Str "\1076\1088\1091\1075\1080\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ".",Space,Str "\1042",Space,Str "\1101\1090\1086\1084",Space,Str "\1088\1072\1079\1076\1077\1083\1077",Space,Str "\1084\1099",Space,Str "\1085\1077\1084\1085\1086\1075\1086",Space,Str "\1087\1086\1090\1088\1077\1085\1080\1088\1091\1077\1084\1089\1103",Space,Str "\1074",Space,Str "\1087\1077\1088\1077\1075\1088\1091\1079\1082\1077",Space,Str "\1095\1080\1089\1083\1077\1085\1085\1099\1093",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Space,Str "\1080",Space,Str "\1087\1088\1077\1074\1088\1072\1090\1080\1084",Space,Str "\1095\1080\1089\1083\1072",Space,Str "\1074",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1080",Space,Str "\1074",Space,Str "\1089\1072\1084\1086\1084",Space,Str "\1076\1077\1083\1077",Space,Str "\1089\1090\1072\1085\1091\1090",Space,Str "\1082\1086\1085\1089\1090\1072\1085\1090\1072\1084\1080",Str ".",Space,Str "\1052\1099",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1084",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088",Space,RawInline "latex" "\\In{Num}",Space,Str "\1076\1083\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1102\1090",Space,Str "\1095\1080\1089\1083\1072",Str ".",Space,Str "\1057\1084\1099\1089\1083",Space,Str "\1101\1090\1080\1093",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1081",Space,Str "\1079\1072\1082\1083\1102\1095\1072\1077\1090\1089\1103",Space,Str "\1074",Space,Str "\1090\1086\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1090\1077\1087\1077\1088\1100",Space,Str "\1084\1099",Space,Str "\1087\1088\1080\1084\1077\1085\1103\1077\1084",Space,Str "\1086\1073\1099\1095\1085\1099\1077",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Space,Str "\1089\1083\1086\1078\1077\1085\1080\1103",Space,Str "\1091\1084\1085\1086\1078\1077\1085\1080\1103",Space,Str "\1082",Space,Str "\1092\1091\1085\1082\1094\1080\1103\1084",Str ",",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090",Space,Str "\1082\1086\1090\1086\1088\1099\1093",Space,Str "\1089\1086\1074\1087\1072\1076\1072\1077\1090",Space,Str "\1087\1086",Space,Str "\1090\1080\1087\1091",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1076\1083\1103",Space,Str "\1090\1086\1075\1086",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1091\1084\1085\1086\1078\1080\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{}\\verb!\\!\\In{t -> t+2}",Space,Str "\1080",Space,RawInline "latex" "\\In{}\\verb!\\!\\In{t -> t+3}",Space,Str "\1084\1099",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1077\1084",Space,Str "\1085\1086\1074\1091\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{}\\verb!\\!\\In{t -> (t+2) * (t+3)}",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1087\1086\1083\1091\1095\1072\1077\1090",Space,Str "\1085\1072",Space,Str "\1074\1093\1086\1076",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,RawInline "latex" "\\In{t}",Space,Str "\1087\1088\1080\1084\1077\1085\1103\1077\1090",Space,Str "\1077\1075\1086",Space,Str "\1082",Space,Str "\1082\1072\1078\1076\1086\1081",Space,Str "\1080\1079",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1080",Space,Str "\1079\1072\1090\1077\1084",Space,Str "\1091\1084\1085\1086\1078\1072\1077\1090",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090\1099",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nmodule FunNat where\n\nimport Prelude(Show(..), Eq(..), Num(..), error)\n\ninstance Show (t -> a) where\n    show _ = error \"Sorry, no show. It's just for Num\"\ninstance Eq (t -> a) where\n    (==) _ _ = error \"Sorry, no Eq. It's just for Num\"\n\ninstance Num a => Num (t -> a) where\n    (+) = fun2 (+)\n    (*) = fun2 (*)\n    (-) = fun2 (-)\n\n    abs      = fun1 abs\n    signum   = fun1 signum\n\n    fromInteger = const . fromInteger\n\nfun1 :: (a -> b) -> ((t -> a) -> (t -> b))\nfun1 = (.)\n\nfun2 :: (a -> b -> c) -> ((t -> a) -> (t -> b) -> (t -> c))\nfun2 op a b = \\t -> a t `op` b t\n\\end{code}\n"
,Para [Str "\1060\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{fun1}",Space,Str "\1080",Space,RawInline "latex" "\\In{fun2}",Space,Str "\1087\1088\1077\1074\1088\1072\1097\1072\1102\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1102\1090",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str ",",Space,Str "\1074",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1102\1090",Space,Str "\1076\1088\1091\1075\1080\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str "."]
,Para [Str "\1048\1079",Str "-",Str "\1079\1072",Space,Str "\1082\1086\1085\1090\1077\1082\1089\1090\1072",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Num}",Space,Str "\1085\1072\1084",Space,Str "\1087\1088\1080\1096\1083\1086\1089\1100",Space,Str "\1086\1073\1098\1103\1074\1080\1090\1100",Space,Str "\1076\1074\1072",Space,Str "\1092\1080\1082\1090\1080\1074\1085\1099\1093",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1072",Space,Str "\1076\1083\1103",Space,Str "\1082\1083\1072\1089\1089\1086\1074",Space,RawInline "latex" "\\In{Show}",Space,Str "\1080",Space,RawInline "latex" "\\In{Eq}",Str ".",Space,Str "\1047\1072\1075\1088\1091\1079\1080\1084",Space,Str "\1084\1086\1076\1091\1083\1100",Space,RawInline "latex" "\\In{FunNat}",Space,Str "\1074",Space,Str "\1080\1085\1090\1077\1088\1087\1088\1077\1090\1072\1090\1086\1088",Space,Str "\1080",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1095\1090\1086",Space,Str "\1078\1077",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1087\1086\1083\1091\1095\1080\1083\1086\1089\1100",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nPrelude> :l FunNat.hs\n[1 of 1] Compiling FunNat           ( FunNat.hs, interpreted )\nOk, modules loaded: FunNat.\n*FunNat> 2 2\n2\n*FunNat> 2 5\n2\n*FunNat> (2 + (+1)) 0 \n3\n*FunNat> ((+2) * (+3)) 1\n12\n\\end{code}\n"
,Para [Str "\1053\1072",Space,Str "\1087\1077\1088\1074\1099\1081",Space,Str "\1074\1079\1075\1083\1103\1076",Space,Str "\1082\1072\1078\1077\1090\1089\1103",Space,Str "\1095\1090\1086",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1077",Space,RawInline "latex" "\\In{2 2}",Space,Str "\1085\1077",Space,Str "\1076\1086\1083\1078\1085\1086",Space,Str "\1087\1088\1086\1081\1090\1080",Space,Str "\1087\1088\1086\1074\1077\1088\1082\1091",Space,Str "\1090\1080\1087\1086\1074",Str ",",Space,Str "\1074\1077\1076\1100",Space,Str "\1084\1099",Space,Str "\1087\1088\1080\1084\1077\1085\1103\1077\1084",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1082",Space,Str "\1082\1086\1085\1089\1090\1072\1085\1090\1077",Str ".",Space,Str "\1053\1086",Space,Str "\1085\1072",Space,Str "\1089\1072\1084\1086\1084",Space,Str "\1076\1077\1083\1077",Space,RawInline "latex" "\\In{2}",Space,Str "\1101\1090\1086",Space,Str "\1085\1077",Space,Str "\1082\1086\1085\1089\1090\1072\1085\1090\1072",Str ",",Space,Str "\1072",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,RawInline "latex" "\\In{2 :: Num a => a}",Space,Str "\1080",Space,Str "\1087\1086\1076\1089\1087\1091\1076\1085\1086",Space,Str "\1082",Space,Str "\1076\1074\1086\1081\1082\1077",Space,Str "\1087\1088\1080\1084\1077\1085\1103\1077\1090\1089\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{fromInteger}",Str ".",Space,Str "\1055\1086\1089\1082\1086\1083\1100\1082\1091",Space,Str "\1074",Space,Str "\1085\1072\1096\1077\1084",Space,Str "\1084\1086\1076\1091\1083\1077",Space,Str "\1084\1099",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1083\1080",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088",Space,RawInline "latex" "\\In{Num}",Space,Str "\1076\1083\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str ",",Space,Str "\1074\1090\1086\1088\1086\1077",Space,Str "\1095\1080\1089\1083\1086",Space,RawInline "latex" "\\In{2}",Space,Str "\1073\1099\1083\1086",Space,Str "\1082\1086\1085\1082\1088\1077\1090\1080\1079\1080\1088\1086\1074\1072\1085\1086",Space,Str "\1087\1086",Space,Str "\1091\1084\1086\1083\1095\1072\1085\1080\1102",Space,Str "\1076\1086",Space,RawInline "latex" "\\In{Integer}",Str ",",Space,Str "\1072",Space,Str "\1087\1077\1088\1074\1086\1077",Space,Str "\1095\1080\1089\1083\1086",Space,RawInline "latex" "\\In{2}",Space,Str "\1073\1099\1083\1086",Space,Str "\1082\1086\1085\1082\1088\1077\1090\1080\1079\1080\1088\1086\1074\1072\1085\1086",Space,Str "\1076\1086",Space,RawInline "latex" "\\In{Integer -> Integer}",Str ".",Space,Str "\1050\1086\1084\1087\1080\1083\1103\1090\1086\1088",Space,Str "\1074\1099\1074\1077\1083",Space,Str "\1080\1079",Space,Str "\1082\1086\1085\1090\1077\1082\1089\1090\1072",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1087\1086\1076",Space,RawInline "latex" "\\In{2}",Space,Str "\1084\1099",Space,Str "\1087\1086\1085\1080\1084\1072\1077\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1103",Space,Str "\1073\1099\1083\1072",Space,Str "\1089\1086\1079\1076\1072\1085\1072",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1084\1077\1090\1086\1076\1072",Space,RawInline "latex" "\\In{fromInteger}",Str ".",Space,Str "\1069\1090\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1083\1102\1073\1086\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1080",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1076\1074\1086\1081\1082\1091",Str "."]
,Para [Str "\1044\1072\1083\1077\1077",Space,Str "\1084\1099",Space,Str "\1089\1082\1083\1072\1076\1099\1074\1072\1077\1084",Space,Str "\1080",Space,Str "\1087\1077\1088\1077\1084\1085\1086\1078\1072\1077\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1089\1083\1086\1074\1085\1086",Space,Str "\1101\1090\1086",Space,Str "\1086\1073\1099\1095\1085\1099\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str ".",Space,Str "\1063\1090\1086",Space,Str "\1080\1085\1090\1077\1088\1077\1089\1085\1086",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1090\1100",Space,Str "\1080",Space,Str "\1090\1072\1082\1080\1077",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*FunNat> let f = ((+) - (*))\n*FunNat> f 1 2\n1\n\\end{code}\n"
,Para [Str "\1050\1072\1082",Space,Str "\1073\1099\1083\1072",Space,Str "\1074\1099\1095\1080\1089\1083\1077\1085\1072",Space,Str "\1101\1090\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Str "?",Space,Str "\1052\1099",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1083\1080",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1076\1083\1103",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Num a => t -> a}",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1084\1099",Space,Str "\1074\1089\1087\1086\1084\1085\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1076\1074\1091\1093",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1074",Space,Str "\1085\1072",Space,Str "\1089\1072\1084\1086\1084",Space,Str "\1076\1077\1083\1077",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1077\1081",Space,Str "\1086\1076\1085\1086\1075\1086",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1072",Str ":",Space,RawInline "latex" "\\In{Num a => t1 -> (t2 -> a)}",Str ",",Space,Str "\1084\1099",Space,Str "\1079\1072\1084\1077\1090\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1090\1080\1087",Space,RawInline "latex" "\\In{Num a => (t2 -> a)}",Space,Str "\1087\1088\1080\1085\1072\1076\1083\1077\1078\1080\1090",Space,RawInline "latex" "\\In{Num}",Str ",",Space,Str "\1090\1077\1087\1077\1088\1100",Space,Str "\1077\1089\1083\1080",Space,Str "\1084\1099",Space,Str "\1086\1073\1086\1079\1085\1072\1095\1080\1084",Space,Str "\1077\1075\1086",Space,Str "\1079\1072",Space,RawInline "latex" "\\In{a'}",Str ",",Space,Str "\1090\1086",Space,Str "\1084\1099",Space,Str "\1087\1086\1083\1091\1095\1080\1084",Space,Str "\1090\1080\1087",Space,RawInline "latex" "\\In{Num a' => t1 -> a'}",Str ",",Space,Str "\1101\1090\1086",Space,Str "\1089\1086\1074\1087\1072\1076\1072\1077\1090",Space,Str "\1089",Space,Str "\1085\1072\1096\1080\1084",Space,Str "\1080\1089\1093\1086\1076\1085\1099\1084",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1086\1084",Str "."]
,Para [Str "\1055\1086\1083\1091\1095\1072\1077\1090\1089\1103",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1079\1072",Space,Str "\1089\1095\1105\1090",Space,Str "\1084\1077\1093\1072\1085\1080\1079\1084\1072",Space,Str "\1095\1072\1089\1090\1080\1095\1085\1086\1075\1086",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1103",Space,Str "\1084\1099",Space,Str "\1086\1076\1085\1080\1084",Space,Str "\1084\1072\1093\1086\1084",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1083\1080",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1099",Space,RawInline "latex" "\\In{Num}",Space,Str "\1076\1083\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Emph [Str "\1083\1102\1073\1086\1075\1086"],Space,Str "\1095\1080\1089\1083\1072",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1074",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1102\1090",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Space,Str "\1090\1080\1087\1072",Space,RawInline "latex" "\\In{Num}",Str "."]
,Para [Str "\1048\1090\1072\1082",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{f}",Space,Str "\1080\1084\1077\1077\1090",Space,Str "\1074\1080\1076",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n\\t1 t2 -> (t1 + t2) - (t1 * t2)\n\\end{code}\n"
,Para [Str "\1055\1086\1076\1089\1090\1072\1074\1080\1084",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n(\\t1 t2 -> (t1 + t2) - (t1 * t2)) 1 2\n(\\t2 -> (1 + t2) - (1 * t2) 2\n(1 + 2) - (1 * 2)\n3 - 2\n1\n\\end{code}\n"
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1076\1072\1074\1072\1081\1090\1077",Space,Str "\1089\1086\1089\1090\1072\1074\1080\1084",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1081",Space,Str "\1089",Space,Str "\1086\1073\1086\1073\1097\1105\1085\1085\1099\1084\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1103\1084\1080",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1076\1086\1073\1072\1074\1080\1084",Space,Str "\1074",Space,Str "\1084\1086\1076\1091\1083\1100",Space,RawInline "latex" "\\In{FunNat}",Space,Str "\1076\1080\1088\1077\1082\1090\1080\1074\1091",Space,Str "\1080\1084\1087\1086\1088\1090\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1080\1079",Space,Str "\1084\1086\1076\1091\1083\1103",Space,RawInline "latex" "\\In{Data.Function}",Str ".",Space,Str "\1058\1072\1082\1078\1077",Space,Str "\1076\1086\1073\1072\1074\1080\1084",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1086\1089\1085\1086\1074\1085\1099\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1076\1083\1103",Space,Str "\1089\1087\1080\1089\1082\1086\1074",Space,Str "\1080",Space,Str "\1082\1083\1072\1089\1089",Space,RawInline "latex" "\\In{Ord}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nmodule FunNat where\n\nimport Prelude(Show(..), Eq(..), Ord(..), Num(..), error)\n\nimport Data.Function(id, const, (.), ($), flip, on)\nimport Prelude(map, foldr, filter, zip, zipWith)\n\n...\n\\end{code}\n"
,Para [Str "\1080",Space,Str "\1079\1072\1075\1088\1091\1079\1080\1084",Space,Str "\1084\1086\1076\1091\1083\1100",Space,Str "\1074",Space,Str "\1080\1085\1090\1077\1088\1087\1088\1077\1090\1072\1090\1086\1088",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nPrelude> :load FunNat\n[1 of 1] Compiling FunNat           ( FunNat.hs, interpreted )\nOk, modules loaded: FunNat.\n\\end{code}\n"
,Para [Str "\1057\1086\1089\1090\1072\1074\1080\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1086\1076\1080\1085",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090",Str ",",Space,Str "\1091\1084\1085\1086\1078\1072\1077\1090",Space,Str "\1077\1075\1086",Space,Str "\1085\1072",Space,Str "\1076\1074\1072",Str ",",Space,Str "\1074\1099\1095\1080\1090\1072\1077\1090",Space,Str "10",Space,Str "\1080",Space,Str "\1073\1077\1088\1105\1090",Space,Str "\1084\1086\1076\1091\1083\1100",Space,Str "\1095\1080\1089\1083\1072",Str "."]
,RawBlock "latex" "\n\\begin{code}\n*FunNat> let f = abs $ id * 2 - 10 \n*FunNat> f 2\n6\n*FunNat> f 10\n10\n\\end{code}\n"
,Para [Str "\1044\1072\1074\1072\1081\1090\1077",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1082\1072\1082",Space,Str "\1073\1099\1083\1072",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1077\1085\1072",Space,Str "\1101\1090\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n    abs $ id * 2 - 10                   \n\n=>  abs $ (id * 2) - 10                 -- \1087\1088\1080\1086\1088\1080\1090\1077\1090 \1091\1084\1085\1086\1078\1077\1085\1080\1103\n=>  abs $ (\\x -> x * \\x -> 2) - 10      -- \1088\1072\1079\1074\1077\1088\1085\1105\1084 id \1080 2\n=>  abs $ (\\x -> x * 2) - 10            -- \1087\1086 \1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1102 (*) \1076\1083\1103 \1092\1091\1085\1082\1094\1080\1081\n=>  abs $ (\\x -> x * 2) - \\x -> 10      -- \1088\1072\1079\1074\1077\1088\1085\1105\1084 10\n=>  abs $ \\x -> (x * 2) - 10            -- \1087\1086 \1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1102 (-) \1076\1083\1103 \1092\1091\1085\1082\1094\1080\1081\n=>  \\x -> abs x . \\x -> (x * 2) - 10    -- \1087\1086 \1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1102 abs \1076\1083\1103 \1092\1091\1085\1082\1094\1080\1081\n=>  \\x -> abs ((x * 2) - 10)            -- \1087\1086 \1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1102 (.)\n\n=>  \\x -> abs ((x * 2) - 10)\n\\end{code}\n"
,Para [Str "\1060\1091\1085\1082\1094\1080\1103",Space,Str "\1074\1086\1079\1074\1077\1076\1077\1085\1080\1103",Space,Str "\1074",Space,Str "\1082\1074\1072\1076\1088\1072\1090",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*FunNat> let f = id * id\n*FunNat> map f [1,2,3,4,5]\n[1,4,9,16,25]\n*FunNat> map (id * id - 1) [1,2,3,4,5]\n[0,3,8,15,24]\n\\end{code}\n"
,Para [Str "\1054\1073\1088\1072\1090\1080\1090\1077",Space,Str "\1074\1085\1080\1084\1072\1085\1080\1077",Space,Str "\1085\1072",Space,Str "\1082\1088\1072\1090\1082\1086\1089\1090\1100",Space,Str "\1079\1072\1087\1080\1089\1080",Str ".",Space,Str "\1042",Space,Str "\1101\1090\1086\1084",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1080",Space,RawInline "latex" "\\In{(id * id - 1)}",Space,Str "\1087\1088\1086\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1086\1089\1085\1086\1074\1085\1086\1077",Space,Str "\1087\1088\1077\1080\1084\1091\1097\1077\1089\1090\1074\1086",Space,Str "\1073\1077\1089\1090\1086\1095\1077\1095\1085\1086\1075\1086",Space,Str "\1089\1090\1080\1083\1103",Str ",",Space,Str "\1080\1079\1073\1072\1074\1080\1074\1096\1080\1089\1100",Space,Str "\1086\1090",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1074",Str ",",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100\1089\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1103\1084\1080",Space,Str "\1090\1072\1082",Str ",",Space,Str "\1089\1083\1086\1074\1085\1086",Space,Str "\1101\1090\1086",Space,Str "\1087\1088\1086\1089\1090\1099\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str ".",Space,Str "\1069\1090\1086\1090",Space,Str "\1087\1088\1080\1105\1084",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1091\1077\1090\1089\1103",Space,Str "\1074",Space,Str "Haskell",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1072\1082\1090\1080\1074\1085\1086",Str ".",Space,Str "\1055\1086\1082\1072",Space,Str "\1085\1072\1084",Space,Str "\1074\1089\1090\1088\1077\1090\1080\1083\1080\1089\1100",Space,Str "\1083\1080\1096\1100",Space,Str "\1076\1074\1077",Space,Str "\1080\1085\1092\1080\1082\1089\1085\1099\1093",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Space,Str "\1076\1083\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "(",Str "\1101\1090\1086",Space,Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1103",Space,Str "\1080",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1077",Space,Str "\1089",Space,Str "\1085\1080\1079\1082\1080\1084",Space,Str "\1087\1088\1080\1086\1088\1080\1090\1077\1090\1086\1084",Str ")",Str ",",Space,Str "\1085\1086",Space,Str "\1074",Space,Str "\1073\1091\1076\1091\1097\1077\1084",Space,Str "\1074\1099",Space,Str "\1089\1090\1086\1083\1082\1085\1105\1090\1077\1089\1100",Space,Str "\1089",Space,Str "\1094\1077\1083\1099\1084",Space,Str "\1084\1086\1088\1077\1084",Space,Str "\1087\1086\1076\1086\1073\1085\1099\1093",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1081",Str ".",Space,Str "\1042\1089\1077",Space,Str "\1086\1085\1080",Space,Str "\1089\1083\1091\1078\1072\1090",Space,Str "\1086\1076\1085\1086\1081",Space,Str "\1094\1077\1083\1080",Str ",",Space,Str "\1086\1085\1080",Space,Str "\1087\1088\1103\1095\1091\1090",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1099",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1087\1086\1079\1074\1086\1083\1103\1103",Space,Str "\1073\1099\1089\1090\1088\1086",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1085\1072",Space,Str "\1083\1077\1090\1091",Space,Str "\1080\1079",Space,Str "\1087\1088\1080\1084\1080\1090\1080\1074\1086\1074",Str ".",Space,Str "\1063\1090\1086\1073\1099",Space,Str "\1085\1077",Space,Str "\1079\1072\1093\1083\1077\1073\1085\1091\1090\1100\1089\1103",Space,Str "\1074",Space,Str "\1101\1090\1086\1084",Space,Str "\1084\1086\1088\1077",Space,Str "\1087\1086\1084\1085\1080\1090\1077",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1089\1082\1086\1088\1077\1077",Space,Str "\1074\1089\1077\1075\1086",Space,Str "\1085\1086\1074\1099\1081",Space,Str "\1089\1080\1084\1074\1086\1083",Space,Str "\1086\1079\1085\1072\1095\1072\1077\1090",Space,Str "\1083\1080\1073\1086",Space,Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1102",Space,Str "\1083\1080\1073\1086",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1077",Space,Str "\1076\1083\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1086\1075\1086",Space,Str "\1074\1080\1076\1072",Str "."]
,Para [Str "\1042\1086\1079\1074\1077\1076\1105\1084",Space,Str "\1074",Space,Str "\1095\1077\1090\1074\1105\1088\1090\1091\1102",Space,Str "\1089\1090\1077\1087\1077\1085\1100",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*FunNat> map (f . f) [1,2,3,4,5]\n[1,16,81,256,625]\n\\end{code}\n"
,Para [Str "\1057\1086\1089\1090\1072\1074\1080\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1076\1074\1091\1093",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1074",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1074\1099\1095\1080\1089\1083\1103\1090\1100",Space,Str "\1089\1091\1084\1084\1091",Space,Str "\1082\1074\1072\1076\1088\1072\1090\1086\1074",Space,Str "\1076\1074\1091\1093",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1074",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*FunNat> let x = const id\n*FunNat> let y = flip $ const id\n*FunNat> let d = x * x + y * y\n*FunNat> d 1 2\n5\n*FunNat> d 3 2\n13\n\\end{code}\n"
,Para [Str "\1058\1072\1082",Space,Str "\1084\1099",Space,Str "\1089\1086\1089\1090\1072\1074\1080\1083\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ",",Space,Str "\1085\1080",Space,Str "\1087\1088\1080\1073\1077\1075\1072\1103",Space,Str "\1082",Space,Str "\1087\1086\1084\1086\1097\1080",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1074",Str ".",Space,Str "\1069\1090\1080",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Space,Str "\1084\1086\1075\1091\1090",Space,Str "\1089\1090\1072\1090\1100",Space,Str "\1095\1072\1089\1090\1100\1102",Space,Str "\1076\1088\1091\1075\1080\1093",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1081",Str ":"]
,RawBlock "latex" "\n\\begin{code}\n*FunNat> filter  ((<10) . d 1) [1,2,3,4,5]\n[1,2]\n*FunNat> zipWith d [1,2,3] [3,2,1]\n[10,8,10]\n*FunNat> foldr (x*x - y*y) 0 [1,2,3,4]\n3721610024\n*FunNat> zipWith ((-) * (-) + const id) [1,2,3] [3,2,1]\n[7,2,5]\n\\end{code}\n"
,Para [Str "\1042",Space,Str "\1087\1086\1089\1083\1077\1076\1085\1077\1084",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1080",Space,Str "\1090\1088\1091\1076\1085\1086",Space,Str "\1087\1088\1077\1076\1091\1075\1072\1076\1072\1090\1100",Space,Str "\1088\1077\1079\1091\1083\1100\1090\1072\1090",Str ".",Space,Str "\1042",Space,Str "\1090\1072\1082\1080\1093",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103\1093",Space,Str "\1074\1089\1105",Str "-",Str "\1090\1072\1082\1080",Space,Str "\1083\1091\1095\1096\1077",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100\1089\1103",Space,Str "\1089\1080\1085\1086\1085\1080\1084\1072\1084\1080",Str ".",Space,Str "\1042",Space,Str "\1073\1077\1089\1090\1086\1095\1077\1095\1085\1086\1084",Space,Str "\1089\1090\1080\1083\1077",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1080\1084\1080",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1103\1084\1080",Space,Str "\1089\1086\1073\1088\1072\1090\1100",Space,Str "\1080\1079",Space,Str "\1073\1072\1079\1086\1074\1099\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1089\1083\1086\1078\1085\1091\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1080",Space,Str "\1087\1077\1088\1077\1076\1072\1090\1100",Space,Str "\1077\1105",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1084",Space,Str "\1074",Space,Str "\1076\1088\1091\1075\1091\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1090\1072\1082\1078\1077",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1087\1086\1091\1095\1072\1089\1090\1074\1086\1074\1072\1090\1100",Space,Str "\1074",Space,Str "\1082\1086\1084\1073\1080\1085\1072\1094\1080\1080",Space,Str "\1076\1088\1091\1075\1080\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str "!"]
,Header 2 [Str "\1060\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1102\1097\1080\1077",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081"]
,Para [RawInline "tex" "\\Types{\1082\1086\1088\1090\1077\1078\1080}",Space,Str "\1050\1072\1082",Space,Str "\1073\1099\1083\1086",Space,Str "\1089\1082\1072\1079\1072\1085\1086",Space,Str "\1088\1072\1085\1077\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1102\1090",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Str ",",Space,Str "\1088\1077\1072\1083\1080\1079\1086\1074\1072\1085\1099",Space,Str "\1074",Space,Str "Haskell",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1082\1086\1088\1090\1077\1078\1077\1081",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1088\1072\1089\1097\1077\1087\1083\1103\1077\1090",Space,Str "\1087\1086\1090\1086\1082",Space,Str "\1085\1072",Space,Str "\1075\1086\1083\1086\1074\1091",Space,Str "\1080",Space,Str "\1093\1074\1086\1089\1090",Space,Str "\1074\1099\1075\1083\1103\1076\1080\1090",Space,Str "\1090\1072\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndecons :: Stream a -> (a, Stream a)\ndecons (a :& as) = (a, as)\n\\end{code}\n"
,Para [Str "\1047\1076\1077\1089\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1089\1088\1072\1079\1091",Space,Str "\1076\1074\1072",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str ".",Space,Str "\1053\1086",Space,Str "\1074\1089\1077\1075\1076\1072",Space,Str "\1083\1080",Space,Str "\1091\1084\1077\1089\1090\1085\1086",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100\1089\1103",Space,Str "\1082\1086\1088\1090\1077\1078\1072\1084\1080",Str "?",Space,Str "\1044\1083\1103",Space,Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1102\1090",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Space,Str "\1085\1072\1084",Space,Str "\1087\1088\1080\1076\1105\1090\1089\1103",Space,Str "\1088\1072\1079\1073\1080\1088\1072\1090\1100",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1084\1099\1077",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1089\1086\1087\1086\1089\1090\1072\1074\1083\1077\1085\1080\1103",Space,Str "\1089",Space,Str "\1086\1073\1088\1072\1079\1094\1086\1084",Space,Str "\1080",Space,Str "\1079\1072\1090\1077\1084",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100",Space,Str "\1101\1090\1080",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1074",Space,Str "\1076\1088\1091\1075\1080\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1103\1093",Str ".",Space,Str "\1055\1086\1089\1091\1076\1080\1090\1077",Space,Str "\1089\1072\1084\1080",Space,Str "\1077\1089\1083\1080",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1077\1089\1090\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nf :: a  -> (b1, b2)\ng :: b1 -> (c1, c2)\nh :: b2 -> (c3, c4)\n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1091\1078\1077",Space,Str "\1085\1077",Space,Str "\1089\1084\1086\1078\1077\1084",Space,Str "\1082\1086\1084\1073\1080\1085\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1080\1093",Space,Str "\1090\1072\1082",Space,Str "\1087\1088\1086\1089\1090\1086",Space,Str "\1082\1072\1082",Space,Str "\1077\1089\1083\1080",Space,Str "\1073\1099",Space,Str "\1101\1090\1086",Space,Str "\1073\1099\1083\1080",Space,Str "\1086\1073\1099\1095\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1073\1077\1079",Space,Str "\1082\1086\1088\1090\1077\1078\1077\1081",Str "."]
,RawBlock "latex" "\n\\begin{code}\nq x = (\\(a, b) -> (g a, h b)) (f x)\n\\end{code}\n"
,Para [Str "\1042",Space,Str "\1089\1083\1091\1095\1072\1077",Space,Str "\1087\1072\1088",Space,Str "\1085\1072\1084",Space,Str "\1084\1086\1075\1091\1090",Space,Str "\1087\1088\1080\1081\1090\1080",Space,Str "\1085\1072",Space,Str "\1087\1086\1084\1086\1097\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{first}",Space,Str "\1080",Space,RawInline "latex" "\\In{second}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nq = first g . second h . f\n\\end{code}\n"
,Para [Str "\1045\1089\1083\1080",Space,Str "\1084\1099",Space,Str "\1079\1072\1093\1086\1090\1080\1084",Space,Str "\1089\1086\1089\1090\1072\1074\1080\1090\1100",Space,Str "\1082\1072\1082\1091\1102",Str "-",Str "\1085\1080\1073\1091\1076\1100",Space,Str "\1076\1088\1091\1075\1091\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1080\1079",Space,RawInline "latex" "\\In{q}",Str ",",Space,Str "\1090\1086",Space,Str "\1089\1080\1090\1091\1072\1094\1080\1103",Space,Str "\1079\1072\1084\1077\1090\1085\1086",Space,Str "\1091\1089\1083\1086\1078\1085\1080\1090\1089\1103",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1102\1097\1080\1077",Space,Str "\1082\1086\1088\1090\1077\1078\1080",Str ",",Space,Str "\1089\1083\1086\1078\1085\1077\1077",Space,Str "\1082\1086\1084\1073\1080\1085\1080\1088\1086\1074\1072\1090\1100",Space,Str "\1074",Space,Str "\1073\1077\1089\1090\1086\1095\1077\1095\1085\1086\1084",Space,Str "\1089\1090\1080\1083\1077",Str ".",Space,Str "\1047\1076\1077\1089\1100",Space,Str "\1089\1090\1086\1080\1090",Space,Str "\1074\1089\1087\1086\1084\1085\1080\1090\1100",Space,Str "\1087\1088\1072\1074\1080\1083\1086",Space,Str "Unix",Str "."]
,BlockQuote
 [Para [Str "\1055\1080\1096\1080\1090\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1076\1077\1083\1072\1102\1090",Space,Str "\1086\1076\1085\1091",Space,Str "\1074\1077\1097\1100",Str ",",Space,Str "\1085\1086",Space,Str "\1076\1077\1083\1072\1102\1090",Space,Str "\1077\1105",Space,Str "\1093\1086\1088\1086\1096\1086",Str "."]]
,Para [Str "\1060\1091\1085\1082\1094\1080\1103",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1082\1086\1088\1090\1077\1078",Space,Str "\1087\1099\1090\1072\1077\1090\1089\1103",Space,Str "\1089\1076\1077\1083\1072\1090\1100",Space,Str "\1089\1088\1072\1079\1091",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1076\1077\1083",Str ".",Space,Str "\1048",Space,Str "\1090\1077\1088\1103\1077\1090",Space,Str "\1074",Space,Str "\1075\1080\1073\1082\1086\1089\1090\1080",Str ",",Space,Str "\1077\1081",Space,Str "\1090\1088\1091\1076\1085\1086",Space,Str "\1074\1079\1072\1080\1084\1086\1076\1077\1081\1089\1090\1074\1086\1074\1072\1090\1100",Space,Str "\1089",Space,Str "\1076\1088\1091\1075\1080\1084\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1103\1084\1080",Str ".",Space,Str "\1057\1090\1072\1088\1072\1081\1090\1077\1089\1100",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1090\1072\1082\1080\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1073\1099\1083\1086",Space,Str "\1082\1072\1082",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1084\1077\1085\1100\1096\1077",Str "."]
,Para [Str "\1045\1089\1083\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Str ",",Space,Str "\1087\1086\1087\1099\1090\1072\1081\1090\1077\1089\1100",Space,Str "\1088\1072\1079\1073\1080\1090\1100",Space,Str "\1077\1105",Space,Str "\1085\1072",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1102\1090",Space,Str "\1083\1080\1096\1100",Space,Str "\1086\1076\1085\1086",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Str ".",Space,Str "\1063\1072\1089\1090\1086",Space,Str "\1073\1099\1074\1072\1077\1090",Space,Str "\1090\1072\1082",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1101\1090\1080",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1090\1077\1089\1085\1086",Space,Str "\1089\1074\1103\1079\1072\1085\1099",Space,Str "\1084\1077\1078\1076\1091",Space,Str "\1089\1086\1073\1086\1081",Space,Str "\1080",Space,Str "\1090\1072\1082\1091\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1085\1077",Space,Str "\1091\1076\1072\1105\1090\1089\1103",Space,Str "\1088\1072\1079\1073\1080\1090\1100",Space,Str "\1085\1072",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1102\1097\1080\1093",Str ".",Space,Str "\1045\1089\1083\1080",Space,Str "\1091",Space,Str "\1074\1072\1089",Space,Str "\1087\1086\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1084\1085\1086\1075\1086",Space,Str "\1090\1072\1082\1080\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str ",",Space,Str "\1090\1086",Space,Str "\1101\1090\1086",Space,Str "\1087\1086\1074\1086\1076",Space,Str "\1079\1072\1076\1091\1084\1072\1090\1100\1089\1103",Space,Str "\1086",Space,Str "\1089\1086\1079\1076\1072\1085\1080\1080",Space,Str "\1085\1086\1074\1086\1075\1086",Space,Str "\1090\1080\1087\1072",Space,Str "\1076\1072\1085\1085\1099\1093",Str "."]
,Para [Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1074",Space,Str "\1082\1072\1095\1077\1089\1090\1074\1077",Space,Str "\1090\1086\1095\1082\1080",Space,Str "\1085\1072",Space,Str "\1087\1083\1086\1089\1082\1086\1089\1090\1080",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100",Space,Str "\1087\1072\1088\1091",Space,RawInline "latex" "\\In{(Float, Float)}",Str ".",Space,Str "\1042",Space,Str "\1101\1090\1086\1084",Space,Str "\1089\1083\1091\1095\1072\1077",Str ",",Space,Str "\1077\1089\1083\1080",Space,Str "\1074\1099",Space,Str "\1085\1072\1095\1085\1105\1090\1077",Space,Str "\1087\1080\1089\1072\1090\1100",Space,Str "\1084\1086\1076\1091\1083\1100",Space,Str "\1085\1072",Space,Str "\1075\1077\1086\1084\1077\1090\1088\1080\1095\1077\1089\1082\1091\1102",Space,Str "\1090\1077\1084\1091",Space,Str "\1091",Space,Str "\1074\1072\1089",Space,Str "\1087\1086\1103\1074\1080\1090\1089\1103",Space,Str "\1084\1085\1086\1075\1086",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1102\1090",Space,Str "\1080",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1102\1090",Space,Str "\1090\1086\1095\1082\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nrotate      :: Float -> (Float, Float) -> (Float, Float)\nnorm        :: (Float, Float) -> (Float, Float)\ntranslate   :: (Float, Float) -> (Float, Float) -> (Float, Float)\n...    \n\\end{code}\n"
,Para [Str "\1042\1089\1077",Space,Str "\1086\1085\1080",Space,Str "\1089\1090\1072\1088\1072\1102\1090\1089\1103",Space,Str "\1076\1077\1083\1072\1090\1100",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1076\1077\1083",Space,Str "\1086\1076\1085\1086\1074\1088\1077\1084\1077\1085\1085\1086",Str ",",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1103",Space,Str "\1082\1086\1088\1090\1077\1078\1080",Str ".",Space,Str "\1053\1086",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1080\1079\1084\1077\1085\1080\1090\1100",Space,Str "\1089\1080\1090\1091\1072\1094\1080\1102",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077\1084",Space,Str "\1085\1086\1074\1099\1093",Space,Str "\1090\1080\1087\1086\1074",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndata Point  = Point  Float Float\ndata Vector = Vector Float Float\ndata Angle  = Angle  Float\n\\end{code}\n"
,Para [Str "\1054\1073\1098\1103\1074\1083\1077\1085\1080\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1089\1090\1072\1085\1091\1090",Space,Str "\1073\1086\1083\1077\1077",Space,Str "\1082\1088\1072\1090\1082\1080\1084\1080",Space,Str "\1080",Space,Str "\1085\1072\1075\1083\1103\1076\1085\1099\1084\1080",Str "."]
,RawBlock "latex" "\n\\begin{code}\nrotate      :: Angle  -> Point -> Point\nnorm        :: Point  -> Point\ntranslate   :: Vector -> Point -> Point\n...    \n\\end{code}\n"
,Header 2 [Str "\1050\1086\1084\1073\1080\1085\1072\1090\1086\1088",Space,Str "\1085\1077\1087\1086\1076\1074\1080\1078\1085\1086\1081",Space,Str "\1090\1086\1095\1082\1080"]
,Para [Str "\1055\1086\1079\1085\1072\1082\1086\1084\1080\1084\1089\1103",Space,Str "\1089",Space,Str "\1092\1091\1085\1082\1094\1080\1077\1081",Space,RawInline "latex" "\\In{fix}",Space,Str "\1080\1083\1080",Space,Str "\1082\1086\1084\1073\1080\1085\1072\1090\1086\1088\1086\1084",Space,Str "\1085\1077\1087\1086\1076\1074\1080\1078\1085\1086\1081",Space,Str "\1090\1086\1095\1082\1080",Str ".",Space,Str "\1055\1086",Space,Str "\1093\1086\1088\1086\1096\1077\1084\1091",Space,Str "\1086\1073",Space,Str "\1101\1090\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1089\1083\1077\1076\1086\1074\1072\1083\1086",Space,Str "\1073\1099",Space,Str "\1088\1072\1089\1089\1082\1072\1079\1072\1090\1100",Space,Str "\1074",Space,Str "\1088\1072\1079\1076\1077\1083\1077",Space,Str "\1086\1073\1086\1073\1097\1105\1085\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ".",Space,Str "\1053\1086",Space,Str "\1103",Space,Str "\1087\1088\1086\1087\1091\1089\1090\1080\1083",Space,Str "\1077\1105",Space,Str "\1085\1072\1088\1086\1096\1085\1086",Str ",",Space,Str "\1076\1083\1103",Space,Str "\1087\1088\1086\1089\1090\1086\1090\1099",Space,Str "\1080\1079\1083\1086\1078\1077\1085\1080\1103",Str ".",Space,Str "\1042",Space,Str "\1101\1090\1086\1084",Space,Str "\1088\1072\1079\1076\1077\1083\1077",Space,Str "\1075\1088\1072\1076\1091\1089",Space,Str "\1089\1083\1086\1078\1085\1086\1089\1090\1080",Space,Str "\1088\1077\1079\1082\1086",Space,Str "\1087\1086\1076\1089\1082\1072\1082\1080\1074\1072\1077\1090",Str ",",Space,Str "\1077\1089\1083\1080",Space,Str "\1074\1099",Space,Str "\1088\1072\1085\1077\1077",Space,Str "\1085\1077",Space,Str "\1074\1089\1090\1088\1077\1095\1072\1083\1080\1089\1100",Space,Str "\1089",Space,Str "\1101\1090\1086\1081",Space,Str "\1092\1091\1085\1082\1094\1080\1077\1081",Space,Str "\1086\1085\1072",Space,Str "\1084\1086\1078\1077\1090",Space,Str "\1087\1086\1082\1072\1079\1072\1090\1100\1089\1103",Space,Str "\1074\1072\1084",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1085\1077\1086\1073\1099\1095\1085\1086\1081",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1085\1072\1095\1072\1083\1072",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1077\1105",Space,Str "\1090\1080\1087",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nPrelude> :m +Data.Function\nPrelude Data.Function> :t fix\nfix :: (a -> a) -> a\n\\end{code}\n"
,Para [Str "\1057\1090\1088\1072\1085\1085\1086",Space,RawInline "latex" "\\In{fix}",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1080",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1077",Str ",",Space,Str "\1086\1073\1099\1095\1085\1086",Space,Str "\1074\1089\1105",Space,Str "\1087\1088\1086\1080\1089\1093\1086\1076\1080\1090",Space,Str "\1085\1072\1086\1073\1086\1088\1086\1090",Str ".",Space,Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1087\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1085\1072",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nfix f = let x = f x\n        in  x\n\\end{code}\n"
,Para [Str "\1045\1089\1083\1080",Space,Str "\1074\1099",Space,Str "\1079\1072\1087\1091\1090\1072\1083\1080\1089\1100",Str ",",Space,Str "\1090\1086",Space,Str "\1087\1086\1089\1084\1099\1089\1083\1091",Space,Str "\1101\1090\1086",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1088\1072\1074\1085\1086\1089\1080\1083\1100\1085\1086",Space,Str "\1090\1072\1082\1086\1084\1091",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nfix f = f (fix f)\n\\end{code}\n"
,Para [Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{fix}",Space,Str "\1073\1077\1088\1105\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1080",Space,Str "\1085\1072\1095\1080\1085\1072\1077\1090",Space,Str "\1073\1077\1089\1082\1086\1085\1077\1095\1085\1086",Space,Str "\1085\1072\1085\1080\1079\1099\1074\1072\1090\1100",Space,Str "\1077\1105",Space,Str "\1089\1072\1084\1091",Space,Str "\1085\1072",Space,Str "\1089\1077\1073\1103",Str ".",Space,Str "\1058\1072\1082",Space,Str "\1084\1099",Space,Str "\1087\1086\1083\1091\1095\1072\1077\1084",Str ",",Space,Str "\1095\1090\1086",Str "-",Str "\1090\1086",Space,Str "\1074\1088\1086\1076\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nf (f (f (f (...))))\n\\end{code}\n"
,Para [Str "\1047\1072\1095\1077\1084",Space,Str "\1085\1072\1084",Space,Str "\1090\1072\1082\1072\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Str "?",Space,Str "\1055\1086\1084\1085\1080\1090\1077",Space,Str "\1074",Space,Str "\1089\1072\1084\1086\1084",Space,Str "\1082\1086\1085\1094\1077",Space,Str "\1095\1077\1090\1074\1105\1088\1090\1086\1081",Space,Str "\1075\1083\1072\1074\1099",Space,Str "\1074",Space,Str "\1091\1087\1088\1072\1078\1085\1077\1085\1080\1103\1093",Space,Str "\1084\1099",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1083\1080",Space,Str "\1073\1077\1089\1082\1086\1085\1077\1095\1085\1099\1077",Space,Str "\1087\1086\1090\1086\1082\1080",Str ".",Space,Str "\1052\1099",Space,Str "\1076\1077\1083\1072\1083\1080",Space,Str "\1101\1090\1086",Space,Str "\1090\1072\1082",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ndata Stream a = a :& Stream a\n\nconstStream :: a -> Stream a\nconstStream a = a :& constStream a\n\\end{code}\n"
,Para [Str "\1045\1089\1083\1080",Space,Str "\1089\1084\1086\1090\1088\1077\1090\1100",Space,Str "\1085\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{constStream}",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1076\1086\1083\1075\1086",Str ",",Space,Str "\1090\1086",Space,Str "\1088\1072\1085\1086",Space,Str "\1080\1083\1080",Space,Str "\1087\1086\1079\1076\1085\1086",Space,Str "\1074",Space,Str "\1085\1077\1081",Space,Str "\1087\1088\1086\1075\1083\1103\1085\1077\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{fix}",Str ".",Space,Str "\1071",Space,Str "\1085\1072\1088\1086\1096\1085\1086",Space,Str "\1085\1077",Space,Str "\1073\1091\1076\1091",Space,Str "\1074\1099\1087\1080\1089\1099\1074\1072\1090\1100",Str ",",Space,Str "\1072",Space,Str "\1074\1099",Space,Str "\1084\1099\1089\1083\1077\1085\1085\1086",Space,Str "\1086\1073\1086\1079\1085\1072\1095\1100\1090\1077",Space,RawInline "latex" "\\In{(a :&)}",Space,Str "\1079\1072",Space,RawInline "latex" "\\In{f}",Space,Str "\1080",Space,RawInline "latex" "\\In{constStream a}",Space,Str "\1079\1072",Space,RawInline "latex" "\\In{fix f}",Str ".",Space,Str "\1055\1086\1083\1091\1095\1080\1083\1086\1089\1100",Str "?"]
,Para [Str "\1063\1077\1088\1077\1079",Space,RawInline "latex" "\\In{fix}",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1086\1095\1077\1085\1100",Space,Str "\1087\1088\1086\1089\1090\1086",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1073\1077\1089\1082\1086\1085\1077\1095\1085\1086\1089\1090\1100",Space,Str "\1076\1083\1103",Space,RawInline "latex" "\\In{Nat}",Str ",",Space,Str "\1073\1077\1089\1082\1086\1085\1077\1095\1085\1086\1089\1090\1100",Space,Str "\1101\1090\1086",Space,Str "\1094\1077\1087\1086\1095\1082\1072",Space,RawInline "latex" "\\In{Succ}",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1085\1080\1082\1086\1075\1076\1072",Space,Str "\1085\1077",Space,Str "\1079\1072\1082\1072\1085\1095\1080\1074\1072\1077\1090\1089\1103",Space,RawInline "latex" "\\In{Zero}",Str ".",Space,Str "\1054\1082\1072\1079\1099\1074\1072\1077\1090\1089\1103",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1074",Space,Str "Haskell",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1089\1086\1089\1090\1072\1074\1083\1103\1090\1100",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Space,Str "\1089",Space,Str "\1090\1072\1082\1080\1084\1080",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103\1084\1080",Space,Str "(",Str "\1082\1072\1082",Space,Str "\1101\1090\1086",Space,Str "\1087\1086\1083\1091\1095\1072\1077\1090\1089\1103",Space,Str "\1084\1099",Space,Str "\1086\1073\1091\1076\1080\1084",Space,Str "\1087\1086\1087\1086\1079\1078\1077",Str ")",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nghci Nat\n*Nat>m + Data.Function\n*Nat Data.Function> let infinity = fix Succ\n*Nat Data.Function> infinity < Succ Zero\nFalse\n\\end{code}\n"
,Para [Str "\1057",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{fix}",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1074\1099\1088\1072\1079\1080\1090\1100",Space,Str "\1083\1102\1073\1091\1102",Space,Str "\1088\1077\1082\1091\1088\1089\1080\1074\1085\1091\1102",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ".",Space,Str "\1055\1086\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1082\1072\1082",Space,Str "\1085\1072",Space,Str "\1087\1088\1080\1084\1077\1088\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{foldNat}",Str ",",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1077\1089\1090\1100",Space,Str "\1088\1077\1082\1091\1088\1089\1080\1074\1085\1086\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nfoldNat :: a -> (a -> a) -> Nat -> a\nfoldNat z  s  Zero      = z\nfoldNat z  s  (Succ n)  = s (foldNat z s n)\n\\end{code}\n"
,Para [Str "\1053\1077\1086\1073\1093\1086\1076\1080\1084\1086",Space,Str "\1087\1088\1080\1074\1077\1089\1090\1080",Space,Str "\1077\1075\1086",Space,Str "\1082",Space,Str "\1074\1080\1076\1091",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nx = f x\n\\end{code}\n"
,Para [Str "\1057\1083\1077\1074\1072",Space,Str "\1080",Space,Str "\1089\1087\1088\1072\1074\1072",Space,Str "\1084\1099",Space,Str "\1074\1080\1076\1080\1084",Space,Str "\1087\1086\1074\1090\1086\1088\1103\1102\1090\1089\1103",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Space,RawInline "latex" "\\In{foldNat z s}",Str ",",Space,Str "\1086\1073\1086\1079\1085\1072\1095\1080\1084",Space,Str "\1080\1093",Space,Str "\1079\1072",Space,RawInline "latex" "\\In{x}",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nx :: Nat -> a\nx Zero      = z\nx (Succ n)  = s (x n)\n\\end{code}\n"
,Para [Str "\1058\1077\1087\1077\1088\1100",Space,Str "\1087\1077\1088\1077\1085\1077\1089\1105\1084",Space,Str "\1087\1077\1088\1074\1099\1081",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090",Space,Str "\1074",Space,Str "\1087\1088\1072\1074\1091\1102",Space,Str "\1095\1072\1089\1090\1100",Str ",",Space,Str "\1089\1086\1087\1086\1089\1090\1072\1074\1083\1077\1085\1080\1077",Space,Str "\1089",Space,Str "\1086\1073\1088\1072\1079\1094\1086\1084",Space,Str "\1087\1088\1077\1074\1088\1072\1090\1080\1090\1089\1103",Space,Str "\1074",Space,RawInline "latex" "\\In{case}",Str "-",Str "\1074\1099\1088\1072\1078\1077\1085\1080\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nx :: Nat -> a\nx = \\nat -> case nat of\n                Zero    -> z\n                Succ n  -> s (x n)\n\\end{code}\n"
,Para [Str "\1042",Space,Str "\1087\1088\1072\1074\1086\1081",Space,Str "\1095\1072\1089\1090\1080",Space,Str "\1074\1099\1085\1077\1089\1077\1084",Space,RawInline "latex" "\\In{x}",Space,Str "\1080\1079",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1083\1103\1084\1073\1076\1072",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nx :: Nat -> a\nx = (\\t -> \\nat -> case nat of\n                        Zero    -> z\n                        Succ n  -> s (t n)) x \n\\end{code}\n"
,Para [Str "\1057\1084\1086\1090\1088\1080\1090\1077",Space,Str "\1084\1099",Space,Str "\1086\1073\1086\1079\1085\1072\1095\1080\1083\1080",Space,Str "\1074\1093\1086\1078\1076\1077\1085\1080\1077",Space,RawInline "latex" "\\In{x}",Space,Str "\1074",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1080",Space,Str "\1089\1087\1088\1072\1074\1072",Space,Str "\1079\1072",Space,RawInline "latex" "\\In{t}",Space,Str "\1080",Space,Str "\1089\1086\1079\1076\1072\1083\1080",Space,Str "\1083\1103\1084\1073\1076\1072",Str "-",Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1089",Space,Str "\1090\1072\1082\1080\1084",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1084",Str ".",Space,Str "\1058\1072\1082",Space,Str "\1084\1099",Space,Str "\1074\1099\1085\1077\1089\1083\1080",Space,RawInline "latex" "\\In{x}",Space,Str "\1080\1079",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1103",Str "."]
,Para [Str "\1055\1086\1083\1091\1095\1080\1083\1086\1089\1100",Str ",",Space,Str "\1084\1099",Space,Str "\1087\1088\1080\1096\1083\1080",Space,Str "\1082",Space,Str "\1074\1080\1076\1091",Space,Str "\1082\1086\1084\1073\1080\1085\1072\1090\1086\1088\1072",Space,Str "\1085\1077\1087\1086\1076\1074\1080\1078\1085\1086\1081",Space,Str "\1090\1086\1095\1082\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nx :: Nat -> a\nx = f x\n    where f = \\t -> \\nat -> case nat of\n                        Zero    -> z\n                        Succ n  -> s (t n)\n\\end{code}\n"
,Para [Str "\1055\1088\1080\1074\1077\1076\1105\1084",Space,Str "\1074",Space,Str "\1073\1086\1083\1077\1077",Space,Str "\1095\1077\1083\1086\1074\1077\1095\1077\1089\1082\1080\1081",Space,Str "\1074\1080\1076",Str ":"]
,RawBlock "latex" "\n\\begin{code}\nfoldNat :: a -> (a -> a) -> (Nat -> a)\nfoldNat z s = fix f\n    where f t = \\nat -> case nat of\n                            Zero    -> z\n                            Succ n  -> s (t n)\n\\end{code}\n"
,Header 2 [Str "\1050\1088\1072\1090\1082\1086\1077",Space,Str "\1089\1086\1076\1077\1088\1078\1072\1085\1080\1077"]
,Header 3 [Str "\1054\1089\1085\1086\1074\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1074\1099\1089\1096\1077\1075\1086",Space,Str "\1087\1086\1088\1103\1076\1082\1072"]
,Para [Str "\1052\1099",Space,Str "\1087\1086\1079\1085\1072\1082\1086\1084\1080\1083\1080\1089\1100",Space,Str "\1089",Space,Str "\1092\1091\1085\1082\1094\1080\1103\1084\1080",Space,Str "\1080\1079",Space,Str "\1084\1086\1076\1091\1083\1103",Space,RawInline "latex" "\\In{Data.Function}",Str ".",Space,Str "\1048\1093",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1088\1072\1079\1073\1080\1090\1100",Space,Str "\1085\1072",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1090\1080\1087\1086\1074",Str ":"]
,BulletList
 [[Plain [Str "\1055\1088\1080\1084\1080\1090\1080\1074\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "(",Str "\1075\1077\1085\1077\1088\1072\1090\1086\1088\1099",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str ")",Str "."]]]
,RawBlock "latex" "\n\\begin{code}\nid      = \\x -> x\nconst a = \\_ -> a\n\\end{code}\n"
,BulletList
 [[Plain [Str "\1060\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1082\1086\1084\1073\1080\1085\1080\1088\1091\1102\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1080\1083\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1080",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Str ":"]]]
,RawBlock "latex" "\n\\begin{code}\nf . g  = \\x -> f (g x)\nf $ x  = f x\n\n(.*.) `on` f = \\x y -> f x .*. f y\n\\end{code}\n"
,BulletList
 [[Plain [Str "\1055\1088\1077\1086\1073\1088\1072\1079\1086\1074\1072\1090\1077\1083\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str ",",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1102\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1080",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1102\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ":"]]]
,RawBlock "latex" "\n\\begin{code}\nflip f = \\x y -> f y x\n\\end{code}\n"
,BulletList
 [[Plain [Str "\1050\1086\1084\1073\1080\1085\1072\1090\1086\1088",Space,Str "\1085\1077\1087\1086\1076\1074\1080\1078\1085\1086\1081",Space,Str "\1090\1086\1095\1082\1080",Str ":"]]]
,RawBlock "latex" "\n\\begin{code}\nfix f = let x = f x\n        in  x\n\\end{code}\n"
,Header 3 [Str "\1055\1088\1080\1086\1088\1080\1090\1077\1090",Space,Str "\1080\1085\1092\1080\1082\1089\1085\1099\1093",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1081"]
,Para [Str "\1052\1099",Space,Str "\1091\1079\1085\1072\1083\1080",Space,Str "\1086",Space,Str "\1089\1087\1077\1094\1080\1072\1083\1100\1085\1086\1084",Space,Str "\1089\1080\1085\1090\1072\1082\1089\1080\1089\1077",Space,Str "\1076\1083\1103",Space,Str "\1079\1072\1076\1072\1085\1080\1103",Space,Str "\1087\1088\1080\1086\1088\1080\1090\1077\1090\1072",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1074",Space,Str "\1080\1085\1092\1080\1082\1089\1085\1086\1081",Space,Str "\1092\1086\1088\1084\1077",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ninfixl 3 #\ninfixr 6 `op`\n\\end{code}\n"
,Para [Str "\1055\1088\1080\1086\1088\1080\1090\1077\1090",Space,Str "\1089\1082\1083\1072\1076\1099\1074\1072\1077\1090\1089\1103",Space,Str "\1080\1079",Space,Str "\1076\1074\1091\1093",Space,Str "\1095\1072\1089\1090\1077\1081",Str ":",Space,Str "\1089\1090\1072\1088\1096\1080\1085\1089\1090\1074\1072",Space,Str "(",Str "\1086\1090",Space,Str "1",Space,Str "\1076\1086",Space,Str "9",Str ")",Space,Str "\1080",Space,Str "\1072\1089\1089\1086\1094\1080\1072\1090\1080\1074\1085\1086\1089\1090\1080",Space,Str "(",Str "\1073\1099\1074\1072\1077\1090",Space,Str "\1083\1077\1074\1072\1103",Space,Str "\1080",Space,Str "\1087\1088\1072\1074\1072\1103",Str ")",Str ".",Space,Str "\1057\1090\1072\1088\1096\1080\1085\1089\1090\1074\1086",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1103\1077\1090",Space,Str "\1088\1072\1089\1087\1088\1077\1076\1077\1083\1077\1085\1080\1077",Space,Str "\1089\1082\1086\1073\1086\1082",Space,Str "\1084\1077\1078\1076\1091",Space,Str "\1088\1072\1079\1085\1099\1084\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1103\1084\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ninfixl 6 +\ninfixl 7 *\n\n1 + 2 * 3 == 1 + (2 * 3)\n\\end{code}\n"
,Para [Str "\1040",Space,Str "\1072\1089\1089\1086\1094\1080\1072\1090\1080\1074\1085\1086\1089\1090\1100",Space,Str "\8211",Space,Str "\1084\1077\1078\1076\1091",Space,Str "\1086\1076\1080\1085\1072\1082\1086\1074\1099\1084\1080",Str ":"]
,RawBlock "latex" "\n\\begin{code}\ninfixl 6 +\ninfixr 8 ^\n\n1 + 2 + 3 == (1 + 2) + 3    \n1 ^ 2 ^ 3 ==  1 ^ (2 ^ 3)  \n\\end{code}\n"
,Para [Str "\1052\1099",Space,Str "\1091\1079\1085\1072\1083\1080",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{($)}",Space,Str "\1080",Space,RawInline "latex" "\\In{(.)}",Space,Str "\1089\1090\1086\1103\1090",Space,Str "\1085\1072",Space,Str "\1088\1072\1079\1085\1099\1093",Space,Str "\1082\1086\1085\1094\1072\1093",Space,Str "\1096\1082\1072\1083\1099",Space,Str "\1087\1088\1080\1086\1088\1080\1090\1077\1090\1086\1074",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1080",Space,Str "\1082\1072\1082",Space,Str "\1101\1090\1080\1084",Space,Str "\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100\1089\1103",Str "."]
,Header 2 [Str "\1059\1087\1088\1072\1078\1085\1077\1085\1080\1103"]
,BulletList
 [[Para [Str "\1055\1088\1086\1089\1084\1086\1090\1088\1080\1090\1077",Space,Str "\1085\1072\1087\1080\1089\1072\1085\1085\1099\1077",Space,Str "\1074\1072\1084\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1080\1083\1080",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1080\1079",Space,Str "\1087\1088\1080\1084\1077\1088\1086\1074",Str ".",Space,Str "\1052\1086\1078\1085\1086",Space,Str "\1083\1080",Space,Str "\1080\1093",Space,Str "\1087\1077\1088\1077\1087\1080\1089\1072\1090\1100",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1086\1089\1085\1086\1074\1085\1099\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1074\1099\1089\1096\1077\1075\1086",Space,Str "\1087\1086\1088\1103\1076\1082\1072",Str "?",Space,Str "\1045\1089\1083\1080",Space,Str "\1076\1072",Str ",",Space,Str "\1090\1086",Space,Str "\1087\1077\1088\1077\1087\1080\1096\1080\1090\1077",Str ".",Space,Str "\1055\1086\1087\1088\1086\1073\1091\1081\1090\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1100",Space,Str "\1080\1093",Space,Str "\1074",Space,Str "\1073\1077\1089\1090\1086\1095\1077\1095\1085\1086\1084",Space,Str "\1089\1090\1080\1083\1077",Str "."]]
 ,[Para [Str "\1042",Space,Str "\1087\1088\1086\1096\1083\1086\1081",Space,Str "\1075\1083\1072\1074\1077",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1073\1099\1083\1086",Space,Str "\1091\1087\1088\1072\1078\1085\1077\1085\1080\1077",Space,Str "\1086",Space,Str "\1087\1086\1090\1086\1082\1072\1093",Str ".",Space,Str "\1057\1076\1077\1083\1072\1081\1090\1077",Space,Str "\1087\1086\1090\1086\1082",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1086\1084",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Num}",Str ".",Space,Str "\1044\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1087\1086\1090\1086\1082",Space,Str "\1076\1086\1083\1078\1077\1085",Space,Str "\1089\1086\1076\1077\1088\1078\1072\1090\1100",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1103",Space,Str "\1080\1079",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Num}",Str ".",Space,Str "\1052\1077\1090\1086\1076\1099",Space,Str "\1080\1079",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Num}",Space,Str "\1087\1088\1080\1084\1077\1085\1103\1102\1090\1089\1103",Space,Str "\1087\1086\1101\1083\1077\1084\1077\1085\1090\1085\1086",Str ".",Space,Str "\1058\1072\1082",Space,Str "\1089\1083\1086\1078\1077\1085\1080\1077",Space,Str "\1076\1074\1091\1093",Space,Str "\1087\1086\1090\1086\1082\1086\1074",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1074\1099\1075\1083\1103\1076\1077\1090\1100",Space,Str "\1090\1072\1082",Str ":"]
  ,RawBlock "latex" "\n\\begin{code}\n(a1 :& a2 :& a3 :& ...) + (b1 :& b2 :& b3) ==\n==  (a1 + b1 :& a2 + b2 :& a3 + b3 :& ...)\n\\end{code}\n"]
 ,[Para [Str "\1054\1087\1088\1077\1076\1077\1083\1080\1090\1077",Space,Str "\1087\1088\1080\1086\1088\1080\1090\1077\1090",Space,Str "\1080\1085\1092\1080\1082\1089\1085\1086\1081",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1080",Space,RawInline "latex" "\\In{(:&)}",LineBreak,Space,Str "\1090\1072\1082",Space,Str "\1095\1090\1086\1073\1099",Space,Str "\1074\1072\1084",Space,Str "\1073\1099\1083\1086",Space,Str "\1091\1076\1086\1073\1085\1086",Space,Str "\1080\1089\1087\1086\1083\1100\1079\1086\1074\1072\1090\1100",Space,Str "\1077\1105",Space,Str "\1074",Space,Str "\1089\1086\1095\1077\1090\1072\1085\1080\1080",Space,Str "\1089",Space,Str "\1072\1088\1080\1092\1084\1077\1090\1080\1095\1077\1089\1082\1080\1084\1080",Space,Str "\1086\1087\1077\1088\1072\1094\1080\1103\1084\1080",Str "."]]
 ,[Para [Str "\1056\1072\1089\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1090\1072\1082\1086\1081",Space,Str "\1090\1080\1087",Str ":"]
  ,RawBlock "latex" "\n\\begin{code}\ndata St a b = St (a -> (b, St a b))\n\\end{code}\n"
  ,Para [Str "\1069\1090\1086\1090",Space,Str "\1090\1080\1087",Space,Str "\1093\1088\1072\1085\1080\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1087\1086\1079\1074\1086\1083\1103\1077\1090",Space,Str "\1087\1088\1077\1086\1073\1088\1072\1079\1086\1074\1099\1074\1072\1090\1100",Space,Str "\1087\1086\1090\1086\1082\1080",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Str ".",Space,Str "\1054\1087\1088\1077\1076\1077\1083\1080\1090\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1103",Str ":"]
  ,RawBlock "latex" "\n\\begin{code}\nap :: St a b -> [a] -> [b]\n\\end{code}\n"
  ,Para [Str "\1054\1085\1072",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1083\1077\1085\1090\1091",Space,Str "\1074\1093\1086\1076\1103\1097\1080\1093",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Space,Str "\1080",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1083\1077\1085\1090\1091",Space,Str "\1074\1099\1093\1086\1076\1086\1074",Str ".",Space,Str "\1054\1087\1088\1077\1076\1077\1083\1080\1090\1077",Space,Str "\1076\1083\1103",Space,Str "\1101\1090\1086\1075\1086",Space,Str "\1090\1080\1087\1072",Space,Str "\1085\1077\1089\1086\1082\1086\1083\1100\1082\1086",Space,Str "\1086\1089\1085\1086\1074\1085\1099\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1074\1099\1089\1096\1077\1075\1086",Space,Str "\1087\1086\1088\1103\1076\1082\1072",Str ".",Space,Str "\1063\1090\1086\1073\1099",Space,Str "\1085\1077",Space,Str "\1074\1086\1079\1085\1080\1082\1072\1083\1086",Space,Str "\1082\1086\1085\1092\1083\1080\1082\1090\1072",Space,Str "\1080\1084\1105\1085",Space,Str "\1089",Space,Str "\1084\1086\1076\1091\1083\1077\1084",Space,RawInline "latex" "\\In{Data.Function}",Space,Str "\1084\1099",Space,Str "\1085\1077",Space,Str "\1073\1091\1076\1077\1084",Space,Str "\1077\1075\1086",Space,Str "\1080\1084\1087\1086\1088\1090\1080\1088\1086\1074\1072\1090\1100",Str ".",Space,Str "\1042\1084\1077\1089\1090\1086",Space,Str "\1085\1077\1075\1086",Space,Str "\1084\1099",Space,Str "\1080\1084\1087\1086\1088\1090\1080\1088\1091\1077\1084",Space,Str "\1084\1086\1076\1091\1083\1100",Space,RawInline "latex" "\\In{Control.Category}",Str ".",Space,Str "\1054\1085",Space,Str "\1089\1086\1076\1077\1088\1078\1080\1090",Space,Str "\1082\1083\1072\1089\1089",Str ":"]
  ,RawBlock "latex" "\n\\begin{code}\nclass Category cat where\n        id  :: cat a a\n        (.) :: cat b c -> cat a b -> cat a c\n\\end{code}\n"
  ,Para [Str "\1045\1089\1083\1080",Space,Str "\1087\1088\1080\1089\1084\1086\1090\1088\1077\1090\1100\1089\1103",Space,Str "\1082",Space,Str "\1090\1080\1087\1072\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str ",",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1087\1086\1085\1103\1090\1100",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1090\1080\1087",Str "-",Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088",Space,RawInline "latex" "\\In{cat}",Space,Str "\1087\1088\1080\1085\1080\1084\1072\1077\1090",Space,Str "\1076\1074\1072",Space,Str "\1087\1072\1088\1072\1084\1077\1090\1088\1072",Str ".",Space,Str "\1057\1086\1074\1089\1077\1084",Space,Str "\1082\1072\1082",Space,Str "\1090\1080\1087",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{(a -> b)}",Str ".",Space,Str "\1060\1086\1088\1084\1072\1083\1100\1085\1086",Space,Str "\1077\1075\1086",Space,Str "\1084\1086\1078\1085\1086",Space,Str "\1079\1072\1087\1080\1089\1072\1090\1100",Space,Str "\1074",Space,Str "\1087\1088\1077\1092\1080\1082\1089\1085\1086\1081",Space,Str "\1092\1086\1088\1084\1077",Space,Str "\1090\1072\1082",Space,RawInline "latex" "\\In{(->) a b}",Str ".",Space,Str "\1055\1086\1083\1091\1095\1072\1077\1090\1089\1103",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1090\1080\1087",Space,RawInline "latex" "\\In{cat}",Space,Str "\1101\1090\1086",Space,Str "\1095\1090\1086",Str "-",Str "\1090\1086",Space,Str "\1074\1088\1086\1076\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ".",Space,Str "\1069\1090\1086",Space,Str "\1085\1077\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1089\1091\1097\1085\1086\1089\1090\1080",Str ",",Space,Str "\1091",Space,Str "\1082\1086\1090\1086\1088\1099\1093",Space,Str "\1077\1089\1090\1100",Space,Str "\1087\1086\1085\1103\1090\1080\1103",Space,Str "\1090\1086\1078\1076\1077\1089\1090\1074\1072",Space,Str "\1080",Space,Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1080",Str "."]
  ,Para [Str "\1044\1083\1103",Space,Str "\1086\1073\1099\1095\1085\1099\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Category}",Space,Str "\1091\1078\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1105\1085",Str ".",Space,Str "\1053\1086",Space,Str "\1074",Space,Str "\1101\1090\1086\1084",Space,Str "\1084\1086\1076\1091\1083\1077",Space,Str "\1091",Space,Str "\1085\1072\1089",Space,Str "\1077\1089\1090\1100",Space,Str "\1077\1097\1105",Space,Str "\1080",Space,Str "\1085\1077\1086\1073\1099\1095\1085\1099\1077",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Str ",",Space,Str "\1092\1091\1085\1082\1094\1080\1080",Space,Str "\1082\1086\1090\1086\1088\1099\1077",Space,Str "\1087\1088\1077\1086\1073\1088\1072\1079\1091\1102\1090",Space,Str "\1083\1077\1085\1090\1099",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1080",Space,RawInline "latex" "\\In{id}",Space,Str "\1080",Space,RawInline "latex" "\\In{(.)}",Space,Str "\1084\1099",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1084",Str ",",Space,Str "\1089\1076\1077\1083\1072\1074",Space,Str "\1085\1072\1096",Space,Str "\1090\1080\1087",Space,RawInline "latex" "\\In{St}",Space,Str "\1101\1082\1079\1077\1084\1087\1083\1103\1088\1086\1084",Space,Str "\1082\1083\1072\1089\1089\1072",Space,RawInline "latex" "\\In{Category}",Str ".",Space,Str "\1058\1072\1082\1078\1077",Space,Str "\1086\1087\1088\1077\1076\1077\1083\1080\1090\1077",Space,Str "\1087\1086\1089\1090\1086\1103\1085\1085\1099\1081",Space,Str "\1087\1088\1077\1086\1073\1088\1072\1079\1086\1074\1072\1090\1077\1083\1100",Str ".",Space,Str "\1054\1085",Space,Str "\1085\1072",Space,Str "\1083\1102\1073\1086\1081",Space,Str "\1074\1093\1086\1076",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1086\1076\1085\1086",Space,Str "\1080",Space,Str "\1090\1086",Space,Str "\1078\1077",Space,Str "\1095\1080\1089\1083\1086",Str ",",Space,Str "\1080",Space,Str "\1087\1088\1077\1086\1073\1088\1072\1079\1086\1074\1072\1090\1077\1083\1100",Str ",",Space,Str "\1082\1086\1090\1086\1088\1099\1081",Space,Str "\1073\1091\1076\1077\1090",Space,Str "\1085\1072\1082\1072\1087\1083\1080\1074\1072\1090\1100",Space,Str "\1089\1091\1084\1084\1091",Space,Str "\1087\1086\1089\1090\1091\1087\1072\1102\1097\1080\1093",Space,Str "\1085\1072",Space,Str "\1074\1093\1086\1076",Space,Str "\1079\1085\1072\1095\1077\1085\1080\1081",Str ",",Space,Str "\1087\1086",Str "-",Str "\1076\1088\1091\1075\1086\1084\1091",Space,Str "\1090\1072\1082\1086\1081",Space,Str "\1087\1088\1077\1086\1073\1088\1072\1079\1086\1074\1072\1090\1077\1083\1100",Space,Str "\1085\1072\1079\1099\1074\1072\1102\1090",Space,Str "\1080\1085\1090\1077\1075\1088\1072\1090\1086\1088\1086\1084",Str ":"]
  ,RawBlock "latex" "\n\\begin{code}\nconst    :: a -> St b a\nintegral :: Num a => St a a\n\\end{code}\n"]
 ,[Para [Str "\1055\1077\1088\1077\1087\1080\1096\1080\1090\1077",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,RawInline "latex" "\\In{fix}",Space,Str "\1085\1077\1089\1082\1086\1083\1100\1082\1086",Space,Str "\1089\1090\1072\1085\1076\1072\1088\1090\1085\1099\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Space,Str "\1076\1083\1103",Space,Str "\1089\1087\1080\1089\1082\1086\1074",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,RawInline "latex" "\\In{map}",Str ",",Space,RawInline "latex" "\\In{foldr}",Str ",",Space,RawInline "latex" "\\In{foldl}",Str ",",Space,RawInline "latex" "\\In{zip}",Str ",",Space,RawInline "latex" "\\In{repeat}",Str ",",Space,RawInline "latex" "\\In{cycle}",Str ",",Space,RawInline "latex" "\\In{iterate}",Str "."]
  ,Para [Str "\1057\1090\1072\1088\1072\1081\1090\1077\1089\1100",Space,Str "\1085\1072\1081\1090\1080",Space,Str "\1085\1072\1080\1073\1086\1083\1077\1077",Space,Str "\1082\1088\1072\1090\1082\1086\1077",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1077",Str ",",Space,Str "\1087\1086\1083\1100\1079\1091\1081\1090\1077\1089\1100",Space,Str "\1092\1091\1085\1082\1094\1080\1103\1084\1080",Space,Str "\1074\1099\1089\1096\1077\1075\1086",Space,Str "\1087\1086\1088\1103\1076\1082\1072",Space,Str "\1080",Space,Str "\1095\1072\1089\1090\1080\1095\1085\1099\1084",Space,Str "\1087\1088\1080\1084\1077\1085\1077\1085\1080\1077\1084",Str ".",Space,Str "\1053\1072\1087\1088\1080\1084\1077\1088",Space,Str "\1088\1072\1089\1089\1084\1086\1090\1088\1080\1084",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,RawInline "latex" "\\In{repeat}",Str ":"]
  ,RawBlock "latex" "\n\\begin{code}\nrepeat :: a -> [a]\nrepeat a = a : repeat a\n\\end{code}\n"
  ,Para [Str "\1047\1072\1087\1080\1096\1077\1084",Space,Str "\1089",Space,RawInline "latex" "\\In{fix}",Str ":"]
  ,RawBlock "latex" "\n\\begin{code}\nrepeat a = fix $ \\xs -> a : xs\n\\end{code}\n"
  ,Para [Str "\1047\1072\1084\1077\1090\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1080\1079\1073\1072\1074\1080\1090\1100\1089\1103",Space,Str "\1086\1090",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1072",Space,RawInline "latex" "\\In{xs}",Space,Str "\1089",Space,Str "\1087\1086\1084\1086\1097\1100\1102",Space,Str "\1089\1077\1095\1077\1085\1080\1103",Str ":"]
  ,RawBlock "latex" "\n\\begin{code}\nrepeat a = fix (a:)\n\\end{code}\n"
  ,Para [Str "\1053\1086",Space,Str "\1084\1099",Space,Str "\1084\1086\1078\1077\1084",Space,Str "\1087\1086\1081\1090\1080",Space,Str "\1077\1097\1105",Space,Str "\1076\1072\1083\1100\1096\1077",Str ",",Space,Str "\1077\1089\1083\1080",Space,Str "\1074\1089\1087\1086\1084\1085\1080\1084",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1092\1091\1085\1082\1094\1080\1103",Space,Str "\1076\1074\1091\1093",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1086\1074",Space,RawInline "latex" "\\In{(:)}",Space,Str "\1103\1074\1083\1103\1077\1090\1089\1103",Space,Str "\1092\1091\1085\1082\1094\1080\1077\1081",Space,Str "\1086\1090",Space,Str "\1086\1076\1085\1086\1075\1086",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1072",Space,RawInline "latex" "\\In{(:) :: a -> ([a] -> [a])}",Str ",",Space,Str "\1082\1086\1090\1086\1088\1072\1103",Space,Str "\1074\1086\1079\1074\1088\1072\1097\1072\1077\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Space,Str "\1086\1076\1085\1086\1075\1086",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090\1072",Str ":"]
  ,RawBlock "latex" "\n\\begin{code}\nrepeat = fix . (:)\n\\end{code}\n"
  ,Para [Str "\1057\1084\1086\1090\1088\1080\1090\1077",Space,Str "\1074",Space,Str "\1101\1090\1086\1084",Space,Str "\1074\1099\1088\1072\1078\1077\1085\1080\1080",Space,Str "\1084\1099",Space,Str "\1089\1086\1089\1090\1072\1074\1080\1083\1080",Space,Str "\1082\1086\1084\1087\1086\1079\1080\1094\1080\1102",Space,Str "\1076\1074\1091\1093",Space,Str "\1092\1091\1085\1082\1094\1080\1081",Str ".",Space,Str "\1060\1091\1085\1082\1094\1080\1103",Space,RawInline "latex" "\\In{(:)}",Space,Str "\1087\1088\1080\1084\1077\1090",Space,Str "\1087\1077\1088\1074\1099\1081",Space,Str "\1072\1088\1075\1091\1084\1077\1085\1090",Space,Str "\1080",Space,Str "\1074\1077\1088\1085\1105\1090",Space,Str "\1092\1091\1085\1082\1094\1080\1102",Str ",",Space,Str "\1082\1072\1082",Space,Str "\1088\1072\1079",Space,Str "\1090\1086",Str ",",Space,Str "\1095\1090\1086",Space,Str "\1080",Space,Str "\1085\1091\1078\1085\1086",Space,Str "\1076\1083\1103",Space,RawInline "latex" "\\In{fix}",Str "."]]]]